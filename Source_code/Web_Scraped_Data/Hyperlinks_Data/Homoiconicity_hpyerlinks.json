{"Programming paradigm": "/wiki/Programming_paradigm", "Action language": "/wiki/Action_language", "Array programming": "/wiki/Array_programming", "Automata-based programming": "/wiki/Automata-based_programming", "Concurrent computing": "/wiki/Concurrent_computing", "Actor model": "/wiki/Actor_model", "Choreographic programming": "/wiki/Choreographic_programming", "Multitier programming": "/wiki/Multitier_programming", "Relativistic programming": "/wiki/Relativistic_programming", "Structured concurrency": "/wiki/Structured_concurrency", "Data-driven programming": "/wiki/Data-driven_programming", "Declarative programming": "/wiki/Declarative_programming", "Imperative programming": "/wiki/Imperative_programming", "Functional programming": "/wiki/Functional_programming", "Functional logic programming": "/wiki/Functional_logic_programming", "Purely functional programming": "/wiki/Purely_functional_programming", "Logic programming": "/wiki/Logic_programming", "Abductive logic programming": "/wiki/Abductive_logic_programming", "Answer set programming": "/wiki/Answer_set_programming", "Concurrent logic programming": "/wiki/Concurrent_logic_programming", "Inductive logic programming": "/wiki/Inductive_logic_programming", "Constraint programming": "/wiki/Constraint_programming", "Constraint logic programming": "/wiki/Constraint_logic_programming", "Concurrent constraint logic programming": "/wiki/Concurrent_constraint_logic_programming", "Dataflow programming": "/wiki/Dataflow_programming", "Flow-based programming": "/wiki/Flow-based_programming", "Reactive programming": "/wiki/Reactive_programming", "Functional reactive programming": "/wiki/Functional_reactive_programming", "Ontology language": "/wiki/Ontology_language", "Query language": "/wiki/Query_language", "Differentiable programming": "/wiki/Differentiable_programming", "Dynamic programming language": "/wiki/Dynamic_programming_language", "Event-driven programming": "/wiki/Event-driven_programming", "Function-level programming": "/wiki/Function-level_programming", "Value-level programming": "/wiki/Value-level_programming", "Tacit programming": "/wiki/Tacit_programming", "Concatenative programming language": "/wiki/Concatenative_programming_language", "Generic programming": "/wiki/Generic_programming", "Procedural programming": "/wiki/Procedural_programming", "Object-oriented programming": "/wiki/Object-oriented_programming", "Intentional programming": "/wiki/Intentional_programming", "Language-oriented programming": "/wiki/Language-oriented_programming", "Domain-specific language": "/wiki/Domain-specific_language", "Literate programming": "/wiki/Literate_programming", "Macroprogramming": "/wiki/Macroprogramming", "Metaprogramming": "/wiki/Metaprogramming", "Automatic programming": "/wiki/Automatic_programming", "Inductive programming": "/wiki/Inductive_programming", "Reflective programming": "/wiki/Reflective_programming", "Attribute-oriented programming": "/wiki/Attribute-oriented_programming", "Macro (computer science)": "/wiki/Macro_(computer_science)", "Template metaprogramming": "/wiki/Template_metaprogramming", "Natural-language programming": "/wiki/Natural-language_programming", "Non-structured programming": "/wiki/Non-structured_programming", "Structured programming": "/wiki/Structured_programming", "Nondeterministic programming": "/wiki/Nondeterministic_programming", "Parallel computing": "/wiki/Parallel_computing", "Process-oriented programming": "/wiki/Process-oriented_programming", "Probabilistic programming": "/wiki/Probabilistic_programming", "Quantum programming": "/wiki/Quantum_programming", "Set theoretic programming": "/wiki/Set_theoretic_programming", "Stack-oriented programming": "/wiki/Stack-oriented_programming", "Block (programming)": "/wiki/Block_(programming)", "Agent-oriented programming": "/wiki/Agent-oriented_programming", "Class-based programming": "/wiki/Class-based_programming", "Concurrent object-oriented programming": "/wiki/Concurrent_object-oriented_programming", "Prototype-based programming": "/wiki/Prototype-based_programming", "Separation of concerns": "/wiki/Separation_of_concerns", "Aspect-oriented programming": "/wiki/Aspect-oriented_programming", "Role-oriented programming": "/wiki/Role-oriented_programming", "Subject-oriented programming": "/wiki/Subject-oriented_programming", "Recursion (computer science)": "/wiki/Recursion_(computer_science)", "Symbolic programming": "/wiki/Symbolic_programming", "Template:Programming paradigms": "/wiki/Template:Programming_paradigms", "Template talk:Programming paradigms": "/wiki/Template_talk:Programming_paradigms", "Computer programming": "/wiki/Computer_programming", "Greek language": "/wiki/Greek_language", "Programming language": "/wiki/Programming_language", "Code as data": "/wiki/Code_as_data", "Data structure": "/wiki/Data_structure", "Primitive type": "/wiki/Primitive_type", "Reflection (computer programming)": "/wiki/Reflection_(computer_programming)", "Run time (program lifecycle phase)": "/wiki/Run_time_(program_lifecycle_phase)", "Syntactic macro": "/wiki/Syntactic_macro", "Lisp (programming language)": "/wiki/Lisp_(programming_language)", "S-expression": "/wiki/S-expression", "Nesting (computing)": "/wiki/Nesting_(computing)", "Clojure": "/wiki/Clojure", "Rebol": "/wiki/Rebol", "Red (programming language)": "/wiki/Red_(programming_language)", "Refal": "/wiki/Refal", "Prolog": "/wiki/Prolog", "Julia (programming language)": "/wiki/Julia_(programming_language)", "Edit section: History": "/w/index.php?title=Homoiconicity&action=edit&section=1", "TRAC (programming language)": "/wiki/TRAC_(programming_language)", "ASCII": "/wiki/ASCII", "Douglas McIlroy": "/wiki/Douglas_McIlroy", "Alan Kay": "/wiki/Alan_Kay", "Burna-Buriash": "/wiki/Burna-Buriash", "Edit section: Uses and advantages": "/w/index.php?title=Homoiconicity&action=edit&section=2", "Abstract syntax tree": "/wiki/Abstract_syntax_tree", "Eval": "/wiki/Eval", "Meta-circular evaluator": "/wiki/Meta-circular_evaluator", "Edit section: Implementation methods": "/w/index.php?title=Homoiconicity&action=edit&section=3", "Von Neumann architecture": "/wiki/Von_Neumann_architecture", "Lisp programming language": "/wiki/Lisp_programming_language", "Scheme (programming language)": "/wiki/Scheme_(programming_language)", "Racket (programming language)": "/wiki/Racket_(programming_language)", "APL (programming language)": "/wiki/APL_(programming_language)", "Nim (programming language)": "/wiki/Nim_(programming_language)", "Curl (programming language)": "/wiki/Curl_(programming_language)", "Wikipedia:NOTRS": "/wiki/Wikipedia:NOTRS", "Elixir (programming language)": "/wiki/Elixir_(programming_language)", "Io (programming language)": "/wiki/Io_(programming_language)", "SNOBOL": "/wiki/SNOBOL", "Tcl": "/wiki/Tcl", "XSLT": "/wiki/XSLT", "REFAL": "/wiki/REFAL", "Rexx": "/wiki/Rexx", "Wolfram Language": "/wiki/Wolfram_Language", "R (programming language)": "/wiki/R_(programming_language)", "Edit section: In Lisp": "/w/index.php?title=Homoiconicity&action=edit&section=4", "Symbol (programming)": "/wiki/Symbol_(programming)", "Edit section: In Prolog": "/w/index.php?title=Homoiconicity&action=edit&section=5", "Arity": "/wiki/Arity", "Edit section: In Rebol": "/w/index.php?title=Homoiconicity&action=edit&section=6", "Edit section: See also": "/w/index.php?title=Homoiconicity&action=edit&section=7", "Cognitive dimensions of notations": "/wiki/Cognitive_dimensions_of_notations", "Self-modifying code": "/wiki/Self-modifying_code", "LISP (programming language)": "/wiki/LISP_(programming_language)", "Reification (computer science)": "/wiki/Reification_(computer_science)", "Edit section: References": "/w/index.php?title=Homoiconicity&action=edit&section=8", "Doi (identifier)": "/wiki/Doi_(identifier)", "Calvin Mooers": "/wiki/Calvin_Mooers", "L. Peter Deutsch": "/wiki/L._Peter_Deutsch", "ISBN (identifier)": "/wiki/ISBN_(identifier)", "Special:BookSources/0-262-19338-8": "/wiki/Special:BookSources/0-262-19338-8", "Edit section: External links": "/w/index.php?title=Homoiconicity&action=edit&section=9"}