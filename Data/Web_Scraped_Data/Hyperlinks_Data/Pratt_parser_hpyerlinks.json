{"Computer science": "/wiki/Computer_science", "Bottom-up parsing": "/wiki/Bottom-up_parsing", "Operator-precedence grammar": "/wiki/Operator-precedence_grammar", "Calculator": "/wiki/Calculator", "Infix notation": "/wiki/Infix_notation", "Order of operations": "/wiki/Order_of_operations", "Reverse Polish notation": "/wiki/Reverse_Polish_notation", "Edsger Dijkstra": "/wiki/Edsger_Dijkstra", "Shunting yard algorithm": "/wiki/Shunting_yard_algorithm", "Edit section: Relationship to other parsers": "/w/index.php?title=Operator-precedence_parser&action=edit&section=1", "Shift-reduce parser": "/wiki/Shift-reduce_parser", "LR parser": "/wiki/LR_parser", "Nonterminal": "/wiki/Nonterminal", "Empty string": "/wiki/Empty_string", "Run time (program lifecycle phase)": "/wiki/Run_time_(program_lifecycle_phase)", "Haskell (programming language)": "/wiki/Haskell_(programming_language)", "Raku (programming language)": "/wiki/Raku_(programming_language)", "Recursive descent parser": "/wiki/Recursive_descent_parser", "GNU Compiler Collection": "/wiki/GNU_Compiler_Collection", "Compiler-compiler": "/wiki/Compiler-compiler", "Edit section: Precedence climbing method": "/w/index.php?title=Operator-precedence_parser&action=edit&section=2", "EBNF": "/wiki/EBNF", "Edit section: Pseudocode": "/w/index.php?title=Operator-precedence_parser&action=edit&section=3", "Edit section: Example execution of the algorithm": "/w/index.php?title=Operator-precedence_parser&action=edit&section=4", "Edit section: Pratt parsing": "/w/index.php?title=Operator-precedence_parser&action=edit&section=5", "Vaughan Pratt": "/wiki/Vaughan_Pratt", "CGOL": "/wiki/CGOL", "Douglas Crockford": "/wiki/Douglas_Crockford", "JSLint": "/wiki/JSLint", "Rust (programming language)": "/wiki/Rust_(programming_language)", "Python (programming language)": "/wiki/Python_(programming_language)", "Wayback Machine": "/wiki/Wayback_Machine", "Java (programming language)": "/wiki/Java_(programming_language)", "C Sharp (programming language)": "/wiki/C_Sharp_(programming_language)", "Generic programming": "/wiki/Generic_programming", "Edit section: Alternative methods": "/w/index.php?title=Operator-precedence_parser&action=edit&section=6", "Fortran": "/wiki/Fortran#FORTRAN", "Donald Knuth": "/wiki/Donald_Knuth", "Edit section: References": "/w/index.php?title=Operator-precedence_parser&action=edit&section=7", "ISBN (identifier)": "/wiki/ISBN_(identifier)", "Special:BookSources/9780521219655": "/wiki/Special:BookSources/9780521219655", "Bibcode (identifier)": "/wiki/Bibcode_(identifier)", "Doi (identifier)": "/wiki/Doi_(identifier)", "Edit section: External links": "/w/index.php?title=Operator-precedence_parser&action=edit&section=8", "Klaus Samelson": "/wiki/Klaus_Samelson", "Friedrich L. Bauer": "/wiki/Friedrich_L._Bauer", "Template:Parsers": "/wiki/Template:Parsers", "Template talk:Parsers": "/wiki/Template_talk:Parsers", "Parsing": "/wiki/Parsing", "Top-down parsing": "/wiki/Top-down_parsing", "LL parser": "/wiki/LL_parser", "Tail recursive parser": "/wiki/Tail_recursive_parser", "Simple precedence parser": "/wiki/Simple_precedence_parser", "Simple LR parser": "/wiki/Simple_LR_parser", "LALR parser": "/wiki/LALR_parser", "Canonical LR parser": "/wiki/Canonical_LR_parser", "GLR parser": "/wiki/GLR_parser", "CYK algorithm": "/wiki/CYK_algorithm", "Recursive ascent parser": "/wiki/Recursive_ascent_parser", "Parser combinator": "/wiki/Parser_combinator", "Chart parser": "/wiki/Chart_parser", "Earley parser": "/wiki/Earley_parser", "Parsing expression grammar": "/wiki/Parsing_expression_grammar", "Definite clause grammar": "/wiki/Definite_clause_grammar", "Deterministic parsing": "/wiki/Deterministic_parsing", "Dynamic programming": "/wiki/Dynamic_programming", "Memoization": "/wiki/Memoization", "LALR parser generator": "/wiki/LALR_parser_generator", "Parse tree": "/wiki/Parse_tree", "Abstract syntax tree": "/wiki/Abstract_syntax_tree", "Scannerless parsing": "/wiki/Scannerless_parsing", "History of compiler construction": "/wiki/History_of_compiler_construction", "Comparison of parser generators": "/wiki/Comparison_of_parser_generators"}