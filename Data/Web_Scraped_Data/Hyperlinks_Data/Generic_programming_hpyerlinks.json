{"Genetic programming": "/wiki/Genetic_programming", "Programming paradigm": "/wiki/Programming_paradigm", "Action language": "/wiki/Action_language", "Array programming": "/wiki/Array_programming", "Automata-based programming": "/wiki/Automata-based_programming", "Concurrent computing": "/wiki/Concurrent_computing", "Actor model": "/wiki/Actor_model", "Choreographic programming": "/wiki/Choreographic_programming", "Multitier programming": "/wiki/Multitier_programming", "Relativistic programming": "/wiki/Relativistic_programming", "Structured concurrency": "/wiki/Structured_concurrency", "Data-driven programming": "/wiki/Data-driven_programming", "Declarative programming": "/wiki/Declarative_programming", "Imperative programming": "/wiki/Imperative_programming", "Functional programming": "/wiki/Functional_programming", "Functional logic programming": "/wiki/Functional_logic_programming", "Purely functional programming": "/wiki/Purely_functional_programming", "Logic programming": "/wiki/Logic_programming", "Abductive logic programming": "/wiki/Abductive_logic_programming", "Answer set programming": "/wiki/Answer_set_programming", "Concurrent logic programming": "/wiki/Concurrent_logic_programming", "Inductive logic programming": "/wiki/Inductive_logic_programming", "Constraint programming": "/wiki/Constraint_programming", "Constraint logic programming": "/wiki/Constraint_logic_programming", "Concurrent constraint logic programming": "/wiki/Concurrent_constraint_logic_programming", "Dataflow programming": "/wiki/Dataflow_programming", "Flow-based programming": "/wiki/Flow-based_programming", "Reactive programming": "/wiki/Reactive_programming", "Functional reactive programming": "/wiki/Functional_reactive_programming", "Ontology language": "/wiki/Ontology_language", "Query language": "/wiki/Query_language", "Differentiable programming": "/wiki/Differentiable_programming", "Dynamic programming language": "/wiki/Dynamic_programming_language", "Event-driven programming": "/wiki/Event-driven_programming", "Function-level programming": "/wiki/Function-level_programming", "Value-level programming": "/wiki/Value-level_programming", "Tacit programming": "/wiki/Tacit_programming", "Concatenative programming language": "/wiki/Concatenative_programming_language", "Procedural programming": "/wiki/Procedural_programming", "Object-oriented programming": "/wiki/Object-oriented_programming", "Intentional programming": "/wiki/Intentional_programming", "Language-oriented programming": "/wiki/Language-oriented_programming", "Domain-specific language": "/wiki/Domain-specific_language", "Literate programming": "/wiki/Literate_programming", "Macroprogramming": "/wiki/Macroprogramming", "Metaprogramming": "/wiki/Metaprogramming", "Automatic programming": "/wiki/Automatic_programming", "Inductive programming": "/wiki/Inductive_programming", "Reflective programming": "/wiki/Reflective_programming", "Attribute-oriented programming": "/wiki/Attribute-oriented_programming", "Macro (computer science)": "/wiki/Macro_(computer_science)", "Template metaprogramming": "/wiki/Template_metaprogramming", "Natural-language programming": "/wiki/Natural-language_programming", "Non-structured programming": "/wiki/Non-structured_programming", "Structured programming": "/wiki/Structured_programming", "Nondeterministic programming": "/wiki/Nondeterministic_programming", "Parallel computing": "/wiki/Parallel_computing", "Process-oriented programming": "/wiki/Process-oriented_programming", "Probabilistic programming": "/wiki/Probabilistic_programming", "Quantum programming": "/wiki/Quantum_programming", "Set theoretic programming": "/wiki/Set_theoretic_programming", "Stack-oriented programming": "/wiki/Stack-oriented_programming", "Block (programming)": "/wiki/Block_(programming)", "Agent-oriented programming": "/wiki/Agent-oriented_programming", "Class-based programming": "/wiki/Class-based_programming", "Concurrent object-oriented programming": "/wiki/Concurrent_object-oriented_programming", "Prototype-based programming": "/wiki/Prototype-based_programming", "Separation of concerns": "/wiki/Separation_of_concerns", "Aspect-oriented programming": "/wiki/Aspect-oriented_programming", "Role-oriented programming": "/wiki/Role-oriented_programming", "Subject-oriented programming": "/wiki/Subject-oriented_programming", "Recursion (computer science)": "/wiki/Recursion_(computer_science)", "Symbolic programming": "/wiki/Symbolic_programming", "Template:Programming paradigms": "/wiki/Template:Programming_paradigms", "Template talk:Programming paradigms": "/wiki/Template_talk:Programming_paradigms", "Computer programming": "/wiki/Computer_programming", "Algorithm": "/wiki/Algorithm", "Data type": "/wiki/Data_type", "Parameter (computer programming)": "/wiki/Parameter_(computer_programming)", "ML (programming language)": "/wiki/ML_(programming_language)", "Function (computer science)": "/wiki/Function_(computer_science)", "Type (computer science)": "/wiki/Type_(computer_science)", "Duplicate code": "/wiki/Duplicate_code", "Ada (programming language)": "/wiki/Ada_(programming_language)", "C Sharp (programming language)": "/wiki/C_Sharp_(programming_language)", "Delphi (programming language)": "/wiki/Delphi_(programming_language)", "Eiffel (programming language)": "/wiki/Eiffel_(programming_language)", "F Sharp (programming language)": "/wiki/F_Sharp_(programming_language)", "Java (programming language)": "/wiki/Java_(programming_language)", "Nim (programming language)": "/wiki/Nim_(programming_language)", "Python (programming language)": "/wiki/Python_(programming_language)", "Go (programming language)": "/wiki/Go_(programming_language)", "Rust (programming language)": "/wiki/Rust_(programming_language)", "Swift (programming language)": "/wiki/Swift_(programming_language)", "TypeScript": "/wiki/TypeScript", "Visual Basic .NET": "/wiki/Visual_Basic_.NET", "Parametric polymorphism": "/wiki/Parametric_polymorphism", "Scala (programming language)": "/wiki/Scala_(programming_language)", "Julia (programming language)": "/wiki/Julia_(programming_language)", "Haskell (programming language)": "/wiki/Haskell_(programming_language)", "Template (C++)": "/wiki/Template_(C%2B%2B)", "C++": "/wiki/C%2B%2B", "D (programming language)": "/wiki/D_(programming_language)", "Design Patterns (book)": "/wiki/Design_Patterns_(book)", "David Musser": "/wiki/David_Musser", "Alexander Stepanov": "/wiki/Alexander_Stepanov", "Concept (generic programming)": "/wiki/Concept_(generic_programming)", "Generic function": "/wiki/Generic_function", "Edit section: Stepanov\u2013Musser and other generic programming paradigms": "/w/index.php?title=Generic_programming&action=edit&section=1", "Abstract algebra": "/wiki/Abstract_algebra", "Standard Template Library": "/wiki/Standard_Template_Library", "Iterator": "/wiki/Iterator", "Analysis of algorithms": "/wiki/Analysis_of_algorithms", "Compile-time": "/wiki/Compile-time", "Ring (mathematics)": "/wiki/Ring_(mathematics)", "Banach space": "/wiki/Banach_space", "Bjarne Stroustrup": "/wiki/Bjarne_Stroustrup", "Boilerplate code": "/wiki/Boilerplate_code", "Edit section: Programming language support for genericity": "/w/index.php?title=Generic_programming&action=edit&section=2", "CLU programming language": "/wiki/CLU_programming_language", "Ada programming language": "/wiki/Ada_programming_language", "Object-based programming": "/wiki/Object-based_programming", "BETA programming language": "/wiki/BETA_programming_language", "D programming language": "/wiki/D_programming_language", "Digital Equipment Corporation": "/wiki/Digital_Equipment_Corporation", "Trellis-Owl": "/wiki/Trellis-Owl", "Forth (programming language)": "/wiki/Forth_(programming_language)", "Compiler": "/wiki/Compiler", "Wikipedia:Citation needed": "/wiki/Wikipedia:Citation_needed", "Structural type system": "/wiki/Structural_type_system", "Array data type": "/wiki/Array_data_type", "Struct (C programming language)": "/wiki/Struct_(C_programming_language)", "Extensible programming": "/wiki/Extensible_programming", "Edit section: In object-oriented languages": "/w/index.php?title=Generic_programming&action=edit&section=3", "Template (programming)": "/wiki/Template_(programming)", "Subtyping": "/wiki/Subtyping", "Signature (computer science)": "/wiki/Signature_(computer_science)", "Polymorphism (computer science)": "/wiki/Polymorphism_(computer_science)", "Java Platform, Standard Edition": "/wiki/Java_Platform,_Standard_Edition", "Chrome programming language": "/wiki/Chrome_programming_language", ".NET Framework": "/wiki/.NET_Framework", "Edit section: Generics in Ada": "/w/index.php?title=Generic_programming&action=edit&section=4", "Standard template library": "/wiki/Standard_template_library", "Run time (program lifecycle phase)": "/wiki/Run_time_(program_lifecycle_phase)", "Edit section: Example": "/w/index.php?title=Generic_programming&action=edit&section=5", "Edit section: Advantages and limitations": "/w/index.php?title=Generic_programming&action=edit&section=6", "wikibooks:Ada Programming/Generics": "https://en.wikibooks.org/wiki/Ada_Programming/Generics#Generic_formal_objects", "Edit section: Templates in C++": "/w/index.php?title=Generic_programming&action=edit&section=7", "Turing complete": "/wiki/Turing_complete", "Edit section: Technical overview": "/w/index.php?title=Generic_programming&action=edit&section=8", "Duck typing": "/wiki/Duck_typing#Templates_or_generic_types", "Operator overloading": "/wiki/Operator_overloading", "Heap (programming)": "/wiki/Heap_(programming)", "Associative array": "/wiki/Associative_array", "Type safety": "/wiki/Type_safety", "Complex number": "/wiki/Complex_number", "Protocol (computer science)": "/wiki/Protocol_(computer_science)", "Linked list": "/wiki/Linked_list", "Edit section: Template specialization": "/w/index.php?title=Generic_programming&action=edit&section=9", "Partial template specialization": "/wiki/Partial_template_specialization", "Edit section: Advantages and disadvantages": "/w/index.php?title=Generic_programming&action=edit&section=10", "Preprocessor": "/wiki/Preprocessor", "C (programming language)": "/wiki/C_(programming_language)", "Inline function": "/wiki/Inline_function", "Substitution failure is not an error": "/wiki/Substitution_failure_is_not_an_error", "Code bloat": "/wiki/Code_bloat", "Linker (computing)": "/wiki/Linker_(computing)", "Library (computer science)": "/wiki/Library_(computer_science)#Shared_libraries", "Permutation": "/wiki/Permutation", "Edit section: Templates in D": "/w/index.php?title=Generic_programming&action=edit&section=11", "Concepts (C++)": "/wiki/Concepts_(C%2B%2B)", "Typeof": "/wiki/Typeof", "Type inference": "/wiki/Type_inference", "Compile-time polymorphism": "/wiki/Compile-time_polymorphism", "Range (computer programming)": "/wiki/Range_(computer_programming)#Range_as_an_alternative_to_iterator", "Edit section: Code generation": "/w/index.php?title=Generic_programming&action=edit&section=12", "Attribute (computing)": "/wiki/Attribute_(computing)", "Compile-time function execution": "/wiki/Compile-time_function_execution", "Edit section: Genericity in Eiffel": "/w/index.php?title=Generic_programming&action=edit&section=13", "Edit section: Basic/Unconstrained genericity": "/w/index.php?title=Generic_programming&action=edit&section=14", "Edit section: Constrained genericity": "/w/index.php?title=Generic_programming&action=edit&section=15", "Edit section: Generics in Java": "/w/index.php?title=Generic_programming&action=edit&section=16", "Generics in Java": "/wiki/Generics_in_Java", "Type erasure": "/wiki/Type_erasure", "Type conversion": "/wiki/Type_conversion", "Edit section: Genericity in .NET [C#, VB.NET]": "/w/index.php?title=Generic_programming&action=edit&section=17", "Reification (computer science)": "/wiki/Reification_(computer_science)", "Reflection (computer science)": "/wiki/Reflection_(computer_science)", "Boxing (computer science)": "/wiki/Boxing_(computer_science)", "Collection class": "/wiki/Collection_class", "Compile time": "/wiki/Compile_time", "Covariance and contravariance (computer science)": "/wiki/Covariance_and_contravariance_(computer_science)", "Type safe": "/wiki/Type_safe", "Edit section: Genericity in Delphi": "/w/index.php?title=Generic_programming&action=edit&section=18", "Edit section: Genericity in Free Pascal": "/w/index.php?title=Generic_programming&action=edit&section=19", "Free Pascal": "/wiki/Free_Pascal", "Edit section: Functional languages": "/w/index.php?title=Generic_programming&action=edit&section=20", "Edit section: Genericity in Haskell": "/w/index.php?title=Generic_programming&action=edit&section=21", "Type class": "/wiki/Type_class", "Binary tree": "/wiki/Binary_tree", "Edit section: PolyP": "/w/index.php?title=Generic_programming&action=edit&section=22", "Kind (type theory)": "/wiki/Kind_(type_theory)", "Edit section: Generic Haskell": "/w/index.php?title=Generic_programming&action=edit&section=23", "Utrecht University": "/wiki/Utrecht_University", "Netherlands": "/wiki/Netherlands", "Edit section: Clean": "/w/index.php?title=Generic_programming&action=edit&section=24", "Clean (programming language)": "/wiki/Clean_(programming_language)", "Edit section: Other languages": "/w/index.php?title=Generic_programming&action=edit&section=25", "Modular programming": "/wiki/Modular_programming", "Standard ML": "/wiki/Standard_ML", "OCaml": "/wiki/OCaml", "Scheme (programming language)": "/wiki/Scheme_(programming_language)", "Verilog": "/wiki/Verilog", "Hardware register": "/wiki/Hardware_register", "VHDL": "/wiki/VHDL", "Edit section: See also": "/w/index.php?title=Generic_programming&action=edit&section=26", "Partial evaluation": "/wiki/Partial_evaluation", "Type polymorphism": "/wiki/Type_polymorphism", "Edit section: References": "/w/index.php?title=Generic_programming&action=edit&section=27", "ISBN (identifier)": "/wiki/ISBN_(identifier)", "Special:BookSources/978-0-387-79422-8": "/wiki/Special:BookSources/978-0-387-79422-8", "Special:BookSources/0-201-63361-2": "/wiki/Special:BookSources/0-201-63361-2", "Special:BookSources/978-0-321-63537-2": "/wiki/Special:BookSources/978-0-321-63537-2", "CiteSeerX (identifier)": "/wiki/CiteSeerX_(identifier)", "Doi (identifier)": "/wiki/Doi_(identifier)", "Special:BookSources/0897912438": "/wiki/Special:BookSources/0897912438", "S2CID (identifier)": "/wiki/S2CID_(identifier)", "Template:Cite journal": "/wiki/Template:Cite_journal", "Help:CS1 errors": "/wiki/Help:CS1_errors#missing_periodical", "Bibcode (identifier)": "/wiki/Bibcode_(identifier)", "Special:BookSources/978-81-317-1608-3": "/wiki/Special:BookSources/978-81-317-1608-3", "Special:BookSources/978-0-9834973-0-1": "/wiki/Special:BookSources/978-0-9834973-0-1", "Edit section: Sources": "/w/index.php?title=Generic_programming&action=edit&section=28", "Patrizia Gianni": "/wiki/Patrizia_Gianni", "Special:BookSources/978-3-540-51084-0": "/wiki/Special:BookSources/978-3-540-51084-0", "Edit section: Further reading": "/w/index.php?title=Generic_programming&action=edit&section=29", "Wayback Machine": "/wiki/Wayback_Machine", "Jeremy Gibbons": "/wiki/Jeremy_Gibbons", "Bertrand Meyer": "/wiki/Bertrand_Meyer", "Special:BookSources/0897912047": "/wiki/Special:BookSources/0897912047", "Edit section: External links": "/w/index.php?title=Generic_programming&action=edit&section=30", "Special:BookSources/0-201-73484-2": "/wiki/Special:BookSources/0-201-73484-2", "Association for Computing Machinery": "/wiki/Association_for_Computing_Machinery", "SIGPLAN": "/wiki/SIGPLAN", "International Conference on Functional Programming": "/wiki/International_Conference_on_Functional_Programming", "Simon Peyton Jones": "/wiki/Simon_Peyton_Jones", "Ralf L\u00e4mmel (page does not exist)": "/w/index.php?title=Ralf_L%C3%A4mmel&action=edit&redlink=1", "Special:BookSources/90-393-3765-9": "/wiki/Special:BookSources/90-393-3765-9", "Special:BookSources/0-596-52775-6": "/wiki/Special:BookSources/0-596-52775-6", "Special:BookSources/0-262-69325-9": "/wiki/Special:BookSources/0-262-69325-9", "Template:Data types": "/wiki/Template:Data_types", "Template talk:Data types": "/wiki/Template_talk:Data_types", "Units of information": "/wiki/Units_of_information", "Bit": "/wiki/Bit", "Byte": "/wiki/Byte", "Ternary numeral system": "/wiki/Ternary_numeral_system", "Word (computer architecture)": "/wiki/Word_(computer_architecture)", "Bit array": "/wiki/Bit_array", "Arbitrary-precision arithmetic": "/wiki/Arbitrary-precision_arithmetic", "Complex data type": "/wiki/Complex_data_type", "Decimal data type": "/wiki/Decimal_data_type", "Fixed-point arithmetic": "/wiki/Fixed-point_arithmetic", "Floating-point arithmetic": "/wiki/Floating-point_arithmetic", "Minifloat": "/wiki/Minifloat", "Half-precision floating-point format": "/wiki/Half-precision_floating-point_format", "Bfloat16 floating-point format": "/wiki/Bfloat16_floating-point_format", "Single-precision floating-point format": "/wiki/Single-precision_floating-point_format", "Double-precision floating-point format": "/wiki/Double-precision_floating-point_format", "Quadruple-precision floating-point format": "/wiki/Quadruple-precision_floating-point_format", "Octuple-precision floating-point format": "/wiki/Octuple-precision_floating-point_format", "Extended precision": "/wiki/Extended_precision", "Long double": "/wiki/Long_double", "Integer (computer science)": "/wiki/Integer_(computer_science)", "Signedness": "/wiki/Signedness", "Interval arithmetic": "/wiki/Interval_arithmetic#Implementations", "Rational data type": "/wiki/Rational_data_type", "Pointer (computer programming)": "/wiki/Pointer_(computer_programming)", "Memory address": "/wiki/Memory_address", "Physical address": "/wiki/Physical_address", "Virtual address space": "/wiki/Virtual_address_space", "Reference (computer science)": "/wiki/Reference_(computer_science)", "Plain text": "/wiki/Plain_text", "Character (computing)": "/wiki/Character_(computing)", "String (computer science)": "/wiki/String_(computer_science)", "Null-terminated string": "/wiki/Null-terminated_string", "Composite data type": "/wiki/Composite_data_type", "Algebraic data type": "/wiki/Algebraic_data_type", "Generalized algebraic data type": "/wiki/Generalized_algebraic_data_type", "Class (computer programming)": "/wiki/Class_(computer_programming)", "Dependent type": "/wiki/Dependent_type", "Intuitionistic type theory": "/wiki/Intuitionistic_type_theory#Equality_type", "Inductive type": "/wiki/Inductive_type", "Intersection type": "/wiki/Intersection_type", "List (abstract data type)": "/wiki/List_(abstract_data_type)", "Object (computer science)": "/wiki/Object_(computer_science)", "Metaobject": "/wiki/Metaobject", "Option type": "/wiki/Option_type", "Product type": "/wiki/Product_type", "Record (computer science)": "/wiki/Record_(computer_science)", "Refinement type": "/wiki/Refinement_type", "Set (abstract data type)": "/wiki/Set_(abstract_data_type)", "Union type": "/wiki/Union_type", "Tagged union": "/wiki/Tagged_union", "Boolean data type": "/wiki/Boolean_data_type", "Bottom type": "/wiki/Bottom_type", "Container (abstract data type)": "/wiki/Container_(abstract_data_type)", "Enumerated type": "/wiki/Enumerated_type", "Exception handling": "/wiki/Exception_handling", "Function type": "/wiki/Function_type", "Opaque data type": "/wiki/Opaque_data_type", "Recursive data type": "/wiki/Recursive_data_type", "Semaphore (programming)": "/wiki/Semaphore_(programming)", "Stream (computing)": "/wiki/Stream_(computing)", "Strongly-typed identifier": "/wiki/Strongly-typed_identifier", "Top type": "/wiki/Top_type", "Unit type": "/wiki/Unit_type", "Void type": "/wiki/Void_type", "Abstract data type": "/wiki/Abstract_data_type", "Data structure": "/wiki/Data_structure", "Metaclass": "/wiki/Metaclass", "Primitive data type": "/wiki/Primitive_data_type", "Interface (object-oriented programming)": "/wiki/Interface_(object-oriented_programming)", "Type constructor": "/wiki/Type_constructor", "Type system": "/wiki/Type_system", "Type theory": "/wiki/Type_theory", "Variable (computer science)": "/wiki/Variable_(computer_science)", "Help:Authority control": "/wiki/Help:Authority_control", "Edit this at Wikidata": "https://www.wikidata.org/wiki/Q1051282#identifiers"}