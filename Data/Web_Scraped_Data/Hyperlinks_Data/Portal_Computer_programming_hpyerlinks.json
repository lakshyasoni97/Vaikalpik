{"Special:PrefixIndex/Portal:Computer programming/": "/wiki/Special:PrefixIndex/Portal:Computer_programming/", "Wikipedia:CAREFUL": "/wiki/Wikipedia:CAREFUL", "Wikipedia:ASSISTED": "/wiki/Wikipedia:ASSISTED", "Template:Portal maintenance status": "/wiki/Template:Portal_maintenance_status#How_to_update_the_maintenance_information_for_a_portal", "Wikipedia:Contents/Portals": "/wiki/Wikipedia:Contents/Portals", "Special:RandomInCategory/All portals": "/wiki/Special:RandomInCategory/All_portals", "Sample of computer program on a screen": "/wiki/File:Programming.jpg", "Computer program": "/wiki/Computer_program", "Computer programming": "/wiki/Computer_programming", "Computation": "/wiki/Computation", "Computing": "/wiki/Computing", "Executable": "/wiki/Executable", "Algorithm": "/wiki/Algorithm", "Profiling (computer programming)": "/wiki/Profiling_(computer_programming)", "Programming language": "/wiki/Programming_language", "Source code": "/wiki/Source_code", "Programmer": "/wiki/Programmer", "Machine code": "/wiki/Machine_code", "Central processing unit": "/wiki/Central_processing_unit", "Operating system": "/wiki/Operating_system", "Computer": "/wiki/Computer", "Domain (software engineering)": "/wiki/Domain_(software_engineering)", "Logic": "/wiki/Logic", "Software testing": "/wiki/Software_testing", "Debugging": "/wiki/Debugging", "Build automation": "/wiki/Build_automation", "Artifact (software development)": "/wiki/Artifact_(software_development)", "Software development": "/wiki/Software_development", "Software engineering": "/wiki/Software_engineering", "Engineering": "/wiki/Engineering", "Reverse engineering": "/wiki/Reverse_engineering", "Image 1 A 12-row/80-column IBM punched card from the mid-twentieth century A punched card (also punch card or punched-card) is a piece of stiff paper that holds digital data represented by the presence or absence of holes in predefined positions. Punched cards were once common in data processing applications or to directly control automated machinery. Punched cards were widely used through much of the 20th century in the data processing industry, where specialized and increasingly complex unit record machines, organized into semiautomatic data processing systems, used punched cards for data input, output, and storage. The IBM 12-row/80-column punched card format came to dominate the industry. Many early digital computers used punched cards as the primary medium for input of both computer programs and data. While punched cards are now obsolete as a storage medium, as of 2012, some voting machines still used punched cards to record votes. Punched cards also had a significant cultural impact. (Full article...)": "/wiki/File:Blank.png", "Enlarge": "/wiki/File:Used_Punchcard_(5151286161).jpg", "IBM": "/wiki/IBM", "Punched card": "/wiki/Punched_card", "Digital data": "/wiki/Digital_data", "Data processing": "/wiki/Data_processing", "Automated machine": "/wiki/Automated_machine", "Unit record equipment": "/wiki/Unit_record_equipment", "Data processing system": "/wiki/Data_processing_system", "Digital computer": "/wiki/Digital_computer", "Data (computing)": "/wiki/Data_(computing)", "Storage medium": "/wiki/Storage_medium", "Voting machine": "/wiki/Voting_machine", "Image 2 The source code for a simple computer program written in the C programming language. The gray lines are comments that help explain the program to humans in a natural language. When compiled and run, it will give the output \"Hello, world!\". A programming language is a system of notation for writing computer programs. Most programming languages are text-based formal languages, but they may also be graphical. They are a kind of computer language. The description of a programming language is usually split into the two components of syntax (form) and semantics (meaning), which are usually defined by a formal language. Some languages are defined by a specification document (for example, the C programming language is specified by an ISO Standard) while other languages (such as Perl) have a dominant implementation that is treated as a reference. Some languages have both, with the basic language defined by a standard and extensions taken from the dominant implementation being common. Programming language theory is the subfield of computer science that studies the design, implementation, analysis, characterization, and classification of programming languages. (Full article...)": "/wiki/File:Blank.png", "C (programming language)": "/wiki/C_(programming_language)", "Comment (computer programming)": "/wiki/Comment_(computer_programming)", "Natural language": "/wiki/Natural_language", "Compiled": "/wiki/Compiled", "Execution (computing)": "/wiki/Execution_(computing)", "\"Hello, World!\" program": "/wiki/%22Hello,_World!%22_program", "Formal language": "/wiki/Formal_language", "Visual programming language": "/wiki/Visual_programming_language", "Computer language": "/wiki/Computer_language", "Syntax (programming languages)": "/wiki/Syntax_(programming_languages)", "Semantics (computer science)": "/wiki/Semantics_(computer_science)", "International Organization for Standardization": "/wiki/International_Organization_for_Standardization", "Perl": "/wiki/Perl", "Programming language implementation": "/wiki/Programming_language_implementation", "Reference implementation": "/wiki/Reference_implementation", "Programming language theory": "/wiki/Programming_language_theory", "Computer science": "/wiki/Computer_science", "Image 3 Atari BASIC (1979) for the Atari 8-bit family BASIC (Beginners' All-purpose Symbolic Instruction Code) is a family of general-purpose, high-level programming languages designed for ease of use. The original version was created by John G. Kemeny and Thomas E. Kurtz at Dartmouth College in 1963. They wanted to enable students in non-scientific fields to use computers. At the time, nearly all computers required writing custom software, which only scientists and mathematicians tended to learn. In addition to the program language, Kemeny and Kurtz developed the Dartmouth Time Sharing System (DTSS), which allowed multiple users to edit and run BASIC programs simultaneously on remote terminals. This general model became very popular on minicomputer systems like the PDP-11 and Data General Nova in the late 1960s and early 1970s. Hewlett-Packard produced an entire computer line for this method of operation, introducing the HP2000 series in the late 1960s and continuing sales into the 1980s. Many early video games trace their history to one of these versions of BASIC. The emergence of microcomputers in the mid-1970s led to the development of multiple BASIC dialects, including Microsoft BASIC in 1975. Due to the tiny main memory available on these machines, often 4\u00a0KB, a variety of Tiny BASIC dialects were also created. BASIC was available for almost any system of the era, and became the de facto programming language for home computer systems that emerged in the late 1970s. These PCs almost always had a BASIC interpreter installed by default, often in the machine's firmware or sometimes on a ROM cartridge. (Full article...)": "/wiki/File:Blank.png", "Atari BASIC": "/wiki/Atari_BASIC", "Atari 8-bit family": "/wiki/Atari_8-bit_family", "BASIC": "/wiki/BASIC", "General-purpose programming language": "/wiki/General-purpose_programming_language", "High-level programming language": "/wiki/High-level_programming_language", "Dartmouth BASIC": "/wiki/Dartmouth_BASIC", "John G. Kemeny": "/wiki/John_G._Kemeny", "Thomas E. Kurtz": "/wiki/Thomas_E._Kurtz", "Dartmouth College": "/wiki/Dartmouth_College", "Scientist": "/wiki/Scientist", "Mathematician": "/wiki/Mathematician", "Dartmouth Time Sharing System": "/wiki/Dartmouth_Time_Sharing_System", "Minicomputer": "/wiki/Minicomputer", "PDP-11": "/wiki/PDP-11", "Data General Nova": "/wiki/Data_General_Nova", "Hewlett-Packard": "/wiki/Hewlett-Packard", "HP2000": "/wiki/HP2000", "Microcomputer": "/wiki/Microcomputer", "Microsoft BASIC": "/wiki/Microsoft_BASIC", "Main memory": "/wiki/Main_memory", "Tiny BASIC": "/wiki/Tiny_BASIC", "Home computer": "/wiki/Home_computer", "Personal Computer": "/wiki/Personal_Computer", "BASIC interpreter": "/wiki/BASIC_interpreter", "Firmware": "/wiki/Firmware", "Read-only memory": "/wiki/Read-only_memory", "Image 4 Yoshua Bengio in 2019 Yoshua Bengio OC FRS FRSC (born March 5, 1964) is a Canadian computer scientist, most noted for his work on artificial neural networks and deep learning. He is a professor at the Department of Computer Science and Operations Research at the Universit\u00e9 de Montr\u00e9al and scientific director of the Montreal Institute for Learning Algorithms (MILA). Bengio received the 2018 ACM A.M. Turing Award, together with Geoffrey Hinton and Yann LeCun, for their work in deep learning. Bengio, Hinton, and LeCun, are sometimes referred to as the \"Godfathers of AI\" and \"Godfathers of Deep Learning\". (Full article...)": "/wiki/File:Blank.png", "Yoshua Bengio": "/wiki/Yoshua_Bengio", "Order of Canada": "/wiki/Order_of_Canada", "Fellow of the Royal Society": "/wiki/Fellow_of_the_Royal_Society", "Fellow of the Royal Society of Canada": "/wiki/Fellow_of_the_Royal_Society_of_Canada", "Computer scientist": "/wiki/Computer_scientist", "Artificial neural networks": "/wiki/Artificial_neural_networks", "Deep learning": "/wiki/Deep_learning", "Universit\u00e9 de Montr\u00e9al": "/wiki/Universit%C3%A9_de_Montr%C3%A9al", "Montreal Institute for Learning Algorithms": "/wiki/Montreal_Institute_for_Learning_Algorithms", "Turing Award": "/wiki/Turing_Award", "Geoffrey Hinton": "/wiki/Geoffrey_Hinton", "Yann LeCun": "/wiki/Yann_LeCun", "Image 5 IBM's Blue Gene/P massively parallel supercomputer Parallel computing is a type of computation in which many calculations or processes are carried out simultaneously. Large problems can often be divided into smaller ones, which can then be solved at the same time. There are several different forms of parallel computing: bit-level, instruction-level, data, and task parallelism. Parallelism has long been employed in high-performance computing, but has gained broader interest due to the physical constraints preventing frequency scaling. As power consumption (and consequently heat generation) by computers has become a concern in recent years, parallel computing has become the dominant paradigm in computer architecture, mainly in the form of multi-core processors. Parallel computing is closely related to concurrent computing\u2014they are frequently used together, and often conflated, though the two are distinct: it is possible to have parallelism without concurrency, and concurrency without parallelism (such as multitasking by time-sharing on a single-core CPU). In parallel computing, a computational task is typically broken down into several, often many, very similar sub-tasks that can be processed independently and whose results are combined afterwards, upon completion. In contrast, in concurrent computing, the various processes often do not address related tasks; when they do, as is typical in distributed computing, the separate tasks may have a varied nature and often require some inter-process communication during execution. Parallel computers can be roughly classified according to the level at which the hardware supports parallelism, with multi-core and multi-processor computers having multiple processing elements within a single machine, while clusters, MPPs, and grids use multiple computers to work on the same task. Specialized parallel computer architectures are sometimes used alongside traditional processors, for accelerating specific tasks. (Full article...)": "/wiki/File:Blank.png", "Blue Gene": "/wiki/Blue_Gene", "Massively parallel": "/wiki/Massively_parallel", "Supercomputer": "/wiki/Supercomputer", "Parallel computing": "/wiki/Parallel_computing", "Process (computing)": "/wiki/Process_(computing)", "Bit-level parallelism": "/wiki/Bit-level_parallelism", "Instruction-level parallelism": "/wiki/Instruction-level_parallelism", "Data parallelism": "/wiki/Data_parallelism", "Task parallelism": "/wiki/Task_parallelism", "High-performance computing": "/wiki/High-performance_computing", "Frequency scaling": "/wiki/Frequency_scaling", "Computer architecture": "/wiki/Computer_architecture", "Multi-core processor": "/wiki/Multi-core_processor", "Concurrent computing": "/wiki/Concurrent_computing", "Time-sharing": "/wiki/Time-sharing", "Distributed computing": "/wiki/Distributed_computing", "Inter-process communication": "/wiki/Inter-process_communication", "Multi-core": "/wiki/Multi-core", "Symmetric multiprocessing": "/wiki/Symmetric_multiprocessing", "Processing element": "/wiki/Processing_element", "Computer cluster": "/wiki/Computer_cluster", "Massively parallel (computing)": "/wiki/Massively_parallel_(computing)", "Grid computing": "/wiki/Grid_computing", "Image 6 A Blender 2.45 screenshot displaying the 3D test model Suzanne Computer graphics deals with generating images and art with the aid of computers. Today, computer graphics is a core technology in digital photography, film, video games, digital art, cell phone and computer displays, and many specialized applications. A great deal of specialized hardware and software has been developed, with the displays of most devices being driven by computer graphics hardware. It is a vast and recently developed area of computer science. The phrase was coined in 1960 by computer graphics researchers Verne Hudson and William Fetter of Boeing. It is often abbreviated as CG, or typically in the context of film as computer generated imagery (CGI). The non-artistic aspects of computer graphics are the subject of computer science research. Some topics in computer graphics include user interface design, sprite graphics, rendering, ray tracing, geometry processing, computer animation, vector graphics, 3D modeling, shaders, GPU design, implicit surfaces, visualization, scientific computing, image processing, computational photography, scientific visualization, computational geometry and computer vision, among others. The overall methodology depends heavily on the underlying sciences of geometry, optics, physics, and perception. Computer graphics is responsible for displaying art and image data effectively and meaningfully to the consumer. It is also used for processing image data received from the physical world, such as photo and video content. Computer graphics development has had a significant impact on many types of media and has revolutionized animation, movies, advertising, and video games, in general. (Full article...)": "/wiki/File:Blank.png", "Blender (software)": "/wiki/Blender_(software)", "3D test model": "/wiki/3D_test_model", "Suzanne (3D model)": "/wiki/Suzanne_(3D_model)", "Computer graphics": "/wiki/Computer_graphics", "Image": "/wiki/Image", "Computers": "/wiki/Computers", "Graphics hardware": "/wiki/Graphics_hardware", "William Fetter": "/wiki/William_Fetter", "Computer-generated imagery": "/wiki/Computer-generated_imagery", "Computer graphics (computer science)": "/wiki/Computer_graphics_(computer_science)", "User interface design": "/wiki/User_interface_design", "Sprite (graphics)": "/wiki/Sprite_(graphics)", "Rendering (computer graphics)": "/wiki/Rendering_(computer_graphics)", "Ray tracing (graphics)": "/wiki/Ray_tracing_(graphics)", "Geometry processing": "/wiki/Geometry_processing", "Computer animation": "/wiki/Computer_animation", "Vector graphics": "/wiki/Vector_graphics", "3D modeling": "/wiki/3D_modeling", "Shader": "/wiki/Shader", "GPU": "/wiki/GPU", "Implicit surface": "/wiki/Implicit_surface", "Visualization (graphics)": "/wiki/Visualization_(graphics)", "Scientific computing": "/wiki/Scientific_computing", "Image processing": "/wiki/Image_processing", "Computational photography": "/wiki/Computational_photography", "Scientific visualization": "/wiki/Scientific_visualization", "Computational geometry": "/wiki/Computational_geometry", "Computer vision": "/wiki/Computer_vision", "Geometry": "/wiki/Geometry", "Optics": "/wiki/Optics", "Physics": "/wiki/Physics", "Perception": "/wiki/Perception", "Animation": "/wiki/Animation", "Movies": "/wiki/Movies", "Advertising": "/wiki/Advertising", "Video game": "/wiki/Video_game", "Image 7 Flow-chart of an algorithm (Euclides algorithm's) for calculating the greatest common divisor (g.c.d.) of two numbers a and b in locations named A and B. The algorithm proceeds by successive subtractions in two loops: IF the test B \u2265 A yields \"yes\" or \"true\" (more accurately, the number b in location B is greater than or equal to the number a in location A) THEN, the algorithm specifies B \u2190 B \u2212 A (meaning the number b \u2212 a replaces the old b). Similarly, IF A > B, THEN A \u2190 A \u2212 B. The process terminates when (the contents of) B is 0, yielding the g.c.d. in A. (Algorithm derived from Scott 2009:13; symbols and drawing style from Tausworthe 1977). In mathematics and computer science, an algorithm (/\u02c8\u00e6l\u0261\u0259r\u026a\u00f0\u0259m/ (listen)) is a finite sequence of rigorous instructions, typically used to solve a class of specific problems or to perform a computation. Algorithms are used as specifications for performing calculations and data processing. More advanced algorithms can use conditionals to divert the code execution through various routes (referred to as automated decision-making) and deduce valid inferences (referred to as automated reasoning), achieving automation eventually. Using human characteristics as descriptors of machines in metaphorical ways was already practiced by Alan Turing with terms such as \"memory\", \"search\" and \"stimulus\". In contrast, a heuristic is an approach to problem solving that may not be fully specified or may not guarantee correct or optimal results, especially in problem domains where there is no well-defined correct or optimal result. As an effective method, an algorithm can be expressed within a finite amount of space and time, and in a well-defined formal language for calculating a function. Starting from an initial state and initial input (perhaps empty), the instructions describe a computation that, when executed, proceeds through a finite number of well-defined successive states, eventually producing \"output\" and terminating at a final ending state. The transition from one state to the next is not necessarily deterministic; some algorithms, known as randomized algorithms, incorporate random input. (Full article...)": "/wiki/File:Blank.png", "Euclid's algorithm": "/wiki/Euclid%27s_algorithm", "Mathematics": "/wiki/Mathematics", "Help:IPA/English": "/wiki/Help:IPA/English", "About this sound": "/wiki/File:En-us-algorithm.ogg", "En-us-algorithm.ogg": "//upload.wikimedia.org/wikipedia/commons/7/7f/En-us-algorithm.ogg", "Mathematical proof": "/wiki/Mathematical_proof#Nature_and_purpose", "Computational problem": "/wiki/Computational_problem", "Calculation": "/wiki/Calculation", "Conditional (computer programming)": "/wiki/Conditional_(computer_programming)", "Automated decision-making": "/wiki/Automated_decision-making", "Inference": "/wiki/Inference", "Automated reasoning": "/wiki/Automated_reasoning", "Automation": "/wiki/Automation", "Alan Turing": "/wiki/Alan_Turing", "Heuristic (computer science)": "/wiki/Heuristic_(computer_science)", "Effective method": "/wiki/Effective_method", "Function (mathematics)": "/wiki/Function_(mathematics)", "Empty string": "/wiki/Empty_string", "Deterministic": "/wiki/Deterministic", "Randomized algorithm": "/wiki/Randomized_algorithm", "Image 8 Wozniak in 2017 Stephen Gary Wozniak (/\u02c8w\u0252zni\u00e6k/; born August 11, 1950), also known by his nickname \"Woz\", is an American technology entrepreneur, electronics engineer, computer programmer, philanthropist, and inventor. In 1976, he co-founded Apple Computer with business partner Steve Jobs, which later became the world's largest technology company by revenue and the largest company in the world by market capitalization. Through his work at Apple in the 1970s and 1980s, he is widely recognized as one of the most prominent pioneers of the personal computer revolution. In 1975, Wozniak started developing the Apple\u00a0I into the computer that launched Apple when he and Jobs first began marketing it the following year. He primarily designed the Apple II, introduced in 1977, known as one of the first highly successful mass-produced microcomputers, while Jobs oversaw the development of its foam-molded plastic case and early Apple employee Rod Holt developed its switching power supply. With human\u2013computer interface expert Jef Raskin, Wozniak had a major influence over the initial development of the original Apple Macintosh concepts from 1979 to 1981, when Jobs took over the project following Wozniak's brief departure from the company due to a traumatic airplane accident. After permanently leaving Apple in 1985, Wozniak founded CL 9 and created the first programmable universal remote, released in 1987. He then pursued several other businesses and philanthropic ventures throughout his career, focusing largely on technology in K\u201312 schools. As of February 2020, Wozniak has remained an employee of Apple in a ceremonial capacity since stepping down in 1985. In recent years, he has helped fund multiple entrepreneurial efforts dealing in areas such as telecommunications, flash memory, technology and pop culture conventions, ecology, satellites, technical education and more. (Full article...)": "/wiki/File:Blank.png", "Steve Wozniak": "/wiki/Steve_Wozniak", "Entrepreneur": "/wiki/Entrepreneur", "Electronics engineer": "/wiki/Electronics_engineer", "Computer programmer": "/wiki/Computer_programmer", "Philanthropist": "/wiki/Philanthropist", "Apple Inc.": "/wiki/Apple_Inc.", "Steve Jobs": "/wiki/Steve_Jobs", "List of largest technology companies by revenue": "/wiki/List_of_largest_technology_companies_by_revenue", "List of public corporations by market capitalization": "/wiki/List_of_public_corporations_by_market_capitalization", "Personal computer revolution": "/wiki/Personal_computer_revolution", "Apple I": "/wiki/Apple_I", "Apple II": "/wiki/Apple_II", "Rod Holt": "/wiki/Rod_Holt", "Switched-mode power supply": "/wiki/Switched-mode_power_supply", "Human\u2013computer interface": "/wiki/Human%E2%80%93computer_interface", "Jef Raskin": "/wiki/Jef_Raskin", "Macintosh": "/wiki/Macintosh", "CL 9": "/wiki/CL_9", "Universal remote": "/wiki/Universal_remote", "Technology": "/wiki/Technology", "K\u201312": "/wiki/K%E2%80%9312", "Telecommunications": "/wiki/Telecommunications", "Flash memory": "/wiki/Flash_memory", "Ecology": "/wiki/Ecology", "Satellites": "/wiki/Satellites", "Image 9 Cover graphic of The C Programming Language, co-authored by C's original designer Dennis Ritchie C (pronounced /\u02c8si\u02d0/ \u2013 like the letter c) is a general-purpose computer programming language. It was created in the 1970s by Dennis Ritchie, and remains very widely used and influential. By design, C's features cleanly reflect the capabilities of the targeted CPUs. It has found lasting use in operating systems, device drivers, protocol stacks, though decreasingly for application software. C is commonly used on computer architectures that range from the largest supercomputers to the smallest microcontrollers and embedded systems. A successor to the programming language B, C was originally developed at Bell Labs by Ritchie between 1972 and 1973 to construct utilities running on Unix. It was applied to re-implementing the kernel of the Unix operating system. During the 1980s, C gradually gained popularity. It has become one of the most widely used programming languages, with C compilers available for practically all modern computer architectures and operating systems. C has been standardized by ANSI since 1989 (ANSI C) and by the International Organization for Standardization (ISO). C is an imperative procedural language, supporting structured programming, lexical variable scope and recursion, with a static type system. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code. (Full article...)": "/wiki/File:Blank.png", "The C Programming Language": "/wiki/The_C_Programming_Language", "Dennis Ritchie": "/wiki/Dennis_Ritchie", "C": "/wiki/C", "General-purpose language": "/wiki/General-purpose_language", "Device drivers": "/wiki/Device_drivers", "Protocol stack": "/wiki/Protocol_stack", "Application software": "/wiki/Application_software", "Microcontroller": "/wiki/Microcontroller", "Embedded system": "/wiki/Embedded_system", "B (programming language)": "/wiki/B_(programming_language)", "Bell Labs": "/wiki/Bell_Labs", "Unix": "/wiki/Unix", "Measuring programming language popularity": "/wiki/Measuring_programming_language_popularity", "Compiler": "/wiki/Compiler", "American National Standards Institute": "/wiki/American_National_Standards_Institute", "ANSI C": "/wiki/ANSI_C", "Imperative programming": "/wiki/Imperative_programming", "Procedural programming": "/wiki/Procedural_programming", "Structured programming": "/wiki/Structured_programming", "Lexical variable scope": "/wiki/Lexical_variable_scope", "Recursion (computer science)": "/wiki/Recursion_(computer_science)", "Static type system": "/wiki/Static_type_system", "Low-level programming language": "/wiki/Low-level_programming_language", "Computer memory": "/wiki/Computer_memory", "Runtime system": "/wiki/Runtime_system", "Specification (technical standard)": "/wiki/Specification_(technical_standard)", "Software portability": "/wiki/Software_portability", "Image 10 PHP is a general-purpose scripting language geared toward web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1993 and released in 1995. The PHP reference implementation is now produced by The PHP Group. PHP was originally an abbreviation of Personal Home Page, but it now stands for the recursive initialism PHP: Hypertext Preprocessor. PHP code is usually processed on a web server by a PHP interpreter implemented as a module, a daemon or as a Common Gateway Interface (CGI) executable. On a web server, the result of the interpreted and executed PHP code\u00a0\u2013 which may be any type of data, such as generated HTML or binary image data\u00a0\u2013 would form the whole or part of an HTTP response. Various web template systems, web content management systems, and web frameworks exist which can be employed to orchestrate or facilitate the generation of that response. Additionally, PHP can be used for many programming tasks outside the web context, such as standalone graphical applications and robotic drone control. PHP code can also be directly executed from the command line. The standard PHP interpreter, powered by the Zend Engine, is free software released under the PHP License. PHP has been widely ported and can be deployed on most web servers on a variety of operating systems and platforms. (Full article...)": "/wiki/File:Blank.png", "PHP": "/wiki/PHP", "Scripting language": "/wiki/Scripting_language", "Web development": "/wiki/Web_development", "Rasmus Lerdorf": "/wiki/Rasmus_Lerdorf", "Recursive initialism": "/wiki/Recursive_initialism", "Web server": "/wiki/Web_server", "Interpreter (computing)": "/wiki/Interpreter_(computing)", "Plugin (computing)": "/wiki/Plugin_(computing)", "Daemon (computing)": "/wiki/Daemon_(computing)", "Common Gateway Interface": "/wiki/Common_Gateway_Interface", "HTML": "/wiki/HTML", "Binary number": "/wiki/Binary_number", "Hypertext Transfer Protocol": "/wiki/Hypertext_Transfer_Protocol", "Web template system": "/wiki/Web_template_system", "Content management system": "/wiki/Content_management_system", "Web framework": "/wiki/Web_framework", "Graphical user interface": "/wiki/Graphical_user_interface", "Robotics": "/wiki/Robotics", "Unmanned aerial vehicle": "/wiki/Unmanned_aerial_vehicle", "Command-line interface": "/wiki/Command-line_interface", "Zend Engine": "/wiki/Zend_Engine", "Free software": "/wiki/Free_software", "PHP License": "/wiki/PHP_License", "Computing platform": "/wiki/Computing_platform", "Image 11 Tcl (pronounced \"tickle\" or as an initialism) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. Tcl supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles. It is commonly used embedded into C applications, for rapid prototyping, scripted applications, GUIs, and testing. Tcl interpreters are available for many operating systems, allowing Tcl code to run on a wide variety of systems. Because Tcl is a very compact language, it is used on embedded systems platforms, both in its full form and in several other small-footprint versions. The popular combination of Tcl with the Tk extension is referred to as Tcl/Tk, and enables building a graphical user interface (GUI) natively in Tcl. Tcl/Tk is included in the standard Python installation in the form of Tkinter. (Full article...)": "/wiki/File:Blank.png", "Tcl": "/wiki/Tcl", "Tickle": "/wiki/Tickle", "Initialism": "/wiki/Initialism", "Dynamic programming language": "/wiki/Dynamic_programming_language", "Command (computing)": "/wiki/Command_(computing)", "Programming paradigm": "/wiki/Programming_paradigm", "Object-oriented programming": "/wiki/Object-oriented_programming", "Functional programming": "/wiki/Functional_programming", "Rapid application development": "/wiki/Rapid_application_development", "Embedded systems": "/wiki/Embedded_systems", "Tk (software)": "/wiki/Tk_(software)", "Python (programming language)": "/wiki/Python_(programming_language)", "Tkinter": "/wiki/Tkinter", "Image 12 Ronald Paul \"Ron\" Fedkiw (born February 27, 1978) is a full professor in the Stanford University department of computer science and a leading researcher in the field of computer graphics, focusing on topics relating to physically based simulation of natural phenomena and machine learning. His techniques have been employed in many motion pictures. He has earned recognition at the 80th Academy Awards and the 87th Academy Awards as well as from the National Academy of Sciences. His first Academy Award was awarded for developing techniques that enabled many technically sophisticated adaptations including the visual effects in 21st century movies in the Star Wars, Harry Potter, Terminator, and Pirates of the Caribbean franchises. Fedkiw has designed a platform that has been used to create many of the movie world's most advanced special effects since it was first used on the T-X character in Terminator 3: Rise of the Machines. His second Academy Award was awarded for computer graphics techniques for special effects for large scale destruction. Although he has won an Oscar for his work, he does not design the visual effects that use his technique. Instead, he has developed a system that other award-winning technicians and engineers have used to create visual effects for some of the world's most expensive and highest-grossing movies. (Full article...)": "/wiki/File:Blank.png", "Ronald Fedkiw": "/wiki/Ronald_Fedkiw", "Full professor": "/wiki/Full_professor", "Stanford University": "/wiki/Stanford_University", "Motion picture": "/wiki/Motion_picture", "80th Academy Awards": "/wiki/80th_Academy_Awards", "87th Academy Awards": "/wiki/87th_Academy_Awards", "National Academy of Sciences": "/wiki/National_Academy_of_Sciences", "Star Wars": "/wiki/Star_Wars", "Harry Potter (film series)": "/wiki/Harry_Potter_(film_series)", "Terminator (franchise)": "/wiki/Terminator_(franchise)", "Pirates of the Caribbean": "/wiki/Pirates_of_the_Caribbean", "Media franchise": "/wiki/Media_franchise", "Platform (computing)": "/wiki/Platform_(computing)", "T-X": "/wiki/T-X", "Terminator 3: Rise of the Machines": "/wiki/Terminator_3:_Rise_of_the_Machines", "Visual effects": "/wiki/Visual_effects", "Revenue": "/wiki/Revenue", "Image 13 Perl is a family of two high-level, general-purpose, interpreted, dynamic programming languages. \"Perl\" refers to Perl 5, but from 2000 to 2019 it also referred to its redesigned \"sister language\", Perl 6, before the latter's name was officially changed to Raku in October 2019. Though Perl is not officially an acronym, there are various backronyms in use, including \"Practical Extraction and Reporting Language\". Perl was developed by Larry Wall in 1987 as a general-purpose Unix scripting language to make report processing easier. Since then, it has undergone many changes and revisions. Raku, which began as a redesign of Perl 5 in 2000, eventually evolved into a separate language. Both languages continue to be developed independently by different development teams and liberally borrow ideas from each other. The Perl languages borrow features from other programming languages including C, sh, AWK, and sed; They provide text processing facilities without the arbitrary data-length limits of many contemporary Unix command line tools. Perl 5 gained widespread popularity in the mid-1990s as a CGI scripting language, in part due to its powerful regular expression and string parsing abilities. (Full article...)": "/wiki/File:Blank.png", "Raku (programming language)": "/wiki/Raku_(programming_language)", "Backronym": "/wiki/Backronym", "Data extraction": "/wiki/Data_extraction", "Larry Wall": "/wiki/Larry_Wall", "Unix shell": "/wiki/Unix_shell", "AWK (programming language)": "/wiki/AWK_(programming_language)", "Sed": "/wiki/Sed", "List of Unix commands": "/wiki/List_of_Unix_commands", "Regular expression": "/wiki/Regular_expression", "String (computing)": "/wiki/String_(computing)", "Parsing": "/wiki/Parsing", "Image 14 Eiffel is an object-oriented programming language designed by Bertrand Meyer (an object-orientation proponent and author of Object-Oriented Software Construction) and Eiffel Software. Meyer conceived the language in 1985 with the goal of increasing the reliability of commercial software development; the first version becoming available in 1986. In 2005, Eiffel became an ISO-standardized language. The design of the language is closely connected with the Eiffel programming method. Both are based on a set of principles, including design by contract, command\u2013query separation, the uniform-access principle, the single-choice principle, the open\u2013closed principle, and option\u2013operand separation. Many concepts initially introduced by Eiffel later found their way into Java, C#, and other languages. New language design ideas, particularly through the Ecma/ISO standardization process, continue to be incorporated into the Eiffel language. (Full article...)": "/wiki/File:Blank.png", "Eiffel (programming language)": "/wiki/Eiffel_(programming_language)", "Bertrand Meyer": "/wiki/Bertrand_Meyer", "Object-Oriented Software Construction": "/wiki/Object-Oriented_Software_Construction", "Design by contract": "/wiki/Design_by_contract", "Command\u2013query separation": "/wiki/Command%E2%80%93query_separation", "Uniform access principle": "/wiki/Uniform_access_principle", "Single choice principle": "/wiki/Single_choice_principle", "Open\u2013closed principle": "/wiki/Open%E2%80%93closed_principle", "Option\u2013operand separation": "/wiki/Option%E2%80%93operand_separation", "Java (programming language)": "/wiki/Java_(programming_language)", "C Sharp (programming language)": "/wiki/C_Sharp_(programming_language)", "Ecma International": "/wiki/Ecma_International", "Image 15 Jobs introducing the iPhone 4 in 2010 Steven Paul Jobs (February 24, 1955 \u2013 October 5, 2011) was an American business magnate, inventor, and investor. He was the co-founder, chairman, and CEO of Apple; the chairman and majority shareholder of Pixar; a member of The Walt Disney Company's board of directors following its acquisition of Pixar; and the founder, chairman, and CEO of NeXT. He was a pioneer of the personal computer revolution of the 1970s and 1980s, along with his early business partner and fellow Apple co-founder Steve Wozniak. Jobs was born in San Francisco to a Syrian father and German-American mother. He was adopted shortly after his birth. Jobs attended Reed College in 1972 before withdrawing that same year. In 1974, he traveled through India seeking enlightenment before later studying Zen Buddhism. He and Wozniak co-founded Apple in 1976 to sell Wozniak's Apple I personal computer. Together the duo gained fame and wealth a year later with production and sale of the Apple II, one of the first highly successful mass-produced microcomputers. Jobs saw the commercial potential of the Xerox Alto in 1979, which was mouse-driven and had a graphical user interface (GUI). This led to the development of the unsuccessful Apple Lisa in 1983, followed by the breakthrough Macintosh in 1984, the first mass-produced computer with a GUI. The Macintosh introduced the desktop publishing industry in 1985 with the addition of the Apple LaserWriter, the first laser printer to feature vector graphics. In 1985, Jobs was forced out of Apple after a long power struggle with the company's board and its then-CEO, John Sculley. That same year, Jobs took a few Apple employees with him to found NeXT, a computer platform development company that specialized in computers for higher-education and business markets. In addition, he helped to develop the visual effects industry when he funded the computer graphics division of George Lucas's Lucasfilm in 1986. The new company was Pixar, which produced the first 3D computer-animated feature film Toy Story (1995) and went on to become a major animation studio, producing over 25 films since. (Full article...)": "/wiki/File:Blank.png", "IPhone 4": "/wiki/IPhone_4", "Business magnate": "/wiki/Business_magnate", "Chairman": "/wiki/Chairman", "CEO": "/wiki/CEO", "Pixar": "/wiki/Pixar", "The Walt Disney Company": "/wiki/The_Walt_Disney_Company", "NeXT": "/wiki/NeXT", "Syrian": "/wiki/Syrian", "German-American": "/wiki/German-American", "Reed College": "/wiki/Reed_College", "Hippie trail": "/wiki/Hippie_trail", "Buddhism in the West": "/wiki/Buddhism_in_the_West#Emerging_mainstream_western_Buddhism", "Xerox Alto": "/wiki/Xerox_Alto", "Computer mouse": "/wiki/Computer_mouse", "Apple Lisa": "/wiki/Apple_Lisa", "Macintosh 128K": "/wiki/Macintosh_128K", "Desktop publishing": "/wiki/Desktop_publishing", "LaserWriter": "/wiki/LaserWriter", "Laser printing": "/wiki/Laser_printing", "John Sculley": "/wiki/John_Sculley", "NeXT Computer": "/wiki/NeXT_Computer", "Computer platform": "/wiki/Computer_platform", "George Lucas": "/wiki/George_Lucas", "Lucasfilm": "/wiki/Lucasfilm", "Toy Story": "/wiki/Toy_Story", "Animation studio": "/wiki/Animation_studio", "List of Pixar films": "/wiki/List_of_Pixar_films", "Portal:Computer programming/Selected articles": "/wiki/Portal:Computer_programming/Selected_articles", "Image 1A view of the GNU nano Text editor version 6.0": "/wiki/File:GNU_nano_6.0_screenshot.png", "GNU nano": "/wiki/GNU_nano", "Image 2Partial view of the Mandelbrot set. Step 1 of a zoom sequence: Gap between the \"head\" and the \"body\" also called the \"seahorse valley\".": "/wiki/File:Mandel_zoom_01_head_and_shoulder.jpg", "Mandelbrot set": "/wiki/Mandelbrot_set", "Image 3Margaret Hamilton standing next to the navigation software that she and her MIT team produced for the Apollo Project.": "/wiki/File:Margaret_Hamilton_-_restoration.jpg", "Margaret Hamilton (software engineer)": "/wiki/Margaret_Hamilton_(software_engineer)", "Apollo program": "/wiki/Apollo_program", "Image 4An IBM Port-A-Punch punched card": "/wiki/File:IBM_Port-A-Punch.jpg", "Image 5A head crash on a modern hard disk drive": "/wiki/File:Hard_disk_head_crash.jpg", "Head crash": "/wiki/Head_crash", "Image 6Deep Blue was a chess-playing expert system run on a unique purpose-built IBM supercomputer. It was the first computer to win a game, and the first to win a match, against a reigning world champion under regular time controls. Photo taken at the Computer History Museum.": "/wiki/File:Deep_Blue.jpg", "Deep Blue (chess computer)": "/wiki/Deep_Blue_(chess_computer)", "Computer chess": "/wiki/Computer_chess", "Expert system": "/wiki/Expert_system", "Computer History Museum": "/wiki/Computer_History_Museum", "Image 7Bill Gosper's Glider Gun in action": "/wiki/File:Gospers_glider_gun.gif", "Bill Gosper": "/wiki/Bill_Gosper", "Gun (cellular automaton)": "/wiki/Gun_(cellular_automaton)", "Image 8A screenshot of GNU Emacs 22.0.91.1, from Ubuntu\u2019s emacs-snapshot-gtk package.": "/wiki/File:Emacs-screenshot.png", "GNU Emacs": "/wiki/GNU_Emacs", "Ubuntu": "/wiki/Ubuntu", "Image 9Stephen Wolfram is a British-American computer scientist, physicist, and businessman. He is known for his work in computer science, mathematics, and in theoretical physics.": "/wiki/File:Stephen_Wolfram_PR.jpg", "Stephen Wolfram": "/wiki/Stephen_Wolfram", "Image 10Output from a (linearised) shallow water equation model of water in a bathtub. The water experiences 5 splashes which generate surface gravity waves that propagate away from the splash locations and reflect off of the bathtub walls.": "/wiki/File:Shallow_water_waves.gif", "Image 11A lone house. An image made using Blender 3D.": "/wiki/File:Lone_House.jpg", "Image 12Animation of a Non-uniform rational B-spline surface. Modeled and rendered in Cobalt.": "/wiki/File:NURBS_3-D_surface.gif", "Non-uniform rational B-spline": "/wiki/Non-uniform_rational_B-spline", "Cobalt (CAD program)": "/wiki/Cobalt_(CAD_program)", "Image 13This image (when viewed in full size, 1000 pixels wide) contains 1 million pixels, each of a different color.": "/wiki/File:1Mcolors.png", "Pixel": "/wiki/Pixel", "Image 14Partial map of the Internet based on the January 15, 2005 data found on opte.org. Each line is drawn between two nodes, representing two IP addresses. The length of the lines are indicative of the delay between those two nodes. This graph represents less than 30% of the Class C networks reachable by the data collection program in early 2005.": "/wiki/File:Internet_map_1024.jpg", "Internet": "/wiki/Internet", "Image 15GNOME Shell, GNOME Clocks, Evince, gThumb and GNOME Files at version 3.30, in a dark theme": "/wiki/File:GNOME_Shell,_GNOME_Clocks,_Evince,_gThumb,_GNOME_Files_at_version_3.30_(2018-09)_in_Dark_theme.png", "GNOME": "/wiki/GNOME", "Image 16An animation of the quicksort algorithm sorting an array of randomized values": "/wiki/File:Sorting_quicksort_anim.gif", "Quicksort": "/wiki/Quicksort", "Image 17Ada Lovelace was an English mathematician and writer, chiefly known for her work on Charles Babbage's proposed mechanical general-purpose computer, the Analytical Engine. She was the first to recognize that the machine had applications beyond pure calculation, and to have published the first algorithm intended to be carried out by such a machine. As a result, she is often regarded as the first computer programmer.": "/wiki/File:Ada_Lovelace_portrait.jpg", "Ada Lovelace": "/wiki/Ada_Lovelace", "Charles Babbage": "/wiki/Charles_Babbage", "Analytical Engine": "/wiki/Analytical_Engine", "Image 18Grace Hopper at the UNIVAC keyboard, c. 1960. Grace Brewster Murray: American mathematician and rear admiral in the U.S. Navy who was a pioneer in developing computer technology, helping to devise UNIVAC I. the first commercial electronic computer, and naval applications for COBOL (common-business-oriented language).": "/wiki/File:Grace_Hopper_and_UNIVAC.jpg", "Grace Hopper": "/wiki/Grace_Hopper", "Pytest": "/wiki/Pytest", "Workplace impact of artificial intelligence": "/wiki/Workplace_impact_of_artificial_intelligence", "Algorithmic bias": "/wiki/Algorithmic_bias", "Blame in organizations": "/wiki/Blame_in_organizations", "Workplace robotics safety": "/wiki/Workplace_robotics_safety", "Rui Pinto": "/wiki/Rui_Pinto", "Association football": "/wiki/Association_football", "David H. Ahl": "/wiki/David_H._Ahl", "BASIC-8": "/wiki/BASIC-8", "PDP-8": "/wiki/PDP-8", "Digital Equipment Corporation": "/wiki/Digital_Equipment_Corporation", "FOCAL (programming language)": "/wiki/FOCAL_(programming_language)", "Menu (computing)": "/wiki/Menu_(computing)", "Curious George (video game)": "/wiki/Curious_George_(video_game)", "Open Syllabus Project": "/wiki/Open_Syllabus_Project", "Diana Hacker": "/wiki/Diana_Hacker", "Kate L. Turabian": "/wiki/Kate_L._Turabian", "Category puzzle": "/wiki/File:C_Puzzle.png", "Category:Computer programming": "/wiki/Category:Computer_programming", "Category:Algorithms": "/wiki/Category:Algorithms", "Category:Anti-patterns": "/wiki/Category:Anti-patterns", "Category:Computer programming books": "/wiki/Category:Computer_programming_books", "Category:Code refactoring": "/wiki/Category:Code_refactoring", "Category:Concurrent computing": "/wiki/Category:Concurrent_computing", "Category:Programming constructs": "/wiki/Category:Programming_constructs", "Category:Data structures": "/wiki/Category:Data_structures", "Category:Debugging": "/wiki/Category:Debugging", "Category:DLL injection": "/wiki/Category:DLL_injection", "Category:Computer programming folklore": "/wiki/Category:Computer_programming_folklore", "Category:Programming games": "/wiki/Category:Programming_games", "Category:Indexes of computer topics": "/wiki/Category:Indexes_of_computer_topics", "Category:Computer libraries": "/wiki/Category:Computer_libraries", "Category:Live coding": "/wiki/Category:Live_coding", "Category:Method (computer programming)": "/wiki/Category:Method_(computer_programming)", "Category:Program derivation": "/wiki/Category:Program_derivation", "Category:Software optimization": "/wiki/Category:Software_optimization", "Category:Computer programmers": "/wiki/Category:Computer_programmers", "Category:Programming contests": "/wiki/Category:Programming_contests", "Category:Programming idioms": "/wiki/Category:Programming_idioms", "Category:Programming language syntax": "/wiki/Category:Programming_language_syntax", "Category:Programming language topics": "/wiki/Category:Programming_language_topics", "Category:Programming languages": "/wiki/Category:Programming_languages", "Category:Programming paradigms": "/wiki/Category:Programming_paradigms", "Category:Programming principles": "/wiki/Category:Programming_principles", "Category:Quantum programming": "/wiki/Category:Quantum_programming", "Category:Self-hosting software": "/wiki/Category:Self-hosting_software", "Category:Software design": "/wiki/Category:Software_design", "Category:Software design patterns": "/wiki/Category:Software_design_patterns", "Category:Source code": "/wiki/Category:Source_code", "Category:Source code generation": "/wiki/Category:Source_code_generation", "Category:Streaming algorithms": "/wiki/Category:Streaming_algorithms", "Category:Programming tools": "/wiki/Category:Programming_tools", "Category:Visual programming": "/wiki/Category:Visual_programming", "Category:Wikis about programming": "/wiki/Category:Wikis_about_programming", "Category:Computer programming stubs": "/wiki/Category:Computer_programming_stubs", "WikiProjects": "/wiki/File:Society.svg", "Wikipedia:WikiProject Computing": "/wiki/Wikipedia:WikiProject_Computing", "Wikipedia:WikiProject Computer science": "/wiki/Wikipedia:WikiProject_Computer_science", "Wikipedia:WikiProject C/C++": "/wiki/Wikipedia:WikiProject_C/C%2B%2B", "Wikipedia:WikiProject Java": "/wiki/Wikipedia:WikiProject_Java", "Wikipedia:WikiProject Cryptography": "/wiki/Wikipedia:WikiProject_Cryptography", "Wikipedia:WikiProject Software": "/wiki/Wikipedia:WikiProject_Software", "Timeline of computing 2020\u2013present": "/wiki/Timeline_of_computing_2020%E2%80%93present#2023", "Template:Computer science": "/wiki/Template:Computer_science", "Template talk:Computer science": "/wiki/Template_talk:Computer_science", "ACM Computing Classification System": "/wiki/ACM_Computing_Classification_System", "Computer hardware": "/wiki/Computer_hardware", "Printed circuit board": "/wiki/Printed_circuit_board", "Peripheral": "/wiki/Peripheral", "Integrated circuit": "/wiki/Integrated_circuit", "Very Large Scale Integration": "/wiki/Very_Large_Scale_Integration", "System on a chip": "/wiki/System_on_a_chip", "Green computing": "/wiki/Green_computing", "Electronic design automation": "/wiki/Electronic_design_automation", "Hardware acceleration": "/wiki/Hardware_acceleration", "Real-time computing": "/wiki/Real-time_computing", "Dependability": "/wiki/Dependability", "Computer network": "/wiki/Computer_network", "Network architecture": "/wiki/Network_architecture", "Network protocol": "/wiki/Network_protocol", "Networking hardware": "/wiki/Networking_hardware", "Network scheduler": "/wiki/Network_scheduler", "Network performance": "/wiki/Network_performance", "Network service": "/wiki/Network_service", "Middleware": "/wiki/Middleware", "Virtual machine": "/wiki/Virtual_machine", "Software quality": "/wiki/Software_quality", "Programming tool": "/wiki/Programming_tool", "Compiler construction": "/wiki/Compiler_construction", "Domain-specific language": "/wiki/Domain-specific_language", "Modeling language": "/wiki/Modeling_language", "Software framework": "/wiki/Software_framework", "Integrated development environment": "/wiki/Integrated_development_environment", "Software configuration management": "/wiki/Software_configuration_management", "Library (computing)": "/wiki/Library_(computing)", "Software repository": "/wiki/Software_repository", "Control variable (programming)": "/wiki/Control_variable_(programming)", "Software development process": "/wiki/Software_development_process", "Requirements analysis": "/wiki/Requirements_analysis", "Software design": "/wiki/Software_design", "Software construction": "/wiki/Software_construction", "Software deployment": "/wiki/Software_deployment", "Software maintenance": "/wiki/Software_maintenance", "Programming team": "/wiki/Programming_team", "Open-source software": "/wiki/Open-source_software", "Theory of computation": "/wiki/Theory_of_computation", "Model of computation": "/wiki/Model_of_computation", "Automata theory": "/wiki/Automata_theory", "Computability theory": "/wiki/Computability_theory", "Computational complexity theory": "/wiki/Computational_complexity_theory", "Logic in computer science": "/wiki/Logic_in_computer_science", "Algorithm design": "/wiki/Algorithm_design", "Analysis of algorithms": "/wiki/Analysis_of_algorithms", "Algorithmic efficiency": "/wiki/Algorithmic_efficiency", "Discrete mathematics": "/wiki/Discrete_mathematics", "Probability": "/wiki/Probability", "Statistics": "/wiki/Statistics", "Mathematical software": "/wiki/Mathematical_software", "Information theory": "/wiki/Information_theory", "Mathematical analysis": "/wiki/Mathematical_analysis", "Numerical analysis": "/wiki/Numerical_analysis", "Theoretical computer science": "/wiki/Theoretical_computer_science", "Information system": "/wiki/Information_system", "Database": "/wiki/Database", "Computer data storage": "/wiki/Computer_data_storage", "Enterprise information system": "/wiki/Enterprise_information_system", "Social software": "/wiki/Social_software", "Geographic information system": "/wiki/Geographic_information_system", "Decision support system": "/wiki/Decision_support_system", "Process control": "/wiki/Process_control", "Multimedia database": "/wiki/Multimedia_database", "Data mining": "/wiki/Data_mining", "Digital library": "/wiki/Digital_library", "Digital marketing": "/wiki/Digital_marketing", "World Wide Web": "/wiki/World_Wide_Web", "Information retrieval": "/wiki/Information_retrieval", "Computer security": "/wiki/Computer_security", "Cryptography": "/wiki/Cryptography", "Formal methods": "/wiki/Formal_methods", "Security service (telecommunication)": "/wiki/Security_service_(telecommunication)", "Intrusion detection system": "/wiki/Intrusion_detection_system", "Computer security compromised by hardware failure": "/wiki/Computer_security_compromised_by_hardware_failure", "Network security": "/wiki/Network_security", "Information security": "/wiki/Information_security", "Application security": "/wiki/Application_security", "Human\u2013computer interaction": "/wiki/Human%E2%80%93computer_interaction", "Interaction design": "/wiki/Interaction_design", "Social computing": "/wiki/Social_computing", "Ubiquitous computing": "/wiki/Ubiquitous_computing", "Computer accessibility": "/wiki/Computer_accessibility", "Synthography": "/wiki/Synthography", "Concurrency (computer science)": "/wiki/Concurrency_(computer_science)", "Multithreading (computer architecture)": "/wiki/Multithreading_(computer_architecture)", "Multiprocessing": "/wiki/Multiprocessing", "Artificial intelligence": "/wiki/Artificial_intelligence", "Natural language processing": "/wiki/Natural_language_processing", "Knowledge representation and reasoning": "/wiki/Knowledge_representation_and_reasoning", "Automated planning and scheduling": "/wiki/Automated_planning_and_scheduling", "Mathematical optimization": "/wiki/Mathematical_optimization", "Control theory": "/wiki/Control_theory", "Philosophy of artificial intelligence": "/wiki/Philosophy_of_artificial_intelligence", "Distributed artificial intelligence": "/wiki/Distributed_artificial_intelligence", "Machine learning": "/wiki/Machine_learning", "Supervised learning": "/wiki/Supervised_learning", "Unsupervised learning": "/wiki/Unsupervised_learning", "Reinforcement learning": "/wiki/Reinforcement_learning", "Multi-task learning": "/wiki/Multi-task_learning", "Cross-validation (statistics)": "/wiki/Cross-validation_(statistics)", "Photograph manipulation": "/wiki/Photograph_manipulation", "Graphics processing unit": "/wiki/Graphics_processing_unit", "Mixed reality": "/wiki/Mixed_reality", "Virtual reality": "/wiki/Virtual_reality", "Image compression": "/wiki/Image_compression", "Solid modeling": "/wiki/Solid_modeling", "E-commerce": "/wiki/E-commerce", "Enterprise software": "/wiki/Enterprise_software", "Computational mathematics": "/wiki/Computational_mathematics", "Computational physics": "/wiki/Computational_physics", "Computational chemistry": "/wiki/Computational_chemistry", "Computational biology": "/wiki/Computational_biology", "Computational social science": "/wiki/Computational_social_science", "Computational engineering": "/wiki/Computational_engineering", "Health informatics": "/wiki/Health_informatics", "Digital art": "/wiki/Digital_art", "Electronic publishing": "/wiki/Electronic_publishing", "Cyberwarfare": "/wiki/Cyberwarfare", "Electronic voting": "/wiki/Electronic_voting", "Word processor": "/wiki/Word_processor", "Operations research": "/wiki/Operations_research", "Educational technology": "/wiki/Educational_technology", "Document management system": "/wiki/Document_management_system", "Category:Computer science": "/wiki/Category:Computer_science", "Outline of computer science": "/wiki/Outline_of_computer_science", "commons:Category:Computer science": "https://commons.wikimedia.org/wiki/Category:Computer_science", "Template:Software engineering": "/wiki/Template:Software_engineering", "Template talk:Software engineering": "/wiki/Template_talk:Software_engineering", "DevOps": "/wiki/DevOps", "Requirements engineering": "/wiki/Requirements_engineering", "Site reliability engineering": "/wiki/Site_reliability_engineering", "Systems analysis": "/wiki/Systems_analysis", "Data modeling": "/wiki/Data_modeling", "Enterprise architecture": "/wiki/Enterprise_architecture", "Functional specification": "/wiki/Functional_specification", "Software": "/wiki/Software", "Software archaeology": "/wiki/Software_archaeology", "Software architecture": "/wiki/Software_architecture", "Software quality assurance": "/wiki/Software_quality_assurance", "Software verification and validation": "/wiki/Software_verification_and_validation", "Structured analysis": "/wiki/Structured_analysis", "Essential systems analysis": "/wiki/Essential_systems_analysis", "CI/CD": "/wiki/CI/CD", "Agile software development": "/wiki/Agile_software_development", "Aspect-oriented programming": "/wiki/Aspect-oriented_programming", "Ontology (computer science)": "/wiki/Ontology_(computer_science)", "Service-oriented architecture": "/wiki/Service-oriented_architecture", "Systems development life cycle": "/wiki/Systems_development_life_cycle", "Enterprise Unified Process": "/wiki/Enterprise_Unified_Process", "Executable UML": "/wiki/Executable_UML", "Incremental build model": "/wiki/Incremental_build_model", "Iterative and incremental development": "/wiki/Iterative_and_incremental_development", "Software prototyping": "/wiki/Software_prototyping", "Unified Process": "/wiki/Unified_Process", "Scrum (software development)": "/wiki/Scrum_(software_development)", "Spiral model": "/wiki/Spiral_model", "V-Model (software development)": "/wiki/V-Model_(software_development)", "Waterfall model": "/wiki/Waterfall_model", "Extreme programming": "/wiki/Extreme_programming", "ISO/IEC 15504": "/wiki/ISO/IEC_15504", "Capability Maturity Model Integration": "/wiki/Capability_Maturity_Model_Integration", "Data model": "/wiki/Data_model", "Entity\u2013relationship model": "/wiki/Entity%E2%80%93relationship_model", "Function model": "/wiki/Function_model", "Information model": "/wiki/Information_model", "Metamodeling": "/wiki/Metamodeling", "Object model": "/wiki/Object_model", "Systems modeling": "/wiki/Systems_modeling", "View model": "/wiki/View_model", "IDEF": "/wiki/IDEF", "Unified Modeling Language": "/wiki/Unified_Modeling_Language", "Universal Systems Language": "/wiki/Universal_Systems_Language", "Systems Modeling Language": "/wiki/Systems_Modeling_Language", "Computer engineering": "/wiki/Computer_engineering", "Information science": "/wiki/Information_science", "Project management": "/wiki/Project_management", "Risk management": "/wiki/Risk_management", "Systems engineering": "/wiki/Systems_engineering", "commons:Category:Software engineering": "https://commons.wikimedia.org/wiki/Category:Software_engineering", "Category:Software engineering": "/wiki/Category:Software_engineering", "Template:Programming languages": "/wiki/Template:Programming_languages", "Template talk:Programming languages": "/wiki/Template_talk:Programming_languages", "Comparison of programming languages": "/wiki/Comparison_of_programming_languages", "Timeline of programming languages": "/wiki/Timeline_of_programming_languages", "History of programming languages": "/wiki/History_of_programming_languages", "Ada (programming language)": "/wiki/Ada_(programming_language)", "ALGOL": "/wiki/ALGOL", "APL (programming language)": "/wiki/APL_(programming_language)", "Assembly language": "/wiki/Assembly_language", "C++": "/wiki/C%2B%2B", "Classic Visual Basic": "/wiki/Classic_Visual_Basic", "COBOL": "/wiki/COBOL", "Erlang (programming language)": "/wiki/Erlang_(programming_language)", "Forth (programming language)": "/wiki/Forth_(programming_language)", "Fortran": "/wiki/Fortran", "Go (programming language)": "/wiki/Go_(programming_language)", "Haskell": "/wiki/Haskell", "JavaScript": "/wiki/JavaScript", "Kotlin (programming language)": "/wiki/Kotlin_(programming_language)", "Lisp (programming language)": "/wiki/Lisp_(programming_language)", "Lua (programming language)": "/wiki/Lua_(programming_language)", "MATLAB": "/wiki/MATLAB", "ML (programming language)": "/wiki/ML_(programming_language)", "Object Pascal": "/wiki/Object_Pascal", "Pascal (programming language)": "/wiki/Pascal_(programming_language)", "Prolog": "/wiki/Prolog", "R (programming language)": "/wiki/R_(programming_language)", "Ruby (programming language)": "/wiki/Ruby_(programming_language)", "Rust (programming language)": "/wiki/Rust_(programming_language)", "SQL": "/wiki/SQL", "Scratch (programming language)": "/wiki/Scratch_(programming_language)", "Shell script": "/wiki/Shell_script", "Simula": "/wiki/Simula", "Smalltalk": "/wiki/Smalltalk", "Swift (programming language)": "/wiki/Swift_(programming_language)", "Visual Basic (.NET)": "/wiki/Visual_Basic_(.NET)", "List of programming languages": "/wiki/List_of_programming_languages", "List of programming languages by type": "/wiki/List_of_programming_languages_by_type", "Generational list of programming languages": "/wiki/Generational_list_of_programming_languages", "Non-English-based programming languages": "/wiki/Non-English-based_programming_languages", "Portal:Free and open-source software": "/wiki/Portal:Free_and_open-source_software", "Portal:Technology": "/wiki/Portal:Technology", "Portal:Engineering": "/wiki/Portal:Engineering", "Portal:Science": "/wiki/Portal:Science", "Portal:Linux": "/wiki/Portal:Linux", "Portal:Amiga": "/wiki/Portal:Amiga", "Portal:Internet": "/wiki/Portal:Internet", "Portal:Electronics": "/wiki/Portal:Electronics", "Portal:Mathematics": "/wiki/Portal:Mathematics", "Portal:Video Games": "/wiki/Portal:Video_Games", "Wikimedia Foundation": "/wiki/Wikimedia_Foundation", "commons:Special:Search/Category:Computer programming": "https://commons.wikimedia.org/wiki/Special:Search/Category:Computer_programming", "wikibooks:Special:Search/Computer programming": "https://en.wikibooks.org/wiki/Special:Search/Computer_programming", "wikidata:Special:Search/Computer programming": "https://www.wikidata.org/wiki/Special:Search/Computer_programming", "wikinews:Special:Search/Computer programming": "https://en.wikinews.org/wiki/Special:Search/Computer_programming", "wikiquote:Special:Search/Computer programming": "https://en.wikiquote.org/wiki/Special:Search/Computer_programming", "wikisource:Special:Search/Computer programming": "https://en.wikisource.org/wiki/Special:Search/Computer_programming", "wikiversity:Special:Search/Computer programming": "https://en.wikiversity.org/wiki/Special:Search/Computer_programming", "wiktionary:Special:Search/Computer programming": "https://en.wiktionary.org/wiki/Special:Search/Computer_programming", "Wikipedia:Portal": "/wiki/Wikipedia:Portal", "List of all portals": "/wiki/Wikipedia:Contents/Portals", "The arts portal": "/wiki/Portal:The_arts", "Portal:The arts": "/wiki/Portal:The_arts", "Biography portal": "/wiki/Portal:Biography", "Portal:Biography": "/wiki/Portal:Biography", "Current events portal": "/wiki/Portal:Current_events", "Portal:Current events": "/wiki/Portal:Current_events", "Geography portal": "/wiki/Portal:Geography", "Portal:Geography": "/wiki/Portal:Geography", "History portal": "/wiki/Portal:History", "Portal:History": "/wiki/Portal:History", "Mathematics portal": "/wiki/Portal:Mathematics", "Science portal": "/wiki/Portal:Science", "Society portal": "/wiki/Portal:Society", "Portal:Society": "/wiki/Portal:Society", "Technology portal": "/wiki/Portal:Technology", "Random portal": "/wiki/Special:RandomInCategory/All_portals", "WikiProject Portals": "/wiki/Wikipedia:WikiProject_Portals", "Wikipedia:WikiProject Portals": "/wiki/Wikipedia:WikiProject_Portals"}