{"Name": "Ramakrishnan-Database-Management-Systems-3rd-Edition.pdf", "Pages": {"0": "", "1": "It'syourchoice!\nNewModular Organization!\n3\nRelational Model\nSQLDDL\n27\nInfonnation Retrieval\nandXMLData\nManagement2\nERModel\nConceptual DesignAppncatirms emphasis: Acoursethatcoverstheprinciples ofdatabase systemsandemphasizes\nhowtheyareusedindeveloping data-intensive applications. .\nf,;~tY'W';Yl~t';;:;,~7' Acoursethathasastrongsystemsemphasis andassumes that studentshave\ngoodprogramming skillsinCandC++.\nHybridcourse: Modular organization allowsyoutoteachthecoursewiththeemphasis youwant.\n......- :=Dependencies\n~~~\nIvI\nII\nIV\nVIrIII", "2": "j\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj\nj", "3": "DATABASE MANAGEMENT\nSYSTEMS", "4": "", "5": "DATABASE MANAGEMENT\nSYSTEMS\nThirdEdition\nRaghuRamakrishnan\nUniversity ofWisconsin\nMadison, Wisconsin, USA\u2022\nJohannes Gehrke\nCornellUniversity\nIthaca,NewYork,USA\nBoston BurrRidge,ILDubuque, IAMadison, WINewYorkSanFrancisco St.Louis\nBangkok Bogota Caracas KualaLumpur Lisbon London Madrid MexicoCity\nMilanMontreal NewDelhiSantiago SeoulSingapore Sydney TaipeiToronto", "6": "McGraw-Hill HigherEducationtz\nALhvisionofTheMcGraw-Hill Companies\nDATABASE MANAGEMENT SYSTEMS, THIRDEDITION\nInternational Edition2003\nExclusive rightsbyMcGraw-Hill Education (Asia),formanufacture andexport.This\nbookcannotbere-exported fromthecountrytowhichitissoldbyMcGraw-Hill. The\nInternational Editionisnotavailable inNorthAmerica.\nPublished byMcGraw-Hili, abusiness unitofTheMcGraw-Hili Companies, Inc.,1221\nAvenueoftheAmericas, NewYork,NY10020.Copyright \u00a92003, 2000, 1998byThe\nMcGraw-Hill Companies, Inc.Allrightsreserved. Nopartofthispublication maybe\nreproduced ordistributed inanyformorbyanymeans,orstoredinadatabase orretrieval\nsystem, without thepriorwrittenconsentofTheMcGraw-Hill Companies, Inc.,\nincluding, butnotlimitedto,inanynetwork orotherelectronic storageortransmission,\norbroadcast fordistance learning.\nSomeancillaries, including electronic andprintcomponents, maynotbeavailable to\ncustomers outsidetheUnitedStates.\n1009 08 07 06050403\n2009 08 07 060504\nCTFBJE\nLibrary ofCongress Cataloging-in-Publication Data\nRamakrishnan, Raghu\nDatabase management systems/RaghuRamakrishnan, Johannes Gehrke.~3rd ed.\np.cm.\nIncludes index.\nISBN0-07-246563-8-ISBN 0-07-115110-9 (ISE)\n1.Database management. 1.Gehrke,Johannes. II.Title.\nQA76.9.D3 R2372003\n005.74--Dc21 2002075205\nCIP\nWhenordering thistitle,useISBN0-07-123151-X\nPrintedinSingapore\nwww.mhhe.com", "7": "ToApu,Ketan,andVivekwithlove\nToKeikoandElisa", "8": "1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1", "9": "PREFACE\nPartIFOUNDATIONSCONTENTS\nXXIV\n1\n1\n2OVERVIEW OFDATABASE SYSTEMS\n1.1Managing Data\n1.2AHistorical Perspective\n1.3FileSystems versusaDBMS\n1.4Advantages ofaDBMS\n1.5Describing andStoringDatainaDBMS\n1.5.1TheRelational Model\n1.5.2LevelsofAbstraction inaDBMS\n1.5.3DataIndependence\n1.6Queries inaDBMS\n1.7Transaction Management\n1.7.1Concurrent Execution ofTransactions\n1.7.2Incomplete Transactions andSystemCrashes\n1.7.3PointstoNote\n1.8Structure ofaDBMS\n1.9PeopleWhoWorkwithDatabases\n1.10ReviewQuestions\nINTRODUCTION TODATABASE DESIGN\n2.1Database DesignandERDiagrams\n2.1.1BeyondERDesign\n2.2Entities, Attributes, andEntitySets\n2.3Relationships andRelationship Sets\n2.4Additional Features oftheERModel\n2.4.1KeyConstraints\n2.4.2Participation Constraints\n2.4.3WeakEntities\n2.4.4ClassHierarchies\n2.4.5Aggregation\nvii3\n4\n6\n8\n9\n10\n11\n12\n15\n16\n17\n17\n18\n19\n19\n21\n22\n25\n26\n27\n28\n29\n32\n32\n34\n35\n37\n39", "10": "Vlll DATABASE \"NIANAGEMENT SYSTEivlS\nPreliminaries\nRelational Algebra\n4.2.1Selection andProjection\n4.2.2SetOperations3\n42.5Conceptual DesignWiththeERModel\n2..5.1EntityversusAttribute\n2.5.2EntityversusRelationship\n2.5.3BinaryversusTernary Relationships\n2..5.4Aggregation versusTernary Relationships\n2.6Conceptual DesignforLargeEnterprises\n2.7TheUnifiedModeling Language\n2.8CaseStudy:TheInternet Shop\n2.8.1Requirements Analysis\n2.8.2Conceptual Design\n2.9ReviewQuestions\nTHERELATIONAL MODEL\n3.1Introduction totheRelational Model\n3.1.1Creating andModifying Relations UsingSQL\n3.2Integrity Constraints overRelations\n3.2.1KeyConstraints\n:3.2.2Foreign KeyConstraints\n3.2.3General Constraints\n3.3Enforcing Integrity Constraints\n3.3.1Transactions andConstraints\n3.4Querying Relational Data\n3.5LogicalDatabase Design:ERtoRelational\n3.5.1EntitySetstoTables\n3.5.2Relationship Sets(without Constraints) toTables\n3.5.3Translating Relationship SetswithKeyConstraints\n3.5.4Translating Relationship SetswithParticipation Constraints\n3.5.5Translating WeakEntitySets\n3.5.6cn'anslating ClassHierarchies\n3.5.7Translating ERDiagrams withAggregation\n3.5.8ERtoRelational: Additional Examples\n:3.6Introduction toViews\n3.6.1Views,DataIndependence, Security\n3.6.2Updates onViews\n:3.7Destroying/ Altering TablesandViews\n:3.8CaseStudy:TheInternet Store\n:3.9ReviewQuestions\nRELATIONAL ALGEBRA ANDCALCULUS\n4.1\n4.240\n41\n42\n43\n45\n46\n47\n49\n49\n50\n51\n57\n59\n62\n63\n64\n66\n68\n69\n72\n73\n74\n75\n76\n78\n79\n82\n83\n84\n85\n86\n87\n88\n91\n92\n94\n100\n101\n102\n103\n104", "11": "Contents lX\n~\n4.2.3Renaming 106\n4.2.4Joins 107\n4.2.5Division 109\n4.2.61\\'loreExamples ofAlgebra Queries 110\n4.3Relational Calculus 116\n4.3.1TupleRelational Calculus 117\n4.3.2Domain Relational Calculus 122\n4.4Expressive PowerofAlgebra andCalculus 124\n4.5ReviewQuestions 126\n5SQL:QUERIES, CONSTRAINTS, TRIGGERS 130\n5.1Overview 131\n5.1.1Chapter Organization 132\n.5.2TheFormofaBasicSQLQuery 133\n5.2.1Examples ofBasicSQLQueries 138\n5.2.2Expressions andStringsintheSELECT Command 139\n5.3UNION, INTERSECT, andEXCEPT 141\n5.4NestedQueries 144\n5.4.1Introduction toNestedQueries 145\n5.4.2Correlated NestedQueries 147\n5.4.3Set-Comparison Operators 148\n5.4.4MoreExamples ofNestedQueries 149\n5.5Aggregate Operators 151\n5.5.1TheGROUP BYandHAVING Clauses 154\n5.5.2MoreExamples ofAggregate Queries 158\n5.6NullValues 162\n5.6.1Comparisons UsingNullValues 163\n5.6.2LogicalConnectives AND,OR,andNOT 163\n5.6.3Impact 011SQLConstructs 163\n5.6.4OuterJoins 164\n5.6.5Disallowing NullValues 165\n5.7Complex Integrity Constraints inSQL 165\n5.7.1Constraints overaSingleTable 165\n5.7.2Domain Constraints andDistinct Types 166\n5.7.3Assertions: ICsoverSeveralTables 167\n5.8Triggers andActiveDatabases 168\n5.8.1Examples ofTriggers inSQL 169\n5.9Designing ActiveDatabases 171\n5.9.1WhyTriggers CanBeHardtoUnderstand 171\n5.9.2Constraints versus Triggers 172\n5.9.:3OtherUsesofTriggers 172\n5.10ReviewQuestions 17:3", "12": "x DATABASE J\\;1ANAGEMENT SYSTEMS\nPartIIAPPLICATION DEVELOPMENT 183\n6DATABASE APPLICATION DEVELOPMENT 185\n6.1Accessing Databases fromApplications 187\n6.1.1Embedded SQL 187\n6.1.2Cursors 189\n6.1.3Dynamic SQL 194\n6.2AnIntroduction toJDBC 194\n6.2.1Architecture 196\n6.3JDBCClassesandInterfaces 197\n6.3.1JDBCDriverManagement 197\n6.3.2Connections 198\n6.3.3Executing SQLStatements 200\n6.3.4ResultSets 201\n6.3.5Exceptions andWarnings 203\n6.3.6Examining Database Metadata 204\n6.4SQLJ 206\n6.4.1Writing SQLJCode 207\n6.5StoredProcedures 209\n6.5.1Creating aSimpleStoredProcedure 209\n6.5.2CallingStoredProcedures 210\n6.5.3SQL/PSM 212\n6.6CaseStudy:TheInternet BookShop 214\n6.7ReviewQuestions 216\n7INTERNET APPLICATIONS 220\n7.1Introduction 220\n7.2Internet Concepts 221\n7.2.1Uniform Resource Identifiers 221\n7.2.2TheHypertext Transfer Protocol (HTTP) 223\n7.3HTMLDocuments 226\n7.4XMLDocuments 227\n7.4.1Introduction toXML 228\n7.4.2XMLDTDs 231\n7.4.3Domain-Specific DTDs 234\n7.5TheThree-Tier Application Architecture 236\n7.5.1Single-TierandClient-Server Architectures 236\n7.5.2Three-TierArchitectures 239\n7.5.3Advantages oftheThree-Tier Architecture 241\n7.6ThePresentation Layer 242\n7.6.1HTrvlLForms 242\n7.6.2JavaScript 245\n7.6.3StyleSheets 247", "13": "Contents :\u00bb:i\n7.7TheMiddleTier\n7.7.1CGI:TheCommon Gateway Interface\n7.7.2Application Servers\n7.7.3Servlets\n7.7.4JavaServer Pages\n7.7.5Maintaining State\n7.8CaseStudy:TheInternet BookShop\n7.9ReviewQuestions251\n251\n252\n254\n256\n258\n261\n264\nPartIIISTORAGE ANDINDEXING 271\n273\n274275277\n277\n278\n279\n280\n282\n283\n284\n285\n287\n288\n289\n290\n291\n292\n292\n295299\n299DataonExternal Storage\nFileOrganizations andIndexing\n8.2.1Clustered Indexes\n8.2.2Primary andSecondary Indexes\nIndexDataStructures\n8.3.1Hash-Based Indexing\n8.3.2Tree-Based Indexing\nComparison ofFileOrganizations\n8.4.1CostModel\n8.4.2HeapFiles\n8.4.3SortedFiles\n8.4.4Clustered Files\n8.4.5HeapFilewithUnclustered TreeIndex\n8.4.6HeapFileWithUnclustered HashIndex\n8.4.7Comparison ofI/OCosts\nIndexesandPerformance Tuning\n8..5.1ImpactoftheWorkload\n8.5.2Clustered IndexOrganization\n8.5.3Composite SearchKeys\n8.5.4IndexSpecification inSQL:1999\nReviewQuestions 8.68.58.48.3OVERVIEW OFSTORAGE ANDINDEXING\n8.1\n8.28\n9STORING DATA:DISKSANDFILES\n9.1TheMemory Hierarchy\n9.1.1Magnetic Disks\n9.1.2Performance Implications ofDiskStructure\n9.2Redundant ArraysofIndependent Disks\n9.2.1DataStriping\n9.2.2Redundancy\n9.2.3LevelsofRedundancy\n9.2.4ChoiceofRAIDLevels304\n305\n306\n308\n309\n310\n311\n312\n316", "14": "Xll DATABASE ~/IANAGE1'vIENT SYSTEMS\n9.3DiskSpaceManagement\n9.3.1Keeping TrackofFreeBlocks\n9.3.2UsingasFileSystems toil/ranage DiskSpace\n9.4BufferManager\n9.4.1BufferReplacement Policies\n9.4.2BufferManagement inDBMSversusOS\n9.5FilesofRecords\n9.5.1Implementing HeapFiles\n9.6PageFormats\n9.6.1Fixed-Length Records\n9.6.2Variable-Length Records\n9.7RecordFormats\n9.7.1Fixed-Length Records\n9.7.2Variable-Length Records\n9.8ReviewQuestions\n10TREE-STRUCTURED INDEXING\n10.1Intuition ForTreeIndexes\n10.2Indexed Sequential AccessMethod (ISAM)\n10.2.1Overflow Pages,Locking Considerations\n10.3B+Trees:ADynamic IndexStructure\n10.3.1FormatofaNode\n10.4Search\n10.5Insert\n10.6Delete\n10.7Duplicates\n10.8B+TreesinPractice\n10.8.1KeyCompression\n10.8.2Bulk-Loading aB+Tl'ee\n10.8.3TheOrderConcept\n10.8.4TheEffectofInsertsandDeletesonRids\n10.9ReviewQuestions\n11HASH-BASED INDEXING\n11.1StaticHashing\n11.1.1Notation andConventions\n11.2Extendible HCkshing\n11.3 Line~rHashing\n11.4Extendible vs.LinearHa\"lhing\nn.5ReviewQuestions\nPartIVQUERY EVALUATION:316\n317\n317318\n320\n322\n324\n324\n326\n327\n328\n330\n331\n331\n333\n338\n339\n341\n344\n344\n346\n347348\n352\n356\n358\n358\n360\n363\n364\n364\n370\n371\n373\n373\n379\n384\n385\n391", "15": "Contents\n12OVERVIEW OFQUERY EVALUATION\n12.1TheSystemCatalog\n12.1.1Information intheCatalog\n12.2Introduction toOperator Evaluation\n12.2.1ThreeCommon Techniques\n12.2.2AccessPaths\n12.3Algorithms forRelational Operations\n12.3.1Selection\n12.3.2Projection\n12.3.3Join\n12.3.4OtherOperations\n12.4Introduction toQueryOptimization\n12.4.1QueryEvaluation Plans\n12.4.2Multi-operator Queries: Pipelined Evaluation\n12.4.3TheIterator Interface\n12.5Alternative Plans:AMotivating Example\n12.5.1Pushing Selections\n12.5.2UsingIndexes\n12.6WhataTypical Optimizer Does\n12.6.1Alternative PlansConsidered\n12.6.2Estimating theCostofaPlan\n12.7ReviewQuestions\n13EXTERNAL SORTING\n13.1WhenDoesaDBMSSortData?\n13.2ASimpleTwo-WayMergeSort\n13.3External MergeSort\n13.3.1Minimizing theNumber ofRuns\n13.4Minimizing I/OCostversusNumber ofI/Os\n13.4.1BlockedI/O\n13.4.2DoubleBuffering\n13.5UsingB+TreesforSorting\n13.5.1Clustered Index\n1:3.5.2Unclustered Index\n13.6ReviewQuestions\n14EVALUATING RELATIONAL OPERATORS\n14.1The'Selection Operation\n14.1.1NoIndex,UnsortedData\n14.1.2NoIndex,SortedData\n14.1.:3B+TreeIndex\n14.1.4HashIndex,Equality Selection\n14.2General Selection Conditions393\n:394\n:39.5\n397\n398\n398\n400\n401\n401\n402\n404\n404\n405\n407\n408\n409\n409\n411\n414\n414\n416\n417\n421\n422\n423\n424\n428\n430\n430\n432\n4:33\n433\n434\n436\n439\n441\n441\n442\n442\n444\n444", "16": "XIV DATABASE ~11ANAGEMENT SYSTEMS\n14.2.1CNFandIndexMatching\n14.2.2Evaluating Selections without Disjunction\n14.2.3Selections withDisjunction\n14.3TheProjection Operation\n14.3.1Projection BasedonSorting\n14.3.2Projection BasedonHashing\n14.3.3SortingVersusHashing forProjections\n14.3.4UseofIndexes forProjections\n14.4TheJoinOperation\n14.4.1NestedLoopsJoin\n14.4.2Sort-Merge Join\n14.4.3HashJoin\n14.4.4General JoinConditions\n14.5TheSetOperations\n14.5.1SortingforUnionandDifference\n14.5.2Hashing forUnionandDifference\n14.6Aggregate Operations\n14.6.1Implementing Aggregation byUsinganIndex\n14.7TheImpactofBuffering\n14.8ReviewQuestions445\n445\n446\n447\n448\n449\n451\n452\n452\n454\n458\n463\n467\n468\n469\n469\n469\n471\n471\n472\n15ATYPICAL RELATIONAL QUERY OPTIMIZER 478\n15.1Translating SQLQueries intoAlgebra 479\n15.1.1Decomposition ofaQueryintoBlocks 479\n15.1.2AQueryBlockasaRelational Algebra Expression 481\n15.2Estimating theCostofaPlan 482\n15.2.1Estimating ResultSizes 483\n15.3Relational Algebra Equivalences 488\n15.3.1Selections 488\n15.3.2Projections 488\n15.3.3Cross-Products andJoins 489\n15.3.4Selects,Projects, andJoins 490\n15.3.5OtherEquivalences 491\n15.4Enumeration ofAlternative Plans 492\n15.4.1Single-Relation Queries 492\n15.4.2Multiple-Relation Queries 496\nIS.5NestedSubqueries 504\n15.6TheSystemROptimizer 506\n15.7OtherApproaches toQueryOptimization S07\n15.8ReviewQuestions 507\nPartVTRANSACTION MANAGEMENT 517", "17": "Contents XfV\n16OVERVIEW OFTRANSACTION MANAGEMENT 519\n16.1TheACIDProperties 520\n16.1.1Consistency andIsolation 521\n16.1.2Atomicity andDurability 522\n16.2Transactions andSchedules 523\n16.3Concurrent Execution ofTransactions 524\n16.3.1rvlotivation forConcurrent Execution 524\n16.3.2Serializability 525\n16.3.3Anomalies DuetoInterleaved Execution 526\n16.3.4Schedules Involving Aborted Transactions 529\n16.4Lock-Based Concurrency Control 530\n16.4.1StrictTwo-Phase Locking (Strict2PL) 531\n16.4.2Deadlocks 533\n16.5Performance ofLocking 533\n16.6Transaction Support inSQL 535\n16.6.1Creating andTerminating Transactions 535\n16.6.2WhatShouldWeLock? 537\n16.6.3Transaction Characteristics inSQL 538\n16.7Introduction toCrashRecovery 540\n16.7.1Stealing FramesandForcingPages 541\n16.7.2Recovery-Related StepsduringNormalExecution 542\n16.7.3Overview ofARIES 543\n16.7.4Atomicity: Implementing Rollback 543\n16.8ReviewQuestions 544\n17CONCURRENCY CONTROL 549\n17.12PL,Serializability, andRecoverability 550\n17.1.1ViewSerializability 553\n17.2Introduction toLockManagement 553\n17.2.1Implementing LockandUnlockRequests 554\n17.3LockConversions 555\n17.4DealingWithDeadlocks 556\n17.4.1Deadlock Prevention 558\n17.5Specialized Locking Techniques 559\n17.5.1Dynamic Databases andthePhantom Problem 560\n17.5.2Concurrency Control inB+Trees 561\n17.5.3Multiple-Granularity Locking 564\n17.6ConClurency Controlwithout Locking 566\n17.6.1Optimistic Concurrency Control 566\n17.6.2Timestamp-Based Concurrency Control 569\n17.6.3Multiversion Concurrency Control 572\n17.7RevievQuestions 57:3", "18": "XVI DATABASE rvlANAGEMENT SYSTEMS\n18CRASH RECOVERY\n18.1Introduction toARIES\n18.2TheLog\n18.3OtherRecovery-Related Structures\n18.4TheWrite-Ahead LogProtocol\n18.5Checkpointing\n18.6Recovering fromaSystemCrash\n18.6.1Analysis Phase\n18.6.2RedoPhase\n18.6.3UndoPhase\n18.7MediaRecovery\n18.8OtherApproaches andInteraction withConcurrency Control\n18.9ReviewQuestions\nPartVIDATABASE DESIGN ANDTUNING579\n580\n582\n585\n586\n587\n587\n588\n590\n592\n595\n596\n597\n603\n19SCHEMA REFINEMENT ANDNORMAL FORMS 605\n19.1Introduction toSchema Refinement 606\n19.1.1Problems CausedbyRedundancy 606\n19.1.2Decompositions 608\n19.1.3Problems RelatedtoDecomposition 609\n19.2Functional Dependencies 611\n19.3Reasoning aboutFDs 612\n19.3.1Closure ofaSetofFDs 612\n19.3.2Attribute Closure 614\n19.4NormalForms 615\n19.4.1Boyce-Codd NormalForm 615\n19.4.2ThirdNormalForm 617\n19.5Properties ofDecompositions 619\n19.5.1Lossless-Join Decomposition 619\n19.5.2Dependency-Preserving Decomposition 621\n19.6Normalization 622\n19.6.1Decomposition intoBCNF 622\n19.6.2Decomposition into3NF 625\n19.7Schema Refinement inDatabase Design 629\n19.7.1Constraints onanEntitySet 630\n19.7.2Constraints onaRelationship Set 630\n19.7.3Identifying Attributes ofEntities 631\n19.7.4Identifying EntitySets 6:33\n19.8OtherKindsofDependencies 6:33\n19.8.1Multivalued Dependencies 6:34\n19.8.2FourthNormalForm 6:36\n19.8.:3JoinDependencies (1:38", "19": "Contents XVll\n19.8.4FifthNormalForm 6:38\n19.8.5Inclusion Dependencies 639\n19.9CaseStudy:TheInternet Shop 640\n19.10ReviewQuestions 642\n20PHYSICAL DATABASE DESIGN ANDTUNING 649\n20.1Introduction toPhysical Database Design 650\n20.1.1Database Workloads 651\n20.1.2Physical DesignandTuningDecisions 652\n20.1.3NeedforDatabase Tuning 653\n20.2Guidelines forIndexSelection 653\n20.3BasicExamples ofIndexSelection 656\n20.4Clustering andIndexing 658\n20.4.1Co-clustering TwoRelations 660\n20.5IndexesthatEnableIndex-Only Plans 662\n20.6ToolstoAssistinIndexSelection 663\n20.6.1Automatic IndexSelection 663\n20.6.2HowDoIndexTuningWizards Work? 664\n20.7Overview ofDatabase Tuning 667\n20.7.1TuningIndexes 667\n20.7.2TuningtheConceptual Schema 669\n20.7.3TuningQueriesandViews 670\n20.8Choices inTuningtheConceptual Schema 671\n20.8.1Settling foraWeaker NormalForm 671\n20.8.2Denormalization 672\n20.8.3ChoiceofDecomposition 672\n20.8.4Vertical Partitioning ofBCNFRelations 674\n20.8.5Horizontal Decomposition 674\n20.9Choices inTuningQueriesandViews 675\n20.10ImpactofConcurrency 678\n20.10.1Reducing LockDurations 678\n20.10.2Reducing HotSpots 679\n20.11CaseStudy:TheInternet Shop 680\n20.11.11\\ming theDatab~'ie 682\n20.12DBMSBenchmarking 682\n20.12.1Well-Known DBMSBenchmarks 683\n20.12.2UsingaBenchmark 684\n20.13ReviewQuestions 685\n21SECURITY ANDAUTHORIZATION 692\n21.1Introduction toDatab~\"e Security 693\n21.2AccessControl 694\n21.3Discretionary AccessControl 695", "20": "xviii DATABASE ~/IANAGEMENT SYSTEMS\n21.3.1GrantandRevokeonViewsandIntegrity Constraints\n21.4Mandatory AccessControl\n21.4.1Multilevel Relations andPolyinstantiation\n21.4.2CovertChannels, DoDSecurity Levels\n21.5Security forInternet Applications\n21.5.1Encryption\n21.5.2Certifying Servers: TheSSLProtocol\n21.5.3DigitalSignatures\n21.6Additional IssuesRelatedtoSecurity\n21.6.1RoleoftheDatabase Administrator\n21.6.2Security inStatistical Databases\n21.7DesignCaseStudy:TheInternet Store\n21.8ReviewQuestions\nPartVIIADDITIONAL TOPICS\n22PARALLEL ANDDISTRIBUTED DATABASES\n22.1Introduction\n22.2Architectures forParallel Databases\n22.3Parallel QueryEvaluation\n22.3.1DataPartitioning\n22.3.2Parallelizing Sequential Operator Evaluation Code\n22.4Parallelizing Individual Operations\n22.4.1BulkLoading andScanning\n22.4.2Sorting\n22.4.3Joins\n22.5Parallel QueryOptimization\n22.6Introduction toDistributed Databases\n22.6.1TypesofDistributed Databases\n22.7Distributed DBMSArchitectures\n22.7.1Client-Server Systems\n22.7.2Collaborating ServerSystems\n22.7.3Midclleware Systems\n22.8StoringDatainaDistributed DBMS\n22.8.1Fragmentation\n22.8.2Replication\n22.9Distributed Catalog Management\n22.9.1Naming Objects\n22.9.2Catalog Structure\n22.9.3Distributed DataIndependence\n22.10Distributed QueryProcessing\n22.1.0.1Nonjoin Queries inaDistributed DBMS\n22.10.2JoinsinaDistributed DBMS704\n705\n707\n708\n709\n709\n712\n713\n714\n714\n715\n716\n718\n723\n725\n726\n727\n728\n730\n730\n731\n731\n732\n732\n735\n736\n737\n737\n738\n738\n739\n739\n739\n741\n741\n741\n742\n743\n743\n744\n745", "21": "Contents J6x\n22.10.3Cost-Based QueryOptimization 749\n22.11Updating Distributed Data 750\n22.11.1Synchronous Replication 750\n22.11.2Asynchronous Replication 751\n22.12Distributed Transactions 755\n22.13Distributed Concurrency Control 755\n22.13.1Distributed Deadlock 756\n22.14Distributed Recovery 758\n22.14.1NormalExecution andCommit Protocols 758\n22.14.2RestartafteraFailure 760\n22.14.3Two-Phase Commit Revisited 761\n22.14.4Three-Phase Commit 762\n22.15ReviewQuestions 763\n23OBJECT-DATABASE SYSTEMS 772\n23.1Motivating Example 774\n23.1.1NewDataTypes 775\n23.1.2Manipulating theNewData 777\n23.2Structured DataTypes 779\n23.2.1Collection Types 780\n23.3Operations onStructured Data 781\n23.3.1Operations onRows 781\n23.3.2Operations onArrays 781\n23.3.3Operations onOtherCollection Types 782\n23.3.4Queries OverNestedCollections 783\n23.4Encapsulation andADTs 784\n23.4.1Defining Methods 785\n23.5Inheritance 787\n23.5.1Defining TypeswithInheritance 787\n23.5.2Binding Methods 788\n23.5.3Collection Hierarchies 789\n23.6Objects, aIDs,andReference Types 789\n23.6.1Notions ofEquality 790\n23.6.2Dereferencing Reference Types 791\n23.6.3URLsandOIDsinSQL:1999 791\n23.7Database DesignforanORDBJ\\'IS 792\n23.7.1Collection TypesandADTs 792\n2~).7.2ObjectIdentity 795\n23.7.3Extending theERModel 796\n23.7.4UsingNestedCollections 798\n2:3.8ORDBMS Implementation Challenges 799\n23.8.]StorageandAccessMethods 799\n23.8.2QueryProcessing 801", "22": "DATABASE ~/IANAGEMENT SYSTEl\\,fS\n23.8.3QueryOptimization\n23.9OODBMS\n23.9.1TheODMGDataModelandODL\n23.9.2OQL\n23.10Comparing RDBMS, OODBl'vlS, andORDBMS\n23.10.1RDBMS versusORDBMS\n23.10.2OODBMS versusORDBMS: Similarities\n23.10.3OODBMS versusORDBMS: Differences\n23.11ReviewQuestions80;3\n805\n805\n807\n809\n809\n809\n810\n811\n24DEDUCTIVE DATABASES 817\n24.1Introduction toRecursive Queries 818\n24.1.1Datalog 819\n24.2Theoretical Foundations 822\n24.2.1LeastModelSemantics 823\n24.2.2TheFixpoint Operator 824\n24.2.3SafeDatalog Programs 825\n24.2.4LeastModel=LeastFixpoint 826\n24.3Recursive QuerieswithNegation 827\n24.3.1Stratification 828\n24.4FromDatalog toSQL 831\n24.5Evaluating Recursive Queries 834\n24.5.1Fixpoint Evaluation without Repeated Inferences 835\n24.5.2Pushing Selections toAvoidIrrelevant Inferences 837\n24.5.3TheMagicSetsAlgorithm 838\n24.6ReviewQuestions 841\n25DATAWAREHOUSING ANDDECISION SUPPORT 846\n25.1Introduction toDecision Support 848\n25.2OLAP:Multidimensional DataModel 849\n25.2.1Multidimensional Database Design 853\n25.:3Multidimensional Aggregation Queries 854\n25.3.1ROLLUP andCUBEinSQL:1999 856\n25.4Window Queries inSQL:1999 859\n25.4.1Framing aWindow 861\n25.4.2NewAggregate Functions 862\n25.5Findipg Answers Quickly 862\n25.5.1TopNQueries 863\n25.5.2OnlineAggregation 864\n25.6Implementation Techniques forOLAP 865\n25.6.1Bitmap Indexes 866\n25.6.2JoinIndexes 868\n25.6.3FileOrganizations 869", "23": "Contents\n25.7Data'Warehousing\n25.7.1Creating andIvlaintaining aWarehouse\n25.8ViewsandDecision Support\n25.8.1Views,OLAP,and\\Varehousing\n25.8.2Queries overViews\n25.9ViewMaterialization\n25.9.1IssuesinViewMaterialization\n25.10Maintaining Materialized Views\n2.5.10.1Incremental ViewMaintenance\n25.10.2Maintaining Warehouse Views\n25.10.3WhenShouldWeSynchronize Views?\n25.11ReviewQuestions870\n871\n872\n872\n873\n873\n874\n876\n876\n879881\n882\n26DATAMINING 889\n26.1Introduction toDataMining 890\n26.1.1TheKnowledge Discovery Process 891\n26.2Counting Co-occurrences 892\n26.2.1Frequent Itemsets 892\n26.2.2IcebergQueries 895\n26.3MiningforRules 897\n26.3.1Association Rules 897\n26.3.2AnAlgorithm forFinding Association Rules 898\n26.3.3Association RulesandISAHierarchies 899\n26.3.4Generalized Association Rules 900\n26.3.5Sequential Patterns 901\n26.3.6TheUseofAssociation RulesforPrediction 902\n26.3.7Bayesian Networks 903\n26.3.8Classification andRegression Rules 904\n26.4Tree-Structured Rules 906\n26.4.1Decision Trees 907\n26.4.2AnAlgorithm toBuildDecision Trees 908\n26.5Clustering 911\n26.5.1AClustering Algorithm 912\n26.6Similarity SearchoverSequences 913\n26.6.1AnAlgorithm toFindSimilarSequences 915\n26.7Incremental MiningandDataStreams 916\n26.7.1Incremental Maintenance ofFrequent Itemsets 918\n26.8Additional DataMiningTasks 920\n26.9ReviewQuestions 920\n27INFORMATION RETRIEVAL ANDXMLDATA 926\n27.1Colliding Worlds: Databa'3es, IR,andXML\n27.1.1DBMSversusIRSystems927\n928", "24": "xxii DATABASE l\\1ANAGEMENT SYSTEMS\n27.2Introduction toInformation Retrieval 929\n27.2.1VectorSpaceModel 930\n27.2.2TFjIDFWeighting ofTerms 931\n27.2.3Ranking Document Similarity 932\n27.2.4:Measuring Success: Precision andRecall 934\n27.3Indexing forTextSearch 934\n27.3.1Inverted Indexes 935\n27.3.2Signature Files 937\n27.4WebSearchEngines 939\n27.4.1SearchEngineArchitecture 939\n27.4.2UsingLinkInformation 940\n27.5Managing TextinaDBMS 944\n27.5.1Loosely Coupled Inverted Index 945\n27.6ADataModelforXML 945\n27.6.1Motivation forLooseStructure 945\n27.6.2AGraphModel 946\n27.7XQuery: Querying XMLData 948\n27.7.1PathExpressions 948\n27.7.2FLWRExpressions 949\n27.7.3Ordering ofElements 951\n27.7.4Grouping andGeneration ofCollection Values 951\n27.8Efficient Evaluation ofXMLQueries 952\n27.8.1StoringXMLinRDBMS 952\n27.8.2Indexing XMLRepositories 956\n27.9ReviewQuestions 959\n28SPATIAL DATAMANAGEMENT 968\n28.1TypesofSpatialDataandQueries 969\n28.2Applications Involving SpatialData 971\n28.3Introduction toSpatialIndexes 973\n28.3.1Overview ofProposed IndexStructures 974\n28.4Indexing BasedonSpace-Filling Curves 975\n28.4.1RegionQuadTreesandZ-Ordering: RegionData 976\n28.4.2SpatialQueries UsingZ-Ordering 978\n28.5GridFiles 978\n28..5.1Adapting GridFilestoHandleRegions 981\n28.6RTrees:PointandRegionData 982\n28.6~1Queries 983\n28.6.2InsertandDeleteOperations 984\n28.6.3Concurrency Control 986\n28.6.4Generalized SearchTrees 987\n28.7IssuesinHigh-Dimensional Indexing 988\n28.8ReviewQuestions 988", "25": "Contents\n29FURTHER READING\n29.1Advanced Tl\"ansaction Processing\n29.1.1Transaction Processing Monitors\n29.1.2NewTransaction Models\n29.1.3Real-Time DBlvISs\n29.2DataIntegration\n29.3MobileDatabases\n29.4MainMemory Databases\n29.5Multimedia Databases\n29.6Geographic Information Systems\n29.7Temporal Databases\n29.8Biological Databases\n29.9Information Visualization\n29.10Summary\n30THEMINIBASE SOFTWARE\n30.1WhatIsAvailable\n30.2Overview ofMinibaseAssignments\n30.3Acknowledgments\nREFERENCES\nAUTHOR INDEX\nSUBJECT INDEXxxm\n992\n993\n993\n994\n994\n995995\n996\n997\n998\n999\n999\n1000\n1000\n1002\n1002\n1003\n1004\n1005\n1045\n1054", "26": "PREFACE\nTheadvantage ofdoingone'spraising foroneselfisthatonecanlayitonsothick\nandexactlyintherightplaces.\n--Samuel Butler\nDatabase management systems arenowanindispensable toolformanaging\ninformation, andacourseontheprinciples andpractice ofdatabase systems\nisnowanintegral partofcomputer sciencecurricula. Thisbookcoversthe\nfundamentals ofmoderndatabase management systems, inparticular relational\ndatabase systems.\nWehaveattempted topresentthematerial inaclear,simplestyle.Aquantita\u00ad\ntiveapproach isusedthroughout withmanydetailed examples. Anextensive\nsetofexercises (forwhichsolutions areavailable onlinetoinstructors) accom\u00ad\npanieseachchapterandreinforces students' abilitytoapplytheconcepts to\nrealproblems.\nThebookcanbeusedwiththeaccompanying software andprogramming as\u00ad\nsignments intwodistinct kindsofintroductory courses:\n1.Applications Emphasis: Acoursethatcoverstheprinciples ofdatabase\nsystems, andemphasizes howtheyareusedindeveloping data-intensive ap\u00ad\nplications. Twonewchapters onapplication development (oneondatabase\u00ad\nbackedapplications, andoneonJavaandInternet application architec\u00ad\ntures)havebeenaddedtothethirdedition,andtheentirebookhasbeen\nextensively revisedandreorganized tosupport suchacourse. Arunning\ncase-study andextensive onlinematerials (e.g.,codeforSQLqueriesand\nJavaapplications, onlinedatabases andsolutions) makeiteasytoteacha\nhands-on application-centric course.\n2.Systems Emphasis: Acoursethathasastrongsystems emphasis and\nassumes thatstudents havegoodprogramming skillsinCandC++.In\nthiscasetheaccompanying Minibase software canbellsedasthebasis\nforprojects inwhichstudents areaskedtoimplement variouspartsofa\nrelational DBMS. Severalcentralmodules intheprojectsoftware (e.g.,\nheapfiles,buffermanager, B+trees,hashindexes, variousjoinmethods)\nxxiv", "27": "PTeface XKV\naredescribed insufficient detailinthetexttoenablestudents toimplement\nthem,giventhe(C++)classinterfaces.\nr..,1anyinstructors willnodoubtteachacoursethatfallsbetween thesetwo\nextremes. Therestructuring inthethirdeditionoffersaverymodular orga\u00ad\nnization thatfacilitates suchhybridcourses. Thealsobookcontains enough\nmaterial tosupport advanced coursesinatwo-course sequence.\nOrganization oftheThirdEdition\nThebookisorganized intosixmainpartsplusacollection ofadvanced topics,as\nshowninFigure0.1.TheFoundations chapters introduce database systems, the\n(1)Foundations Both\n(2)Application Development Applications emphasis\n(3)StorageandIndexing Systems emphasis\n(4)QueryEvaluation Systems emphasis\n(5)Transaction Management Systems emphasis\n(6)Database DesignandTuning Applications emphasis\n(7)Additional Topics Both\nFigure 0.1Organization ofPartsintheThirdEdition\nERmodelandtherelational model.Theyexplainhowdatabases arecreated\nandused,andcoverthebasicsofdatabase designandquerying, including an\nin-depth treatment ofSQLqueries. Whileaninstructor canomitsomeofthis\nmaterial attheirdiscretion (e.g.,relational calculus, somesections ontheER\nmodelorSQLqueries), thismaterial isrelevant toeverystudentofdatabase\nsystems, andwerecommend thatitbecoveredinasmuchdetailaspossible.\nEachoftheremaining fivemainpartshaseitheranapplication orasystems\nempha.sis. EachofthethreeSystems partshasanoverview chapter, designed to\nprovideaself-contained treatment, e.g.,Chapter 8isanoverview ofstorageand\nindexing. Theoverview chapters canbeusedtoprovidestand-alone coverage\nofthetopic,orasthefirstchapter inamoredetailed treatment. Thus,inan\napplication-oriented course,Chapter 8mightbetheonlymaterial covered on\nfileorganizations andindexing, whereas inasystems-oriented courseitwouldbe\nsupplemented byaselection fromChapters 9through 11.TheDatabase Design\nandTuningpartcontains adiscussion ofperformance tuninganddesigning for\nsecureaccess.Theseapplication topicsarebestcovered aftergivingstudents\nagoodgraspofdatabase systemarchitecture, andaretherefore placedlaterin\nthechaptersequence.", "28": "XXVI\nSuggested CourseOutlinesDATABASE ~1ANAGEMENT SYSTEMS\nThebookcanbeusedintwokindsofintroductory database courses, onewith\nanapplications emphasis andonewithasystems empha..':iis.\nTheintroductory applications- oriented coursecouldcoverthe:Foundations chap\u00ad\nters,thentheApplication Development chapters, followed bytheoverview sys\u00ad\ntemschapters, andconclude withtheDatabase DesignandTuningmaterial.\nChapter dependencies havebeenkepttoaminimum, enabling instructors to\neasilyfinetunewhatmaterial toinclude. TheFoundations material, PartI,\nshouldbecoveredfirst,andwithinPartsIII,IV,andV,theoverview chapters\nshouldbecovered first.Theonlyremaining dependencies between chapters\ninPartsItoVIareshownasarrowsinFigure0.2.Thechapters inPartI\nshouldbecoveredinsequence. However, thecoverage ofalgebraandcalculus\ncanbeskipped inordertogettoSQLqueriessooner(although webelievethis\nmaterial isimportant andrecommend thatitshouldbecoveredbeforeSQL).\nTheintroductory systems-oriented coursewouldcovertheFoundations chap\u00ad\ntersandaselection ofApplications andSystems chapters. Animportant point\nforsystems-oriented coursesisthatthetimingofprogramming projects (e.g.,\nusingMinibase) makesitdesirable tocoversomesystems topicsearly.Chap\u00ad\nterdependencies havebeencarefully limitedtoallowtheSystems chapters to\nbecovered assoonasChapters 1and3havebeencovered. Theremaining\nFoundations chapters andApplications chapters canbecoveredsubsequently.\nThebookalsohasamplematerial tosupport amulti-course sequence. Obvi\u00ad\nously,choosing anapplications orsystems emphasis intheintroductory course\nresultsindropping certainmaterial fromthecourse;thematerial inthebook\nsupports acomprehensive two-course sequence thatcoversbothapplications\nandsystems a.spects. TheAdditional Topicsrangeoverabroadsetofissues,\nandcanbeusedasthecorematerial foranadvanced course,supplemented\nwithfurtherreadings.\nSupplementary Material\nThisbookcomeswithextensive onlinesupplements:\n..Online Chapter: Tomakespacefornewmaterial sucha.'3application\ndevelopment, information retrieval, andXML,we'vemovedthecoverage\nofQBEtoanonlinechapter. Students canfreelydownload thechapter\nfromthebook'swebsite,andsolutions toexercises fromthischapterare\nincluded insolutions manual.", "29": "Preface xxvii;\n( ,( ( 3 2 4H5JII1~ !---iRelational Model Relational AlgebraIIntroduction, :ERModel 1--1SQLDM~\n\"---~~~ .Conceptual DesignlSQLDDL andCalculus\nII6\nDatabase Application ~\nDevelopment7\nDatabase-Backed\nInternetApplications\n89]10][11]III Overview of\nJ\\StorageandIndexingDataStorage TreeIndexes HashIndexes\n\\\n12 13 14 15\nIV Overview of Evaluation ofI--ATypical\nQueryEvaluation1\\External Sorting\nRelational Operators Relational Optimizer\n\\\n16 17 18\nVOverview of Concurrencyr-- Crash\nTransaction Management1\\Control Recovery\n\\\\\n\\ 19 20 21\nVI SchemaRefinement, Physical DB Security and\nFDs,Normalization Design,Tuning Authorization\n22 23 24 25\nParalleland Object-Database Deductive DataWarehousing\nDistributed DBs Systems Databases andDecision Support\nVIIC26 27 28 29\nData Information Retrieval Spatial Further\nMining andXMLData Databases Reading\nFigure 0.2Chapter Organization andDependencies\nlIIILecture Slides: Lecture slidesarefreelyavailable forallchapters in\nPostscript, andPDFformats. Courseinstructors canalsoobtainthese\nslidesinMicrosoft Powerpoint format,andcanadaptthemtotheirteach\u00ad\ningneeds.Instructors alsohaveaccesstoallfiguresllsedinthebook(in\nxfigformat), andcanusethemtomodifytheslides.", "30": "xxviii DATABASE IVIANAGEMENT SVSTErvIS\n\u2022Solutions toChapter Exercises: ThebookhasanUnUS1H:l,lly extensive\nsetofin-depth exercises. Students canobtainsolutioIls toodd-numbered\nchapter exercises andasetoflectureslidesforeachchapterthrough the\nvVebinPostscript andAdobePDFformats. Courseinstructors canobtain\nsolutions toallexercises.\n\u2022Software: Thebookcomeswithtwokindsofsoftware. First,wehave\nJ\\!Iinibase, asmallrelational DBMSintended foruseinsystems-oriented\ncourses. Minibase comeswithsampleassignments andsolutions, asde\u00ad\nscribedinAppendix 30.Accessisrestricted tocourseinstructors. Second,\nweoffercodeforallSQLandJavaapplication development exercises in\nthebook,together withscriptstocreatesampledatabases, andscriptsfor\nsettingupseveralcommercial DBMSs. Students canonlyaccesssolution\ncodeforodd-numbered exercises, whereas instructors haveaccesstoall\nsolutions.\n\u2022Instructor's Manual: Thebookcomeswithanonlinemanualthatof\u00ad\nfersinstructors comments onthematerial ineachchapter.Itprovides a\nsummary ofeachchapterandidentifies choicesformaterial toemphasize\noromit.Themanual alsodiscusses theon-linesupporting material for\nthatchapterandoffersnumerous suggestions forhands-on exercises and\nprojects. Finally,itincludes samples ofexamination papersfromcourses\ntaughtbytheauthorsusingthebook.Itisrestricted tocourseinstructors.\nForMoreInformation\nThehomepageforthisbookisatURL:\nhttp://www.cs.wisc.edu/-dbbook\nItcontains alistofthechanges between the2ndand3rdeditions, andafre\u00ad\nquently updated linktoallknownerTOT8inthebookanditsaccompanying\nsupplements. Instructors shouldvisitthissiteperiodically orregisteratthis\nsitetobenotifiedofimportant changes byemail.\nAcknowledgments\nThisbookgrewoutoflecturenotesforCS564,theintroductory (senior/graduate\nlevel)database courseatUvV-Madison. DavidDe\\Vitt developed thiscourse\nandtheMinirelproject, inwhichstudents wroteseveralwell-chosen partsof\narelational DBMS.Mythinking aboutthismaterial wasshapedbyteaching\nCS564,andMinirelwastheinspiration forMinibase, whichismorecompre\u00ad\nhensive(e.g.,ithasaqueryoptimizer andincludes visualization software) but", "31": "Preface XXIX\ntriestoretainthespiritofMinireL lVEkeCareyandIjointlydesigned muchof\nMinibase. Mylecturenotes(andinturnthisbook)wereinfluenced byMike's\nlecturenotesandbyYannisIoannidis's lectureslides.\nJoeHellerstein usedthebetaeditionofthebookatBerkeley andprovided\ninvaluable feedback, assistance onslides,andhilarious quotes. vVriting the\nchapteronobject-database systems withJoewasalotoffun.\nC.Mohanprovided invaluable assistance, patiently answering anumberofques\u00ad\ntionsaboutimplementation techniques usedinvariouscommercial systems, in\nparticular indexing, concurrency control,andrecovery algorithms. MosheZloof\nanswered numerous questions aboutQBEsemantics andcommercial systems\nbasedonQBE.RonFagin,Krishna Kulkarni, LenShapiro, JimMelton, Dennis\nShasha,andDirkVanGuchtreviewed thebookandprovided detailed feedback,\ngreatlyimproving thecontentandpresentation. Michael Goldweber atBeloit\nCollege, Matthew HainesatWyoming, Michael KiferatSUNYStonyBrook,\nJeffNaughton atWisconsin, Praveen Seshadri atCornell, andStanZdonikat\nBrownalsousedthebetaeditionintheirdatabase coursesandofferedfeedback\nandbugreports. Inparticular, Michael Kiferpointedoutanerrorinthe(old)\nalgorithm forcomputing aminimal coverandsuggested covering someSQL\nfeatures inChapter 2toimprove modularity. GioWiederhold's bibliography,\nconverted toLatexformatbyS.Sudarshan, andMichaelLey'sonlinebibliogra\u00ad\nphyondatabases andlogicprogramming wereagreathelpwhilecompiling the\nchapterbibliographies. ShaunFlisakowski andUriShafthelpedmefrequently\ninmynever-ending battleswithLatex.\nloweaspecialthankstothemany,manystudents whohavecontributed to\ntheMinibase software. Emmanuel Ackaouy, JimPruyne, LeeSchumacher, and\nMichael LeeworkedwithmewhenIdeveloped thefirstversionofMinibase\n(muchofwhichwassubsequently discarded, butwhichinfluenced thenext\nversion). Emmanuel Ackaouy andBryanSoweremyTAswhenItaughtCS564\nusingthisversionandwentwellbeyondthelimitsofaTAshipintheirefforts\ntorefinetheproject. PaulAokistruggled withaversionofMinibase and\nofferedlots ofusefuleomments asaTAatBerkeley. AnentireclassofCS764\nstudents (ourgraduate database course)developed muchofthecurrentversion\nofMinibase inalargeclassprojectthatwasledandcoordinated byMikeCarey\nandme.AmitShuklaandMichael LeeweremyTAswhenIfirsttaughtCS564\nusingthisvers~onofMinibase anddeveloped thesoftware further.\nSeveralstudents workedwithmeonindependent projects, overalongperiod\noftime,todevelopMinibase components. Theseincludevisualization packages\nforthebuffermanager andB+trees(Huseyin Bekta.'3,HarryStavropoulos, and\nWeiqing Huang); aqueryoptimizer andvisualizer (Stephen Harris,MichaelLee,\nandDonkoDonjerkovic); anERdiagram toolbasedontheOpossum schema", "32": "xxx DATABASE NIANAGEMENT SYSTEMS\n~\neditor(EbenHaber); andaGUI-based toolfornormalization (Andrew Prock\nandAndyTherber). Inaddition, BillKimmel workedtointegrate andfixa\nlargebodyofcode(storage manager, buffermanager, filesandaccessmethods,\nrelational operators, andthequeryplanexecutor) produced bytheCS764class\nproject. RanjaniRamamurty considerably extended Bill'sworkoncleaning up\nandintegrating thevariousmodules. LukeBlanshard, UriShaft,andShaun\nFlisakowski workedonputtingtogether thereleaseversionofthecodeand\ndeveloped testsuitesandexercises basedontheMinibase software. Krishna\nKunchithapadam testedtheoptimizer anddeveloped partoftheMinibase GUI.\nClearly,theMinibase software wouldnotexistwithoutthecontributions ofa\ngreatmanytalented people.Withthissoftware available freelyinthepublic\ndomain, Ihopethatmoreinstructors willbeabletoteachasystems-oriented\ndatabase coursewithablendofimplementation andexperimentation tocom\u00ad\nplement thelecturematerial.\nI'dliketothankthemanystudents whohelpedindeveloping andchecking\nthesolutions totheexercises andprovided usefulfeedback ondraftversions of\nthebook.Inalphabetical order:X.Bao,S.Biao,M.Chakrabarti, C.Chan,\nW.Chen,N.Cheung, D.Colwell, C.Fritz,V.Ganti,J.Gehrke, G.Glass,V.\nGopalakrishnan, M.Higgins, T.Jasmin, M.Krishnaprasad, Y.Lin,C.Liu,M.\nLusignan, H.Modi,S.Narayanan, D.Randolph, A.Ranganathan, J.Reminga,\nA.Therber, M.Thomas, Q.Wang,R.Wang,Z.Wang,andJ.Yuan.Arcady\nGrenadeI' ,JamesHarrington, andMartinReamesatWisconsin andNinaTang\natBerkeley provided especially detailed feedback.\nCharlieFischer, AviSilberschatz, andJeffUllmangavemeinvaluable advice\nonworking withapublisher. MyeditorsatMcGraw-Hill, BetsyJonesandEric\nMunson, obtained extensive reviewsandguidedthisbookinitsearlystages.\nEmilyGrayandBradKosirogweretherewhenever problems cropped up.At\nWisconsin, GinnyWernerreallyhelpedmetostayontopofthings.\nFinally,thisbookwasathiefoftime,andinmanywaysitwasharderonmy\nfamilythanonme.Mysonsexpressed themselves forthrightly. Frommy(then)\nfive-year-old, Ketan:\"Dad,stopworking onthatsillybook.Youdon'thave\nanytimeforme.\"Two-year-old Vivek:\"Youworking boook?Nononocome\nplaybasketball me!\"Alltheseasonsoftheirdiscontent werevisiteduponmy\nwife,andApunonetheless cheerfully keptthefamilygoinginitsusualchaotic,\nhappywayallthemanyevenings andweekends Iwaswrapped upinthisbook.\n(Nottomention thedayswhenIwaswrapped upinbeingafacultymember!)\nAsinallthings,Icantracemyparents' handinmuchofthis;myfather,\nwithhisloveoflearning, andmymother, withherloveofus,shapedme.My\nbrotherKartik's contributions tothisbookconsisted chieflyofphonecallsin\nwhichhekeptmefromworking, butifIdon'tacknowledge him,he'sliableto", "33": "Preface\nbeannoyed. I'dliketothankmyfamilyforbeingthereandgivingmeaning to\neverything Ido.(There!IknewI'dfindalegitimate reasontothankKartik.)\nAcknowledgments fortheSecondEdition\nEmilyGrayandBetsyJonesat1tfcGraw-Hill obtained extensive reviewsand\nprovided guidance andsupport asweprepared thesecondedition. Jonathan\nGoldstein helpedwiththebibliography forspatialdatabases. Thefollowing\nreviewers provided valuable feedback oncontentandorganization: LimingCai\natOhioUniversity, CostasTsatsoulis atUniversity ofKansas, Kwok-Bun Vue\natUniversity ofHouston, ClearLake,William GroskyatWayneStateUniver\u00ad\nsity,SangH.SonatUniversity ofVirginia, JamesM.SlackatMinnesota State\nUniversity, Mankato, Herman Balsters atUniversity ofTwente, Netherlands,\nKarenC.DavisatUniversity ofCincinnati, Joachim Hammer atUniversity of\nFlorida, FredPetryatTulaneUniversity, Gregory SpeegleatBaylorUniver\u00ad\nsity,SalihYurttasatTexasA&MUniversity, andDavidChaoatSanFrancisco\nStateUniversity.\nAnumber ofpeoplereported bugsinthefirstedition. Inparticular, wewish\ntothankthefollowing: JosephAlbertatPortland StateUniversity, Han-yin\nChenatUniversity ofWisconsin, LoisDelcambre atOregonGraduate Institute,\nMaggieEichatSouthern Methodist University, RajGopalan atCurtinUniver\u00ad\nsityofTechnology, Davood RafieiatUniversity ofToronto, Michael Schreflat\nUniversity ofSouthAustralia, AlexThomasian atUniversity ofConnecticut,\nandScottVandenberg atSienaCollege.\nAspecialthankstothemanypeoplewhoanswered adetailed surveyabouthow\ncommercial systemssupportvariousfeatures: AtIBM,MikeCarey,BruceLind\u00ad\nsay,C.Mohan, andJamesTeng;atInformix, M.Muralikrishna andMichael\nUbell;atMicrosoft, DavidCampbell, GoetzGraefe,andPeterSpiro;atOracle,\nHakanJacobsson, Jonathan D.Klein,Muralidhar Krishnaprasad, andM.Zi\u00ad\nauddin;andatSybase,MarcChanliau, LucienDimino, Sangeeta Doraiswamy,\nHanuma Kodavalla, RogerMacNicol, andTirumanjanam Rengarajan.\nAfterreadingabouthimselfintheacknowledgment tothefirstedition,Ketan\n(now8)hadasimplequestion: \"Howcomeyoudidn'tdedicate thebooktous?\nWhymom?\" K~tan,Itookcareofthisinexplicable oversight. Vivek(now5)\nwasmoreconcerned abouttheextentofhisfame:\"Daddy, ismynameinevvy\ncopyofyourbook?Dotheyhaveitinevvycompooter sciencedepartment in\ntheworld'?\" Vivek,Ihopeso.Finally, thisrevision wouldnothavemadeit\nwithout Apu'sandKeiko'ssupport.", "34": "xx.,xii DATABASE l\\IANAGEl'vIENT SYSTEMS\nAcknowledgments fortheThirdEdition\n\\rYethankRaghavKaushik forhiscontribution tothediscussion ofXML,and\nAlexThomasian forhiscontribution tothecoverage ofconcurrency control. A\nspecialthankstoJimJVleltonforgivingusapre-publication copyofhisbook\nonobject-oriented extensions intheSQL:1999standard, andcatching several\nbugsinadraftofthisedition. MartiHearstatBerkeley generously permitted\nustoadaptsomeofherslidesonInformation Retrieval, andAlonLevyand\nDanSueiuwerekindenoughtoletusadaptsomeoftheirlectures onX:NIL.\nMikeCareyofferedinputonWebservices.\nEmilyLupashatMcGraw-Hill hasbeenasourceofconstant support anden\u00ad\ncouragement. Shecoordinated extensive reviewsfromMingWangatEmbry\u00ad\nRiddleAeronautical University, ChengHsuatRPI,PaulBergstein atUniv.of\nMassachusetts, Archana Sathaye atSJSU,BharatBhargava atPurdue, John\nFendrich atBradley, AhmetUguratCentral Michigan, Richard Osborne at\nUniv.ofColorado, AkiraKawaguchi atCCNY,MarkLastatBenGurion,\nVassilisTsotrasatUniv.ofCalifornia, andRonaldEaglinatUniv.ofCentral\nFlorida.Itisapleasure toacknowledge thethoughtful inputwereceived from\nthereviewers, whichgreatlyimproved thedesignandcontentofthisedition.\nGloriaSchieslandJadeMorandealtcheerfully andefficiently withlast-minute\nsnafus,and,withSherryKane,madeaverytightschedule possible. Michelle\nWhitaker iterated manytimesonthecoverandend-sheet design.\nOnapersonal noteforRaghu,Ketan,following thecannyexample ofthe\ncamelthatsharedatent,observed that\"itisonlyfair\"thatRaghudedicate\nthiseditionsolelytohimandVivek,since\"mommy alreadyhaditdedicated\nonlytoher.\"Despitethisblatantattempt tohogthelimelight, enthusiastically\nsupported byVivekandviewedwiththeindulgent affection ofadotingfather,\nthisbookisalsodedicated toApu,forbeingtherethrough itall.\nForJohannes, thisrevision wouldnothavemadeitwithout Keiko'ssupport\nandinspiration andthemotivation fromlookingatElisa'speacefully sleeping\nface.", "35": "PARTI\nFOUNDATIONS", "36": "", "37": "1\nOVERVIEW OF\nDATABASE SYSTEMS\n--WhatisaDBMS,inparticular, arelational DBMS?\n..Whyshouldweconsider aDBMStomanage data?\n..Howisapplication datarepresented inaDBMS?\n--HowisdatainaDBMSretrieved andmanipulated?\n..HowdoesaDBMSsupport concurrent accessandprotectdataduring\nsystemfailures?\n..Whatarethemaincomponents ofaDBMS?\n..Whoisinvolved withdatabases inreallife?\n..Keyconcepts: database management, dataindependence, database\ndesign,datamodel;relational databases andqueries; schemas, levels\nofabstraction; transactions, concurrency andlocking, recovery and\nlogging; DBMSarchitecture; database administrator, application pro\u00ad\ngrammer, enduser\nHaseveryone noticedthatallthelettersoftheworddatabase aretypedwith\nthelefthand?NowthelayoutoftheQWEHTY typewriter keyboard wasdesigned,\namongotherthings,tofacilitate theevenuseofbothhands.Itfollows, therefore,\nthatwritingaboutdatabases isnotonlyunnatural, butalotharderthanitappears.\n---Anonymous\nThealIlount of information available tousisliterally exploding, andthevalue\nofdataasanorganizational assetiswidelyrecognized. Togetthemostoutof\ntheirlargeandcomplex datasets, usersrequiretoolsthatsimplify thetasksof\n3", "38": "4 CHAPTER If\nTheareaofdatabase management systenls isamicrocosm ofcomputer sci\u00ad\nenceingeneral. Theissuesaddressed andthetechniques usedspanawide\nspectrum, including languages, object-orientation andotherprogTamming\nparadigms, compilation, operating systems, concurrent programming, data\nstructures, algorithms, theory,parallelanddistributed systems, userinter\u00ad\nfaces,expertsystems andartificial intelligence, statistical techniques, and\ndynamic programming. \\Vecannotgointoallthese&<;jpectsofdatabase\nmanagement inonebook,butwehopetogivethereaderasenseofthe\nexcitement inthisrichandvibrantdiscipline.\nmanaging thedataandextracting usefulinformation inatimelyfashion. Oth\u00ad\nerwise,datacanbecomealiability, withthecostofacquiring itandmanaging\nitfarexceeding thevaluederivedfromit.\nAdatabase isacollection ofdata,typically describing theactivities ofoneor\nmorerelatedorganizations. Forexample, auniversity database mightcontain\ninformation aboutthefollowing:\n\u2022Entities suchasstudents, faculty,courses, andclassrooms.\n\u2022Relationships between entities, suchasstudents' enrollment incourses,\nfacultyteaching courses, andtheuseofroomsforcourses.\nAdatabase management system, orDBMS, issoftware designed toassist\ninmaintaining andutilizing largecollections ofdata.Theneedforsuchsystems,\naswellastheiruse,isgrowing rapidly. Thealternative tousingaDBMSis\ntostorethedatainfilesandwriteapplication-specific codetomanage it.The\nuseofaDBMShasseveralimportant advantages, aswewillseeinSection1.4.\n1.1MANAGING DATA\nThegoalofthisbookistopresentanin-depth introduction todatabase man\u00ad\nagement systems, withanempha.sis onhowtodesignadatabase and'li8Ca\nDBMSeffectively. Notsurprisingly, manydecisions abouthowtouseaDBIvIS\nforagivenapplication dependonwhatcapabilities theDBMSsupports effi\u00ad\nciently.Therefore, touseaDBMSwell,itisnecessary toalsounderstand how\naDBMS work8.\nManykindsofdatabase management systems areinuse,butthisbookconcen\u00ad\ntratesonrelational database systems (RDBMSs), whicharebyfarthe\ndominant typeofDB~'IStoday.Thefollowing questions areaddressed inthe\ncorcchapters ofthishook:", "39": "Overview ofDataba8e SY8tem8 5\n1.Database DesignandApplication Development: Howcanauser\ndescribe areal-world enterprise (e.g.,auniversity) intermsofthedata\nstoredinaDBMS? \\Vhatfactorsmustbeconsidered indeciding howto\norganize thestoreddata?Howcan,vedevelopapplications thatrelyupon\naDBMS? (Chapters 2,3,6,7,19,20,and21.)\n2.DataAnalysis: Howcanauseranswerquestions abouttheenterprise by\nposingqueriesoverthedataintheDBMS? (Chapters 4and5.)1\n3.Concurrency andRobustness: HowdoesaDBMSallowmanyusersto\naccessdataconcurrently, andhowdoesitprotectthedataintheeventof\nsystemfailures? (Chapters 16, 17,and18.)\n4.Efficiency andScalability: HowdoesaDBMSstorelargedatasets and\nanswerquestions againstthisdataefficiently? (Chapters 8,9,la,11, 12,\n13, 14,and15.)\nLaterchapters coverimportant andrapidlyevolving topics,suchasparalleland\ndistributed database management, datawarehousing andcomplex queriesfor\ndecision support, datamining,databases andinformation retrieval, XMLrepos\u00ad\nitories,objectdatabases, spatialdatamanagement, andrule-oriented DBMS\nextensions.\nIntherestofthischapter, weintroduce theseissues.InSection1.2,webe\u00ad\nginwithabriefhistoryofthefieldandadiscussion oftheroleofdatabase\nmanagement inmoderninformation systems. Wethenidentifythebenefits of\nstoringdatainaDBMSinsteadofafilesysteminSection1.3,anddiscuss\ntheadvantages ofusingaDBMStomanagedatainSection1.4.InSection\n1.5,weconsider howinformation aboutanenterprise shouldbeorganized and\nstoredinaDBMS.Auserprobably thinksaboutthisinformation inhigh-level\ntermsthatcorrespond totheentitiesintheorganization andtheirrelation\u00ad\nships,whereas theDBMSultimately storesdataintheformof(rnany,many)\nbits.Thegapbetween howusersthinkoftheirdataandhowthedataisul\u00ad\ntimately storedisbridgedthrough severallevelsofabstract1:on supported by\ntheDBMS.Intuitively, ausercanbeginbydescribing thedatainfairlyhigh\u00ad\nlevelterms,thenrefinethis description byconsidering additional storageand\nrepresentation detailsasneeded.\nInSection1.6,weconsider howuserscanretrievedatastoredinaDBMSand\ntheneedfortechniques toefficiently compute answers toquestions involving\nsuchdata.InSection1.7,weprovideanoverview ofhowaDBMSsupports\nconcurrent accesstodatabyseveralusersandhowitprotects thedatainthe\neventofsystemfailures.\n1Anonlinechapter onQuery-by-Example (QBE)isalsoavailable.", "40": "6 CHAPTERrl\nvVethenbrieflydescribe theinternalstructure ofaDBMSinSection1.8,and\nmention variousgroupsofpeopleassociated withthedevelopment anduseof\naDBMSinSection1.9.\n1.2AHISTORICAL PERSPECTIVE\nFromtheearliestdaysofcomputers, storingandmanipulating datahavebeena\nmajorapplication focus.Thefirstgeneral-purpose DBMS,designed byCharles\nBachman atGeneral Electricintheearly1960s,wascalledtheIntegrated Data\nStore.Itformedthebasisforthenetwork datamodel,whichwasstandardized\nbytheConference onDataSystems Languages (CODASYL) andstrongly in\u00ad\nfluenceddatabase systemsthrough the1960s.Bachman wasthefirstrecipient\nofACM'sTuringAward(thecomputer scienceequivalent ofaNobelPrize)for\nworkinthedatabase area;hereceived theawardin1973.\nInthelate1960s,IBMdeveloped theInformation Management System(IMS)\nDBMS,usedeventodayinmanymajorinstallations. IMSformedthebasisfor\nanalternative datarepresentation framework calledthehierarchical datamodel.\nTheSABRE systemformakingairlinereservations wasjointlydeveloped by\nAmerican AirlinesandIBMaroundthesametime,anditallowedseveralpeople\ntoaccessthesamedatathrough acomputer network. Interestingly, todaythe\nsameSABRE systemisusedtopowerpopular Web-based travelservices such\nasTravelocity.\nIn1970,EdgarCodd,atIBM'sSanJoseResearch Laboratory, proposed anew\ndatarepresentation framework calledtherelational datamodel.Thisprovedto\nbeawatershed inthedevelopment ofdatabase systems:Itsparkedtherapid\ndevelopment ofseveralDBMSsbasedontherelational model,alongwitharich\nbodyoftheoretical resultsthatplacedthefieldonafirmfoundation. Codd\nwonthe1981TuringAwardforhisseminalwork.Database systems matured\nasanacademic discipline, andthepopularity ofrelational DBMSschanged the\ncommercial landscape. Theirbenefits werewidelyrecognized, andtheuseof\nDBMSs formanaging corporate databecamestandard practice.\nInthe1980s,therelational modelconsolidated itsposition asthedominant\nDBMSparadigm, anddatabase systems continued togainwidespread use.The\nSQLquerylanguage forrelational databases, developed aspartofIBM'sSys\u00ad\ntemRproject, isnowthestandard querylanguage. SQLwasstandardized\ninthelate1980s,andthecurrentstandard, SQL:1999, wasadopted bythe\nAmerican National Standards Institute (ANSI)andInternational Organization\nforStandardization (ISO).Arguably, themostwidelyusedformofconcurrent\nprogramming istheconcurrent execution ofdatabase programs (calledtrans\u00ad\nactions). Userswriteprograms a.\"iftheyaretoberunbythemselves, and", "41": "Overview ofDatabase Systems 7\ntheresponsibility forrunningthemconcurrently isgiventotheDBl\\/IS.James\nGraywonthe1999Turingawardforhiscontributions todatabase transaction\nmanagement.\nInthelate1980sandthe1990s,advances weremadeinmanyareasofdatabase\nsystems. Considerable research wascarriedoutintomorepowerful querylan\u00ad\nguagesandricherdatamodels, withemphasis placedonsupporting complex\nanalysis ofdatafromallpartsofanenterprise. Severalvendors (e.g.,IBM's\nDB2,Oracle8,Informix2UDS)extended theirsystemswiththeabilitytostore\nnewdatatypessuchasimagesandtext,andtoaskmorecomplex queries. Spe\u00ad\ncializedsystems havebeendeveloped bynumerous vendors forcreating data\nwarehouses, consolidating datafromseveraldatabases, andforcarrying out\nspecialized analysis.\nAninteresting phenomenon istheemergence ofseveralenterprise resource\nplanning (ERP)andmanagement resource planning (MRP) packages,\nwhichaddasubstantial layerofapplication-oriented featuresontopofaDBMS.\nWidelyused.packages includesystems fromBaan,Oracle,PeopleSoft, SAP,\nandSiebel. Thesepackages identify asetofcommon tasks(e.g.,inventory\nmanagement, humanresources planning, financial analysis) encountered bya\nlargenumberoforganizations andprovideageneralapplication layertocarry\nouttheseta.'3ks.Thedataisstoredinarelational DBMSandtheapplication\nlayercanbecustomized todifferent companies, leadingtoloweroverallcosts\nforthecompanies, compared tothecostofbuilding theapplication layerfrom\nscratch.\nMostsignificant, perhaps, DBMSs haveenteredtheInternet Age.Whilethe\nfirstgeneration ofwebsites storedtheirdataexclusively inoperating systems\nfiles,theuseofaDBMStostoredataaccessed through aWebbrowser is\nbecoming widespread. Queries aregenerated through Web-accessible forms\nandanswers areformatted usingamarkup language suchasHTMLtobe\neasilydisplayed inabrowser. Allthedatabase vendors areaddingfeatures to\ntheirDBMSaimedatmakingitmoresuitable fordeployment overtheInternet.\nDatabclse management continues togainimportance asmoreandmoredatais\nbrought onlineandmadeevermoreaccessible through computer networking.\nTodaythefieldisbeingdrivenbyexciting visionssucha'Smultimedia databases,\ninteractive video,streaming data,digitallibraries, ahostofscientific projects\nsuchasthehumangenomemapping effortandNASA'sEarthObservation Sys\u00ad\ntemproject, andthedesireofcompanies toconsolidate theirdecision-making\nprocesses andminetheirdatarepositories forusefulinformation abouttheir\nbusinesses. Commercially, database management systems represent oneofthe\n2Informix wasrecently acquired byIBM.", "42": "8\nlargestandmostvigorous marketsegments. Thusthestudyofdatabase sys\u00ad\ntemscouldprovetoberichlyrewarding inmorewaysthanone!\n1.3FILESYSTEMS VERSUS ADBMS\nTounderstand theneedforaDB:~,,1S,letusconsider amotivating scenario: A\ncompany hasalargecollection (say,500GB3)ofdataonemployees, depart\u00ad\nments,products, sales,andsoon.Thisdataisaccessed concurrently byseveral\nemployees. Questions aboutthedatamustbeanswered quickly,changes made\ntothedatabydifferent usersmustbeappliedconsistently, andaccesstocertain\npartsofthedata(e.g.,salaries) mustberestricted.\nWecantrytomanage thedatabystoringitinoperating systemfiles.This\napproach hasmanydrawbacks, including thefollowing:\n\u2022Weprobably donothave500GBofmainmemory toholdallthedata.\nWemusttherefore storedatainastoragedevicesuchasadiskortapeand\nbringrelevant partsintomainmemory forprocessing asneeded.\n\u2022Evenifwehave500GBofmainmemory, oncomputer systemswith32-bit\naddressing, wecannotreferdirectlytomorethanabout4GBofdata.We\nhavetoprogram somemethod ofidentifying alldataitems.\n\u2022Wehavetowritespecialprograms toanswereachquestion ausermaywant\ntoaskaboutthedata.Theseprograms arelikelytobecomplex because\nofthelargevolumeofdatatobesearched.\n\u2022Wemustprotectthedatafrominconsistent changesmadebydifferent users\naccessing thedataconcurrently. Ifapplications mustaddressthedetailsof\nsuchconcurrent access,thisaddsgreatlytotheircomplexity.\n\u2022Wemustensurethatdataisrestored toaconsistent stateifthesystem\ncrac;heswhilechanges arebeingmade.\n\u2022Operating systems provideonlyapassword mechanism forsecurity. Thisis\nnotsufficiently flexibletoenforcesecurity policiesinwhichdifferent users\nhavepermission toaccessdifferent subsetsofthedata.\nADBMSisapieceofsoftware designed tomakethepreceding taskseasier.By\nstoringdatain.aDBNISratherthanasacollection ofoperating systemfiles,\nwecanusetheDBMS's features tomanagethedatainarobustandefficient\nrnanner. Asthevolumeofdataandthenumber ofusersgrowhundreds of\ngigabytes ofdataandthousands ofusersarecommon incurrentcorporate\ndatabases DBMSsupport becomes indispensable.\n------,- .\n3Akilobyte (KB)is1024bytes,amegabyte (MB)is1024KBs,agigabyte (GB)is1024MBs,a\nterabyte ('1'B)is1024CBs,andapetabyte (PB)is1024terabytes.", "43": "Overv'iew ofDatabase Systems\n1.4ADVANTAGES OFADBMS\nUsingaDBMStomanagedatah3..'3manyadvantages:9\nIIDataIndependence: Application programs shouldnot,ideally,beex\u00ad\nposedtodetailsofdatarepresentation andstorage, TheDBJVISprovides\nanabstract viewofthedatathathidessuchdetails.\nIIEfficient DataAccess: ADBMSutilizesavarietyofsophisticated tech\u00ad\nniquestostoreandretrievedataefficiently. Thisfeatureisespecially im\u00ad\npOl'tantifthedataisstoredonexternal storagedevices.\nIIDataIntegrity andSecurity: Ifdataisalwaysaccessed through the\nDBMS,theDBMScanenforceintegrity constraints. Forexample, before\ninserting salaryinformation foranemployee, theDBMScancheckthat\nthedepartment budgetisnotexceeded. Also,itcanenforceaccesscontmls\nthatgovernwhatdataisvisibletodifferent classesofusers.\nIIDataAdministration: Whenseveraluserssharethedata,centralizing\ntheadministration ofdatacanoffersig11ificant improvements. Experienced\nprofessionals whounderstand thenatureofthedatabeingmanaged, and\nhowdifferent groupsofusersuseit,canberesponsible fororganizing the\ndatarepresentation tominimize redundancy andforfine-tuning thestorage\nofthedatatomakeretrieval efficient.\nIIConcurrent AccessandCrashRecovery: ADBMSschedules concur\u00ad\nrentaccesses tothedatainsuchamannerthatuserscanthinkofthedata\nasbeingaccessed byonlyoneuseratatime.Further, theDBMSprotects\nusersfromtheeffectsofsystemfailures.\nIIReduced Application Development Time:Clearly, theDBMSsup\u00ad\nportsimportant functions thatarecommon tomanyapplications accessing\ndataintheDBMS.This,inconjunction withthehigh-level interface tothe\ndata,facilitates quickapplication development. DBMSapplications are\nalsolikelytobemorerobustthansimilarstand-alone applications because\nmanyimportant tasksarehandled bytheDBMS(anddonothavetobe\ndebugged andtestedintheapplication).\nGivenalltheseadvantages, isthereeverareasonnottouseaDBMS? Some\u00ad\ntimes,yes.ADBMSisacomplex pieceofsoftware, optimized forcertainkinds\nofworkloads (e.g.,answering complex queriesorhandling manyconcurrent\nrequests), anditsperformance maynotbeadequate forcertainspecialized ap\u00ad\nplications. Examples includeapplications withtightreal-time constraints or\njustafewwell-defined criticaloperations forwhichefficient customcodemust\nbewritten. Another reasonfornotusingaDBMSisthatanapplication may\nneedtomanipulate thedatainwaysnotsupported bythequerylanguage. In", "44": "10 CHAPTER:l\nsuchasituation, theabstract viewofthedatetpresented bytheDBlVISdoes\nnotmatchtheapplication's needsandactually getsintheway.Asanexam\u00ad\nple,relational databa.'3es donotsupport flexibleanalysis oftextdata(although\nvendors arenowextending theirproducts inthisdirection).\nIfspecialized performance ordatamanipulation requirements arecentraltoan\napplication, theapplication maychoosenottouseaDBMS,especially ifthe\naddedbenefits ofaDBMS(e.g.,flexiblequerying, security, concurrent access,\nandcrashrecovery) arenotrequired. Inmostsituations callingforlarge-scale\ndatamanagement, however, DBlVISs havebecomeanindispensable tool.\n1.5DESCRIBING ANDSTORING DATAINADBMS\nTheuserofaDBMSisultimately concerned withsomereal-world enterprise,\nandthedatatobestoreddescribes variousaspectsofthisenterprise. For\nexample, therearestudents, faculty,andcoursesinauniversity, andthedata\ninauniversity database describes theseentitiesandtheirrelationships.\nAdatamodelisacollection ofhigh-level datadescription constructs thathide\nmanylow-level storagedetails.ADBMSallowsausertodefinethedatatobe\nstoredintermsofadatamodel.Mostdatabase management systems today\narebasedontherelational datamodel, whichwefocusoninthisbook.\nWhilethedatamodeloftheDBMShidesmanydetails,itisnonetheless closer\ntohowtheDBMSstoresdatathantohowauserthinksabouttheunderlying\nenterprise. Asemantic datamodelisamoreabstract, high-level datamodel\nthatmakesiteasierforausertocomeupwithagoodinitialdescription of\nthedatainanenterprise. Thesemodelscontainawidevarietyofconstructs\nthathelpdescribe arealapplication scenario. ADBMSisnotintended to\nsupport alltheseconstructs directly; itistypically builtaroundadatamodel\nwithjustafewbi:1Sicconstructs, suchastherelational model. Adataba.se\ndesignintermsofasemantic modelservesasausefulstarting pointandis\nsubsequently translated intoadatabase designintermsofthedatamodelthe\nDBMSactually supports.\nAwidelyusedsemantic datamodelcalledtheentity-relationship (ER)model\nallowsustopictorially denoteentitiesandtherelationships amongthem.vVe\ncovertheERmodelinChapter 2.", "45": "Overview ofDatabase Systc'lns 11\nJ\nAnExample ofPoorDesign: Therelational schemaforStudents il\u00ad\nlustrates apoordesignchoice;youshould neVCTcreateafieldsuchasage,\nwhosevalueisconstantly changing. AbetterchoicewouldbeDOB(for\ndateofbirth);agecanbecomputed fromthis.\\Vecontinue touseagein\nourexamples, however, becauseitmakesthemeasiertoread.\n1.5.1TheRelational Model\nInthissectionweprovideabriefintroduction totherelational model.The\ncentraldatadescription construct inthismodelisarelation, whichcanbe\nthought ofasasetofrecords.\nAdescription ofdataintermsofadatamodeliscalledaschema. Inthe\nrelational model,theschemaforarelation specifies itsname,thenameofeach\nfield(orattribute orcolumn), andthetypeofeachfield.Asanexample,\nstudent information inauniversity database maybestoredinarelation with\nthefollowing schema:\nStudents( sid:string, name:string, login:string,\nage:integer, gpa:real)\nThepreceding schemasaysthateachrecordintheStudents relation hasfive\nfields,withfieldnamesandtypesasindicated. Anexample instance ofthe\nStudents relationappears inFigure1.1.\nIsid[name IZogin\n53666Jones jones@cs 183.4\n53688Smith smith@ee 183.2\n53650Smith smith@math 193.8\n53831Madayan madayan (gmusic 111.8\n53832Guldu guldui:Qhnusic 122.0\nFigure 1.1AnInstance oftheStudents Relation\nEachrowintheStudents relation isarecordthatdescribes astudent. The\ndescription isrlOtcompleteo----for example, thestudent's heightisnotincluded--\u00ad\nbutispresumably adequate fortheintended applications intheuniversity\ndatabase. EveryrowfollowstheschemaoftheStudents relation. Theschema\ncalltherefore beregarded asatemplate fordescribing astudent.\nvVecanmakethedescription ofacollection ofstudents moreprecisebyspecify\u00ad\ningintegrity constraints, whichareconditions thattherecordsinarelation", "46": "12 CHAPTER? 1\nmustsatisfy.forexample, wecouldspecifythateverystudent hasaunique\nsidvalue.Observe thatwecannotcapture thisinformation bysimplyadding\nanother fieldtotheStudents schema. Thus,theabilitytospecifyuniqueness\nofthevaluesinafieldincreases theaccuracy withwhichwecandescribe our\ndata.Theexpressiveness oftheconstructs available forspecifying integrity\nconstraints isanimportant ar;;pectofadatamodel.\nOtherDataModels\nInaddition totherelational datamodel(whichisusedinnumerous systems,\nincluding IBM'sDB2,Informix, Oracle,Sybase, Microsoft's Access,FoxBase,\nParadox, Tandem, andTeradata), otherimportant datamodelsincludethe\nhierarchical model(e.g.,usedinIBM'sIMSDBMS), thenetwork model(e.g.,\nusedinIDSandIDMS),theobject-oriented model(e.g.,usedinObjectstore\nandVersant), andtheobject-relational model(e.g.,usedinDBMSproducts\nfromIBM,Informix, ObjectStore, Oracle,Versant, andothers). Whilemany\ndatabases usethehierarchical andnetwork modelsandsystems basedonthe\nobject-oriented andobject-relational modelsaregainingacceptance inthemar\u00ad\nketplace, thedominant modeltodayistherelational model.\nInthisbook,wefocusontherelational modelbecause ofitswideuseandim\u00ad\nportance. Indeed,theobject-relational model,whichisgaininginpopularity, is\nanefforttocombine thebestfeatures oftherelational andobject-oriented mod\u00ad\nels,andagoodgraspoftherelational modelisnecessary tounderstand object\u00ad\nrelational concepts. (Wediscusstheobject-oriented andobject-relational mod\u00ad\nelsinChapter 23.)\n1.5.2LevelsofAbstraction inaDBMS\nThedatainaDBMSisdescribed atthreelevelsofabstraction, ar;;illustrated\ninFigure1.2.Thedatabase description consists ofaschemaateachofthese\nthreelevelsofabstraction: theconceptual, physical, andexternal.\nAdatadefinition language (DDL)isusedtodefinetheexternal andconeep\u00ad\ntualschemas. \\;YediscusstheDDLfacilities oftheInost wid(~lyuseddatabase\nlanguage, SQL,inChapter 3.AllDBMSvendors alsosupport SQLcommands\ntodescribe aspectsofthephysical schema,butthesecommands arenotpartof\ntheSQLlanguage standard. Information abouttheconceptual, external, and\nphysical schemas isstoredinthesystem catalogs (Section 12.1).vVediscuss\nthethreelevelsofabstraction intherestofthissection.", "47": "OucTlJ'iew ofDatabase SyslcTns\nExternal Schema1 External Schema2 External Schema3\nFigure1.2LevelsofAbstraction inaDBMS\nConceptual Schema\nTheconceptual schema (sometimes calledthelogicalschema) describes the\nstoreddataintermsofthedatamodeloftheDBMS.Inarelational DBMS,\ntheconceptual schemadescribes allrelations thatarestoredinthedatabase.\nInoursampleuniversity databa..'3e, theserelations contain information about\nentities, suchasstudents andfaculty,andaboutrelationships, suchasstudents'\nenrollment incourses. Allstudent entitiescanbedescribed usingrecordsin\naStudents relation, aswesawearlier.Infact,eachcollection ofentitiesand\neachcollection ofrelationships canbedescribed asarelation, leadingtothe\nfollowing conceptual schema:\nStudents( sid:string, name:string, login:string,\nage:integer, gpa:real)\nFaculty(fid:string,fname:string, sal:real)\nCourses( cid:string, cname:string, credits:integer)\nRooms(nw: integer, address:string, capacity: integer)\nEnrolled (sid:string, cid:string, grade:string)\nTeaches(fid:string, cid:string)\nMeets_In( cid:string, rno:integer, ti'fne:string)\nThechoiceofrelations, andthechoiceoffieldsforeachrelation, isnotalways\nobvious, andtheprocess ofarriving atagoodconceptual schema iscalled\nconceptual database design. vVediscussconceptual databa..se designin\nChapters 2and19.", "48": "14\nPhysical SchemaCHAPTER\u00bb1\nThephysical schema specifies additional storage details. Essentially, the\nphysical schema summarizes howtherelations described intheconceptual\nschema areactually storedonsecondary storage devicessuchasdisksand\ntapes.\nWemustdecidewhatfileorganizations tousetostoretherelations andcreate\nauxiliary datastructures, calledindexes, tospeedupdataretrieval operations.\nAsamplephysical schemafortheuniversity database follows:\n\u2022Storeallrelations asunsorted filesofrecords. (AfileinaDBMSiseither\nacollection ofrecordsoracollection ofpages,ratherthanastringof\ncharacters asinanoperating system.)\n\u2022CreateindexesonthefirstcolumnoftheStudents, Faculty, andCourses\nrelations, thesalcolumnofFaculty, andthecapacity columnofRooms.\nDecisions aboutthephysical schemaarebasedonanunderstanding ofhowthe\ndataistypically accessed. Theprocessofarriving atagoodphysical schema\niscalledphysical database design. Wediscussphysical database designin\nChapter 20.\nExternal Schema\nExternal schemas, whichusuallyarealsointermsofthedatamodelof\ntheDBMS, allowdataaccesstobecustomized (andauthorized) atthelevel\nofindividual usersorgroupsofusers.Anygivendatabase hasexactlyone\nconceptual schema andonephysical schema because ithasjustonesetof\nstoredrelations, butitmayhaveseveralexternal schemas, eachtailored toa\nparticular groupofusers.Eachexternal schemaconsistsofacollection ofoneor\nmoreviewsandrelations fromtheconceptual schema. Aviewisconceptually\narelation, buttherecordsinaviewarenotstoredintheDBMS.Rather,they\narecomputed usingadefinition fortheview,intermsofrelations storedinthe\nDBMS. \\iVediscussviewsinmoredetailinChapters 3and25.\nTheexternal schemadesignisguidedbyenduserrequirements. Forexalnple,\nwemightwanttoallowstudents tofindoutthenamesoffacultymembers\nteaching coursesaswellascourseenrollments. Thiscanbedonebydefining\nthefollowing view:\nCourseinfo( rid:string, fname:string, enTollment: integer)\nAusercantreataviewjustlikearelationandaskquestions abouttherecords\nintheview.Eventhoughtherecordsintheviewarenotstoredexplicitly,", "49": "Overview ofDatabase Systems ).5\ntheyarecomputed asneeded. vVedidnotincludeCourseinfo intheconceptual\nschemabecausewecancompute Courseinfo fromtherelations intheconceptual\nschema, andtostoreitinaddition wouldberedundant. Suchredundancy, in\naddition tothewastedspace,couldleadtoinconsistencies. Forexample, a\ntuplemaybeinserted intotheEnrolled relation, indicating thataparticular\nstudent hasenrolled insomecourse,without incrementing thevalueinthe\nenrollment fieldofthecorresponding recordofCourseinfo (ifthelatteralsois\npartoftheconceptual schemaanditstuplesarestoredintheDBMS).\nL5.3DataIndependence\nAveryimportant advantage ofusingaDBMSisthatitoffersdataindepen\u00ad\ndence.Thatis,application programs areinsulated fromchanges intheway\nthedataisstructured andstored.Dataindependence isachieved through use\nofthethreelevelsofdataabstraction; inparticular, theconceptual schemaand\ntheexternal schemaprovidedistinctbenefits inthisarea.\nRelations intheexternal schema (viewrelations) areinprinciple generated\nondemand fromtherelations corresponding totheconceptual schema.4If\ntheunderlying dataisreorganized, thatis,theconceptual schemaischanged,\nthedefinition ofaviewrelation canbemodified sothatthesamerelation is\ncomputed asbefore. Forexample, suppose thattheFaculty relation inour\nuniversity database isreplaced bythefollowing tworelations:\nFaculty_public(fid:string, fname:string, office:integer)\nFaculty_private (J\u00a3d:string, sal:real)\nIntuitively, someconfidential information aboutfacultyhasbeenplacedina\nseparate relationandinformation aboutofficeshasbeenadded.TheCourseinfo\nviewrelation canberedefined intermsofFaculty_publicandFaculty_private,\nwhichtogether containalltheinformation inFaculty, sothatauserwhoqueries\nCourseinfo willgetthesameanswers asbefore.\nThus,userscanbeshielded fromchanges inthelogicalstructure ofthedata,or\nchanges inthechoiceofrelations tobestored.Thisproperty iscalledlogical\ndataindependence.\nInturn,theconceptual schemainsulates usersfromchanges inphysical storage\ndetails. Thisproperty isreferred toasphysical dataindependence. The\nconceptual schemahidesdetailssuchashowthedataisactually laidouton\ndisk,thefilestructure, andthechoiceofindexes. Aslongastheconceptual\n4Inpractice, theycouldbeprecomputed andstoredtospeedupqueriesonviewrelations, butthe\ncomputed viewrelations mustbeupdated whenever theunderlying relations areupdated.", "50": "16 CHAPTE~ 1\nschemaremainsthesame,wecanchangethesestoragedetailswithout altering\napplications. (Ofcourse,performance mightbeaffected bysuchchanges.)\n1.6QUERIES INADBMS\nTheease\\vithwhichinformation canbeobtained fromadatabase oftende\u00ad\ntermines itsvaluetoauser.Incontrast toolderdatabase systems, relational\ndatabase systems allowarichclassofquestions tobeposedeasily;thisfeature\nhascontributed greatlytotheirpopularity. Consider thesampleuniversity\ndatabase inSection1.5.2.Herearesomequestions ausermightask:\n1.WhatisthenameofthestudentwithstudentID1234567\n2.Whatistheaveragesalaryofprofessors whoteachcourseCS5647\n3.Howmanystudents areenrolled inCS5647\n4.Whatfraction ofstudents inCS564received agradebetterthanB7\n5.IsanystudentwithaCPAlessthan3.0enrolled inCS5647\nSuchquestions involving thedatastoredinaDBMSarecalledqueries. A\nDBMSprovides aspecialized language, calledthequerylanguage, inwhich\nqueriescanbeposed. Averyattractive featureoftherelational modelis\nthatitsupports powerful querylanguages. Relational calculus isaformal\nquerylanguage basedonmathematical logic,andqueriesinthislanguage have\nanintuitive, precisemeaning. Relational algebra isanother formalquery\nlanguage, basedonacollection ofoperators formanipulating relations, which\nisequivalent inpowertothecalculus.\nADBMStakesgreatcaretoevaluate queriesasefficiently aspossible. vVe\ndiscussqueryoptimization andevaluation inChapters 12,Vl,and15.Of\ncourse,theefficiency ofqueryevaluation isdetermined toalargeextentby\nhowthedataisstoredphysically. Indexes canbeusedtospeedupmany\nqueries----in fact,agoodchoiceofindexesfortheunderlying relations canspeed\nupeachqueryinthepreceding list.\\Vediscussdatastorageandindexing in\nChapters 8,9,10,and11.\nADBMSenables userstocreate,modify, andquerydatathrough adata\nmanipulation language (DML). Thus,thequerylanguage isonlyonepart\noftheDl\\ilL,whichalsoprovides constructs toinsert,delete,andmodifydata,.\nvVewilldiscusstheDMLfeatures ofSQLinChapter 5.TheDMLandDDL\narecollectively referred tocl.sthedatasublanguage whenembedded within\nahostlanguage (e.g.,CorCOBOL).", "51": "Overview ofDatabase Systems\n1.7TRANSACTION MANAGEMENT\nConsider adatabase thatholdsinformation aboutairlinereservations. Atany\ngiveninstant, itispossible (andlikely)thatseveraltravelagentsarelook\u00ad\ningupinformation aboutavailable seatsOIlvariousflightsandmakingnew\nseatreservations. Whenseveralusersaccess(andpossibly modify) adatabase\nconcurrently, theDBMSmustordertheirrequests carefully toavoidconflicts.\nForexample, whenonetravelagentlooksupFlight100onsomegivenday\nandfindsanemptyseat,another travelagentmaysimultaneously bemaking\nareservation forthatseat,thereby makingtheinformation seenbythefirst\nagentobsolete.\nAnother example ofconcurrent useisabank'sdatabase. Whileoneuser's\napplication program iscomputing thetotaldeposits, another application may\ntransfer moneyfromanaccountthatthefirstapplication hasjust'seen'toan\naccountthathasnotyetbeenseen,therebycausingthetotaltoappearlarger\nthanitshouldbe.Clearly, suchanomalies shouldnotbeallowedtooccur.\nHowever, disallowing concurrent accesscandegrade performance.\nFurther, theDBMSmustprotectusersfromtheeffectsofsystemfailuresby\nensuring thatalldata(andthestatusofactiveapplications) isrestored toa\nconsistent statewhenthesystemisrestarted afteracrash.Forexample, ifa\ntravelagentasksforareservation tobemade,andtheDBMSresponds saying\nthatthereservation hasbeenmade,thereservation shouldnotbelostifthe\nsystemcrashes. Ontheotherhand,iftheDBMShasnotyetresponded to\ntherequest, butismakingthenecessary changes tothedatawhenthecrash\noccurs,thepartialchangesshouldbeundonewhenthesystemcomesbackup.\nAtransaction isanyone execution ofauserprogram inaDBMS.(Executing\nthesameprogram severaltimeswillgenerate severaltransactions.) Thisisthe\nbasicunitofchangeasseenbytheDBMS:Partialtransactions arenotallowed,\nandtheeffectofagroupoftransactions isequivalent tosomeserialexecution\nofalltransactions. vVebrieflyoutlinehowtheseproperties areguaranteed,\ndeferring adetailed discussion tolaterchapters.\n1.7.1Concurrent Execution ofTransactions\nAnimportant taskofaDBMSistoschedule concurrent accesses todataso\nthateachusercansafelyignorethefactthatothersareaccessing thedata\nconcurrently. Theimportance ofthista.skcannotbeunderestimated because\nadatabase istypically sharedbyalargenumber ofusers,whosubmittheir\nrequests totheDBMSindependently andsimplycannotbeexpected todeal\nwitharbitrary changes beingmadeconcurrently byotherusers.ADBMS", "52": "18 CHAPTER a.\nallowsuserstothinkoftheirprograms &'3iftheywereexecuting inisolation,\noneaftertheotherinsomeorderchosenbytheDBJ\\;:IS. Forexample, ifa\nprogTam thatdeposits cashintoanaccount issubmitted totheDBMSatthe\nsametimeasanotherprogram thatdebitsmoneyfromthesameaccount, either\noftheseprograms couldberunfirstbytheDBMS,buttheirstepswillnotbe\ninterleaved insuchawaythattheyinterfere witheachother.\nAlockingprotocol isasetofrulestobefollowed byeachtransaction (anden\u00ad\nforcedbytheDBMS)toensurethat,eventhoughactionsofseveraltransactions\nmightbeinterleaved, theneteffectisidentical toexecuting alltransactions in\nsomeserialorder.Alockisamechanism usedtocontrolaccesstodatabase\nobjects. Twokindsoflocksarecommonly supported byaDBMS:shared\nlocksonanobjectcanbeheldbytwodifferent transactions atthesametime,\nbutanexclusive lockonanobjectensuresthatnoothertransactions hold\nanylockonthisobject.\nSuppose thatthefollowing lockingprotocol isfollowed: Everytransaction be\u00ad\nginsbyobtaining asharedlockoneachdataobjectthatitneedstoreadandan\nexclusive lockoneachdataobjectthatitneedstornod~fy, thenreleases allits\nlocksaftercompleting allactions. Consider twotransactions T1andT2such\nthatT1wantstomodifyadataobjectandT2wantstoreadthesameobject.\nIntuitively, ifT1'srequestforanexclusive lockontheobjectisgranted first,\nT2cannotproceed untilT1relea..':lesthislock,becauseT2'srequestforashared\nlockwillnotbegrantedbytheDBMSuntilthen.Thus,allofT1'sactionswill\nbecompleted beforeanyofT2'sactionsareinitiated. Weconsider lockingin\nmoredetailinChapters 16and17.\n1.7.2Incomplete Transactions andSystemCrashes\nTransactions canbeinterrupted beforerunning tocompletion forava,rietyof\nreasons, e.g.,asystemcrash.ADBMSmustensurethatthechanges madeby\nsuchincomplete transactions areremoved fromthedatabase. Forexample, if\ntheDBMSisinthemiddleoftransferring moneyfromaccountAtoaccount\nBandhasdebitedthefirstaccountbutnotyetcredited thesecondwhenthe\ncrashoccurs,themoneydebited fromaccountAmustberestored whenthe\nsystemcomesbackupafterthecrash.\nTodoso,theDBMSmaintains alogofallwritestothedatabase. Acrucial\nproperty ofthelogisthateachwriteactionmustberecorded inthelog(ondisk)\nbeforethecorresponding changeisreflected inthedatabase itself--otherwise, if\nthesystemcrcLShesjustaftermakingthechangeinthedatab(Lse butbeforethe\nchangeisrecorded inthelog,theDBIVISwouldbeunabletodetectandundo\nthischange. Thisproperty iscalledWrite-Ahead Log,orWAL.Toensure", "53": "Overview ofDatabase By.stems 19\nthisproperty, theDBMSmustbeabletoselectively forceapageinmemory to\ndisk.\nThelogisalsousedtoensurethatthechanges madebyasuccessfully com\u00ad\npletedtransaction arenotlostduetoasystemcrash,asexplained inChapter\n18.Bringing thedatabase toaconsistent stateafterasystemcrashcanbe\naslowprocess, sincetheDBMSmustensurethattheeffectsofalltransac\u00ad\ntionsthatcompleted priortothecrasharerestored, andthattheeffectsof\nincomplete transactions areundone. Thetimerequired torecoverfromacrash\ncanbereduced byperiodically forcingsomeinformation todisk;thisperiodic\noperation iscalledacheckpoint.\n1.7.3PointstoNote\nInsummary, therearethreepointstoremember withrespecttoDBMSsupport\nforconcurrency controlandrecovery:\n1.Everyobjectthatisreadorwrittenbyatransaction isfirstlockedinshared\norexclusive mode,respectively. Placing alockonanobjectrestricts its\navailability toothertransactions andthereby affectsperformance.\n2.Forefficient logmaintenance, theDBMSmustbeabletoselectively force\nacollection ofpagesinmainmemory todisk.Operating systemsupport\nforthisoperation isnotalwayssatisfactory.\n3.Periodic checkpointing canreducethetimeneededtorecoverfromacrash.\nOfcourse,thismustbebalanced againstthefactthatcheckpointing too\noftenslowsdownnormalexecution.\n1.8STRUCTURE OFADBMS\nFigure1.3showsthestructure (withsomesimplification) ofatypicalDBMS\nbasedontherelational datamodel.\nTheDBMSacceptsSQLcomma,nels generated fromavarietyofuserinterfaces,\nproduces queryevaluation plans,executes theseplansagainstthedatabc4'le, and\nreturnstheanswers. (Thisisasimplification: SQLcommands canbeembedded\ninhost-language application programs, e.g.,JavaorCOBOL programs. vVe\nignoretheseissuestoconcentrate onthecoreDBl\\ilSfunctionality.)\nvVhenauserissuesaquery,theparsedqueryispresented toaqueryopti\u00ad\nmizer,whichusesinformation abouthowthedataisstoredtoproduce an\nefficient execution planforevaluating thequery.Anexecution planisa", "54": "20 CHAPTER 1\nUnsophisticated users(customers, travelagents,etc.)Sophisticated users.application\nprogrammers, DBadministrators\nDBMS\n-showsreferences\nDATABASERecovery\nManagershov.':$command nowSQLInterla<:e\n\\ SystemCatalog\nDataFiles.--/PlanExecutor\nOperator Evaluator\n[C-lInd,\"'I~---\"\"\n'----------,-~-~~-~ ---- ---,.--------.--Query\nEvaluation\nL::::=======~=========::',J' Engine\nFigure1.3Architecture ofaDBMS\nblueprint forevaluating aquery,usuallyrepresented asatreeofrelational op\u00ad\nerators(withannotations thatcontain additional detailed information about\nwhichaccessmethods touse,etc.).Wediscussqueryoptimization inChapters\n12and15.Relational operators serveasthebuilding blocksforevaluating\nqueriesposedagainstthedata.Theimplementation oftheseoperators isdis\u00ad\ncussedinChapters 12and14.\nThecodethatimplements relational operators sitsontopofthefileandaccess\nmethods layer.Thislayersupports theconcept ofafile,which,inaDBMS,isa\ncollection ofpagesoracollection ofrecords.Heapfiles,orfilesofunordered\npages,a:swellasindexes aresupported. Inaddition tokeeping trackofthe\npagesinafile,thislayerorganizes theinformation withinapage.Fileand\npagelevelstorageissuesareconsidered inChapter 9.Fileorganizations and\nindexesarecQIlsidered inChapter 8.\nThefilesandaccessmethods layercodesitsontopofthebuffermanager,\nwhichbringspagesinfromdisktomainmemory ct.\"neededinresponse toread\nrequests. Buffermanagement isdiscussed inChapter 9.", "55": "Ove1'Fie'll} ofDatabase SY.'3te'171S 2).\nThelowestlayeroftheDBMSsoftware dealswithmanagement ofspaceon\ndisk,wherethedataisstored. Higherlayersallocate, deallocate, read,and\nwritepagesthrough (routines provided by)thislayer,calledthediskspace\nmanager. Thislayerisdiscussed inChapter 9.\nTheDBMSsupports concurrency andcrashrecovery bycarefully scheduling\nuserrequests andmaintaining alogofallchangestothedatabase. DBNIScom\u00ad\nponents associated withconcurrency controlandrecovery includethetrans\u00ad\nactionmanager, whichensuresthattransactions requestandreleaselocks\naccording toasuitable lockingprotocol andschedules theexecution transac\u00ad\ntions;thelockmanager, whichkeepstrackofrequests forlocksandgrants\nlocksondatabase objectswhentheybecomeavailable; andtherecovery man\u00ad\nager,whichisresponsible formaintaining alogandrestoring thesystemtoa\nconsistent stateafteracrash.Thediskspacemanager, buffermanager, and\nfileandaccessmethodlayersmustinteractwiththesecomponents. Wediscuss\nconcurrency controlandrecovery indetailinChapter 16.\n1.9PEOPLE WHOWORKWITHDATABASES\nQuiteavarietyofpeopleareassociated withthecreation anduseofdatabases.\nObviously, therearedatabase implementors, whobuildDBMSsoftware,\nandenduserswhowishtostoreandusedatainaDBMS. Dat,abase imple\u00ad\nmentors workforvendorssuchasIBMorOracle.Enduserscomefromadiverse\nandincreasing number offields.Asdatagrowsincomplexity ant(volume, and\nisincreasingly recognized asamajorasset,theimportance ofmaintaining it\nprofessionally inaDBMSisbeingwidelyaccepted. Manyenduser.ssimplyuse\napplications writtenbydatabase application programmers (seebelow)andso\nrequirelittletechnical knowledge aboutDBMSsoftware. Ofcourse,sophisti\u00ad\ncateduserswhomakemoreextensive useofaDBMS,suchaswritingtheirown\nqueries, requireadeeperunderstanding ofitsfeatures.\nInaddition toendusersandimplementors, twoothercla.'3sesofpeopleare\nassociated withaDBMS:application programmer-s anddatabase administrators.\nDatabase application programmers develop packages thatfacilitate data\naccessforendusers,whoareusuallynotcomputer professionals, usingthe\nhostordatalanguages andsoftware toolsthatDBMSvendors provide. (Such\ntoolsincludereportwriters, spreadsheets, statistical packages, andthelike.)\nApplication programs shouldideallyaccessdatathrough theexternal schema.\nItispossible towriteapplications thataccessdataatalowerlevel,butsuch\napplications wouldcomprornise dataindependence.", "56": "22 CHAPTEI~ 1\nApersonal databa'3e istypically maintained bytheindividual who ownsitand\nusesit.However, corporate orenterprise-wide databases aretypically impor\u00ad\ntantenoughandcomplex enoughthatthetaskofdesigning andmaintaining the\ndatabase isentrusted toaprofessional, calledthedatabase administrator\n(DBA). TheDBAisresponsible formanycriticaltasks:\nIIIDesignoftheConceptual andPhysical Schemas: TheDBAisre\u00ad\nsponsible forinteracting withtheusersofthesystemtounderstand what\ndataistobestoredintheDBMSandhowitislikelytobeused.Basedon\nthisknowledge, theDBAmustdesigntheconceptual schema(decidewhat\nrelations tostore)andthephysical schema (decidehowtostorethem).\nTheDBAmayalsodesignwidelyusedportions oftheexternal schema, al\u00ad\nthoughusersprobably augment thisschemabycreating additional views.\nIIISecurity andAuthorization: TheDBAisresponsible forensuring that\nunauthorized dataaccessisnotpermitted. Ingeneral, noteveryone should\nbeabletoaccessallthedata.Inarelational DBMS,userscanbegranted\npermission toaccessonlycertainviewsandrelations. Forexample, al\u00ad\nthoughyoumightallowstudents tofindoutcourseenrollments andwho\nteachesagivencourse,youwouldnotwantstudents toseefacultysalaries\noreachother'sgradeinformation. TheDBAcanenforcethispolicyby\ngivingstudents permission toreadonlytheCourseinfo view.\nIIIDataAvailability andRecovery fromFailures: TheDBAmusttake\nstepstoensurethatifthesystemfails,userscancontinue toaccessasmuch\noftheuncorrupted dataaspossible. TheDBAmustalsoworktorestore\nthedatatoaconsistent state.TheDB.I\\!ISprovides software support for\nthesefunctions, buttheDBAisresponsible forimplementing procedures\ntobackupthedataperiodically andmaintain logsofsystemactivity (to\nfacilitate recovery fromacrash).\nl'ilDatabase Tuning: Users'needsarelikelytoevolvewithtime.TheDBA\nisresponsible formodifying thedatabase, inparticular theconceptual and\nphysical schemas, toensureadequate performance asrequirements change.\n1.10REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIIvVhatarethemainbenefits ofusingaDBMStomanagedatainapplica\u00ad\ntionsinvolving extensive dataaccess?(Sections 1.1,1.4)\nIIIvVhenwouldyoustoredatainaDBMSinsteadofinoperating systemfiles\nandvice-versa? (Section 1.3)", "57": "Over-view ofDatabase Systems 239\n\u2022Whatisadatamodel?\\Vhatistherelational datamodel?Whatisdata\nindependence andhowdoesaDBNISsupport it?(Section 1.5)\n\u2022Explain theadvantages ofusingaquerylanguage insteadofcustompro\u00ad\ngramstoprocessdata.(Section 1.6)\n\u2022Whatisatransaction? \\Vhatguarantees doesaDBMSofferwithrespect\ntotransactions? (Section 1.7)\n\u2022WhatarelocksinaDBMS,andwhyaretheyused?Whatiswrite-ahead\nlogging, andwhyisitused?Whatischeckpointing andwhyisitused?\n(Section 1.7)\n\u2022Identify themaincomponents inaDBMSandbrieflyexplainwhatthey\ndo.(Section 1.8)\n\u2022Explainthedifferent rolesofdatabase administrators, application program\u00ad\nmers,andendusersofadatabase. Whoneedstoknowthemostabout\ndatabase systems? (Section 1.9)\nEXERCISES\nExercise 1.1Whywouldyouchooseadatabase systeminsteadofsimplystoringdatain\noperating systemfiles?Whenwoulditmakesensenottouseadatabase system?\nExercise 1.2Whatislogicaldataindependence andwhyisitimportant?\nExercise 1.3Explain thedifference between logicalandphysical dataindependence.\nExercise 1.4Explain thedifference between external, internal, andconceptual schemas.\nHowarethesedifferent schema layersrelatedtotheconcepts oflogicalandphysical data\nindependence?\nExercise 1.5Whataretheresponsibilities ofaDBA?IfweassumethattheDBAisnever\ninterested inrunning hisorherownqueries, doestheDBAstillneedtounderstand query\noptimization? Why?\nExercise 1.6Scrooge McNugget wantstostoreinformation (names, addresses, descriptions\nofembarrassing moments, etc.)aboutthemanyducksonhispayroll. Notsurprisingly, the\nvolumeofdatacompels himtobuyadatabase system. Tosavemoney,hewantstobuyone\nwiththefewestpossible features, andheplanstorunitasastand-alone application onhis\nPCclone.Ofcourse,Scrooge doesnotplantosharehislistwithanyone. Indicate whichof\nthefollowing DBMSfeatures Scrooge shouldpayfor;ineachcase,alsoindicate whyScrooge\nshould(orshouldnot)payforthatfeatureinthesystemhebuys.\n1.Asecurity facility.\n2.Concurrency control.\n3.Crashrecovery.\n4.Aviewmechanism.", "58": "24 CHAPTER 1\n5.Aquerylanguage.\nExercise 1.1Whichofthefollowing playsanimportant roleinrepresenting information\nabouttherealworldinadatabase'? Explain briefly.\n1.Thedatadefinition language.\n2.Thedatamanipulation language.\n3.Thebuffermanager.\n4.Thedatamodel.\nExercise 1.8Describe thestructure ofaDBMS.Ifyouroperating systemisupgraded to\nsupport somenewfunctions onasfiles(e.g.,theabilitytoforcesomesequence ofbytesto\ndisk),whichlayer(s)oftheDBMSwouldyouhavetorewritetotakeadvantage ofthesenew\nfunctions?\nExercise 1.9Answerthefollowing questions:\n1.Whatisatransaction?\n2.WhydoesaDBMSinterleave theactionsofdifferent transactions insteadofexecuting\ntransactions oneaftertheother?\n3.Whatmustauserguarantee withrespecttoatransaction anddatabase consistency?\nWhatshouldaDBMSguarantee withrespecttoconcurrent execution ofseveraltrans\u00ad\nactionsanddatabase consistency'?\n4.Explain thestricttwo-phase lockingprotocol.\n5.WhatistheWALproperty, andwhyisitimportant?\nPROJECT-BASED EXERCISES\nExercise 1.10UseaWebbrowser tolookattheHTMLdocumentation forMinibase. Try\ntogetafeelfortheoverallarchitecture.\nBIBLIOGRAPHIC NOTES\nTheevolution ofdatabase management systems istracedin[289].Theuseofdatamodels\nfordescribing real-world dataisdiscussed in[423],and[425]contains ataxonomy ofdata\nmodels. Thethreelevelsofabstraction wereintroduced in[186,712].Thenetwork data\nmodelisdescribed in[186],and[775]discusses severalcommercial systems basedonthis\nmodel. [721]contains agoodannotated collection ofsystems-oriented papersondatabase\nmanagement.\nOthertextscovering database management systems include [204,245,305, 3;~9,475,574,\n689, 747, 762].[204]provides adetailed discussion oftherelational modelfromaconcep\u00ad\ntualstandpoint andisnotable foritsextensive annotated bibliography. [574]presents a\nperformance-oriented perspective, withreferences toseveralcommercial systems. [245]and\n[689]offerbroadcoverage ofdataba,se systemconcepts, including adiscussion ofthehierar\u00ad\nchicalandnetwork datamodels. [339]emphasizes theconnection between database query\nlanguages andlogicprogramming. [762]emphasizes datamodels. Ofthesetexts,[747]pro\u00ad\nvidesthemostdetailed discussion oftheoretical issues.Textsdevoted totheoretical aspects\ninclude[3,45,501].Handbook [744]includes asectionondatabases thatcontains introductory\nsurveyarticlesonanumber oftopics.", "59": "2\nINTRODUCTION TO\nDATABASE DESIGN\n..Whatarethestepsindesigning adatabase?\n..WhyistheERmodelusedtocreateaninitialdesign?\n..Whatarethemainconcepts intheERmodel?\n..Whatareguidelines forusingtheERmodeleffectively?\n..Howdoesdatabase designfitwithintheoveralldesignframework for\ncomplex software withinlargeenterprises?\n..WhatisUMLandhowisitrelatedtotheERmodel?\n..Keyconcepts: database design,conceptual, logical,andphysical\ndesign;entity-relationship (ER)model,entityset,relationship set,\nattribute, instance, key;integrity constraints, one-to-many andmany\u00ad\nto-many relationships, participation constraints; weakentities, class\nhierarchies, aggregation; UML,classdiagrams, clataba,se diagrams,\ncomponent diagrams.\nThegreatsuccessful menofthe\\vorldhaveusedtheirimaginations. They\nthinkaheadandcreatetheirmentalpicture.andthengotoworkmaterializing that\npictureinallitsdetails,fillinginhere,addingalittlethere,altering thisbitand\nthatbit,butsteadily building, steadily building.\nRobertCollier\nThe (~ntitY-T'd(ltion8hip (ER)data'modelallowsustodescribe thedatainvolved\ninareal-world enterprise intermsofobjectsandtheirrelationships andis\nwidelyusedto(levelop aninitialdataba.'3e design.Itprovides usefuleoncepts\nthatallowustomovefronlaninformal description ofwhatuserswe:mt1'rorn\n25", "60": "26 CHAPTEij, 2\ntheirdatabase toamoredetailed, precisedescription thatcanbeimplemented\ninaDBMS.Inthischapter, weintroduce theERmodelanddiscusshowits\nfeatures allowustomodelawiderangeofdatafaithfully.\n\\Vebeginwithanoverview ofdataba...')e designinSection2.1inordertomotivate\nourdiscussion oftheERmodel.\\Vithinthelargercontextoftheoveralldesign\nprocess, theERmodelisusedinaphasecalledconceptual database design.\n\\Vethenintroduce theERmodelinSections 2.2,2.3,and2.4.InSection2.5,\nwediscussdatabase designissuesinvolving theERmodel.Webrieflydiscuss\nconceptual database designforlargeenterprises inSection2.6.InSection2.7,\nwepresentanoverview ofUML,adesignandmodeling approach thatismore\ngeneralinitsscopethantheERmodel.\nInSection2.8,weintroduce acasestudythatisusedasarunning example\nthroughout thebook.Thecasestudyisanend-to-end database designforan\nInternet shop.Weillustrate thefirsttwostepsindatabase design(requirements\nanalysisandconceptual design)inSection2.8.Inlaterchapters, weextendthis\ncasestudytocovertheremaining stepsinthedesignprocess.\nWenotethatmanyvariations ofERdiagrams areinuseandnowidelyaccepted\nstandards prevail. Thepresentation inthischapter isrepresentative ofthe\nfamilyofERmodelsandincludes aselection ofthemostpopular features.\n2.1DATABASE DESIGN ANDERDIAGRAMS\nWebeginourdiscussion ofdatabase designbyobserving thatthisistypically\njustonepart,although acentralpartindata-intensive applications, ofalarger\nsoftware systemdesign.Ourprimary focusisthedesignofthedatabase, how\u00ad\never,andwewillnotdiscussotheraspectsofsoftware designinanydetail.We\nrevisitthispointinSection2.7.\nThedatabase designprocesscanbedividedintosixsteps.TheERmodelis\nmostrelevant tothefirstthreesteps.\n1.Requirements Analysis: Theveryfirststepindesigning adatabase\napplication istounderstand whatdataistobestoredinthedatabase,\nwhatapplications mustbebuiltontopofit,andwhatoperations are\nmostfrequent andsubjecttoperformance requirements. Inotherwords,\nwemustfindoutwhattheuserswantfromthedatabase. Thisisusually\naninformal processthatinvolves discussions withusergroups, astudy\nofthecurrentoperating environment andhowitisexpected tochange,\nanalysis ofanyavailable documentation onexisting applications thatare\nexpected tobereplaced orcomplemented bythedatabase, andsoOIl.", "61": "IntToduct'ion toDatabase Design 27.\nDatabase Design Tools:Designtoolsareavailable fromRDBwiS ven\u00ad\ndorsaswellasthird-party vendors. Forexample! seethefollowing linkfor\ndetailsondesignandanalysis toolsfromSybase:\nhttp://www.sybase.com/products/application_tools\nThefollowing provides detailsonOracle's tools:\nhttp://www.oracle.com/tools\nSeveralmethodologies havebeenproposed fororganizing andpresenting\ntheinformation gathered inthisstep,andsomeautomated toolshavebeen\ndeveloped tosupport thisprocess.\n2.Conceptual Database Design: Theinformation gathered intherequire\u00ad\nmentsanalysis stepisusedtodevelop ahigh-level description ofthedata\ntobestoredinthedatabase, alongwiththeconstraints knowntoholdover\nthisdata.ThisstepisoftencarriedoutusingtheERmodelandisdis\u00ad\ncussedintherestofthischapter. TheERmodelisoneofseveralhigh-level,\norsemantic, datamodelsusedindatabase design.Thegoalistocreate\nasimpledescription ofthedatathatcloselymatches howusersanddevel\u00ad\nopersthinkofthedata(andthepeopleandprocesses toberepresented in\nthedata).Thisfacilitates discussion amongallthepeopleinvolved inthe\ndesignprocess, eventhosewhohavenotechnical background. Atthesame\ntime,theinitialdesignmustbesufficiently precisetoenableastraightfor\u00ad\nwardtranslation intoadatamodelsupported byacommercial database\nsystem(which,inpractice, meanstherelational model).\n3.Logical Database Design: WemustchooseaDBMStoimplement\nourdatabctse design,andconverttheconceptual database designintoa\ndatabase schemainthedatamodelofthechosenDBMS.Wewillconsider\nonlyrelational DBMSs, andtherefore, thetaskinthelogicaldesignstep\nistoconvertanERschemaintoarelational database schema. Wedis\u00ad\ncussthisstepindetailinChapter 3;theresultisaconceptual schema,\nsometimes calledthelogicalschema, intherelational datamodel.\n2.1.1BeyondERDesign\nTheERdiagram isjustanapproximate description ofthedata,constructed\nthrough asubjective evaluation oftheinformation collected duringrequire\u00ad\nmentsanalysis. Amorecarefulanalysis canoftenrefinethelogicalschema\nobtained attheendofStep3.Oncewehaveagoodlogicalschema, wemust\nconsider performance criteriaanddesignthephysical schema. Finally,wemust\naddresssecurity issuesandensurethatusersareabletoaccessthedatathey\nneed,butnotdatathatwewishtohidefromthem.Theremaining threesteps\nofclatabase designarebrieflydescribed next:", "62": "28 CHAPTER. 2\n4.Schema Refinement: Thefourthstepilldataba')e designistoanalyze\nthecollection ofrelations inourrelational database schematoidentify po\u00ad\ntentialproblems, andtorefineit.Incontrast totherequirements analysis\nandconceptual designsteps,whichareessentially subjective, schemare\u00ad\nfinement canbeguidedbysomeelegantandpowerful theory.\\Vediscuss\nthetheoryofnormalizing relations-restructuring themtoensuresome\ndesirable properties-in Chapter 19.\n5.Physical Database Design: Inthisstep,weconsider typicalexpected\nworkloads thatourdatabase mustsupport andfurtherrefinethedatabase\ndesigntoensurethatitmeetsdesiredperformance criteria. Thisstepmay\nsimplyinvolvebuilding indexesonsometablesandclustering sometables,\noritmayinvolveasubstantial redesign ofpartsofthedatabase schema\nobtained fromtheearlierdesignsteps.Wediscussphysical designand\ndatabase tuninginChapter 20.\n6.Application andSecurity Design: Anysoftware projectthatinvolves\naDBMSmustconsider aspects oftheapplication thatgobeyondthe\ndatabase itself.Designmethodologies likeUML(Section 2.7)trytoad\u00ad\ndressthecomplete software designanddevelopment cycle.Briefly,wemust\nidentify theentities(e.g.,users,usergroups,departments) andprocesses\ninvolved intheapplication. Wemustdescribe theroleofeachentityinev\u00ad\neryprocessthatisreflected insomeapplication task,aspartofacomplete\nworkflow forthattask.Foreachrole,wemustidentify thepartsofthe\ndatabase thatmustbeaccessible andthepartsofthedatabase thatmust\nnotbeaccessible, andwemusttakestepstoensurethattheseaccessrules\nareenforced. ADBMSprovides severalmechanisms toassistinthisstep,\nandwediscussthisinChapter 21.\nIntheimplementation phase,wemustcodeeachtaskinanapplication lan\u00ad\nguage(e.g.,Java),usingtheDBlVIStoaccessdata.Wediscussapplication\ndevelopment inChapters 6and7.\nIngeneral, ourdivision ofthedesign process intostepsshouldbeseenasa\nclassification ofthekindsofstepsinvolved indesign. Realistically, although\nwemightbeginwiththesixstepprocessoutlined here,acomplete database\ndesignwillprobably requireasubsequent tuning phaseinwhichallsixkinds\nofdesignstepsareinterleaved andrepeated untilthedesignissatisfactory.\n2.2ENTITIES, ATTRIBUTES, ANDENTITY SETS\nAnentityisanobjectintherealworldthatisdistinguishable frQmother\nobjects. Examples includethefollowing: theGreenDragonzord toy,thetoy\ndepartment, themanager ofthetoydepartment, thehomeaddressofthernan-", "63": "Introd'lJ.ctioTt toDatabase De8'(qn\nagel'ofthetoydepartment. Itisoftenusefultoidentifyacollection ofsimilar\nentities. Suchacollection iscalledanentityset.Notethatentitysetsneed\nnotbedisjoint; thecollection oftoydepartment employees andthecollection\nofappliance department employees maybothcontainemployee JohnDoe(who\nhappens toworkinbothdepartments). \\Vecouldalsodefineanentitysetcalled\nEmployees thatcontains boththetoyandappliance department employee sets.\nAnentityisdescribed usingasetofattributes. Allentitiesinagivenentity\nsethavethesameattributes; thisiswhatwemeanbysimilar. (Thisstatement\nisanoversimplification, aswewillseewhenwediscussinheritance hierarchies\ninSection2.4.4,butitsufficesfornowandhighlights themainidea.)Our\nchoiceofattributes reflectsthelevelofdetailatwhichwewishtorepresent\ninformation aboutentities. Forexample, theEmployees entitysetcoulduse\nname,socialsecurity number (ssn),andparkinglot(lot)asattributes. Inthis\ncasewewillstorethename,socialsecurity number, andlotnumber foreach\nemployee. However, wewillnotstore,say,anemployee's address(orgenderor\nage).\nForeachattribute associated withanentityset,wemustidentifyadomain of\npossible values.Forexample, thedomainassociated withtheattribute name\nofEmployees mightbethesetof20-character strings.1Asanother example, if\nthecompany ratesemployees onascaleof1to10andstoresratingsinafield\ncalledmting,theassociated domainconsists ofintegers 1through 10.FUrther,\nforeachentityset,wechooseakey.Akeyisaminimal setofattributes whose\nvaluesuniquely identify anentityintheset.Therecouldbemorethanone\ncandidate key;ifso,wedesignate oneofthemastheprimary key.Fornowwe\nassumethateachentitysetcontains atleastonesetofattributes thatuniquely\nidentifies anentityintheentityset;thatis,thesetofattributes contains akey.\nWerevisitthispointinSection2.4.3.\nTheEmployees entitysetwithattributes ssn,name,andlotisshowninFigure\n2.1.Anentitysetisrepresented byarectangle, andanattribute isrepresented\nbyanoval.Eachattribute intheprimary keyisunderlined. Thedomain\ninformation couldbelistedalongwiththeattribute name,butweomitthisto\nkeepthefigurescompact. Thekeyiss.m.\n2.3\nREL~TIONSHIPS ANDRELATIONSHIP SETS\nArelationship isanassociation amongtwoormoreentities. Forexample, we\nmayhavetherelationship thatAttishoo worksinthepharmacy department.\niToavoidconfusion, weassumethatattribute namesdonotrepeatacrossentitysets.Thisisnot\nareallimitation because wecanalwaysusetheentitysetnametoresolveambiguities ifthesame\nattribute nameisusedinmorethanoneentityset.", "64": "30 CHAPTER 2\nFigure 2.1TheEmployees EntitySet\nAswithentities, wemaywishtocollectasetofsimilarrelationships intoa\nrelationship set.Arelationship setcanbethought ofasasetofn-tuples:\nEachn-tupledenotesarelationship involving nentities elthrough en,where\nentityeiisinentitysetEi.InFigure2.2weshowtherelationship setWorks_In,\ninwhicheachrelationship indicates adepartment inwhichanemployee works.\nNotethatseveralrelationship setsmightinvolvethesameentitysets.For\nexample, wecouldalsohaveaManages relationship setinvolving Employees\nandDepartments.\nFigure2.2TheWorks-ln Relationship Set\nArelationship canalsohavedescriptive attributes. Descriptive attributes\nareusedtorecordinformation abouttherelationship, ratherthanaboutany\noneoftheparticipating entities; forexample, wemaywishtorecordthatAt\u00ad\ntishooworksinthepharmacy department asofJanuary 1991.Thisinformation\niscaptured inFigure2.2byaddinganattribute, since,toWorks_In. Arelation\u00ad\nshipmustbeuniquely identified bytheparticipating entities,without reference\ntothedescriptive attributes. IntheWorks_In relationship set,forexample, each\nWorks_In relationship mustbeuniquely identified bythecombination ofem\u00ad\nployeessnanddepartment d'id.Thus,foragivenemployee-department pair,\nwecannothavemorethanoneassociated sincevalue.\nAninstance ofarelationship setisasetofrelationships. Intuitively, an\ninstance canbethoughtof&'3a'snapshot' oftherelationship setatsomeinstant", "65": "Introduction toDatabase Design ;31\nintime.Aninstance ofthevVorks.ln relationship setisshowninFigure2.3.\nEachEmployees entityisdenoted byitsssn,andeachDepartments entity\nisdenoted byitsdid,forsimplicity. Thesincevalueisshownbesideeach\nrelationship. (The'many-te-many' and'totalparticipation' comments inthe\nfigurearediscussed later,whenwediscussintegrity constraints.)\n~__I---\\-~---r-~ 5J\n---IIL---t----j-----W ~\n--.__---t-----\\I-:::::~~\nEMPLOYEES\nTotalparticipationWORKS_IN\nManytoManyDEPARTMENTS\nTotalparticipation\nFigure2.3AnInstance oftheWorks_In Relationship Set\nAsanotherexample ofanERdiagram, supposethateachdepartment hasoffices\ninseverallocations andwewanttorecordthelocations atwhicheachemployee\nworks.Thisrelationship isternary because wemustrecordanassociation\nbetween anemployee, adepartment, andalocation. TheERdiagram forthis\nvariantofWorks_In, whichwecallWorks.ln2, isshowninFigure2.4.\nFigure2.4ATernary Relationship Set\nTheentitysetsthatparticipate inarelationship setneednotbedistinct; some\u00ad\ntimesarelationship mightinvolvetwoentitiesinthesameentityset.Forex\u00ad\nample,consider theReports_To relationship setshowninFigure2.5.Since", "66": "32 CHAPTER 2\nemployees report.tootheremployees, everyrelationship inReports_To isof\ntheform(emlJ1.emp2),wherebothemplandempzareentitiesinEmployees.\nHowever, theyplaydifferent roles:ernplreportstothemanaging employee\nemp2,whichisreflected intheroleindicators supervisor andsubordinate in\nFigure2.5.Ifanentitysetplaysmorethanonerole,theroleindicator concate\u00ad\nnatedwithanattribute namefromtheentitysetgivesusauniquenamefor\neachattribute intherelationship set.Forexample, theReports_To relation\u00ad\nshipsethasattributes corresponding tothessnofthesupervisor andthessn\nofthesubordinate, andthenamesoftheseattributes aresupcrvisoLssn and\nsubordinate-ssn.\nFigure2.5TheReports_To Relationship Set\n2.4ADDITIONAL FEATURES OFTHEERMODEL\nWenowlookatsomeoftheconstructs intheERmodelthatallowustodescribe\nsomesubtleproperties ofthedata.Theexpressiveness oftheERmodelisa\nbigreasonforitswidespread lise.\n2.4.1KeyConstraints\nConsider theWorks-.In relationship showninFigure2.2.Anemployee can\nworkinseveraldepartments, andadepartment canhaveseveralemployees, &.,\nillustrated inthevVorks_In instance showninFigure2.3.Employee 231-31-5368\nh&.,workedinDepartment 51since3/3/93andinDepartment 56since2/2/92.\nDepartment 51h&'3twoemployees.\nNowconsider another relationship setcalledManages between theEmploy\u00ad\neesandDepartments entitysetssuchthateachdepartment h&')atmostone\nmanager, although asingleemployee isallowedtomanage morethanonede\u00ad\npartment. Therestriction thateachdepartment h&,>atmostonemanager is", "67": "Introduction toDatabase Des'ign 33\nanexample ofakeyconstraint, anditimpliesthateachDepartments entity\nappears inatmostone1Jlanages relationship inanyallowable instance ofMan\u00ad\nages.Thisrestriction isindicated intheERdiagram ofFigure2.6byusingan\narrowfromDepartments toManages. Intuitively, thearrowstatesthatgiven\naDepartments entity,wecanuniquely determine theManages relationship in\nwhichitappears.\nFigure 2.6KeyConstraint onManages\nAninstance oftheManages relationship setisshowninFigure2.7.Whilethis\nisalsoapotential instance fortheWorksJn relationship set,theinstance of\nWorks_In showninFigure2.3violatesthekeyconstraint onManages.\n1123-22-36661.\n!231-31-53681\n[223-32-6316\\\n--..----t-------;'-------a~\n~\n~\nEMPLOYEES\nPartialparticipationMANAGES\nOnetoManyDEPARTMENTS\nTotalparticipation\nFigure2.7AnInstance oftheManages Relationship Set\nArelationship setlikeManages issometimes saidtobeone-to-many, to\nindicate thatoneemployee canbeassociated withmanydepartments (inthe\ncapacity ofamanager), whereas eachdepartment canbeassociated withat\nmostoneemployee asitsmanager. Incontrast, the\\Vorks-.In relationship set,in\nwhichanemployee isallowedtoworkinseveraldepartments andadepartment\nisallowedtohaveseveralemployees, issaidtobemany-to-many.", "68": "34 CHAPTER 2\nIfweaddtherestriction thateachemployee canmanageatmostonedepl:1J't\u00ad\nmenttotheManages relationship set,whichwouldbeindicated byadding\nanarrowfromEmployees tolVlanages inFigure2.6,wehaveaone-to-one\nrelationship set.\nKeyConstraints forTernaryRelationships\nWecanextendthisconvention-and theunderlying keyconstraint concept-to\nrelationship setsinvolving threeormoreentitysets:IfanentitysetEhasa\nkeyconstraint inarelationship setR,eachentityinaninstance ofEappears\ninatmostonerelationship in(acorresponding instance of)R.Toindicate a\nkeyconstraint onentitysetEinrelationship setR,wedrawanarrowfromE\ntoR.\nInFigure2.8,weshowaternaryrelationship withkeyconstraints. Eachem\u00ad\nploy~eworksinatmostonedepartment andatasinglelocation. Aninstance\noftheWorks_In3 relationship setisshowninFigure2.9.Notethateachdepart\u00ad\nmentcanbeassociated withseveralemployees andlocations andeachlocation\ncanbeassociated withseveraldepartments andemployees; however, eachem\u00ad\nployeeisassociated withasingledepartment andlocation.\nlot\nEmployees WorksJn3 Departments\nFigure 2.8ATernary Relationship SetwithKeyConstraints\n2.4.2Participation Constraints\nThekeyconstraint onManages tellsusthatadepartment ha:satmostone\nmanager. Anaturalquestion toaskiswhether everydepartment ha.'3aInan\u00ad\nagel'.Letussaythateverydepartment isrequired tohaveamanager. This\nrequirement isanexample ofaparticipation constraint; theparticip::ltion of\ntheentitysetDepartments intherelationship setManages issaidtobetotal.\nAparticipation thatisnottotalissaidtobepartial. Asanexample, the", "69": "Introduction toDatabase Design\n\u2022 IParisIEMPLOYEES!223-32-63161/~~\n//;123-22-3666) a..:~---~-r---'\"\n(~~\n1131-24-36501\nKeyconstraint\nLOCATIONS\nFigure2.9AnInstance ofWorks_In3\nparticipation oftheentitysetEmployees inManages ispartial,sincenotevery\nemployee getstomanage adepartment.\nRevisiting theWorks..ln relationship set,itisnaturaltoexpectthateachem\u00ad\nployeeworksinatleastonedepartment andthateachdepartment hasatleast\noneemployee. Thismeansthattheparticipation ofbothEmployees andDe\u00ad\npartments inWorks..ln istotal.TheERdiagram inFigure2.10showsboth\ntheManages andWorks..ln relationship setsandallthegivenconstraints. If\ntheparticipation ofanentitysetinarelationship setistotal,thetwoarecon\u00ad\nnectedbyathickline;independently, thepresence ofanarrowindicates akey\nconstraint. Theinstances ofWorks_In andManages showninFigures2.3and\n2.7satisfyalltheconstraints inFigure2.10.\n2.4.3WeakEntities\nThusfar,wehaveassumed thattheattributes associated withanentityset\nincludeakey.Thisassumption doesnotalwayshold.Forexample, suppose\nthatemployees canpurchase insurance policiestocovertheirdependents. \"Ve\nwishtorecordinformation aboutpolicies, including whoiscovered byeach\npolicy,butthisinformation isreallyouronlyinterest inthedependents ofan\nemployee. Ifanemployee quits,anypolicyownedbytheemployee isterminated\nandwewanttodeletealltherelevant policyanddependent information from\nthedatabase.", "70": "36 CHAPTETh 2\nFigure 2.10Manages andWorks_In\nWemightchoosetoidentifyadependent bynamealoneinthissituation, since\nitisreasonable toexpectthatthedependents ofagivenemployee havedifferent\nnames.Thustheattributes oftheDependents entitysetmightbepnameand\nage.Theattribute pnamedoesnotidentify adependent uniquely. Recall\nthatthekeyforEmployees isssn;thuswemighthavetwoemployees called\nSmethurst andeachmighthaveasoncalledJoe.\nDependents isanexample ofaweakentityset.Aweakentitycanbeiden\u00ad\ntifieduniquely onlybyconsidering someofitsattributes inconjunction with\ntheprimary keyofanother entity,whichiscalledtheidentifying owner.\nThefollowing restrictions musthold:\n11'ITheownerentitysetandtheweakentitysetmustparticipate inaone\u00ad\nto-many relationship set(oneownerentityisassociated withoneormore\nweakentities, buteachweakentityhasasingleowner). Thisrelationship\nsetiscalledtheidentifying relationship setoftheweakentityset.\nIIITheweakentitysetmusthavetotalparticipation intheidentifying rela\u00ad\ntionship set.\nForexample, aDependents entitycanbeidentified uniquely onlyifwetakethe\nkeyoftheowningEmployees entityandthepnameoftheDependents entity.\nThesetofattributes ofaweakentitysetthatuniquely identify aweakentity\nforagivenownerentityiscalledapartialkeyoftheweakentityset.Inour\nexample, pnameisapartialkeyforDependents.", "71": "Introd'uction toDatabase Design\nTheDependents weakentitysetanditsrelationship toEmployees isshownin\nFigure2.1.1.Thetotalparticipation ofDependents inPolicyisindicated by\nlinkingthemwithadarkline.ThearrowfromDependents toPolicyindicates\nthateachDependents entityappears inatmostone(indeed, exactlyone,be\u00ad\ncauseoftheparticipation constraint) Policyrelationship. Tounderscore the\nfactthatDependents isaweakentityandPolicyisitsidentifying relationship,\nwedrawbothwithdarklines.Toindicate thatpnameisapartialkeyfor\nDependents, weunderline itusingabrokenline.Thismeansthattheremay\nwellbetwodependents withthesamepnamevalue.\nEmployees\nFigure 2.11AWeakEntitySet\n2.4.4ClassHierarchies\nSometimes itisnaturaltoclassifytheentitiesinanentitysetintosubclasses.\nForexample, wemightwanttotalkaboutanHourly-Empsentitysetanda\nContracLEmps entitysettodistinguish thebasisonwhichtheyarepaid.We\nmighthaveattributes hours_worked andhourly_wage definedforHourly_Emps\nandanattribute contractid definedforContracLEmps.\nWewantthesemantics thateveryentityinoneofthesesetsisalsoanEm\u00ad\nployeesentityand,assuch,musthavealltheattributes ofEmployees defined.\nTherefore, theattributes definedforanHourly_Empsentityaretheattributes\nforEmployees plusHourly ~mps.\\Vesaythattheattributes fortheentityset\nEmployees areinherited bytheentitysetHourly_EmpsandthatHourly-Emps\nISA(readisa)Employees. Inaddition-and incontrast toclasshierarchies\ninprogramming languages such&'3C++~~~there isaconstraint onqueriesover\ninstances oftheseentitysets:AquerythatasksforallEmployees entities\nmustconsider allHourly_EmpsandContracLEmps entitiesaswell.Figure\n2.12illustrates,the cl&sshierarchy.\nTheentitysetEmployees mayalsobeclassified usingadifferent criterion. For\nexample, wemightidentify asubsetofemployees &'3SenioLEmps. Wecan\nrnodifyFigure2.12toreflectthischangebyaddingasecondISAnode&'3a\nchildofEmployees andmakingSenioLEmps achildofthisnode.Eachofthese\nentitysetsmightbeclassified further,creating amultilevel ISAhierarchy.", "72": "38 CHAPTEJl; 2\nhourly-wages\nFigure 2.12ClassHierarchy\nAclasshierarchy canbeviewedinoneoftwoways:\n\u2022Employees isspecialized intosubclasses. Specialization istheprocess\nofidentifying subsetsofanentityset(thesuperclass) thatsharesome\ndistinguishing characteristic. Typically, thesuperclass isdefinedfirst,the\nsubclasses aredefinednext,andsubclass-specific attributes andrelation\u00ad\nshipsetsarethenadded.\n\u2022Hourly-EmpsandContracLEmps aregeneralized byEmployees. Asan\u00ad\notherexample, twoentitysetsMotorboats andCarsmaybegeneralized\nintoanentitysetMotoLVehicles. Generalization consists ofidentifying\nsomecommon characteristics ofacollection ofentitysetsandcreating a\nnewentitysetthatcontains entitiespossessing thesecommon character\u00ad\nistics.Typically, thesubclasses aredefinedfirst,thesuperclass isdefined\nnext,andanyrelationship setsthatinvolvethesuperclass arethendefined.\nWecanspecifytwokindsofconstraints withrespecttoISAhierarchies, namely,\noverlapandcovering constraints. Overlap constraints determine whether\ntwosubclasses areallowedtocontainthesameentity.Forexample, canAt\u00ad\ntishoobebothanHourly_EmpsentityandaContracLEmps entity?Intuitively,\nno.CanhebebothaContracLEmps entityandaSenior-Empsentity?Intu\u00ad\nitively,yes.Wedenotethisbywriting'ContracLE;mps OVERLAPS Senior-Emps.'\nIntheabsence ofsuchastatement, weassumebydefaultthatentitysetsare\nconstrained tohavenooverlap.\nCovering constraints determine whether theentitiesinthesubclasses collec\u00ad\ntively include allentitiesinthesuperclass. Forexample, doeseveryEmployees", "73": "Introduction toDatabase Design\nentityhavetobelongtooneofitssubclasses? Intuitively, no.Doesevery\n~'IotoLVehicles entityhavetobeeitheraMotorboats entityoraCarsentity?\nIntuitively, yes;acharacteristic property ofgeneralization hierarchies isthat\neveryinstance ofasuperclass isaninstance ofasubclass. vVedenotethisby\nwriting'Motorboats ANDCarsCOVERMotor-Vehicles.' Intheabsence ofsucha\nstatement, weassumebydefaultthatthereisnocovering constraint; wecan\nhavemotorvehiclesthatarenotmotorboats orcars.\nTherearetwobasicreasons foridentifying subclasses (byspecialization or\ngeneralization) :\n1.Wemightwanttoadddescriptive attributes thatmakesenseonlyforthe\nentitiesinasubclass. Forexample, hourly_wages doesnotmakesensefora\nContracLEmps entity,whosepayisdetermined byanindividual contract.\n2.Wemightwanttoidentifythesetofentitiesthatparticipate insomerela\u00ad\ntionship. Forexample, wemightwishtodefinetheManages relationship\nsothattheparticipating entitysetsareSenior-Emps andDepartments,\ntoensurethatonlysenioremployees canbemanagers. Asanother exam\u00ad\nple,Motorboats andCarsmayhavedifferent descriptive attributes (say,\ntonnage andnumber ofdoors),butasMotor_Vehicles entities, theymust\nbelicensed. Thelicensing information canbecaptured byaLicensed_To\nrelationship between Motor_Vehicles andanentitysetcalledOwners.\n2.4.5Aggregation\nAsdefinedthusfar,arelationship setisanassociation between entitysets.\nSometimes, wehavetomodelarelationship between acollection ofentities\nandrelationships. Suppose thatwehaveanentitysetcalledProjects andthat\neachProjects entityissponsored byoneormoredepartments. TheSpon\u00ad\nsorsrelationship setcaptures thisinformation. Adepartment thatsponsors a\nprojectmightassignemployees tomonitor thesponsorship. Intuitively, Moni\u00ad\ntorsshouldbearelationship setthatassociates aSponsors relationship (rather\nthanaProjects orDepartments entity)withanEmployees entity.However,\nwehavedefinedrelationships to&'3sociate twoormoreentities.\nTodefinearelationship setsuch&'3Monitors, weintroduce anewfeatureof\ntheERmodel,calledaggregation. Aggregation allowsustoindicate that\narelationship set(identified through adashedbox)participates inanother\nrelationship set.Thisisillustrated inFigure2.13,withadashedboxaround\nSponsors (anditsparticipating entitysets)usedtodenoteaggregation. This\neffectively allowsustotreatSponsors asanentitysetforpurposes ofdefining\ntheMonitors relationship set.", "74": "40 CHAPTER 2\nMonitors\n/~\nI._._.-- - - .-- - - - - - - - - ~ -~- - - - - --- - - - - - - - - - -~-- - - - - - ----- - - - ~- - - - -- - - ------;\nI\nI\n~:\n- I\nDepartments SponsorsI\nI\nI\nI\nI\n---------------------------------------- 1I\n------~~~~~-------\nFigure2.13Aggregation\nWhenshouldweuseaggregation? Intuitively, weuseitwhenweneedtoex\u00ad\npressarelationship amongrelationships. Butcanwenotexpressrelationships\ninvolving otherrelationships without usingaggregation? Inourexample, why\nnotmakeSponsors aternaryrelationship? Theansweristhattherearereally\ntwodistinctrelationships, Sponsors andMonitors, eachpossibly withattributes\nofitsown.Forinstance, theMonitors relationship hasanattribute 1tntilthat\nrecordsthedateuntilwhentheemployee isappointed asthesponsorship mon\u00ad\nitor.Compare thisattribute withtheattribute sinceofSponsors, whichisthe\ndatewhenthesponsorship tookeffect.Theuseofaggregation versusaternary\nrelationship mayalsobeguidedbycertainintegrity constraints, asexplained\ninSection2.5.4.\n2.5CONCEPTUAL DESIGN WITHTHEERMODEL\nDeveloping anERdiagram presents severalchoices, including thefollowing:\n..Shouldaconcept bemodeled asanentityoranattribute?\n..Shouldaconcept bemodeled &'3anentityorarelationship?\nII\"Vhatarctherelationship setsandtheirparticipating entitysets?Should\nweusebinaryorternaryrelationships?\nIIShouldweuseaggregation?", "75": "Introd'lLct'ion toDatabase Design\n\\Venowdiscusstheissuesinvolved inmakingthesechoices.\n2.5.1EntityversusAttribute41\n\\Vhileidentifying theattributes ofanentityset,itissometimes notclear\nwhether aproperty shouldbemodeled asanattribute orasanentityset(and\nrelatedtothefirstentitysetusingarelationship set).Forexample, consider\naddingaddressinformation totheEmployees entityset.Oneoptionistouse\nanattribute address. Thisoptionisappropriate ifweneedtorecordonly\noneaddressperemployee, anditsufficestothinkofanaddressasastring.An\nalternative istocreateanentitysetcalledAddresses andtorecordassociations\nbetween employees andaddresses usingarelationship (say,Has_Address). This\nmorecomplex alternative isnecessary intwosituations:\n\u2022Wehavetorecordmorethanoneaddressforanemployee.\n\u2022Wewanttocapturethestructure ofanaddress inourERdiagram. For\nexample, wemightbreakdownanaddress intocity,state,country, and\nZipcode,inaddition toastringforstreetinformation. Byrepresenting an\naddressasanentitywiththeseattributes, wecansupport queriessuchas\n\"Findallemployees withanaddressinMadison, WI.\"\nForanother example ofwhentomodelaconcept asanentitysetratherthan\nanattribute, consider therelationship set(calledWorksJ:n4) showninFigure\n2.14.\nFigure 2.14The\\Vorks_In4 Relationship Set\nItdiffersfromthe\\Vorks_In relationship setofFigure2.2onlyinthatithas\nattributes JTOtnandto,insteadofsince.Intuitively, itrecordstheinterval\nduringwhichanemployee worksforadepartment. Nowsuppose thatitis\npossible foranemployee toworkinagivendepartment overmorethanone\nperiod.\nThispossibility isruledoutbytheERdiagram's semantics, because arela\u00ad\ntionship isuniquely identified bytheparticipating entities(recallfromSection", "76": "42 CHAPTER' 2\n2.3).Theproblem isthatwewanttorecordseveralvaluesforthedescriptive\nattributes foreachinstance ofthevVorks-ln2 relationship. (Thissituation is\nanalogous towanting torecordseveraladdresses foreachemployee.) vVecan\naddressthisproblem byintroducing anentitysetcalled,say,Duration, with\nattributes fromandto,asshowninFigure2.15.\n(~~-T:~~~)\nIEmployees I WorksJn4 Departments\nfrom to\nFigure2.15TheWorks-ln4 Relationship Set\nInsomeversions ofthe'ERmodel,attributes areallowedtotakeonsetsas\nvalues.Giventhisfeature, wecouldmakeDuration anattribute ofWorks_In,\nratherthananentityset;associated witheachWorks_In relationship, wewould\nhaveasetofintervals. Thisapproach isperhaps moreintuitive thanmodel\u00ad\ningDuration asanentityset.Nonetheless, whensuchset-valued attributes\naretranslated intotherelational model,whichdoesnotsupport set-valued\nattributes, theresulting relational schemaisverysimilartowhatwegetby\nregarding Duration asanentityset.\n2.5.2EntityversusRelationship\nConsider therelationship setcalledManages inFigure2.6.Suppose thateach\ndepartment manager isgivenadiscretionary budget(dbudget) ,asshownin\nFigure2.16,inwhichwehavealsorenamed therelationship settoManages2.\nFigure2.16EntityversusRelationship", "77": "Introduction toDatabase Design\nGivenadepartment, weknowthemanager, aswell&'3themanager's starting\ndateandbudgetforthatdepartment. Thisapproach isnaturalifwet'l\"ssume\nthatamanager receives aseparate discretionary budgetforeachdepartment\nthatheorshemanages.\nButwhatifthediscretionary budgetisasumthatcoversalldepartments\nmanaged bythatemployee? Inthiscase,eachManages2 relationship that\ninvolves agivenemployee willhavethesamevalueinthedb1Ldgetfield,leading\ntoredundant storage ofthesameinformation. Another problem withthis\ndesignisthatitismisleading; itsuggests thatthebudgetisassociated with\ntherelationship, whenitisactually associated withthemanager.\nWecanaddresstheseproblems byintroducing anewentitysetcalledManagers\n(whichcanbeplacedbelowEmployees inanISAhierarchy, toshowthatevery\nmanager isalsoanemployee). Theattributes sinceanddbudgetnowdescribe\namanager entity,asintended. Asavariation, whileeverymanager hasa\nbudget,eachmanager mayhaveadifferent starting date(asmanager) foreach\ndepartment. Inthiscasedbudgetisanattribute ofManagers, butsinceisan\nattribute oftherelationship setbetween managers anddepartments.\nTheimprecise natureofERmodeling canthusmakeitdifficult torecognize\nunderlying entities, andwemightassociate attributes withrelationships rather\nthantheappropriate entities. Ingeneral, suchmistakes leadtoredundant\nstorage ofthesameinformation andcancausemanyproblems. Wediscuss\nredundancy anditsattendant problems inChapter 19,andpresentatechnique\ncallednormalization toeliminate redundancies fromtables.\n2.5.3BinaryversusTernary Relationships\nConsider theERdiagram showninFigure2.17.Itmodelsasituation inwhich\nanemployee canownseveralpolicies, eachpolicycanbeownedbyseveral\nemployees, andeachdependent canbecoveredbyseveralpolicies.\nSuppose thatwehavethefollowing additional requirements:\nIIIApolicycannotbeownedjointlybytwoormoreemployees.\n11IIEverypolicymustbeownedbysomeemployee.\nlIIIDependents isaweakentityset,andeachdependent entityisuniquely\nidentified bytakingpnameinconjunction withthepolicyid ofapolicy\nentity(which,intuitively, coversthegivendependent).\nThefirstrequirement suggests thatweimposeakeyconstraint onPolicieswith\nrespecttoCovers,butthisconstraint hastheunintended sideeffectthata", "78": "44\nC~~C~T~\n~I\nIEmployeeslot\nCovers\nFigure2.17Policies asanEntitySetCHAPTERf 2\npolicycancoveronlyonedependent. Thesecondrequirement suggests thatwe\nimposeatotalparticipation constraint onPolicies. Thissolution isacceptable\nifeachpolicycoversatleastonedependent. Thethirdrequirement forcesus\ntointroduce anidentifying relationship thatisbinary(inourversionofER\ndiagrams, although thereareversions inwhichthisisnotthecase).\nEvenignoring thethirdrequirement, thebestwaytomodelthissituation isto\nusetwobinaryrelationships, asshowninFigure2.18.\nFigure 2.18PolicyRevisited", "79": "IntTod'U(~t\"ion toDatabase Des'ign 45.\nThisexample reallyhastworelationships involving Policies, andourattempt\ntouseasingleternaryrelationship (Figure2.17)isinappropriate. Thereare\nsituations, however, \"vherearelationship inherently a.'3sociates morethantwo\nentities. vVehaveseensuchanexample inFigures2,4and2.15.\nAsatypicalexample ofaternaryrelationship, consider entitysetsParts,Sup\u00ad\npliers,andDepartments, andarelationship setContracts (withdescriptive\nattribute qty)thatinvolves allofthem.Acontract specifies thatasupplier will\nsupply(somequantity of)aparttoadepartment. Thisrelationship cannot\nbeadequately captured byacollection ofbinaryrelationships (without theuse\nofaggregation). Withbinaryrelationships, wecandenotethatasupplier 'can\nsupply'certainparts,thatadepartment 'needs'someparts,orthatadepart\u00ad\nment'dealswith'acertainsupplier. Nocombination oftheserelationships\nexpresses themeaning ofacontract adequately, foratleasttworeasons:\n\u2022Thefactsthatsupplier ScansupplypartP,thatdepartment Dneedspart\nP,andthatDwillbuyfromSdonotnecessarily implythatdepartment D\nindeedbuyspartPfromsupplier S!\n\u2022Wecannotrepresent theqtyattribute ofacontract cleanly.\n2.5.4Aggregation versusTernary Relationships\nAswenotedinSection2.4.5,thechoicebetween usingaggregation oraternary\nrelationship ismainlydetermined bytheexistence ofarelationship thatrelates\narelationship settoanentityset(orsecondrelationship set).Thechoicemay\nalsobeguidedbycertainintegrity constraints thatwewanttoexpress. For\nexample, consider theERdiagram showninFigure2.13.According tothisdia\u00ad\ngram,aprojectcanbesponsored byanynumberofdepartments, adepartment\ncansponsor oneormoreprojects, andeachsponsorship ismonitored byone\normoreemployees. Ifwedon'tneedtorecordtheunt-ilattribute ofMonitors,\nthenwemightreasonably useaternal'Yrelationship, say,Sponsors2, asshown\ninFigure2.19.\nConsider theconstraint thateachsponsorship (ofaprojectbyadepartment)\nbemonitored byatmostoneemployee. VVecannotexpressthisconstraint\nintermsoftheSponsors2 relationship set.Ontheotherhand,wecaneasily\nexpressthecOnstraint bydrawing anarrowfromtheaggregated relationship\nSponsors totherelationship Monitors inFigure2.13.Thus,thepresence of\nsuchaconstraint serves&sanother reasonforusingaggregation ratherthana\nternaryrelationship set.", "80": "46 CHAPTERt2\nEmployees\nstarted_on\nG:(:P\nProjects Sponsors2dname\nG:(?\n>-------11 Department<1\nFigure 2.19UsingaTernary Relationship insteadofAggregation\n2.6CONCEPTUAL DESIGN FORLARGE ENTERPRISES\nWehavethusfarconcentrated ontheconstructs available intheERmodel\nfordescribing variousapplication concepts andrelationships. Theprocessof\nconceptual designconsists ofmorethanjustdescribing smallfragments ofthe\napplication intermsofERdiagrams. Foralargeenterprise, thedesignmayre\u00ad\nquiretheeffortsofmorethanonedesigner andspandataandapplication code\nusedbyanumber ofusergroups. Usingahigh-level, semantic datamodel,\nsuchasERdiagrams, forconceptual designinsuchanenvironment offersthe\nadditional advantage thatthehigh-level designcanbediagrammatically rep\u00ad\nresented andeasilyunderstood bythemanypeoplewhomustprovideinputto\nthedesignprocess.\nAnimportant aspectofthedesignprocessisthemethodology usedtostructure\nthedevelopment oftheoveralldesignandensurethatthedesigntakesinto\naccount alluserrequirements andisconsistent. Theusualapproach isthatthe\nrequirements ofvarioususergroupsareconsidered, anyconflicting requirements\naresomehow resolved, andasinglesetofglobalrequirements isgenerated at\ntheendofthe.requirements analysis phase.Generating asinglesetofglobal\nrequirements isadifficult task,butitallowstheconceptual designphaseto\nproceed withthedevelopment ofalogicalschemathatspansallthedataand\napplications throughout theenterprise.\nAnalternative approach istodevelopseparate conceptual scherna.'-l fordifferent\nusergroupsandthenintegTate theseconceptual schemas. Tointegrate multi~", "81": "Intmduction toDatabase De.s'ign 47\npIeconceptual schemas, wemust\u20ac'Btablish correspondences between entities,\nrelationships, andattributes, andwemustresolvenumerous kindsofconflicts\n(e.g.,namingconflicts, domainmismatches, differences inmeasurement units).\nThistaskisdifficult initsownright.Insomesituations, schemaintegration\ncannotbeavoided; forexample, whenoneorganization mergeswithanother,\nexisting databases mayhavetobeintegrated. Schema integration isalsoin\u00ad\ncreasing inimportance asusersdemand accesstoheterogeneous datasources,\noftenmaintained bydifferent organizations.\n2.7THEUNIFIED MODELING LANGUAGE\nTherearemanyapproaches toend-to-end software systemdesign,covering all\nthestepsfromidentifying thebusiness requirements tothefinalspecifications\nforacomplete application, including workflow, userinterfaces, andmanyas\u00ad\npectsofsoftware systemsthatgowellbeyonddatabases andthedatastoredin\nthem.Inthissection,webrieflydiscussanapproach thatisbecoming popular,\ncalledtheunifiedmodeling language (UML)approach.\nUML,liketheERmodel,hastheattractive featurethatitsconstructs canbe\ndrawnasdiagrams. Itencompasses abroaderspectrum ofthesoftware design\nprocessthantheERmodel:\nIIIBusiness Modeling: Inthisphase,thegoalistodescribe thebusiness\nprocesses involved inthesoftware application beingdeveloped.\nIIISystem Modeling: Theunderstanding ofbusiness processes isusedto\nidentifytherequirements forthesoftware application. Onepartofthe\nrequirements isthedatabase requirements.\nIIIConceptual Database Modeling: Thisstepcorresponds tothecreation\noftheERdesignforthedatabase. Forthispurpose, UMLprovides many\nconstructs thatparalleltheERconstructs.\nIIIPhysical Database Modeling: Ul\\ILalsoprovides pictorial represen\u00ad\ntationsforphysical database designchoices, such &'3thecreation oftable\nspacesandindexes. (\\\\1ediscussphysical databa\"se designinlaterchapters,\nbutnotthecorresponding UMLconstructs.)\nIIIHardware System Modeling: UMLdiagrams canbeusedtodescribe\nthehardware configuration usedfortheapplication.\nTh(~rearemanykindsofdiagrams inUML.Usecasediagrams describe the\nactionsperformed bythesysteminresponse touser requests, andthepeople\ninvolved intheseactions. Thesediagrams specifytheexternal functionality\n<-hatthesystemisexpected tosupport.", "82": "48 CHAPTER;2\nActivity diagrams 8hmvtheflowofactionsinabusiness process. Statechart\ndiagrams describe dynamic interactions between systemobjects. Thesedia\u00ad\ngrams,usedinbusine.c;s andsysternmodeling, describe howtheexternal func\u00ad\ntionality istobeimplemented, consistent withthebusiness rulesandprocesses\noftheenterprise.\nClassdiagrams aresimilartoERdiagrams, although theyaremoregeneral\ninthattheyareintended tomodelapplication entities(intuitively, important\nprogram components) andtheirlogicalrelationships inaddition todataentities\nandtheirrelationships.\nBothentitysetsandrelationship setscanberepresented asclassesinUML,\ntogether withkeyconstraints, weakentities, andclasshierarchies. Theterm\nrelationship isusedslightlydifferently inUML,andUML'srelationships are\nbinary. Thissometimes leadstoconfusion overwhether relationship setsin\nanERdiagram involving threeormoreentitysetscanbedirectlyrepresented\ninUML.Theconfusion disappears onceweunderstand thatallrelationship\nsets(intheERsense)arerepresented asclassesinUML;thebinaryUML\n'relationships' areessentially justthelinksshowninERdiagrams between\nentitysetsandrelationship sets.\nRelationship setswithkeyconstraints areusuallyomitted fromUMLdiagrams,\nandtherelationship isindicated bydirectly linkingtheentitysetsinvolved.\nForexample, consider Figure2.6.AUMLrepresentation ofthisERdiagram\nwouldhaveaclassforEmployees, aclassforDepartments, andtherelationship\nManages isshownbylinkingthesetwoclasses.Thelinkcanbelabeledwith\nanameandcardinality information toshowthatadepartment canhaveonly\nonemanager.\nAswewillseeinChapter 3,ERdiagrams aretranslated intotherelational\nmodelbymapping eachentitysetintoatableandeachrelationship setinto\natable.FUrther, aswewillseeinSection3.5.3,thetablecorresponding toa\none-to-many relationship setistypically omitted byincluding someadditional\ninformation abouttherelationship inthetableforoneoftheentitysetsin\u00ad\nvolved.Thus,UMLclassdiagrams correspond closelytothetablescreatedby\nmapping anERdiagram.\nIndeed,everyclassinaU1I1Lclassdiagram ismapped intoatableinthecor\u00ad\nresponding U]\\'1Ldatabase diagram. UML'sdatabase diagrams showhow\nclassesarerepresented inthedatabase andcontain additional detailsabout\nthestructure ofthedatabase suchasintegrity constraints andindexes. Links\n(UML's 'relationships') between UMLclassesleadtovariousintegrity con\u00ad\nstraints between thecorresponding tables. Manydetailsspecifictothere\u00ad\nlational model(e.g.,views,fOTe'ignkeys,null-allowed fields)andthatreflect", "83": "Introduction toDutaba8C Design 49\nphysical designchoices(e.g.,indexedfields)canbemodeled illUN[Ldatabase\ndiagrams.\nUML'scomponent diagrams describe storageaspectsofthedatabase, such\nastablespaces anddatabase pa,titions) ,aswellasinterfaces toapplications\nthataccessthedatabase. Finally,deployment diagrams showthehardware\naspectsofthesystem.\nOurobjective inthisbookistoconcentrate onthedatastoredinadatabase\nandtherelateddesignissues.Tothisend,wedeliberately takeasimplified\nviewoftheotherstepsinvolved insoftware designanddevelopment. Beyond\nthespecificdiscussion ofUlIIL,thematerial inthissectionisintended toplace\nthedesignissuesthatwecoverwithinthecontextofthelargersoftware design\nprocess. \\Vehopethatthiswillassistreadersinterested inamorecomprehen\u00ad\nsivediscussion ofsoftware designtocomplement ourdiscussion byreferring to\nothermaterial ontheirpreferred approach tooverallsystemdesign.\n2.8CASESTUDY: THEINTERNET SHOP\nWenowintroduce anillustrative, 'cradle-to-grave' designcasestudythatwe\nuseasarunning example throughout thisbook.DBDudes Inc.,awell-known\ndatabase consulting firm,hasbeencalledintohelpBarnsandNobble(B&N)\nwithitsdatabase designandimplementation. B&Nisalargebookstore special\u00ad\nizinginbooksonhorseracing,andithasdecidedtogoonline.DBDudes first\nverifiesthatB&Niswillingandabletopayitssteepfeesandthenschedules a\nlunchmeeting--billed toB&N, naturally~to dorequirements analysis.\n2.8.1Requirements Analysis\nTheownerofB&N,unlikemanypeoplewhoneedadatabase, hasthought\nextensively aboutwhathewantsandoffersaconcisesummary:\n\"Iwouldlikemycustomers tobeabletobrowsemycatalogofbooksand\nplaceordersovertheInternet. Currently, Itakeordersoverthephone.Ihave\nmostlycorporate customers whocallmeandgivemetheISBNnumberofa\nbookandaquantity; theyoftenpaybycreditcard.Ithenprepareashipment\nthatcontains thebookstheyordered. IfIdon'thaveenoughcopiesinstock,\nIorderadditional copiesanddelaytheshipment untilthenewcopiesarrive;\nIwanttoshipacustomer's entireordertogether. Mycatalogincludes allthe\nbooksIsell.Foreachbook,thecatalogcontains itsISBNnumber, title,author,\npurcha.se price,salesprice,andtheyearthebookwaspublished. Mostofmy\nsustomers areregulars, andIhaverecordswiththeirnamesandaddresses.", "84": "50\nyear-published\nOrders\nFigure 2.20ERDiagram oftheInitialDesignCHAPTER\u00a22\nNewcustomers havetocallmefirstandestablish anaccount beforetheycan\nusemywebsite.\nOnmynewwebsite, customers shouldfirstidentify themselves bytheirunique\ncustomer identification number. Thentheyshouldbeabletobrowsemycatalog\nandtoplaceordersonline.\"\nDBDudes's consultants arealittlesurprised byhowquicklytherequirements\nphaseiscompleted--it usuallytakesweeksofdiscussions (andmanylunches\nanddinners) togetthisdone~~but returntotheirofficestoanalyzethisinfor\u00ad\nmation.\n2.8.2Conceptual Design\nIntheconceptual designstep,DBDudesdevelops ahighleveldescription of\nthedataintermsoftheERmodel. TheinitialdesignisshowninFigure\n2.20.Booksandcustomers aremodeled asentitiesandrelatedthrough orders\nthatcustomers place.Ordersisarelationship setconnecting theBooksand\nCustomers entitysets.Foreachorder,thefollowing attributes arestored:\nquantity, orderdate,andshipdate.Assoonasanorderisshipped, theship\ndateisset;untilthentheshipdateissettonull,indicating thatthisorderhas\nnotbeenshipped yet.\nDBDudes hasaninternal designreviewatthispoint,andseveralquestions are\nraised.Toprotecttheiridentities, wewillrefertothedesignteamleaderas\nDude1andthedesignreviewer asDude2.\nDude2:\\\\Thatifa.customer placestwoordersforthesamebookinoneday?\nDude1:Thefirstorderisha,ndlecl bycrea.ting anewOrdersrelationship and", "85": "Introduct'ion toDatabase Design 51,\nthesecondorderishandled byupdating thevalueofthequantity attribute in\nthisrelationship.\nDude2:\\\\Thatifacustomer placestwoordersfordifferent booksinoneday?\nDude1:Noproblem. Eachinstance oftheOrdersrelationship setrelatesthe\ncustomer toadifferent book.\nDude2:Ah,butwhatifacustomer placestwoordersforthesamebookon\ndifferent days?\nDude1:\\Vecanusetheattribute orderdateoftheorders relationship to\ndistinguish thetwoorders.\nDude2:Ohnoyoucan't.Theattributes ofCustomers andBooksmustjointly\ncontainakeyforOrders. Sothisdesigndoesnotallowacustomer toplace\nordersforthesamebookondifferent days.\nDude1:Yikes,you'reright.Ohwell,B&Nprobably won'tcare;we'llsee.\nDBDudes decidestoproceed withthenextphase,logicaldatabase design;we\nrejointheminSection3.8.\n2.9REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Namethemainstepsindatabase design.Whatisthegoalofeachstep?\nInwhichstepistheERmodelmainlyused?(Section 2.1)\n\u2022Definetheseterms:entity,entityset,attribute, key.(Section 2.2)\n\u2022Definetheseterms:relationship, relationship set,descriptive attributes.\n(Section 2.3)\n\u2022Definethefollowing kindsofconstraints, andgiveanexample ofeach:key\nconstraint, participation constraint. Whatisaweakentity?Whatareclass\nhierarchies'? Whatisaggregation? Giveanexample scenario motivating\ntheuseofeachoftheseERmodeldesignconstructs. (Section 2.4)\n\u2022Whatguidelines wouldyouuseforeachofthesechoiceswhendoingER\ndesign:\\Vhether touseanattribute oranentityset,anentityorarelation\u00ad\nshipset,abinaryorternaryrelationship, oraggregation. (Section 2.5)\nIII'lWhyisdesigning adatabase foralargeenterprise especially hard?(Sec\u00ad\ntion2.6)\n\u2022WhatisUML?Howdoesdataba\"se designfitintotheoveralldesignof\nadata-intensive software system? HowisUMLrelatedtoERdiagrams?\n(Section 2.7)", "86": "52\nEXERCISESCHAPTERJ2\nExercise 2.1Explain thefollowing termsbriefly: attribute, domain, entity,relationship,.\nentityset,relationship set,one-to-many relat'ionship, many-to-many 1'elationship. pan\u00b7tcipa\u00ad\ntionconstmint. overlapconstraint, covering constraint, weakentityset,.aggregat'ion, androle\nindicator.\nExercise 2.2Auniversity database contains information aboutprofessors (identified byso\u00ad\ncialsecurity number, orSSN)andcourses(identified bycourseid). Professors teachcourses;\neachofthefollowing situations concerns theTeaches relationship set.Foreachsituation,\ndrawanERdiagram thatdescribes it(assuming nofurtherconstraints hold).\n1.Professors canteachthesamecourseinseveralsemesters, andeachoffering mustbe\nrecorded.\n2.Professors canteachthesamecourseinseveralsemesters, andonlythemostrecent\nsuchoffering needstoberecorded. (Assume thiscondition appliesinallsubsequent\nquestions. )\n3.Everyprofessor mustteachsomecourse.\n4.Everyprofessor teachesexactlyonecourse(nomore,noless).\n5.Everyprofessor teachesexactlyonecourse(nomore,noless),andeverycoursemustbe\ntaughtbysomeprofessor.\n6.Nowsuppose thatcertaincoursescanbetaughtbyateamofprofessors jointly,butit\nispossible thatnooneprofessor inateamcanteachthecourse. Modelthissituation,\nintroducing additional entitysetsandrelationship setsifnecessary.\nExercise 2.3Consider thefollowing information aboutauniversity database:\nIIProfessors haveanSSN,aname,anage,arank,andaresearch specialty.\nIIProjects haveaprojectnumber, asponsor name(e.g.,NSF),astarting date,anending\ndate,andabudget.\nIIGraduate students haveanSSN,aname,anage,andadegreeprogram (e.g.,M.S.or\nPh.D.).\nIIEachprojectismanaged byoneprofessor (knownastheproject's principal investigator).\nIIEachprojectisworkedonbyoneormoreprofessors (knownastheproject's co-investigators).\nIIIProfessors canmanageand/orworkonmultiple projects.\nIIEachprojectisworkedonbyoneormoregraduate students (knownastheproject's\nresearch assistants).\nIIWhengraduate students >'larkonaproject, aprofessor mustsupervise theirworkonthe\nproject. Graduate students canworkonmultiple projects, inwhichcasetheywillhave\na(potentially different) supervisor foreachone.\nIIDepartments haveadepartment number, adepartment name,andamainoffice.\nIIDepartments haveaprofessor (knownasthechairman) whorunsthedepartment.\nIIProfessors workinoneormoredepartments, andforeachdepartment thattheywork\nin,atimepercentage isassociated withtheirjob.\nIIGraduate students haveonemajordepartment inwhichtheyareworking OIltheirdegree.", "87": "Introduction toDatabase Design ~3\nIIIEachgraduate studenthasanother, moreseniorgraduate student (knownasastudent\nadvisor) whoadviseshimorherOIlwhatcoursestotake.\nDesignanddra\\vanERdiagram thatcaptures theinformation abouttheuniversity. Useonly\nthebasicERmodelhere;thatis,entities, relationships, andattributes. Besuretoindicate\nanykeyandparticipation constraints.\nExercise 2.4Acompany database needstostoreinformation aboutemployees (identified\nbyssn,withsalaryandphoneasattributes), departments (identified bydna,withdnameand\nbudgetasattributes), andchildren ofemployees (withnameandageasattributes). Employees\nworkindepartments; eachdepartment ismanaged byanemployee; achildmustbeidentified\nuniquely bynamewhentheparent(whoisanemployee; assumethatonlyoneparentworks\nforthecompany) isknown. Wearenotinterested ininformation aboutachildoncethe\nparentleavesthecompany.\nDrawanERdiagram thatcaptures thisinformation.\nExercise 2.5Notown Records hasdecidedtostoreinformation aboutmusicians whoperform\nonitsalbums(aswellasothercompany data)inadatabase. Thecompany haswiselychosen\ntohireyouasadatabase designer (atyourusualconsulting feeof$2500jday).\nIIIEachmusician thatrecordsatNotown hasanSSN,aname,anaddress, andaphone\nnumber. Poorlypaidmusicians oftensharethesameaddress, andnoaddresshasmore\nthanonephone.\nIIIEachinstrument usedinsongsrecorded atNotown hasaname(e.g.,guitar,synthesizer,\nflute)andamusical key(e.g.,C,B-flat,E-flat).\nIIIEachalbumrecorded ontheNotown labelhasatitle,acopyright date,aformat(e.g.,\nCDorMC),andanalbumidentifier.\nIIIEachsongrecorded atNotown hasatitleandanauthor.\nIIIEachmusician mayplayseveralinstruments, andagiveninstrument maybeplayedby\nseveralmusicians.\nIIIEachalbumhasanumber ofsongsonit,butnosongmayappearonmorethanone\nalbum.\nIIIEachsongisperformed byoneormoremusicians, andamusician mayperform anumber\nofsongs.\nIIIEachalbumhasexactlyonemusician whoactsasitsproducer. Amusician mayproduce\nseveralalbums, ofcourse.\nDesign'aconceptual schema forNotown anddrawanERdiagram foryourschema. The\npreceding information describes thesituation thattheNotown database mustmodel.Besure\ntoindicate allkeyandcardinality constraints andanyassumptions youmake.Identify any\nconstraints youareunabletocapture intheERdiagram andbrieflyexplainwhyyoucould\nnotexpressthem.\nExercise 2.6Computer Sciences Department frequent fliershavebeencomplaining toDane\nCountyAirportofficialsaboutthepoororganization attheairport. Asaresult,theofficials\ndecidedthatallinformation relatedtotheairportshouldbeorganized usingaDBMS,and\nyouhavebeenhiredtodesignthedatabase. Yourfirsttaskistoorganize theinformation\naboutalltheairplanes stationed andmaintainecl attheairport. Therelevant information is\nasfollows:", "88": "54 CHAPTER 12\n\u2022Everyairplane hasaregistration number, andeachairplane isofaspecificmodel.\n\u2022Theairportaccommodates anumber ofairplane models,andeachmodelisidentified by\namodelnumber (e.g.,DC-lO)andhasacapacity andaweight.\n\u2022 Anumber oftechnicians workattheairport. Youneedtostorethename,SSN,address,\nphonenumber, andsalaryofeachtechnician.\n\u2022Eachtechnician isanexpertononeormoreplanemodel(s), andhisorherexpertise may\noverlapwiththatofothertechnicians. Thisinformation abouttechnicians mustalsobe\nrecorded.\n\u2022Trafficcontrollers musthaveanannualmedical examination. Foreachtrafficcontroller,\nyoumuststorethedateofthemostrecentexam.\n\u2022Allairportemployees (including technicians) belongtoaunion.Youmuststorethe\nunionmembership number ofeachemployee. Youcanassumethateachemployee is\nuniquely identified byasocialsecurity number.\n\u2022Theairporthasanumberofteststhatareusedperiodically toensurethatairplanes are\nstillairworthy. EachtesthasaFederalAviation Administration (FAA)testnumber, a\nname,andamaximum possible score.\n\u2022TheFAArequires theairporttokeeptrackofeachtimeagivenairplane istestedbya\ngiventechnician usingagiventest.Foreachtestingevent,theinformation neededisthe\ndate,thenumber ofhoursthetechnician spentdoingthetest,andthescoretheairplane\nreceived onthetest.\n1.DrawanERdiagram fortheairportdatabase. Besuretoindicatethevariousattributes\nofeachentityandrelationship set;alsospecifythekeyandparticipation constraints for\neachrelationship set.Specifyanynecessary overlapandcovering constraints a.swell(in\nEnglish).\n2.TheFAApassesaregulation thattestsonaplanemustbeconducted byatechnician\nwhoisanexpertonthatmodel. Howwouldyouexpress thisconstraint intheER\ndiagram?Ifyoucannotexpressit,explainbriefly.\nExercise 2.7ThePrescriptions-R-X chainofpharmacies ha.sofferedtogiveyouafreelife\u00ad\ntimesupplyofmedicine ifyoudesignitsdatabase. Giventherisingcostofhealthcare,you\nagree.Here'stheinformation thatyougather:\n11IIPatients areidentified byanSSN,andtheirnames,addresses, andagesmustberecorded.\n11IIDoctors areidentified byanSSN.Foreachdoctor,thename,specialty, andyearsof\nexperience mustberecorded.\nIIIEachpharmaceutical company isidentified bynameandhasaphonenumber.\nIIIForeachdrug,thetradenameandformula mustberecorded. Eachdrugissoldby\nagivenpharmaceutical company, andthetradenameidentifies adruguniquely from\namongthepJ;oducts ofthatcompany. Ifapharmaceutical company isdeleted, youneed\nnotkeeptrackofitsproducts anylonger.\nIIIEachpharmacy hasaname,address, andphonenumber.\nIIIEverypatienthasaprimary physician. Everydoctorhasatleastonepatient.\n\u2022Eachpharmacy sellsseveraldrugsandhasapriceforeach.Adrugcouldbesoldat\nseveralpharmacies, andthepricecouldvaryfromonepharmacy toanother.", "89": "IntToduction toDatabaBe Design 55\n\u2022Doctors prescribe drugsforpatients. Adoctorcouldprescribe oneormoredrugsfor\nseveralpatients, andapatientcouldobtainprescriptions fromseveraldoctors. Each\nprescription hasadateandaquantity associated withit.Youcanassumethat,ifa\ndoctorprescribes thesamedrugforthesamepatientmorethanonce,onlythelastsuch\nprescription needstobestored.\n\u2022Pharmaceutical companies havelong-term contracts withpharmacies. Apharmaceutical\ncompany cancontract withseveralpharmacies, andapharmacy cancontract withseveral\npharmaceutical companies. Foreachcontract, youhavetostoreastartdate,anenddate,\nandthetextofthecontract.\n\u2022Pharmacies appoint asupervisor foreachcontract. Theremustalwaysbeasupervisor\nforeachcontract, butthecontract supervisor canchangeoverthelifetimeofthecontract.\n1.DrawanERdiagram thatcaptures thepreceding information. Identify anyconstraints\nnotcaptured bytheERdiagram.\n2.Howwouldyourdesign change ifeachdrugmustbesoldatafixedpricebyallpharma\u00ad\ncies?\n3.Howwouldyourdesignchangeifthedesignrequirements changeasfollows:Ifadoctor\nprescribes thesamedrugforthesamepatientmorethanonce,severalsuchprescriptions\nmayhavetobestored.\nExercise 2.8Although youalwayswantedtobeanartist,youendedupbeinganexperton\ndatabases because youlovetocookdataandyousomehow confused database withdatabaste.\nYouroldloveisstillthere,however, soyousetupadatabase company, ArtBase, thatbuildsa\nproduct forartgalleries. Thecoreofthisproduct isadatabase withaschemathatcaptures\nalltheinformation thatgalleries needtomaintain. Galleries keepinformation aboutartists,\ntheirnames(whichareunique), birthplaces, age,andstyleofart.Foreachpieceofartwork,\ntheartist,theyearitwasmade,itsuniquetitle,itstypeofart(e.g.,painting, lithograph,\nsculpture, photograph), anditspricemustbestored.Piecesofartwork arealsoclassified into\ngroupsofvariouskinds,forexample, portraits, stilllifes,worksbyPicasso, orworksofthe\n19thcentury; agivenpiecemaybelongtomorethanonegroup.Eachgroupisidentified by\naname(likethosejustgiven)thatdescribes thegroup.Finally, galleries keepinformation\naboutcustomers. Foreachcustomer, galleries keepthatperson's uniquename,address, total\namount ofdollarsspentinthegallery(veryimportant!), andtheartistsandgroupsofart\nthatthecustomer tendstolike.\nDrawtheERdiagram forthedatabase.\nExercise 2.9Answerthefollowing questions.\n\u2022Explainthefollowing termsbriefly: UML,usecasediagrams, statechart diagrams, class\ndiagrams, database diagrams, component diagrams, anddeployment diagrams.\n\u2022Explaintherelationship between ERdiagrams andUML.\nBffiLIOGRAPHIC NOTES\nSeveralbooksprovide agoodtreatment ofconceptual design;theseinclude [63J(whichalso\ncontains asurveyofcommercial database designtools)and[730J.\nTheERmodelwa..<;proposed byChen[172],andextensions havebeenproposed inanumber\nofsubsequent papers. Generalization andaggregation wereintroduced in[693].[390,589]", "90": "56 CHAPTER ,;2\ncontain goodsurveys ofsemantic datamodels. Dynamic andtemporal aspectsofsemantic\ndatamodelsarediscussed in[749].\n[731]discusses adesignmethodology basedondeveloping anERdiagram andthentranslating\nittotherelational model.Markowitz considers referential integrity inthecontext ofERto\nrelational mapping anddiscusses thesupport provided insomecommercial systems (a..<;of\nthatdate)in[513,514].\nTheentity-relationship conference proceedings containnumerous papersonconceptual design,\nwithanemphasis ontheERmodel;forexample, [698].\nTheOMGhomepage(www.omg.org)contains thespecification forUMLandrelatedmodeling\nstandards. Numerous goodbooksdiscussUML;forexample [105,278,640]andthereisa\nyearlyconference dedicated totheadvancement ofUML,theInternational Conference onthe\nUnifiedModeling Language.\nViewintegration isdiscussed inseveralpapers,including [97,139, 184, 244,535,551,550,\n685,697,748].[64]isasurveyofseveralintegration approaches.", "91": "3\nTHERELATIONAL MODEL\n....Howisdatarepresented intherelational model?\n....Whatintegrity constraints canbeexpressed?\n....Howcandatabecreatedandmodified?\n....Howcandatabemanipulated andqueried?\n....Howcanwecreate,modify,andquerytablesusingSQL?\n....Howdoweobtainarelational database designfromanERdiagram?\n....Whatareviewsandwhyaretheyused?\n..Keyconcepts: relation, schema, instance, tuple,field,domain,\ndegree, cardinality; SQLDDL,CREATE TABLE, INSERT, DELETE,\nUPDATE; integrity constraints, domain constraints, keyconstraints,\nPRIMARY KEY,UNIQUE, foreignkeyconstraints, FOREIGN KEY;refer\u00ad\nentialintegrity maintenance, deferred andimmediate constraints; re\u00ad\nlational queries; logicaldatabase design,translating ERdiagrams to\nrelations, expressing ERconstraints usingSQL;views,viewsandlog:\u00ad\nicalindependence, security; creating viewsinSQL,updating views,\nquerying views,dropping views\nTABLE:Anarrangement ofwords,numbers, orsigns,orcombinations ofthem,\n&sinparallelcolumns, toexhibitasetoffactsorrelations inadefinite, compact,\nandcomprehensive form;asynopsis orscheme.\n-----vVebster's Dictionary oftheEnglish Language\nCoddproposed therelational datamodelin1970.Atthattime,mostdataba,,'Se\nsystems werebasedononeoftwoolderdatamodels(thehierarchical model\n57", "92": "58 CHAPTER ~\nSQL.Originally developed asthequerylanguage ofthepioneering\nSystem-R relational DBl\\1SatIBIYl,structured querylanguage (SQL)\nhasbecomethemostwidelyusedlanguage forcreating, manipulating,\nandquerying relational DBMSs. SincemanyvendorsofferSQLproducts,\nthereISaneedforastandard thatdefines\\officialSQL.'Theexistence of\nastandard allowsuserstomeasure agivenvendor's versionofSQLfor\ncompleteness. Italsoallowsuserstodistinguish SQLfeatures specificto\noneproduct fromthosethatarestandard; anapplication thatrelieson\nnonstandard features islessportable.\nThefirstSQLstandard wasdeveloped in1986bytheAmerican National\nStandards Institute (ANSI)andwascalledSQL-86. Therewasaminor\nrevision in1989calledSQL-89andamajorrevision in1992calledSQL\u00ad\n92.TheInternational Standards Organization (ISO)collaborated with\nANSItodevelopSQL-92. Mostcommercial DBMSscurrently support (the\ncoresubsetof)SQL-92andareworking tosupport therecently adopted\nSQL:1999 versionofthestandard, amajorextension ofSQL-92. Our\ncoverage ofSQLisbasedonSQL:1999, butisapplicable toSQL-92 as\nwell;features uniquetoSQL:1999 areexplicitly noted.\nandthenetwork model);therelational modelrevolutionized thedatabase field\nandlargelysupplanted theseearliermodels. Prototype relational databa.'3e\nmanagement systems weredeveloped inpioneering research projects atIBM\nandDC-Berkeley bythemid-197Gs, andseveralvendorswereofferingrelational\ndatabase products shortlythereafter. Today,therelational modelisbyfar\nthedominant datamodelandthefoundation fortheleadingDBMSproducts,\nincluding IBM'sDB2family,Informix, Oracle,Sybase,Microsoft's Accessand\nSQLServer, FoxBase, andParadox. Relational database systemsareubiquitous\ninthemarketplace andrepresent amultibillion dollarindustry.\nTherelational modelisverysimpleandelegant: adatabase isacollection of\noneormorerelations, whereeachrelation isatablewithrowsandcolumns.\nThissimpletabularrepresentation enablesevennoviceuserstounderstand the\ncontents ofadatabase, anditpermitstheuseofsimple,high-level languages\ntoquerythedata.Themajoradvantages oftherelational modelovertheolder\ndatamodelsareitssimpledatarepresentation andtheeasewithwhicheven\ncomplex queriescanbeexpressed.\n\\Vhileweconcentrate ontheunderlying concepts, wealsointroduce theData\nDefinition Language (DDL) features ofSQL,thestandard language for\ncreating, manipulating, andquerying datainarelational DBMS.Thisallows\nustogroundthediscussion firmlyintermsofrealdataba.se systems.", "93": "TheRelational 1\\1odd 59\nvVediscusstheconcept ofarelation inSection ~t1andshowhowtocreate\nrelations usingtheSQLlanguage. Animportant component ofadatamodelis\nthesetofconstructs itprovides forspecifying conditions thatmustbesatisfied\nbythedata.Suchconditions, called'integrity constraints (lGs),enablethe\nDBIviStorejectoperations thatmightcorruptthedata.Wepresentintegrity\nconstraints intherelational modelinSection3.2,alongwithadiscussion of\nSQLsupport forles.\\VediscusshowaDBMSenforces integrity constraints\ninSection3.3.\nInSection 3.4,weturntothemechanism foraccessing andretrieving data\nfromthedatabase, querylanguages, andintroduce thequerying features of\nSQL,whichweexamine ingreaterdetailinalaterchapter.\nWethendiscussconverting anERdiagram intoarelational database schema\ninSection3.5.Weintroduce views,ortablesdefinedusingqueries, inSection\n3.6.Viewscanbeusedtodefinetheexternal schemaforadatabase andthus\nprovidethesupport forlogicaldataindependence intherelational model.In\nSection3.7,wedescribe SQLcommands todestroyandaltertablesandviews.\nFinally, inSection3.8weextendourdesigncasestudy,theInternet shopin\u00ad\ntroduced inSection2.8,byshowing howtheERdiagram foritsconceptual\nschemacanbemapped totherelational model,andhowtheuseofviewscan\nhelpinthisdesign.\n3.1INTRODUCTION TOTHERELATIONAL MODEL\nThemainconstruct forrepresenting dataintherelational modelisarelation.\nArelation consists ofarelation schema andarelation instance. The\nrelationinstance isatable,andtherelationschemadescribes thecolumnheads\nforthetable.Wefirstdescribe therelation schemaandthentherelation\ninstance. Theschemaspecifies therelation's name,thenameofeachfield(or\ncolumn, orattribute), andthedomain ofeachfield.Adomainisreferredto\ninarelationschemabythedomain nameandhasasetofassociated values.\n\\Veusetheexample ofstudentinformation inauniversity database fromChap\u00ad\nter1toillustrate thepartsofarelation schema:\nStudents(sid: string, name:string, login:string,\nage:integer, gpa:real)\nThissays,forinstance, thatthefieldnamedsidhasadomainnamedstring.\nThesetofvaluesassociated withdomainstring isthesetofallcharacter\nstrings.", "94": "60 CHAPTER 3\nWenowturntotheinstances ofarelation. Aninstance ofarelationisaset\noftuples, alsocalledrecords, inwhicheachtuplehasthesamenumber of\nfieldsastherelationschema. Arelation instance canbethought ofasatable\ninwhicheachtupleisarow,andallrowshavethesamenumberoffields.(The\ntermrelation instance isoftenabbreviated tojustrelation, whenthereisno\nconfusion withotheraspectsofarelation suchasitsschema.)\nAninstance oftheStudents relation appears inFigure3.1.Theinstance 81\nFieldnames\nTUPLES\n(RECORDS,\nROWS)FIELDS (ATTRIBUTES, COLUMNS)\n-~ nameI---/o'-gz-'n--\n50000Dave dave@cs 193.3\n53666Jones jones@cs 183.4\n53688Smith smith@ee 183.2\n53650Smith smith@math 193.8\n\"'\\53831Madayan madayan@music 111.8\n53832Guldu guldu@music 122.0\nFigure3.1AnInstance 81oftheStudents Relation\ncontains sixtuplesandhas,asweexpectfromtheschema, fivefields.Notethat\nnotworowsareidentical. Thisisarequirement oftherelational model-each\nrelation isdefinedtobeasetofuniquetuplesorrows.\nInpractice, commercial systems allowtablestohaveduplicate rows,butwe\nassumethatarelation isindeedasetoftuplesunlessotherwise noted.The\norderinwhichtherowsarelistedisnotimportant. Figure3.2showsthesame\nrelation instance.Ifthefieldsarenamed, asinourschemadefinitions and\nIs'idIname [.login\n53831Madayan madayan@music 111.8\n53832Guldu gllldll@music 122.0\n53688Smith smith@ee 183.2\n53650Smith smith@math 193.8\n53666JOI;es jones@cs 183.4\n50000Dave dave@cs 193.3\nFigure3.2AnAlternative Representation ofInstance 81ofStudents\nfiguresdepicting relation instances, theorderoffieldsdoesnotmattereither.\nHowever, analternative convention istolistfieldsinaspecificorderandrefer", "95": "TheRelat'ional lvfodel 61,\ntoafieldbyitsposition. Thus,s'idisfield1ofStudents, loginisfield :~,\nandsoon.Ifthisconvention isused,theorderoffieldsissignificant. Most\ndatabase systemsuseacombination oftheseconventions. Forexample, inSQL,\nthenamedfieldsconvention isusedinstatements thatretrievetuplesandthe\norderedfieldsconvention iscommonly usedwheninserting tuples.\nArelation schemaspecifies thedomainofeachfieldorcolumnintherelation\ninstance. Thesedomain constraints intheschemaspecifyanimportant\ncondition thatwewanteachinstance oftherelation tosatisfy: Thevalues\nthatappearinacolumnmustbedrawnfromthedomainassociated withthat\ncolumn. Thus,thedomainofafieldisessentially thetypeofthatfield,in\nprogramming language terms,andrestricts thevaluesthatcanappearinthe\nfield.\nMoreformally, letR(fI:Dl,...,In:Dn)bearelation schema, andforeachIi,\n1:::;i:::;n,letDamibethesetofvaluesassociated withthedomainnamedDi.\n.Aninstance ofRthatsatisfiesthedomainconstraints intheschemaisasetof\ntupleswithnfields:\n{(fI: dl,,In:dn)IdlEDaml'...,dnEDamn}\nTheangular brackets ( )identifythefieldsofatuple.Usingthisnotation,\nthefirstStudents tupleshowninFigure3.1iswrittenas(sid:50000,name:\nDave,login:dave@cs, age:19,gpa:3.3).Thecurlybrackets {...}denoteaset\n(oftuples,inthisdefinition). TheverticalbarIshouldberead'suchthat,'the\nsymbol Eshouldberead'in,'andtheexpression totherightofthevertical\nbarisacondition thatmustbesatisfied bythefieldvaluesofeachtupleinthe\nset.Therefore, aninstance ofRisdefinedasasetoftuples.Thefieldsofeach\ntuplemustcorrespond tothefieldsintherelation schema.\nDomain constraints aresofundamental intherelational modelthatwehence\u00ad\nforthconsider onlyrelation instances thatsatisfythem;therefore, relation\ninstance meansrelation instance thatsatisfies thedomain constraints inthe\nrelation schema.\nThedegree, alsocalledarity,ofarelation isthenumberoffields.Thecar\u00ad\ndinality ofarelationinstance isthenumberoftuplesinit.InFigure3.1,the\ndegreeoftherelation (thenumber ofcolumns) isfive,andthecardinality of\nthisinstance issix.\nArelational database isacollection ofrelations withdistinctrelationnames.\nTherelational database schema isthecollection ofschemas fortherelations\ninthedatabase. 'Forexample, inChapter 1,wediscllssed auniversity database\nwithrelations calledStudents, Faculty, Courses, Rooms, Enrolled, Teaches,\nandMeets~In. Aninstance ofarelational databa..'3e isacollection ofrelation", "96": "62 CHAPTER~3\ninstances, oneperrelation schemainthedatabase schema; ofcourse,each\nrelation instance mustsatisfythedomainconstraints initsschema.\n3.1.1 Creating andModifying Relations UsingSQL\nTheSQLlanguage standard usesthewordtabletodenoterelation, andweoften\nfollowthisconvention whendiscussing SQL.ThesubsetofSQLthatsupports\nthecreation, deletion, andmodification oftablesiscalledtheDataDefinition\nLanguage (DDL).Further, whilethereisacommand thatletsusersdefinenew\ndomains, analogous totypedefinition commands inaprogramming language,\nwepostpone adiscussion ofdomaindefinition untilSection5.7.Fornow,we\nonlyconsider domains thatarebuilt-intypes, such asinteger.\nTheCREATE TABLEstatement isusedtodefineanewtable.1Tocreatethe\nStudents relation, wecanusethefollowing statement:\nCREATE TABLEStudents (sid\nname\nlogin\nage\ngpaCHAR(20) ,\nCHAR(30) ,\nCHAR(20) ,\nINTEGER,\nREAL)\nTuplesareinserted,usingtheINSERTcommand. Wecaninsertasingletuple\nintotheStudents tableasfollows:\nINSERT\nINTOStudents (sid,name,login,age,gpa)\nVALUES (53688,'Smith', 'smith@ee', 18,3.2)\nWecanoptionally omitthelistofcolumnnamesintheINTOclauseandlist\nthevaluesintheappropriate order,butitisgoodstyletobeexplicitabout\ncolumnnames.\nWecandeletetuplesusingtheDELETE command. WecandeleteallStudents\ntupleswithnameequaltoSmithusingthecommand:\nDELETE\nFROM\nWHEREStudents S\nS.name='Smith'\n1SQLalsoprovides statements todestroytablesandtochangethecolumns associated withatable;\nwediscusstheseinSection 3.7.", "97": "TheRelational Pr10del\nvVecanmodifythecolumnvaluesinanexisting rowusingtheUPDATE com\u00ad\nmand.Forexample, wecanincrement theageanddecrement thegpaofthe\nstudentwithsid53688:\nUPDATE Students S\nSET S.age=S.age+1,S.gpa=S.gpa- 1\nWHERE S.sid=53688\nTheseexamples illustrate someimportant points.TheWHEREclauseisapplied\nfirstanddetermines whichrowsaretobemodified. TheSETclausethen\ndetermines howtheserowsaretobemodified.Ifthecolumnbeingmodified is\nalsousedtodetermine thenewvalue,thevalueusedintheexpression onthe\nrightsideofequals(=)istheoldvalue,thatis,beforethemodification. To\nillustrate thesepointsfurther, consider thefollowing variation oftheprevious\nquery:\nUPDATE Students S\nSET S.gpa=S.gpa-0.1\nWHERE S.gpa>=3.3\nIfthisqueryisappliedontheinstance 81ofStudents showninFigure3.1,we\nobtaintheinstance showninFigure3.3.\nIsidInameIlogin\n50000Dave dave@cs 193.2\n53666Jones jones@cs 183.3\n53688Smith smith@ee 183.2\n53650Smith smith@math 193.7\n53831Madayan madayan@music 111.8\n53832Guldu guldu@music 122.0\nFigure3.3Students Instance 81afterUpdate\n3.2INTEGRITY CONSTRAINTS OVERRELATIONS\nAdatabase isonlyasgoodastheinformation storedinit,andaDBMSmust\ntherefore helppreventtheentryofincorrect information. Anintegrity con\u00ad\nstraint(Ie)isacondition specified onadatabase schemaandrestricts the\ndatathatcanbestoredinaninstance ofthedataba'3e.Ifadatabase instance\nsatisfies alltheintegrity constraints specified onthedatabase schema, itisa\nlegalinstance. ADBMSenforces integrity constraints, inthatitpermitsonly\nlegalinstances tobestoredinthedatabase.\nIntegrity constraints arespecified andenforced atdifferent times:", "98": "64 CHAPTER 3\n1.\\\\ThentheDBAorenduserdefinesadatabase schema, heorshespecifies\nthercsthatmustholdonanyinstance ofthisdatabase.\n2.\"Vhenadatabase application isrun,theDBMSchecksforviolations and\ndisallows changes tothedatathatviolatethespecified ICs.(Insome\nsituations, ratherthandisallow thechange,theDBMSmightmakesome\ncompensating changes tothedatatoensurethatthedatabase instance\nsatisfies allICs.Inanycase,changes tothedatabase arenotallowedto\ncreateaninstance thatviolates anyIC.)Itisimportant tospecifyexactly\nwhenintegrity constraints arecheckedrelativetothestatement thatcauses\nthechangeinthedataandthetransaction thatitispartof.Wediscuss\nthisaspectinChapter 16,afterpresenting thetransaction concept, which\nweintroduced inChapter 1,inmoredetail.\nManykindsofintegrity constraints canbespecified intherelational model.\nWehavealready seenoneexample ofanintegrity constraint inthedomain\nconstraints associated witharelation schema(Section 3.1).Ingeneral, other\nkindsofconstraints canbespecified aswell;forexample, notwostudents\nhavethesamesidvalue.Inthissectionwediscusstheintegrity constraints,\notherthandomainconstraints, thataDBAorusercanspecifyintherelational\nmodel.\n3.2.1KeyConstraints\nConsider theStudents relationandtheconstraint thatnotwostudents havethe\nsamestudentid.ThisICisanexample ofakeyconstraint. Akeyconstraint\nisastatement thatacertainminimal subsetofthefieldsofarelation isa\nuniqueidentifier foratuple.Asetoffieldsthatuniquely identifies atuple\naccording toakeyconstraint iscalledacandidate keyfortherelation; we\noftenabbreviate thistojustkey.InthecaseoftheStudents relation, the(set\noffieldscontaining justthe)sidfieldisacandidate key.\nLetustakeacloserlookattheabovedefinition ofa(candidate) key.There\naretwopartstothedefinition:2\n1.Twodistinct tuplesinalegalinstance (aninstance thatsatisfies allIes,\nincluding thekeyconstraint) cannothaveidentical valuesinallthefields\nofakey.\n2.Nosubsetofthesetoffieldsinakeyisauniqueidentifier foratuple.\n2Thetermkeyisratheroverworked. Inthecontext ofaccessmethods, wespeakofsear'chkeys.\nwhicharequitedifferent.", "99": "TheRelational ltdodel\nThefirstpartofthedefinition meansthat,inanylegalinstance, thevaluesin\nthekeyfieldsuniquely identifyatupleintheinstance. \\Vhenspecifying akey\nconstraint, theDBAorusermustbesurethatthisconstraint willnotprevent\nthemfromstoringa'correct' setoftuples.(Asimilarcomment appliestothe\nspecification ofotherkindsoflesaswell.)Thenotionof\u2022correctness' here\ndepends onthenatureofthedatabeingstored.Forexample, severalstudents\nmayhavethesamename,although eachstudent hasauniquestudent id.If\nthenamefieldisdeclared tobeakey,theDBMSwillnotallowtheStudents\nrelationtocontaintwotuplesdescribing different students withthesamename!\nThesecondpartofthedefinition means,forexample, thatthesetoffields\n{sid,name}isnotakeyforStudents, because thissetproperly contains the\nkey{sid}.Theset{sid,name}isanexample ofasuperkey, whichisasetof\nfieldsthatcontains akey.\nLookagainattheinstance oftheStudents relation inFigure3.1.Observe that\ntwodifferent rowsalwayshavedifferent sidvalues;sidisakeyanduniquely\nidentifies atuple.However, thisdoesnotholdfornonkeyfields.Forexample,\ntherelation contains tworowswithSmithinthenamefield.\nNotethateveryrelationisguaranteed tohaveakey.Sincearelationisasetof\ntuples,thesetofallfieldsisalwaysasuperkey.Ifotherconstraints hold,some\nsubsetofthefieldsmayformakey,butifnot,thesetofallfieldsisakey.\nArelation mayhaveseveralcandidate keys.Forexample, theloginandage\nfieldsoftheStudents relationmay,takentogether, alsoidentifystudents uniquely.\nThatis,{login,age}isalsoakey.Itmayseemthatloginisakey,sinceno\ntworowsintheexample instance havethesameloginvalue.However, thekey\nmustidentify tuplesuniquely inallpossible legalinstances oftherelation. By\nstatingthat{login,age}isakey,theuserisdeclaring thattwostudents may\nhavethesameloginorage,butnotboth.\nOutofalltheavailable candidate keys,adatabase designer canidentify a\nprimary key.Intuitively, atuplecanbereferred tofromelsewhere inthe\ndatabase bystoringthevaluesofitsprimary keyfields.Forexample, wecan\nrefertoaStudents tuplebystoringitssidvalue.Asaconsequence ofreferring\ntostudent tuplesinthismanner, tuplesarefrequently accessed byspecifying\ntheirsidvalue.Inprinciple, wecanuseanykey,notjusttheprimary key,\ntorefertoatuple.However, usingtheprimary keyispreferable because it\niswhattheDBMSexpects thisisthesignificance ofdesignating aparticular\ncandidate keyasaprimary keyandoptimizes for.Forexample, theDBMS\nmaycreateanindexwiththeprimary keyfields 8..'3thesearchkey,tomakethe\nretrieval ofatuplegivenitsprimary keyvalueefficient. Theideaofreferring\ntoatupleisdeveloped furtherinthenextsection.", "100": "66\nSpecifying KeyConstraints inSQLCHAPTER,3\nInSQL,wecandeclarethatasubsetofthecolumns ofatableconstitute akey\nbyusingtheUNIQUE constraint. Atmostoneofthesecandidate keyscanbe\ndeclared tobeaprimary key,usingthePRIMARY KEYconstraint. (SQLdoes\nnotrequirethatsuchconstraints bedeclared foratable.)\nLetusrevisitourexample tabledefinition andspecifykeyinformation:\nCREATE TABLEStudents (sidCHAR(20) ,\nnameCHAR(30),\nloginCHAR(20) ,\nageINTEGER,\ngpaREAL,\nUNIQUE (name,age),\nCONSTRAINT StudentsKey PRIMARY KEY(sid))\nThisdefinition saysthatsidistheprimary keyandthecombination ofname\nandageisalsoakey.Thedefinition oftheprimary keyalsoillustrates how\nwecannameaconstraint bypreceding itwithCONSTRAINT constraint-name.\nIftheconstraint isviolated, theconstraint nameisreturned andcanbeused\ntoidentifytheerror.\n3.2.2ForeignKeyConstraints\nSometimes theinformation storedinarelation islinkedtotheinformation\nstoredinanotherrelation.Ifoneoftherelations ismodified, theothermustbe\nchecked, andperhaps modified, tokeepthedataconsistent. AnICinvolving\nbothrelations mustbespecified ifaDBMSistomakesuchchecks.Themost\ncommon ICinvolving tworelations isaforeignkeyconstraint.\nSuppose that,inaddition toStudents, wehaveasecondrelation:\nEnrolled(studid: string, cid:string, gTade:string)\nToensurethatonlybonafidestudents canenrollincourses, anyvaluethat\nappears inthestudidfieldofaninstance oftheEnrolled relation shouldalso\nappearinthesidfieldofsometupleintheStudents relation. Thest'udidfield\nofEnrolled iscalledaforeignkeyandreferstoStudents. Theforeignkeyin\nt~l~referencil1grel~tio~~(Enrolled,in our.\nexalIlpl~)!nll~tl~latcht~le~)l:lirl~l~y~key:_:-- \u00ad\n()f-theJCferC11(;ed relation (Students); thatjS,-jtIn~lstJUly(iU\"lhe' -s<lnie-~l~~i;;~ _\n_..,'--\" .\"....\u2022..............\u2022\u2022..... ....-._--.... --~-----~-\nofcolumns andcornpatible dCitatypes, altl1()u~h thecolumn nanl(~Scanbe\n alffei'cii\u00a3.' -.---- '~'. _N~ ~_-~", "101": "TheRelational A10del 67\nThisconstraint isillustrated inFigure3.4.Asthefigureshows,theremaywell\nbesomeStudents tuplesthatarenotreferenced fromEnrolled (e.g.,thestudent\nwithsid=50000). However, everystudidvaluethatappears intheinstance of\ntheEnrolled tableappears intheprimary keycolumnofarowintheStudents\ntable.\nForeignkey\nr---IPrimarykey\n~\ncid gradestudid~ --sidname login agegpa\n~===:====:==~ ~==i====*==========*====:::*~\nCarnatic101 C 53831, 50000Dave dave@cs\nI---~~~~~+-~--t\nReggae203 B53832,'-,-f53666Jones jones@cs\nI---..::::::...~~~~+-~--t\nTopology 112A5365(}-~',\\' 53688Smith smith@ee\n1---~-=~~~+-~---1 ,'\\-,\nHistory105B53666\" \\'\"\",~ 53650Smith smith@math\n~~-=--~-'----~...L-~-J \\\"'\\53831Madayan madayan@music\n\"'\\53832Guldu gu1du@music19\n18\n18\n19\n11\n123.3\n3.4\n3.2\n3.8\n1.8\n2.0\nEnrolled (Referencing relation) Students (Referenced relation)\nFigure3.4Referential Integrity\nIfwetrytoinsertthetuple(55555,Artl04, A)intoE1,theIeisviolated be\u00ad\ncausethereisnotuplein51withsid55555;thedatabase systemshouldreject\nsuchaninsertion. Similarly, ifwedeletethetuple(53666,Jones,jones@cs, 18,\n3.4)from51,weviolatetheforeignkeyconstraint because thetuple(53666,\nHistoryl05, B)inElcontains studidvalue53666,thesidofthedeletedStu\u00ad\ndentstuple.TheDBMSshoulddisallow thedeletion or,perhaps, alsodelete\ntheEnrolled tuplethatreferstothedeletedStudents tuple.Wediscussforeign\nkeyconstraints andtheirimpactonupdates inSection3.3.\nFinally,wenotethataforeignkeycouldrefertothesamerelation. Forexample,\nwecouldextendtheStudents relationwithacolumncalledpartneranddeclare\nthiscolumntobeaforeignkeyreferring toStudents. Intuitively, everystudent\ncouldthenhaveapartner, andthepartnerfieldcontains thepartner's sid.The\nobservant readerwillnodoubtask,\"y\\Thatifastudent doesnot(yet)have\napartnerT' Thissituation ishandled inSQLbyusingaspecialvaluecalled\nnull.Theuseofnuninafieldofatuplerneansthatvalueinthatfieldiseither\nunknown ornotapplicable (e.g.,wedonotknowthepartneryetorthereis\nnopartner). TheappearanC(~ ofnullinaforeignkeyfielddoesnotviolatethe\nforeignkeyconstraint. However, nullvaluesarenotallowedtoappearina\nprimary keyfield(because theprimary keyfieldsareusedtoidentify atuple\nuniquely). \\VediscussnullvaluesfurtherinChapter 5.", "102": "68\nSpecifying ForeignKeyConstraints inSQLCHAPTERp3\nLetusdefineEnrolled(studid: string, cid:string, grade:string):\nCREATE TABLEEnrolled (studidCHAR(20) ,\ncidCHAR(20),\ngradeCHAR(10),\nPRIMARY KEY(studid, cid),\nFOREIGN KEY(studid) REFERENCES Students)\nTheforeignkeyconstraint statesthateveryst'udidvalueinEnrolled mustalso\nappearinStudents, thatis,studidinEnrolled isaforeignkeyreferencing Stu\u00ad\ndents.Specifically, everystudidvalueinEnrolled mustappearasthevaluein\ntheprimary keyfield,sid,ofStudents. Incidentally, theprimary keyconstraint\nforEnrolled statesthatastudenthasexactlyonegradeforeachcourseheor\nsheisenrolled in.Ifwewanttorecordmorethanonegradeperstudent per\ncourse,weshouldchangetheprimary keyconstraint.\n3.2.3General Constraints\nDomain, primary key,andforeignkeyconstraints areconsidered tobeafun\u00ad\ndamental partoftherelational datamodelandaregivenspecialattention in\nmostcommercial systems. Sometimes, however, itisnecessary tospecifymore\ngeneralconstraints.\nForexample, wemayrequirethatstudent agesbewithinacertainrangeof\nvalues;givensuchanICspecification, theDBMSrejectsinsertsandupdates\nthatviolatetheconstraint. Thisisveryusefulinpreventing dataentryerrors.\nIfwespecifythatallstudents mustbeatleast16yearsold,theinstance of\nStudents showninFigure3.1isillegalbecause twostudents areunderage. If\nwedisallow theinsertion ofthesetwotuples,wehavealegalinstance, asshown\ninFigure3.5.\ns'idIna'me login IageIgpaI\n53666Jones jones@cs 183.4\n53688Smith smithCQ)ee 18 ~).2I\n53650Smith smith@math 193.8I\n.-\nFigure3.5AnInstance 82oftheStudents Relation\nTheICthatstudents mustbeolderthan16canbethought ofasanextended\ndomainconstraint, sinceweareessentially defining thesetofpermissible age", "103": "TheRelational lV/ode! 69\nvaluesmorestringently thanispossible bysimplyusingastandard domain\nsuch :'1.Sinteger. Ingeneral, however, constraints thatgowellbeyonddomain,\nkey,orforeignkeyconstraints canbespecified. Forexample, wecould require\nthateverystudentwhoseageisgreaterthan18musthaveagpagreaterthan\n3.\nCurrent relational database systems support suchgeneralconstraints inthe\nformoftableconstraints andassertions. Tableconstraints areassociated witha\nsingletableandcheckedwhenever thattableismodified. Incontrast, assertions\ninvolveseveraltablesandarecheckedwhenever anyofthesetablesismodified.\nBothtableconstraints andassertions canusethefullpowerofSQLqueriesto\nspecifythedesiredrestriction. WediscussSQLsupport fortableconstraints\nandassertions inSection5.7because afullappreciation oftheirpowerrequires\nagoodgraspofSQL'squerycapabilities.\n3.3ENFORCING INTEGRITY CONSTRAINTS\nAsweobserved earlier,ICsarespecified whenarelationiscreatedandenforced\nwhenarelationismodified. Theimpactofdomain, PRIMARY KEY,andUNIQUE\nconstraints isstraightforward: Ifaninsert,delete,orupdatecommand causes\naviolation, itisrejected. Everypotential Ieviolation isgenerally checkedat\ntheendofeachSQLstatement execution, although itcanbedeferred untilthe\nendofthetransaction executing thestatement, aswewillseeinSection3.3.1.\nConsider theinstance 51ofStudents showninFigure3.1.Thefollowing inser\u00ad\ntionviolatestheprimary keyconstraint because thereisalreadyatuplewith\nthes'id53688,anditwillberejected bytheDBMS:\nINSERT\nINTOStudents (sid,name,login,age,gpa)\nVALUES (53688,'Mike','mike@ee', 17,3.4)\nThefollowing insertion violates theconstraint thattheprimary keycannot\ncontain null:\nINSERT\nINTOStudents (sid,name,login,age,gpa)\nVALUES (null,'Mike','mike@ee', 17,3.4)\nOfcourse,asimilarproblem ariseswhenever wetrytoinsertatuplewitha\nvalueinafieldthatisnotinthedomain associated withthatfield,thatis,\nwhenever weviolateadomainconstraint. Deletion doesnotcauseaviolation\nofclornain, primary keyoruniqueconstraints. However, anupdatecancause\nviolations, sirnilartoaninsertion:", "104": "70\nUPDATEStudents S\nSET S.sid=50000\nWHERE S.sid=53688CHAPTER, 3\nThisupdateviolatestheprimary keyconstraint becausethereisalreadyatuple\nwithsid50000.\nTheimpactofforeignkeyconstraints ismorecomplex becauseSQLsometimes\ntriestorectifyaforeignkeyconstraint violation insteadofsimplyrejecting the\nchange. Wediscussthereferential integrity enforcement stepstakenby\ntheDBMSintermsofourEnrolled andStudents tables,withtheforeignkey\nconstraint thatEnrolled.sid isareference to(theprimary keyof)Students.\nInaddition totheinstance 81ofStudents, consider theinstance ofEnrolled\nshowninFigure3.4.Deletions ofEnrolled tuplesdonotviolatereferential\nintegrity, butinsertions ofEnrolled tuplescould.Thefollowing insertion is\nillegalbecause thereisnoStudents tuplewithsid51111:\nINSERT\nINTO Enrolled (cid,grade,studid)\nVALUES ('Hindi101', 'B',51111)\nOntheotherhand,insertions ofStudents tuplesdonotviolatereferential\nintegrity, anddeletions ofStudents tuplescouldcauseviolations. Further,\nupdates oneitherEnrolled orStudents thatchangethestudid(respectively,\nsid)valuecouldpotentially violatereferential integrity.\nSQLprovides severalalternative waystohandleforeignkeyviolations. We\nmustconsider threebasicquestions:\n1.WhatshouldwedoifanEnrolled rowisinserted, withastudidcolumn\nvaluethatdoesnotappearinanyrowoftheStudents table?\nInthiscase,theINSERTcommand issimplyrejected.\n2.WhatshouldwedoifaStudents rowisdeleted?\nTheoptionsare:\n\u2022DeleteallEnrolled rowsthatrefertothedeletedStudents row.\n\u2022Disallow thedeletion oftheStudents rowifanEnrolled rowrefersto\nit.\n\u2022Setthestudidcolumntothesidofsome(existing) 'default' student,\nforeveryEnrolled rowthatreferstothedeletedStudents row.", "105": "TheRelational l'lfodel 71\n\u2022ForeveryEnrolled rowthatreferstoit,setthestudidcolumntonull.\nInourexample, thisoptionconflicts withthefactthatstud'idispart\noftheprimary keyofEnrolled andtherefore cannotbesettomtll.\nTherefore, wearelimitedtothefirstthreeoptionsinourexample,\nalthough thisfourthoption(settingtheforeignkeytonull)isavailable\ningeneral.\n3.Whatshouldwedoiftheprimary keyval'ueofaStudents rowisupdated?\nTheoptionsherearesimilartotheprevious case.\nSQLallowsustochooseanyofthefouroptionsonDELETE andUPDATE. For\nexample, wecanspecifythatwhenaStudents rowisdeleted,allEnrolled rows\nthatrefertoitaretobedeletedaswell,butthatwhenthesidcolumnofa\nStudents rowismodified, thisupdateistoberejected ifanEnrolled rowrefers\ntothemodified Students row:\nCREATE TABLEEnrolled (studidCHAR(20) ,\ncidCHAR(20) ,\ngradeCHAR(10),\nPRIMARY KEY(studid,dd),\nFOREIGN KEY(studid) REFERENCES Students\nONDELETE CASCADE\nONUPDATE NOACTION)\nTheoptionsarespecified aspartoftheforeignkeydeclaration. Thedefault\noptionisNOACTION, whichmeansthattheaction(DELETE orUPDATE) istobe\nrejected, Thus,theONUPDATE clauseinourexample couldbeomitted, with\nthesameeffect.TheCASCADE keyword saysthat,ifaStudents rowisdeleted,\nallEnrolled rowsthatrefertoitaretobedeletedaswell.IftheUPDATE clause\nspecified CASCADE, andthesidcolumnofaStudents rowisupdated, thisupdate\nisalsocarriedoutineachEnrolled rowthatreferstotheupdated Students row.\nIfaStudents rowisdeleted, wecanswitchtheenrollment toa'default' student\nbyusingONDELETE SETDEFAULT. Thedefaultstudent isspecified 3.'3partof\nthedefinition ofthesidfieldinEnrolled; forexample, sidCHAR(20) DEFAULT\n'53666'.Although thespecification ofadefaultvalueisappropriate insome\nsituations (e.g\"adefaultpartssupplier ifaparticular supplier goesoutof\nbusiness), itisreallynotappropriate toswitchenrollments toadefaultstudent.\nThecorrectsolution inthisexample istoalsodeleteallenrollment tuplesfor\nthedeletedstudent(thatis,CASCADE) ortorejecttheupdate.\nSQLalsoallowstheuseofnullasthedefaultvaluebyspecifying ONDELETE\nSETNULL.", "106": "72 CHAPTERf3\n3.3.1Transactions andConstraints\nAswesawinChapter 1,aprogram thatrunsagainstadatabase iscalleda\ntransaction, anditcancontain severalstatements (queries, inserts,updates,\netc.)thataccessthedatabase.If(theexecution of)astatement inatransac\u00ad\ntionviolates anintegrity constraint, shouldtheDBMSdetectthisrightaway\norshouldallconstraints bechecked together justbeforethetransaction com\u00ad\npletes?\nBydefault, aconstraint ischecked attheendofeverySQLstatement that\ncouldleadtoaviolation, andifthereisaviolation, thestatement isrejected.\nSometimes thisapproach istooinflexible. Consider thefollowing variants of\ntheStudents andCourses relations; everystudentisrequired tohaveanhonors\ncourse,andeverycourseisrequired tohaveagrader,whoissomestudent.\nCREATE TABLEStudents (sidCHAR(20) ,\nnameCHAR(30),\nloginCHAR(20),\nageINTEGER,\nhonorsCHAR(10) NOTNULL,\ngpaREAL)\nPRIMARY KEY(sid),\nFOREIGN KEY(honors) REFERENCES Courses (cid))\nCREATE TABLECourses(cid CHAR(10),\ncnameCHAR(10),\ncreditsINTEGER,\ngraderCHAR(20) NOTNULL,\nPRIMARY KEY(dd)\nFOREIGNKEY(grader) REFERENCES Students (sid))\nvVhenever aStudents tupleisinserted, acheckismadetoseeifthe\"honors\ncourseisintheCourses relation, andwhenever aCourses tupleisinserted,\nacheckismadetoseethatthegraderisintheStudents relation. Howare\nwetoinserttheveryfirstcourseorstudent tuple?Onecannotbeinseited\nwithout theother.Theonlywaytoaccomplish thisinsertion istodeferthe\nconstraint che~king thatwouldnormally becarriedoutattheendofanINSERT\nstatement.\nSQLallowsaconstraint tobeinDEFERRED orIMMEDIATE mode.\nSETCONSTRAINT ConstntintFoo DEFERRED", "107": "TheRelational 1\\11odel\nAconstraint indeferred modeischecked atcommit time.Inourexample,\ntheforeignkeyconstraints onBoatsandSailorscanbothbedeclared tobein\ndeferred mode. \"VVecantheninsert?boatwithanonexistent sailorasthecap\u00ad\ntain(temporarily makingthedatabase inconsistent), insertthesailor(restoring\nconsistency), thencommitandcheckthatbothconstraints aresatisfied.\n3.4QUERYING RELATIONAL DATA\nArelational database query(query,forshort)isaquestion aboutthedata,\nandtheanswerconsists ofanewrelation containing theresult.Forexample,\nwemightwanttofindallstudents younger than18orallstudents enrolled in\nReggae203. Aquerylanguage isaspecialized language forwritingqueries.\nSQListhemostpopular commercial querylanguage forarelational DBMS.\nWenowpresentsomeSQLexamples thatillustrate howeasilyrelations canbe\nqueried. Consider theinstance oftheStudents relation showninFigure3.1.\nWecanretrieverowscorresponding tostudents whoareyounger than18with\nthefollowing SQLquery:\nSELECT*\nFROM Students S\nWHERE S.age<18\nThesymbol,*,meansthatweretainallfieldsofselected tuplesintheresult.\nThinkofSasavariablethattakesonthevalueofeachtupleinStudents, one\ntupleaftertheother.Thecondition S.age<18intheWHEREclausespecifies\nthatwewanttoselectonlytuplesinwhichtheagefieldhasavaluelessthan\n18.Thisqueryevaluates totherelation showninFigure3.6.\nI\u00b7\u00b7sidj..nameIlogin\n53831Madayan madayan@music 11I1.8\n53832Guldu guldu@music 12I2.0\nFigure3.6Students withage<18OIlInstance 51\nThisexample illustrates thatthedomain ofafieldrestricts theoperations\nthatarepermitted onfieldvalues,inaddition torestricting thevaluesthatcan\nappearinthefield.Thecondition S.age<18involvesanarithmetic comparison\nofanagevaluewithanintegerandispermissible because thedomainofage\nisthesetofintegers. Ontheotherhand,acondition suchasS.age=S.\"id\ndoesnotmakesensebecause itcompares anintegervaluewithastringvalue,\nandthiscomparison isdefinedtofailinSQL;aquerycontaining thiscondition\nproduces noanswertuples.", "108": "74 CHAPTERJ3\nInaddition toselecting asubsetoftuples,aquerycanextractasubsetofthe\nfieldsofeachselected tuple.vVecancompute thenamesandloginsofstudents\nwhoareyounger than18withthefollowing query:\nSELECT S.name, S.login\nFROM Students S\nWHERE S.age<18\nFigure3.7showstheanswertothisquery;itisobtained byapplying these\u00ad\nlectiontotheinstance81ofStudents (togettherelation showninFigure\n3.6),followed byremoving unwanted fields.Notethattheorderinwhichwe\nperform theseoperations doesmatter-if weremoveunwanted fieldsfirst,we\ncannotcheckthecondition S.age<18,whichinvolves oneofthosefields.\nIname\nMadayan\nGuldumadayan@music\nguldu@music\nFigure3.7NamesandLoginsofStudents under18\nWecanalsocombine information intheStudents andEnrolled relations. Ifwe\nwanttoobtainthenamesofallstudents whoobtained anAandtheidofthe\ncourseinwhichtheygotanA,wecouldwritethefollowing query:\nSELECT S.name, E.cid\nFROM Students S,Enrolled E\nWHERE S.sid=E.studid ANDE.grade='A'\nThisquerycanbeunderstood asfollows:\"IfthereisaStudents tupleSand\nanEnrolled tupleEsuchthatS.sid=E.studid (sothatSdescribes thestudent\nwhoisenrolled inE)andE.grade='A',thenprintthestudent's nameand\nthecourseid.\"Whenevaluated ontheinstances ofStudents andEnrolled in\nFigure3.4,thisqueryreturnsasingletuple,(Smith, Topology112).\nWecoverrelational queriesandSQLinmoredetailinsubsequent chapters.\n3.5LOGICAL DATABASE DESIGN: ERTO\nRELATIONAL\nTheERmodelisconvenient forrepresenting aninitial,high-level databi'lse\ndesign. GivenanERdiagram describing adataba'3e, astandard approach is\ntakentogenerating arelational database schemathatcloselyapproximates", "109": "TheRelational !'viodel\ntheERdesign.(Thetranslation isapproximate totheextentthatwecannot\ncapturealltheconstraints implicit intheERdesignusingSQL,unlessweuse\ncertainSQLconstraints thatarecostlytocheck.) Wenowdescribe howto\ntranslate anERdiagram intoacollection oftableswithassociated constraints,\nthatis,arelational database schema.\n3.5.1EntitySetstoTables\nAnentitysetismapped toarelationinastraightforward way:Eachattribute\noftheentitysetbecomes anattribute ofthetable.Notethatweknowboth\nthedomainofeachattribute andthe(primary) keyofanentityset.\nConsider theEmployees entitysetwithattributes ssn,name,andlotshownin\nFigure3.8.Apossible instance oftheEmployees entityset,containing three\nFigure3.8TheEmployees EntitySet\nEmployees entities, isshowninFigure3.9inatabularformat.\nIssn InameIlotI\n123-22-3666 Attishoo 48\n231-31-5368 Smiley 22\n131-24-3650 Smethurst 35\nFigure3.9AnInstance oftheEmployees EntitySet\nThefollowing SQLstatement captures thepreceding information, including the\ndomainconstraints andkeyinformation:\nCREATE TABLEEmployees (ssn CHAR(11),\nname CHAR(30) ,\nlot INTEGER,\nPRIMARY KEY(ssn))", "110": "76 CHAPTER~3\n3.5.2Relationship Sets(without Constraints) toTables\nArelationship set,likeanentityset,ismapped toarelation intherelational\nmodel. Vvebegin by considering relationship setswithout keyandparticipa\u00ad\ntionconstraints, andwediscusshowtohandlesuchconstraints insubsequent\nsections. Torepresent arelationship, wemustbeabletoidentify eachpartic\u00ad\nipatingentityandgivevaluestothedescriptive attributes oftherelationship.\nThus,theattributes oftherelation include:\n\u2022Theprimary keyattributes ofeachparticipating entityset,asforeignkey\nfields.\n\u2022Thedescriptive attributes oftherelationship set.\nThesetofnondescriptive attributes isasuperkey fortherelation.Ifthereare\nnokeyconstraints (seeSection2.4.1),thissetofattributes isacandidate key.\nConsider theWorks_In2 relationship setshowninFigure3.10.Eachdepartment\nhasofficesinseverallocations andwewanttorecordthelocations atwhich\neachemployee works.\nC~~~T:~:~~\nCf)\n(~~fT3~~\nIEmployees I WorksJn2 rDepartments I\n~ddress~ capacity\nFigure3.10ATernary Relationship Set\nAlltheavailable information abouttheWorks-ln2 tableiscaptured bythe\nfollowing SQLdefinition:\nCREATE TABLE\\iVorks_In2 (ssn CHAR(11),\ndid INTEGER,\naddress CHAR(20) ,\nsince DATE,\nPRIMARY KEY(8sn,did,address),\nFOREIGN KEY(ssn)REFERENCES Employees,", "111": "TheRelational Iv!odel\nFOREIGN KEY(address) REFERENCES Locations,\nFOREIGN KEY(did)REFERENCES Departments)\nNotethattheaddress, did.andssnfieldscannottakeonn'ullvalues.Because\nthesefieldsarepartoftheprimary keyfor\\Vorks_In2, aNOTNULLconstraint\nisimplicit foreachofthesefields.Thisconstraint ensuresthatthesefields\nuniquely identify adepartment, anemployee, andalocation ineachtuple\nofWorksJn. vVecanalsospecifythataparticular actionisdesiredwhena\nreferenced Employees, Departments, orLocations tupleisdeleted, asexplained\ninthediscussion ofintegrity constraints inSection3.2.Inthischapter, we\nassumethatthedefaultactionisappropriate exceptforsituations inwhichthe\nsemantics oftheERdiagram requiresomeotheraction.\nFinally, consider theReports_To relationship setshowninFigure3.11.The\nFigure3.11TheReports_To Relationship Set\nroleindicators supervisor andsubordinate areusedtocreatemeaningful field\nnamesintheCREATEstatement fortheReports ..Totable:\nCREATE TABLEReports_To (\nsupervisor...ssn CHAR(11),\nsubordinate...ssn CHAR(11),\nPRIMARY KEY (supervisor~'3sn, subordinate_\",,:>sn),\nFOREIGN KEY(supervisor...ssn) REFERENCES Employees (ssn),\nFOREIGN KEY(subordinate...ssn) REFERENCES Employees(ssn) )\nObserve thatweneedtoexplicitly namethereferenced fieldofEmployees\nbecausethefieldnamediffersfromthename(s) ofthereferring field(s).", "112": "78 CHAPTER~3\n3.5.3Translating Relationship Sets with KeyConstraints\nIfarelationship setinvolves nentitysetsandsomem ofthemarelinkedvia\narrowsintheERdiagTam, thekeyforanyoneofthesementitysetsconstitutes\nakeyfortherelation towhichtherelationship setismapped. Hencewehave\nmcandidate keys,andoneoftheseshouldbedesignated astheprimary key.\nThetranslation discussed inSection2.3fromrelationship setstoarelationcan\nbeusedinthepresence ofkeyconstraints, takingintoaccountthispointabout\nkeys.\nConsider therelationship setManages showninFigure3.12.Thetablecor-\nManages >4I\"f--~~-\nFigure3.12KeyConstraint onManages\nresponding toManages hastheattributes ssn,did,since.However, because\neachdepartment hasatmostonemanager, notwotuplescanhavethesame\ndidvaluebutdifferonthessnvalue.Aconsequence ofthisobservation isthat\ndidisitselfakeyforManages; indeed,thesetdid,ssnisnotakey(because it\nisnotminimal). TheManages relation canbedefinedusingthefollowing SQL\nstatement:\nCREATETABLEManages(ssn CHAR(11),\ndid INTEGER,\nsince DATE,\nPRIMARY KEY(did),\nFOREIGN KEY(ssn)REFERENCES Employees,\nFOREIGN KEY(did~REFERENCES Departments)\nAsecondapproach totranslating arelationship setwithkeyconstraints is\noftensuperior because itavoidscreating adistinct tablefortherelationship\nset.Theideaistoincludetheinformation abouttherelationship setinthe\ntablecorresponding totheentitysetwiththekey,takingadyantage ofthe\nkeyconstraint. IntheManages example, because adepartmerl~ hasatmost\nonemanager, wecanaddthekeyfieldsoftheEmployees tupledenoting the\nInanager andthesinceattribute totheDepartments tuple.", "113": "TheRelational 1\\1odel 7~\nThisapproach eliminates theneedforaseparate Manages relation, andqueries\naskingforadepartment's manager canbeanswered without combining infor\u00ad\nmationfromtworelations. Theonlydrawback tothisapproach isthatspace\ncouldbewastedifseveraldepartments havenomanagers. Inthiscasethe\naddedfieldswouldhavetobefilledwithnullvalues.Thefirsttranslation (us\u00ad\ningaseparate tableforManages) avoidsthisinefficiency, butsomeimportant\nqueriesrequireustocombine information fromtworelations, whichcanbea\nslowoperation.\nThefollowing SQLstatement, defining aDepLMgr relationthatcaptures the\ninformation inbothDepartments andManages, illustrates thesecondapproach\ntotranslating relationship setswithkeyconstraints:\nCREATE TABLEDepLMgr (did INTEGER,\ndname CHAR(20),\nbudget REAL,\nssn CHAR(11),\nsince DATE,\nPRIMARY KEY(did),\nFOREIGN KEY(ssn)REFERENCES Employees)\nNotethatssncantakeonnullvalues.\nThisideacanbeextended todealwithrelationship setsinvolving morethan\ntwoentitysets.Ingeneral, ifarelationship setinvolves nentitysetsandsome\nTnofthemarelinkedviaarrowsintheERdiagram, therelationcorresponding\ntoanyone ofthemsetscanbeaugmented tocapturetherelationship.\nWediscusstherelativemeritsofthetwotranslation approaches furtherafter\nconsidering howtotranslate relationship setswithparticipation constraints\nintotables.\n3.5.4Translating Relationship SetswithParticipation\nConstraints\nConsider theERdiagram inFigure3.13,whichshowstworelationship sets,\nManages and\"Vorks_In.\nEverydepartment isrequired tohaveamanager, duetotheparticipation\nconstraint, andatmostonemanager, duetothekeyconstraint. Thefollowing\nSQLstatement reflectsthesecondtranslation approach discussed inSection\n3.5.3,andusesthekeyconstraint:", "114": "80 CHAPTER'3\nFigure3.13Manages andWorksJn\nCREATE TABLEDepLMgr (did INTEGER,\ndname CHAR(20) ,\nbudget REAL,\nssn CHAR(11) NOTNULL,\nsince DATE,\nPRIMARY KEY(did),\nFOREIGN KEY(ssn)REFERENCES Employees\nONDELETE NOACTION)\nItalsocaptures theparticipation constraint thateverydepartment musthave\namanager: Because ssncannottakeonnullvalues,eachtupleofDepLMgr\nidentifies atupleinEmployees (whoisthemanager). TheNOACTIONspecifi\u00ad\ncation,whichisthedefaultandneednotbeexplicitly specified, ensuresthat\nanEmployees tuplecannotbedeletedwhileitispointed tobyaDept-Mgr\ntuple.IfwewishtodeletesuchanEmployees tuple,wemustfirstchangethe\nDepLMgr tupletohaveanew employee &'3manager. (vVecouldhavespecified\nCASCADE insteadofNOACTION,butdeleting allinformation aboutadepartment\njustbecause itsmanager hasbeenfiredseemsabitextreme!)\nTheconstraint thateverydepartment musthaveamanager cannotbecap\u00ad\nturedusingthefirsttranslation approach discussed inSection3.5.3.(Look\natthedefinition oflVIanages andthinkaboutwhateffectitwouldhaveifwe\naddedNOTNULLconstraints tothessnanddidfields.Hint:Theconstraint\nwouldpreventthefiringofamanager, butdoesnotensurethatamanager is\ninitially appointed foreachdepartment!) Thissituation isastrongargument", "115": "TheRelational lvfodel 8~\ninfavorofusingthesecondapproach forone-to-many relationships suchas\nManages, especially whentheentitysetwiththekeyconstraint alsohasatotal\nparticipation constraint.\nUnfortunately, therearemanyparticipation constraints thatwecannotcapture\nusingSQL,shortofusingtableconstraints orassertions. Tableconstraints and\nassertions canbespecified usingthefullpoweroftheSQLquerylanguage\n(asdiscussed inSection5.7)andareveryexpressive butalsoveryexpensive to\ncheckandenforce. Forexample, wecannotenforcetheparticipation constraints\nonthe\\iVorks_In relationwithout usingthesegeneralconstraints. Toseewhy,\nconsider theWorks-ln relation obtained bytranslating theERdiagram into\u00b7\nrelations. Itcontains fieldsssnanddid,whichareforeignkeysreferring to\nEmployees andDepartments. Toensuretotalparticipation ofDepartments in\nWorks_In, wehavetoguarantee thateverydidvalueinDepartments appears\ninatupleofWorks_In. Wecouldtrytoguarantee thiscondition bydeclaring\nthatdidinDepartments isaforeignkeyreferring toWorks_In, butthisisnot\navalidforeignkeyconstraint because didisnotacandidate keyforWorks_In.\nToensuretotalparticipation ofDepartments inWorks_In usingSQL,weneed\nanassertion. Wehavetoguarantee thateverydidvalueinDepartments appears\ninatupleofWorks_In; further, thistupleofWorks_In mustalsohavenon-null\nvaluesinthefieldsthatareforeignkeysreferencing otherentitysetsinvolved in\ntherelationship (inthisexample, thessnfield).Wecanensurethesecondpart\nofthisconstraint byimposing thestronger requirement thatssninWorks-ln\ncannotcontainnullvalues.(Ensuring thattheparticipation ofEmployees in\nWorks_In istotalissymmetric.)\nAnother constraint thatrequires assertions toexpressinSQListherequirement\nthateachEmployees entity(inthecontextoftheManages relationship set)\nmustmanageatleastonedepartment.\nInfact,theManages relationship setexemplifies mostoftheparticipation con\u00ad\nstraintsthatwecancaptureusingkeyandforeignkeyconstraints. Manages is\nabinaryrelationship setinwhichexactlyoneoftheentitysets(Departments)\nhasakeyconstraint, andthetotalparticipation constraint isexpressed onthat\nentityset.\n\\Vecanalsocapture participation constraints usingkeyandforeignkeycon\u00ad\nstraintsinoneotherspecialsituation: arelationship setinwhichallparticipat\u00ad\ningentitysetshavekeyconstraints andtotalparticipation. Thebesttranslation\napproach inthiscaseistomapalltheentities &'3wellastherelationship into\nasingletable;thedetailsarestraightforward.", "116": "82 CHAPTER~3\n3.5.5Translating WeakEntitySets\nAweakentitysetalwaysparticipates inaone-to-many binaryrelationship and\nhasakeyconstraint andtotalparticipation. Thesecondtranslation approach\ndiscussed inSection3.5.3isidealinthiscase,butwemusttakeintoaccount\nthattheweakentityhasonlyapartialkey.Also,whenanownerentityis\ndeleted, wewantallownedweakentitiestobedeleted.\nConsider theDependents weakentitysetshowninFigure3.14,withpartial\nkeypname.ADependents entitycanbeidentified uniquely onlyifwetakethe\nkeyoftheowningEmployees entityandthepnameoftheDependents entity,\nandtheDependents entitymustbedeletediftheowningEmployees entityis\ndeleted.\nEmployees\nFigure3.14TheDependents WeakEntitySet\nWecancapture thedesiredsemantics withthefollowing definition ofthe\nDep_Policy relation:\nCREATE TABLEDep_Policy (pname CHAR(20) ,\nage INTEGER,\ncost REAL,\nssn CHAR(11),\nPRIMARY KEY(pname, ssn),\nFOREIGN KEY(ssn)REFERENCES Employees\nONDELETE CASCADE )\nObserve thattheprimary keyis(pna:me, ssn),sinceDependents isaweak\nentity.Thisconstraint isachangewithrespecttothetranslation discussed in\nSection3.5.3.\\VehavetoensurethateveryDependents entityisassociated\nwithanEmployees entity(theowner),asperthetotalparticipation constraint\nonDependents. Thatis,ssncannotbenull.Thisisensured because SST/,is\npartoftheprimary key.TheCASCADE optionensuresthatinformation about\nanemployee's policyanddependents isdeletedifthecorresponding Employees\ntupleisdeleted.", "117": "TheRelational 1\"1,,1oriel\n3.5.6Translating ClassHierarchies83\nWepresentthetwobasicapproaches tohandling ISAhierarchies byapplying\nthemtotheERdiagram showninFigure3.15:\nFigure3.15ClassHierarchy\n1.WecanmapeachoftheentitysetsEmployees, Hourly_Emps,andCon\u00ad\ntracLEmps toadistinct relation. TheEmployees relation iscreatedas\ninSection 2.2.WediscussHourly ~mpshere;ContracLEmps ishan\u00ad\ndledsimilarly. Therelation forHourly_Empsincludes thehourly_wages\nandhours_worked attributes ofHourly_Emps.Italsocontains thekeyat\u00ad\ntributes ofthesuperclass (ssn,inthisexample), whichserveastheprimary\nkeyforHourly_Emps, a.',wellasaforeignkeyreferencing thesuperclass\n(Employees). ForeachHourly_Emps entity,thevalueofthenameand\nlotattributes arestoredinthecorresponding rowofthesupercla...,s (Em\u00ad\nployees). Notethatifthesuperclass tupleisdeleted, thedeletemustbe\ncascaded toHourly ~mps.\n2.Alternatively, wecancreatejusttworelations, corresponding toHourly_Emps\nandContracLEmps. Therelation forHourly ~mpsincludes alltheat\u00ad\ntributes ofHourly_Empsaswellasalltheattributes ofEmployees (i.e.,\nssn,name,lot,hO'l.1,rly_wages,hours_worked:).\nThefirstapproach isgeneralandalwaysapplicable. Queriesinwhichwewant\nto(~xamine all employees anddonotcareabouttheattributes specifictothe\nsubclasses arehandled easilyusingtheEmployees relation. However, queries\ninwhichwewanttoexamine, say,hourlyemployees, mayrequireustocom\u00ad\nbineHourly_Emps(orContracLEmps, asthecasemaybe)withEmployees to\nretrievenameandlot.", "118": "84 CHAPTER\u00b7\u00b7~\nThesecondapproach isnotapplicable ifwehaveemployees whoareneither\nhourlyemployees norcontract employees, sincethereisnowaytostoresuch\nemployees. Also,ifanemployee isbothanHourly-.EmpsandaContracLEmps\nentity,thenthenameandlot:valuesarestoredtwice.Thisduplication canlead\ntosomeoftheanomalies thatwediscussinChapter 19.Aquerythatneedsto\nexamine allemployees mustnowexamine tworelations. Ontheotherhand,a\nquerythatneedstoexamine onlyhourlyemployees cannowdosobyexamining\njustonerelation. Thechoicebetween theseapproaches clearlydepends onthe\nsemantics ofthedataandthefrequency ofcommon operations.\nIngeneral, overlapandcovering constraints canbeexpressed inSQLonlyby\nusingassertions.\n3.5.7Translating ERDiagrams withAggregation\nConsider theERdiagram showninFigure3.16.TheEmployees, Projects,\nManilars\nDepartmentsI\n_______did~\nfT:C~'~~)\nFigure 3.16Aggregation\nandDepartments entitysetsandtheSponsors relationship setaremapped as\ndescribed inprevious sections. FortheMonitors relationship set,wecreatea\nrelationwiththefollowing attributes: thekeyattributes ofEmployees (88n),the\nkeyattributes ofSponsors (d'id,p'id),andthedescriptive attributes ofMonitors\n('/.tnt:'il).Thistranslation isessentially thestandard mapping forarelationship\nset,asdescribed inSection3.5.2.", "119": "TheRelational A!odd 85\n~\nThereisaspecialcaseinwhichthistranslation canberefinedbydropping the\nSponsors relation. Consicler theSponsors relation.Ithasattributes pid,did,\nandsince;andingeneralweneedit(inaddition tol\\rlonitors) fortworeasons:\n1.\\Vehavetorecordthedescriptive attributes (inourexample, since)ofthe\nSponsors relationship.\n2.Noteverysponsorship hasamonitor, andthussome(p'id,did)pairsinthe\nSponsors relation maynotappearintheMonitors relation.\nHowever, ifSponsors hasnodescriptive attributes andhastotalparticipation\ninMonitors, everypossible instance oftheSponsors relation canbeobtained\nfromthe(pid,did)columns ofMonitors; Sponsors canbedropped.\n3.5.8ERtoRelational: Additional Examples\nConsider theERdiagram showninFigure3.17.Wecanusethekeyconstraints\nFigure3.17PolicyRevisited\ntocombine Purchaser information withPoliciesandBeneficiary information\nwithDependents, andtranslate itintotherelational modelasfollows:\nCREATE TABLEPolicies(policyid INTEGER,\ncost REAL,\nssn CHAR(11)NOTNULL,\nPRIMARY KEY(policyid),\nFOREIGN KEY(ssn)REFERENCES Employees\nONDELETE CASCADE )", "120": "86 CHAPTERB\nCREATE TABLEDependents (pname CHAR(20) ,\nage INTEGER,\npolicyid INTEGER,\nPRIMARY KEY(pname, policyid),\nFOREIGN KEY(policyid) REFERENCES Policies\nONDELETE CASCADE)\nNoticehowthedeletion ofanemployee leadstothedeletion ofallpolicies\nownedbytheemployee andalldependents whoarebeneficiaries ofthosepoli\u00ad\ncies.Further, eachdependent isrequired tohaveacovering policy-because\npolicyidispartoftheprimary keyofDependents, thereisanimplicit NOTNULL\nconstraint. Thismodelaccurately reflectstheparticipation constraints inthe\nERdiagram andtheintended actionswhenanemployee entityisdeleted.\nIngeneral, therecouldbeachainofidentifying relationships forweakentity\nsets.Forexample, weassumed thatpolicyid uniquely identifies apolicy.Sup\u00ad\nposethatpolicyid distinguishes onlythepoliciesownedbyagivenemployee;\nthatis,policyid isonlyapartialkeyandPoliciesshouldbemodeled asaweak\nentityset.Thisnewassumption aboutpolicyiddoesnotcausemuchtochange\ninthepreceding discussion. Infact,theonlychanges arethattheprimary\nkeyofPolicies becomes (policyid, ssn),andasaconsequence, thedefinition of\nDependents changes-a fieldcalledssnisaddedandbecomes partofboththe\nprimary keyofDependents andtheforeignkeyreferencing Policies:\nCREATE TABLEDependents (pname CHAR(20) ,\nssn CHAR(11),\nage INTEGER,\npolicyid INTEGER NOTNULL,\nPRIMARY KEY(pname, policyid, ssn),\nFOREIGN KEY(policyid, ssn)REFERENCES Policies\nONDELETE CASCADE )\n3.6INTRODUCTION TOVIEWS\nAviewisatablewhoserowsarenotexplicitly storedinthedatabase but\narecomputed asneededfromaviewdefinition. Consider theStudents and\nEnrolled relations. Suppose weareofteninterested infindingthenamesand\nstudent identifiers ofstudents whogotagradeofBinsomecourse,together\nwiththecourseidentifier. \\Necandefineaviewforthispurpose. UsingSQL\nnotation:\nCREATE VIEWB-Students (name,sid,course)\nASSELECT S.sname, S.sid,E.cid", "121": "TheRelational 1I1odel\nFROM\nWHEREStudents S,Enrolled E\nS.sid=E.studid ANDE.grade ='B'87\n$\nTheviewB-Students hasthreefieldscalledname,sid,andcoursewiththe\nsamedomains asthefieldssnameandsidinStudents andcidinEnrolled.\n(Iftheoptional arguments name,sid,andcourseareomitted fromtheCREATE\nVIEWstatement, thecolumnnamessname,sid,andcidareinherited.)\nThisviewcanbeusedjustlikeabasetable,orexplicitly storedtable,in\ndefining newqueriesorviews.Giventheinstances ofEnrolled andStudents\nshowninFigure3.4,B-Students contains thetuplesshowninFigure3.18.\nConceptually, whenever B-Students isusedinaquery,theviewdefinition is\nfirstevaluated toobtainthecorresponding instance ofB-Students, thentherest\nofthequeryisevaluated treating B-Students likeanyotherrelation referred\ntointhequery.(Wediscusshowqueriesonviewsareevaluated inpractice in\nChapter 25.)\nsid course\nHistory105\nReggae203\nFigure3.18AnInstance oftheB-Students View\n3.6.1Views,DataIndependence, Security\nConsider thelevelsofabstraction wediscussed inSection1.5.2.Thephysical\nschemaforarelational database describes howtherelations intheconceptual\nschemaarestored,intermsofthefileorganizations andindexesused.The\nconceptual schemaisthecollection ofschemas oftherelations storedinthe\ndatabase. Whilesomerelations intheconceptual schemacanalsobeexposed to\napplications, thatis,bepartoftheexte'malschemaofthedatabase, additional\nrelations intheexternal schemacanbedefinedusingtheviewmechanism.\nTheviewmechanism thusprovides thesupport forlogicaldataindependence\nintherelational model.Thatis,itcanbeusedtodefinerelations inthe\nexternal schemathatmaskchanges intheconceptual schemaofthedatabase\nfromapplications. Forexample, iftheschemaofastoredrelation ischanged,\nwecandefineaviewwiththeoldschemaandapplications thatexpecttosee\ntheoldschemacannowusethisview.\nViewsarealsovaluable inthecontextofsecurity: Wecandefineviewsthat\ngiveagroupofusersaccesstojusttheinformation theyareallowedtosee.For\nexample, wecandefineaviewthatallowsstudents toseetheotherstudents'", "122": "88 CHAPTER B\nnameandagebutnottheirgpa,andallowsallstudents toaccessthisviewbut\nnottheunderlying Students table(seeChapter 21).\n3.6.2Updates onViews\nThemotivation behindtheviewmechanism istotailorhowusersseethedata.\nUsersshouldnothavetoworryabouttheviewversusbasetabledistinction.\nThisgoalisindeedachieved inthecaseofqueries onviews;aviewcanbeused\njustlikeanyotherrelationindefining aquery.However, itisnaturaltowantto\nspecifyupdates onviewsaswell.Here,unfortunately, thedistinction between\naviewandaba.setablemustbekeptinmind.\nTheSQL-92standard allowsupdates tobespecified onlyonviewsthatare\ndefinedonasinglebasetableusingjustselection andprojection, withnouseof\naggregate operations.3Suchviewsarecalledupdatable views.Thisdefinition\nisoversimplified, butitcaptures thespiritoftherestrictions. Anupdateon\nsucharestricted viewcanalwaysbeimplemented byupdating theunderlying\nbasetableinanunambiguous way.Consider thefollowing view:\nCREATE VIEWGoodStudents (sid,gpa)\nASSELECT S.sid,S.gpa\nFROM Students S\nWHERES.gpa> 3.0\nWecanimplement acommand tomodifythegpaofaGoodStudents rowby\nmodifying thecorresponding rowinStudents. WecandeleteaGoodStudents\nrowbydeleting thecorresponding rowfromStudents. (Ingeneral, iftheview\ndidnotincludeakeyfortheunderlying table,severalrowsinthetablecould\n'correspond' toasinglerowintheview.Thiswouldbethecase,forexample,\nifweusedS.sname insteadofS.sidinthedefinition ofGoodStudents. Acom\u00ad\nmandthataffectsarowintheviewthenaffectsallcorresponding rowsinthe\nunderlying table.)\nWecaninsertaGoodStudents rowbyinserting arowintoStudents, using\nnullvaluesincolumns ofStudents thatdonotappearinGoodStudents (e.g.,\nsname,login).Notethatprimary keycolumns arenotallowedtocontain null\nvalues.Therefore, ifweattempt toinsertrowsthrough aviewthatdoesnot\ncontaintheprimary keyoftheunderlying table,theinsertions willberejected.\nForexample, ifGoodStudents contained snarnebutnot,c;id,wecouldnotinsert\nrowsintoStudents through insertions toGooclStudents.\n3There isalsotherestriction thattheDISTINCT operator cannotbeusedinupdatable vi(;wdefi\u00ad\nnitions. Bydefault, SQLdoesnoteliminate duplicate copiesofrowsfromtheresultofitquery;the\nDISTINCT operator requires duplicate elimination. vVediscusst.hispointfurtherinChapt.er 5.", "123": "TheRelational A10dd\n----------------~-\nUpdatable ViewsinSQL:1999 TheHewSQLstandard hasexpanded\ntheclassofviewdefinitions thatareupdatable~ takingprimary.key\nconstraints intoaccount. Incontra..')t\u00b7 toSQL-92~ a\u00b7viewdefinition that\ncontains morethanOIletableintheFROMclausemaybeupdatable under\nthenewdefinition. Intuitively~ wecanupdateafieldofa.viewifitis\nobtained fromexactlyoneoftheunderlying tables,andtheprimary key\nofthattableisincluded inthefieldsoftheview.\nSQL:1999 distinguishes between viewswhoserowscanbemodified (updat\u00ad\nableviews)andviewsintowhichnewrowscanbeinserted(insertable\u00ad\nintoviews): ViewsdefinedusingtheSQLconstructs UNION,INTERSECT,\nandEXCEPT(whichwediscussinChapter 5)cannotbeinserted into,even\niftheyareupdatable. Intuitively, updatability ensuresthatanupdated\ntupleintheviewcanbetracedtoexactlyonetupleinoneofthetables\nusedtodefinetheview.Theupdatability property, however, maystillnot\nenableustodecideintowhichtabletoinsertanewtuple.\nAnimportant observation isthatanINSERTorUPDATE maychangetheun\u00ad\nderlying basetablesothattheresulting (i.e.,inserted ormodified) rowisnot\nintheview!Forexample, ifwetrytoinsertarow(51234,2.8)intotheview,\nthisrowcanbe(padded withnullvaluesintheotherfieldsofStudents and\nthen)addedtotheunderlying Students table,butitwillnotappearinthe\nGoodStudents viewbecause itdoesnotsatisfytheviewcondition gpa>3.0.\nTheSQLdefaultactionistoallowthisinsertion, butwecandisallow itby\naddingtheclauseWITHCHECKOPTIONtothedefinition oftheview.Inthis\ncase,onlyrowsthatwillactually appearintheviewarepermissible insertions.\nWecautionthereader,thatwhenaviewisdefinedintermsofanother view,\ntheinteraction between theseviewdefinitions withrespecttoupdates andthe\nCHECKOPTIONclausecanbecomplex; wenotgointothedetails.\nNeedtoRestrictViewUpdates\nvVhiletheSQLrulesonupdatable viewsaremorestringent thannecessary,\ntherearesomefundamental problems withupdatesspecified onviewsandgood\nreasontolimittheclassofviewsthatcanbeupdated. Consider theStudents\nrelationandanewrelationcalledClubs:\nClubs(cname:string, jyear:date,mnarne:string)", "124": "90\n~\nSailing 1996Dave\nHiking 1997Smith\nRowing 1998SmithDave\nJones\nSmith\nSmithdave(gcs\njones~~cs\nsmith@ee\nsmith@mathCHAPTER 8\nFigure3.19AnInstance CofClubs\nIname,.loginFigure3.20AnInstance 53ofStudents\nIdub since\nDave dave@cs Sailing 1996\nSmith smith@ee Hiking 1997\nSmith smith@ee Rowing 1998\nSmith smith@math Hiking 1997\nSmith smith@math Rowing 1998\nFigure 3.21Instance ofActiveStudents\nAtupleinClubsdenotesthatthestudentcalledmnamehasbeenamember of\ntheclubcnamesincethedatejyear.4Suppose thatweareofteninterested in\nfindingthenamesandloginsofstudents withagpagreaterthan3whobelong\ntoatleastoneclub,alongwiththeclubnameandthedatetheyjoinedthe\nclub.Wecandefineaviewforthispurpose:\nCREATE VIEWActiveStudents (name,login,club,since)\nASSELECT S.sname, S.login,C.cname, C.jyear\nFROM Students S,ClubsC\nWHERE S.sname =C.mname ANDS.gpa> 3\nConsider theinstances ofStudents andClubsshowninFigures3.19and3.20.\nWhenevaluated usingtheinstances CandS3,ActiveStudents contains the\nrowsshowninFigure3.21.\nNowsuppose thatwewanttodeletetherow(Smith,smith@ee, Hiking,1997)\nfromActiveStudents. Howarewetodothis?ActiveStudents rowsarenot\nstoredexplicitly butcomputed asneededfromtheStudents andClubstables\nusingtheviewdefinition. SowemustchangeeitherStudents orClubs(or\nboth)insuchawaythatevaluating theviewdefinition onthemodified instance\ndoesnotproduce therow(Snrith,8Tnith@ec, Hiking,1997.)Thista.skcanbe\nctccomplished inoneoftwoways:byeitherdeleting therow(53688 ..Sm'ith,\n8Tn'ith(iJ)ee, 18,,g.2)fromStudents ordeleting therow(Hiking, 1.997,8m/ith)\nclvVeremarkthatClubshasapoorlydesigned schema (chosen forthesakeofourdiscussion ofview\nupdates), sinceitidentifies students byname,whichisnotacandidate keyforStudents.", "125": "TheRelational tv!odel 9J\nfromClubs.Butneithersolution issatisfactory. Removing theStudents row\nhastheeffectofalsodeletingtherow(8m:ith,smith@ee, Rowing, 1998)fromthe\nviewActiveStudents. Removing theClubsrowh&'3theeffectofalsodeletingthe\nrow(Smith,smith@math, Hiking,1991)fromtheviewActiveStudents. Neither\nsideeffectisdesirable. Infact,theonlyreasonable solution istod'isallow such\nupdates onviews.\nViewsinvolving morethanonebasetablecan,inprinciple, besafelyupdated.\nTheB-Students viewweintroduced atthebeginning ofthissectionisanex\u00ad\nampleofsuchaview.Consider theinstance ofB-Students showninFigure\n3.18(with,ofcourse,thecorresponding instances ofStudents andEnrolled as\ninFigure3.4).Toinsertatuple,say(Dave,50000,Reggae203) B-Students, we\ncansimplyinsertatuple(Reggae203, B,50000)intoEnrolled sincethereisal\u00ad\nreadyatupleforsid50000inStudents. Toinsert(John,55000,Reggae203), on\ntheotherhand,wehavetoinsert(Reggae203, B,55000)intoEnrolled andalso\ninsert(55000, John,null, null, null)intoStudents. Observe hownullvalues\nareusedinfieldsoftheinserted tuplewhosevalueisnotavailable. Fortunately,\ntheviewschemacontains theprimary keyfieldsofbothunderlying basetables;\notherwise, wewouldnotbeabletosupport insertions intothisview.Todelete\natuplefromtheviewB-Students, wecansimplydeletethecorresponding tuple\nfromEnrolled.\nAlthough thisexample illustrates thattheSQLrulesonupdatable viewsare\nunnecessarily restrictive, italsobringsoutthecomplexity ofhandling view\nupdates inthegeneralcase.Forpractical reasons, theSQLstandard haschosen\ntoallowonlyupdates onaveryrestricted classofviews.\n3.7DESTROYING/ALTERING TABLES ANDVIEWS\nIfwedecidethatwenolongerneedabasetableandwanttodestroyit(i.e.,\ndeletealltherowsandremovethetabledefinition information), wecanuse\ntheDROPTABLEcommand. Forexample, DROPTABLEStudents RESTRICT de\u00ad\nstroystheStudents tableunlesssomevieworintegrity constraint refersto\nStudents; ifso,thecommand fails.Ifthekeyword RESTRICT isreplaced by\nCASCADE, Students isdropped andanyreferencing viewsorintegrity constraints\nare(recursively) dropped aswell;oneoftheset\\VOkeyvlOrds mustalwaysbe\nspecified. Avipwcanbedropped usingtheDROPVIEWcommand, whichisjust\nlikeDROPTABLE.\nALTERTABLEmodifies thestructure ofanexisting table.Toaddacolumn\ncalledmaiden-name toStudents, forexample, wewouldusethefollowing com\u00ad\nmand:", "126": "92\nALTERTABLEStudents\nADDCOLUMN maiden-name CHAR(10)CUAPTER\u00b7.'3\nThedefinition ofStudents ismodified toaddthiscolumn, andallexisting rows\narepaddedwithnullvaluesinthiscolumn. ALTERTABLEcanalsobeused\ntodeletecolumns andaddordropintegrity constraints onatable;wedonot\ndiscusstheseaspectsofthecommand beyondremarking thatdropping columns\nistreatedverysimilarly todropping tablesorviews.\n3.8CASESTUDY: THEINTERNET STORE\nThenextdesignstepinourrunning example, continued fromSection2.8,is\nlogicaldatabase design.Usingthestandard approach discussed inChapter 3,\nDBDudes mapstheERdiagram showninFigure2.20totherelational model,\ngenerating thefollowing tables:\nCREATE TABLEBooks(isbn CHAR(10),\ntitle CHAR(80) ,\nauthor CHAR(80),\nqty_in-stock INTEGER,\nprice REAL,\nyeaLpublished INTEGER,\nPRIMARY KEY(isbn))\nCREATE TABLEOrders(isbn CHAR(10),\nciel INTEGER,\ncarelnum CHAR(16),\nqty INTEGER,\norder_date DATE,\nship_date DATE,\nPRIMARY KEY(isbn,cid),\nFOREIGN KEY(isbn)REFERENCES Books,\nFOREIGN KEY(cid)REFERENCES Customers)\nCREATE TABLECustomers (cid INTEGER,\ncname CHAR(80),\naddress CHAR(200),\nPRIMARY KEY(cid)\nThedesignteamleader,whoisstillbrooding overthefactthatthereview\nexposed aflawinthedesign,nowhasaninspiration. TheOrderstablecontains\nthefieldorder_date andthekeyforthetablecontains onlythefieldsisbnand\nc'id.Because ofthis,acustomer cannotorderthesamebookOIldifferent days,", "127": "TheRelat'ional l1;lodel 9~\nare.striction thatwasnotintended. vVhynotaddtheorder-date attribute to\nthekeyfortheOrderstable?Thiswouldeliminate theunwanted restrietion:\nCREATE TABLEOrders(isbn CHAR(10) ,\nPRIMARY KEY(isbn,cid,ship_date),\n...)\nThereviewer, Dude2,isnotentirely happywiththissolution, whichhecalls\na'hack'.HepointsoutthatnonaturalERdiagram reflectsthisdesignand\nstresses theimportance oftheERdiagram &<;adesigndo\u00b7cument. Dude1\narguesthat,whileDude2hasapoint,itisimportant topresentB&Nwith\napreliminary designandgetfeedback; everyone agreeswiththis,andtheygo\nbacktoB&N.\nTheownerofB&Nnowbringsupsomeadditional requirements hedidnot\nmention duringtheinitialdiscussions: \"Customers shouldbeabletopurchase\nseveraldifferent booksinasingleorder.Forexample, ifacustomer wantsto\npurchase threecopiesof'TheEnglishTeacher' andtwocopiesof'TheCharacter\nofPhysical Law,'thecustomer shouldbeabletoplaceasingleorderforboth\nbooks.\"\nThedesignteamleader,Dude1,askshowthisaffectstheshippping policy.\nDoesB&Nstillwanttoshipallbooksinanordertogether? Theownerof\nB&Nexplains theirshipping policy:\"Assoonaswehave have enoughcopies\nofanordered bookweshipit,evenifanordercontains severalbooks.Soit\ncouldhappenthatthethreecopiesof'TheEnglishTeacher' areshipped today\nbecause wehavefivecopiesinstock,butthat'TheCharacter ofPhysical Law'\nisshipped tomorrow, because wecurrently haveonlyonecopyinstockand\nanother copyarrivestomorrow. Inaddition, mycustomers couldplacemore\nthanoneorderperday,andtheywanttobeabletoidentifytheordersthey\nplaced.\"\nTheDBDudes teamthinksthisoverandidentifies twonewrequirements: First,\nitmustbepossible toorderseveraldifferent booksinasingleorderandsec\u00ad\nond,acustomer mustbeabletodistinguish between severalordersplacedthe\nsameday.Toaccomodate theserequirements, theyintroduce anewattribute\nintotheOrderstablecalledordernum, whichuniquely identifies anorderand\ntherefore thecustomer placingtheorder.However, sinceseveralbookscouldbe\npurchased inasingleorder,onleTnum andisbnarebothneededtodetermine\nqt.yandship_dat.e intheOrderstable.\nOrdersareassign(~d ordernumbers sequentially andordersthatareplacedlater\nhavehigherordernumbers.Ifseveralordersareplacedbythesamecustomer", "128": "94 CHAPTER03\nonasingleday,theseordershavedifferent ordernumbers andcanthusbe\ndistinguished. TheSQLDDLstatement tocreatethemodified Orderstable\nfollows:\nCREATE TABLEOrders(ordernum INTEGER,\nisbn CHAR(10),\ndd INTEGER,\ncardnum CHAR(16),\nqty INTEGER,\nordeLdate DATE,\nship~date DATE,\nPRIMARY KEY(ordernum, isbn),\nFOREIGN KEY(isbn)REFERENCES Books\nFOREIGN KEY(dd)REFERENCES Customers)\nTheownerofB&NisquitehappywiththisdesignforOrders,buthasrealized\nsomething else.(DBDudes isnotsurprised; customers almostalwayscomeup\nwithseveralnewrequirements asthedesignprogresses.) Whilehewantsall\nhisemployees tobeabletolookatthedetailsofanorder,sothattheycan\nrespond tocustomer enquiries, hewantscustomers' creditcardinformation to\nbesecure.Toaddressthisconcern, DBDudes createsthefollowing view:\nCREATE VIEWOrderInfo (isbn,cid,qty,order-date, ship_date)\nASSELECTO.cid,O.qty,O.ordeLdate, O.ship_date\nFROM Orders0\nTheplanistoallowemployees toseethistable,butnotOrders;thelatteris\nrestricted toB&N'sAccounting division. We'llseehowthisisaccomplished in\nSection21.7.\n3.9REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Whatisarelation? Differentiate between arelationschemaandarelation\ninstance. Definethetermsarityanddegreeofarelation. Whataredomain\nconstraints? (Section 3.1)\n\u2022WhatSQLconstruct enablesthedefinition ofarelation? \\Vhatconstructs\nallowmodification ofrelation instances? (Section 3.1.1)\n\u2022\\Vhatareintegrity constraints? Definethetermsprimary keyconstTa'int\nandforeignkeyconstraint. Howaretheseconstraints expressed inSQL?\nWhatotherkindsofconstraints canweexpressinSQL?(Section 3.2)", "129": "TheRelational Alodel 95\n\u2022\\VhatdoestheDBMSdowhenconstraints areviolated? Whatisreferen\u00ad\ntial'integr-ity? \\VhatoptionsdoesSQLgiveapplication programmers for\ndealingwithviolations ofreferential integrity? (Section 3.3)\n\u2022Whenareintegrity constraints enforced byaDBMS? Howcananappli\u00ad\ncationprogrammer controlthetimethatconstraint violations arechecked\nduringtransaction execution? (Section 3.3.1)\n\u2022Whatisarelational database query?(Section 3.4)\n\u2022Howcanwetranslate anERdiagram intoSQLstatements tocreateta\u00ad\nbles?Howareentitysetsmapped intorelations? Howarerelationship\nsetsmapped? Howareconstraints intheERmodel,weakentitysets,class\nhierarchies, andaggregation handled? (Section 3.5)\n\u2022Whatisaview?Howdoviewssupport logicaldataindependence? How\nareviewsusedforsecurity? Howarequeriesonviewsevaluated? Why\ndoesSQLrestricttheclassofviewsthatcanbeupdated? (Section 3.6)\n\u2022WhataretheSQLconstructs tomodifythestructure oftablesandde-\u00ad\nstraytablesandviews?Discusswhathappens whenwedestroyaview.\n(Section 3.7)\nEXERCISES\nExercise 3.1Definethefollowing terms:relation schema, relational database schema, do\u00ad\nmain,relationinstance, relation cardinality, andrelation degree.\nExercise 3.2Howmanydistincttuplesareinarelation instance withcardinality 22?\nExercise 3.3Doestherelational model,asseenbyanSQLquerywriter,provide physical\nandlogicaldataindependence? Explain.\nExercise 3.4\\\\Thatisthedifference between acandidate keyandtheprimary keyforagiven\nrelation? Whatisasuperkey?\nExercise 3.5Consider theinstance oftheStudents relation showninFigure3.1.\n1.Giveanexample ofanattribute (orsetofattributes) thatyoucandeduceisnota\ncandidate key,basedonthisinstance beinglegaL\n2.Isthereanyexample ofanattribute (orsetofattributes) thatyoucandeduceisa\ncandidate key,basedonthisinstance beinglegal?\nExercise 3.6Whatisaforeignkeyconstraint? Whyaresuchconstraints important? What\nisreferential integrity?\nExercise 3.7Consider therelations Students, Faculty, Courses, Rooms, Enrolled, Teaches,\n'LndMeets_In definedinSection1.5.2.", "130": "96 CHAPTERr3\n1.Listalltheforeignkeyconstraints amongtheserelations.\n2.Giveanexample ofa(plausible) constraint involving oneormoreoftheserelations that\nisnotaprimary keyorforeignkeyconstraint.\nExercise 3.8Answer eachofthefollowing questions briefly.Thequestions areb&'>ed OIlthe\nfollowing relational schema:\nEmp(eid:integer, ename:string, age:integer, sala1l1:real)\nWorks(eid:integer, did:integer, peLtime:integer)\nDept(did: integer, dname:string, budget:real,managerid: integer)\n1.Giveanexample ofaforeignkeyconstraint thatinvolves theDeptrelation. Whatare\ntheoptions forenforcing thisconstraint whenauserattempts todeleteaDepttuple?\n2.WritetheSQLstatements required tocreatethepreceding relations, including appro\u00ad\npriateversions ofallprimary andforeignkeyintegrity constraints.\n3.DefinetheDeptrelation inSQLsothateverydepartment isguaranteed tohavea\nmanager.\n4.WriteanSQLstatement toaddJohnDoeasanemployee witheid=101,age=32and\nsalary=15,000.\n5.WriteanSQLstatement togiveeveryemployee a10percent raise.\n6.WriteanSQLstatement todeletetheToydepartment. Giventhereferential integrity\nconstraints youchoseforthisschema, explain whathappens whenthisstatement is\nexecuted.\nExercise 3.9Consider theSQLquerywhoseanswerisshowninFigure3.6.\n1.Modifythisquerysothatonlythelogincolumn isincluded intheanswer.\n2.Iftheclause WHERES.gpa>=2isaddedtotheoriginal query,whatisthesetoftuples\nintheanswer?\nExercise 3.10Explain whytheaddition ofNOTNULLconstraints totheSQLdefinition of\ntheManages relation (inSection3.5.3)wouldnotenforcetheconstraint thateachdepartment\nmusthaveamanager. What,ifanything, isachieved byrequiring thattheS8nfieldofManages\nbenon-null?\nExercise 3.11Suppose thatwehaveaternary relationship Rbetween entitysetsA,B,\nandCsuchthatAhasakeyconstraint andtotalparticipation andBhasakeyconstraint;\nthesearetheonlyconstraints. Ahasattributes alanda2,withalbeingthekey;Band\nCaresimilar. Rhasnodescriptive attributes. WriteSQLstatements thatcreatetables\ncorresponding tothisinformation so&stocapture asmanyoftheconstraints aspossible.If\nyoucannotcapt,).ue someconstraint, explain why.\nExercise 3.12Consider thescenario fromExercise 2.2,whereyoudesigned anERdiagram\nforauniversity database. \\VriteSQLstaternents tocreatethecorresponding relations and\ncapture asmanyoftheconstraints aspossible.Ifyoucannot:capture someconstraints, explain\nwhy.\nExercise 3.13Consider theuniversity database fromExercise 2.:3andtheERdiagram you\ndesigned. WriteSQLstatements tocreatethecorresponding relations andcapture &'>many\noftheconstraints aspossible.Ifyoucannotcapture someconstraints, explainwhy.", "131": "TheRelatioTwl A10del 97\nt\nExercise 3.14Consider thescenario fromExercise 2.4,whereyoudesigned anERdiagram\nforacompany databa,c;e. \\~TriteSQLstatements tocreatethecorresponding relations and\ncapture asmanyoftheconstraints aspossible. Ifyoucannotcapture someconstraints,\nexplainwhy.\nExercise 3.15Consider theNotown database fromExercise 2.5.Youhavedecided torec\u00ad\nommend thatNotown usearelational database systemtostorecompany data.Showthe\nSQLstatements forcreating relations corresponding totheentitysetsandrelationship sets\ninyourdesign.Identify anyconstraints intheERdiagram thatyouareunabletocapture in\ntheSQLstatements andbrieflyexplainwhyyoucouldnotexpressthem.\nExercise 3.16Thanslate yourERdiagram fromExercise 2.6intoarelational schema, and\nshowtheSQLstatements neededtocreatetherelations, usingonlykeyandnullconstraints.\nIfyourtranslation cannotcapture anyconstraints intheERdiagram, explainwhy.\nInExercise 2.6,youalsomodified theERdiagram toincludetheconstraint thattestsona\nplanemustbeconducted byatechnician whoisanexpertonthatmodel.Canyoumodify\ntheSQLstatements defining therelations obtained bymapping theERdiagram tocheckthis\nconstraint?\nExercise 3.17Consider theERdiagram thatyoudesigned forthePrescriptions-R-X chainof\npharmacies inExercise 2.7.Definerelations corresponding totheentitysetsandrelationship\nsetsinyourdesignusingSQL.\nExercise 3.18WriteSQLstatements tocreatethecorresponding relations totheERdia\u00ad\ngramyoudesigned forExercise 2.8.Ifyourtranslation cannotcapture anyconstraints inthe\nERdiagram, explainwhy.\nExercise 3.19Brieflyanswerthefollowing questions basedonthisschema:\nEmp(e'id: integer, ename:string, age:integer, salary:real)\nWorks(eid:integer, did:integer, peLtime:integer)\nDept(did: integer, budget:real,managerid: integer)\n1.Suppose youhaveaviewSeniorEmp definedasfollows:\nCREATE VIEWSeniorEmp (sname, sage,salary)\nASSELECTE.ename, Kage,E.salary\nFROMEmpE\nWHEREKage>50\nExplain whatthesystemwilldotoprocessthefollowing query:\nSELECTS.sname\nFROM SeniorEmp S\nWHERE S.salary>100,000\n2.Giveanexample ofaviewonEmpthatcouldbeautomatically updated byupdating\nEmp.\n3.Giveanexample ofaviewonEmpthatwouldbeimpossible toupdate(automatically)\nandexplainwhyyourexample presents theupdateproblem thatitdoes.\nExercise 3.20C::onsider thefollowing schema:", "132": "98\nSuppliers( sid:integer, sname:string, address: string)\nParts(pid: integer, pname:string, color:string)\nCatalog(sid: integer, pid:integer, cost:real)CHAPTER,. 3\nTheCatalog relation liststhepricescharged forpartsbySuppliers. Answerthefollowing\nquestions:\n\u2022Giveanexample ofanupdatable viewinvolving onerelation.\n\u2022Giveanexample ofanupdatable viewinvolving tworelations.\n\u2022Giveanexample ofaninsertable-into viewthatisupdatable.\n\u2022Giveanexample ofaninsertable-into viewthatisnotupdatable.\nPROJECT-BASED EXERCISES\nExercise 3.21Createtherelations Students, Faculty, Courses, Rooms, Enrolled, Teaches,\nandMeets_In inMinibase.\nExercise 3.22InsertthetuplesshowninFigures3.1and3.4intotherelations Students and\nEnrolled. Createreasonable instances oftheotherrelations.\nExercise 3.23Whatintegrity constraints areenforced byMinibase?\nExercise 3.24RuntheSQLqueriespresented inthischapter.\nBIBLIOGRAPHIC NOTES\nTherelational modelwasproposed inaseminalpaperbyCodd[187].Childs[176]andKuhns\n[454]foreshadowed someofthesedevelopments. Gallaire and:WIinker's book[296]contains\nseveralpapersontheuseoflogicinthecontextofrelational databases. Asystembasedona\nvariation oftherelational modelinwhichtheentiredatabase isregarded abstractly asasingle\nrelation, calledtheuniversal relation, isdescribed in[746].Extensions oftherelational model\ntoincorporate nullvalues,whichindicate anunknown ormissingfieldvalue,arediscussed by\nseveralauthors; forexample, [329,396,622, 754, 790].\nPioneering projects includeSystemR[40,150]atIBMSanJoseResearch Laboratory (now\nIBMAlmaden Research Center), Ingres[717]attheUniversity ofCalifornia atBerkeley,\nPRTV[737]attheIBNIUKScientific CenterinPeterlee, andQBE[801]atIBMT.J.\nWatson Research Center.\nArichtheoryunderpins thefieldofrelational databases. Textsdevotedtotheoretical aspects\nincludethoseby\u00b7\u00b7Atzeni andDeAntonellis [45];Maier[501];andAbiteboul, Hull,andVianu\n[:3].[415]isanexcellent surveyarticle.\nIntegrity constraints inrelational databases havebeendiscussed atlength. [190]addresses\nsemantic extensions totherelational model,andintegrity, inparticular referential integrity.\nU~60]discusses semantic integrity constraints. [2()~3]contains papersthataddress various\naspects ofintegrity constraints, including inparticular adetailed discussion ofreferential\nintegrity. Avastliterature deals\\vithenforcing integrity constraints. [51]compares thecost", "133": "TheRelational AIodel 99\n.~\nofenforcing integrity constraints viacompile-time, run-time, andpost-execution checks.[145]\npresents anSQL-based language forspecifying integrity constraints andidentifies conditions\nunderwhichintegrity rulesspecified inthislanguage canbeviolated. [713]discusses the\ntechnique ofintegrity constraint checking byquerymodification. [180]discusses real-time\nintegrity constraints. Otherpapersonchecking integrity constraints indatabases include\n[82,122,138,517]. [681]considers theapproach ofverifying thecorrectness ofprograms that\naccessthedatabase insteadofrun-time checks. Notethatthislistofreferences isfarfTom\ncomplete; infact,itdoesnotincludeanyofthemanypapersonchecking recursively specified\nintegrity constraints. Someearlypapersinthiswidelystudiedareacanbefoundin[296]and\n[295].\nForreferences onSQL,seethebibliographic notesforChapter 5.Thisbookdoesnotdiscuss\nspecificproducts basedontherelational model,butmanyfinebooksdiscusseachofthemajor\ncommercial systems; forexample, Chamberlin's bookonDB2[149],DateandMcGoveran's\nbookonSybase[206],andKochandLoney's bookonOracle[443].\nSeveralpapersconsider theproblem oftranslaping updates specified onviewsintoupdates\nontheunderlying table[59,208,422, 468, 778].[292]isagoodsurveyonthistopic.See\nthebibliographic notesforChapter 25forreferences toworkquerying viewsandmaintaining\nmaterialized views.\n[731]discusses adesignmethodology basedondeveloping anERdiagram andthentranslating\ntotherelational model. Markowitz considers referential integrity inthecontext ofERto\nrelational mapping anddiscusses thesupport provided insomecommercial systems (asof\nthatdate)in[513,514].", "134": "4\nRELATIONAL ALGEBRA\nANDCALCULUS\n..Whatisthefoundation forrelational querylanguages likeSQL?What\nisthedifference between procedural anddeclarative languages?\n...Whatisrelational algebra, andwhyisitimportant?\n...Whatarethebasicalgebraoperators, andhowaretheycombined to\nwritecomplex queries?\n...Whatisrelational calculus, andwhyisitimportant?\n...Whatsubsetofmathematical logicisusedinrelational calculus, and\nhowisitusedtowritequeries?\n..Keyconcepts: relational algebra, select,project,union,intersection,\ncross-product, join,division; tuplerelational calculus, domain rela\u00ad\ntionalcalculus, formulas, universal andexistential quantifiers, bound\nandfreevariables\n'--------------------\nStandfinninyourrefusaltoremainconscious duringalgebra. Inreallife,I\nassureyou,thereisnosuchthingasalgebra.\n~\u00b7-FranLebowitz, SocialStudies\nThischapterpresents twoformalquerylanguages associated withtherelational\nmodel.Query'languages arespecialized languages foraskingquestions, or\nqueries, thatinvolvethedatainadatabase. Aftercovering somepreliminaries\ninSection4.1,wediscussrdafional algebrainSection4.2.Queriesinrelational\nalgebraarecomposed usingacollection ofoperators, andeachquerydescribes\nastep-by-step procedure forcomputing thedesiredanswer;thatis,queriesare\n100", "135": "Relat'ional Algebra andCalcullls un\nspecified inanoperationa.l manner. InSection4.3,wediscuss Tela.l'ional calcu\u00ad\nlus,inwhichaquerydescribes thedesiredans\\verwithout specifying howthe\nansweristobecomputed; thisnonprocedural styleofquerying iscalleddeclar\u00ad\nat'i'Ve.\\Veusuallyrefertorelational algebraandrelational calculus asalgebra\nandcalculus, respectively. vVecompare theexpressive powerofalgebraand\ncalculus inSection4.4.Theseformalquerylanguages havegreatlyinfluenced\ncommercial querylanguages suchasSQL,whichwediscussinlaterchapters.\n4.1PRELIMINARIES\nWebeginbyclarifying someimportant pointsaboutrelational queries. The\ninputsandoutputsofaqueryarerelations. Aqueryisevaluated usinginstances\nofeachinputrelation anditproduces aninstance oftheoutputrelation. In\nSection3.4,weusedfieldnamestorefertofieldsbecause thisnotation makes\nqueriesmorereadable. Analternative istoalwayslistthefieldsofagiven\nrelation inthesameorderandrefertofieldsbyposition ratherthanbyfield\nname.\nIndefining relational algebraandcalculus, thealternative ofreferring tofields\nbyposition ismoreconvenient thanreferring tofieldsbyname:Queries often\ninvolvethecomputation ofintermediate results,whicharethemselves relation\ninstances; andifweusefieldnamestorefertofields,thedefinition ofquery\nlanguage constructs mustspecifythenamesoffieldsforallintermediate relation\ninstances. Thiscanbetediousandisreallyasecondary issue,because wecan\nrefertofieldsbyposition anyway. Ontheotherhand,fieldnamesmakequeries\nmorereadable.\nDuetotheseconsiderations, weusethepositional notation toformally define\nrelational algebraandcalculus. Wealsointroduce simpleconventions that\nallowintermediate relations to'inherit' fieldnames,forconvenience.\nvVepresentanumber ofsamplequeriesusingthefollowing schema:\nSailors(sid: integer, snarne:string, rating:integer, age:real)\nBoats(bid:integer, bnarne:string, coloT:string)\nReserves (sid:integer, bid:_~_r:teger, day:date)\nThekeyfieldsareunderlined, andthedoma,inofeachfieldislistedafterthe\nfieldname.Thus,.sidisthekeyforSailors, bidisthekeyforBoats,andall\nthreefieldstogether formthekeyforReserves. Fieldsinaninstance ofone\noftheserelations arereferred tobyname,orpositionally, usingtheorderin\nwhichtheywerejustlisted.", "136": "102 CHAPTER 4,\nInseveralexamples illustrating therelational algebraoperators, weusethe\ninstances 81and82(ofSailors) andR1(ofReserves) showninFigures4.1,\n4.2,and4.3,respectively.\n1\",';-1 JIyv'l'1\n22Dustin 7 45.0\n31Lubber 8 55.5\n58Rusty 10 35.0\nFigure 4.1InstanceSlofSailorst'Cc'Jdl l'l\"n1mn1Jlnl:JlPj\n28yuppy 9 35.0\n31Lubber 8 55.5\n44guppy 5 35.0\n58Rusty 10 35.0\nFigure 4.2Instance S2ofSailors\nFigure 4.3Instance RlofReserves\n4.2RELATIONAL ALGEBRA\nRelational algebraisoneofthetwoformalquerylanguages associated withthe\nrelational model.Queriesinalgebraarecomposed usingacollection ofoper\u00ad\nators.Afundamental property isthateveryoperator inthealgebraaccepts\n(oneortwo)relation instances asarguments andreturnsarelation instance\nastheresult.Thisproperty makesiteasytocompose operators toforma\ncomplexquery-a relational algebra expression isrecursively definedtobe\narelation, aunaryalgebraoperator appliedtoasingleexpression, orabinary\nalgebraoperator appliedtotwoexpressions. Wedescribe thebasicoperators of\nthealgebra(selection, projection, union,cross-product, anddifference), aswell\nassomeadditional operators thatcanbedefinedintermsofthebasicopera\u00ad\ntorsbutarisefrequently enoughtowarrant specialattention, inthefollowing\nsections.\nEachrelational querydescribes astep-by-step procedure forcomputing the\ndesiredanswer,basedontheorderinwhichoperators areappliedinthequery.\nTheprocedural natureofthealgebraallowsustothinkofanalgebraexpression\nasarecipe,oraplan,forevaluating aquery,andrelational systems infactuse\nalgebraexpressions torepresent queryevaluation plans.", "137": "Relational AlgebTa andCalculus\n4.2.1Selection andProjection\nRelational algebraincludes operators toselectrowsfromarelation(a)andto\nprojectcolumns (7r).Theseoperations allowustomanipulate datainasingle\nrelation. Consider theinstance oftheSailorsrelation showninFigure4.2,\ndenoted as52.Wecanretrieve rowscorresponding toexpertsailorsbyusing\ntheaoperator. Theexpression\narating>8(52)\nevaluates totherelation showninFigure4.4.Thesubscript rating>8specifies\ntheselection criterion tobeappliedwhileretrieving tuples.\nsnameIratingI\nyuppy 9\nRusty 10\nFigure4.4O\"r(lting>s(S2)yuppy 9\nLubber 8\nguppy 5\nRusty 10\nFigure4.57r,m(lT1lc,Tating(S2)\nTheselection operator aspecifies thetuplestoretainthrough aselection con\u00ad\ndition.Ingeneral, theselection condition isaBoolean combination (i.e.,an\nexpression usingthelogicalconnectives /\\andV)oftermsthathavetheform\nattribute opconstant orattributel opattribute2, whereopisoneofthecom\u00ad\nparisonoperators <,<=,=,,#,>=,or>.Thereference toanattribute canbe\nbyposition (oftheform.iori)orbyname(oftheform.nameorname).The\nschemaoftheresultofaselection istheschemaoftheinputrelation instance.\nTheprojection operator 7rallowsustoextractcolumns fromarelation; for\nexample, wecanfindoutallsailornamesandratingsbyusing1f.Theexpression\n7rsname,rafing(52)\nevaluates totherelation showninFigure4.5.Thesubscript 8na:me)rating\nspecifies thefieldstoberetained; theotherfieldsare'projected out.'The\nschemaoftheresultofaprojection isdetermined bythefieldsthatareprojected\nintheobvious way.\nSuppose thatwewantedtofindoutonlytheagesofsailors.Theexpression\nevaluates totherelation showninFigure/1.6.Theirnportant pointtonoteis\nthat,although threesailorsareaged35,asingletuplewithage=:J5.0 appears in", "138": "104 CHAPTER+!\ntheresultoftheprojection. Thisfollm\\'8fromthedefinition ofarelationasaset\noftuples.Inpractice, realsystems oftenomittheexpensive stepofeliminating\nduplicate tuples,leadingtorelations thataremultisets. However, ourdiscussion\nofrelational algebraandcalculus a..-;sumes thatduplicate elimination isalways\ndonesothatrelations arealwayssetsoftuples.\nSincetheresultofarelational algebraexpression isalwaysarelation, wecan\nsubstitute anexpression wherever arelation isexpected. Forexample, wecan\ncompute thenamesandratingsofhighlyratedsailorsbycombining twoofthe\npreceding queries. Theexpression\n7rsname,rating((Jrati.ng>8(82))\nproduces theresultshowninFigure4.7.Itisobtained byapplying theselection\nto82(togettherelationshowninFigure4.4)andthenapplying theprojection.\nIage \u00b7.1\nQBO\n~\nFigure4.61rage(82)\n4.2.2SetOperationsFigure4.71rsname,rating(Urating>s(S2))\nThefollowing standard operations onsetsarealsoavailable inrelational al\u00ad\ngebra:un'ion(U),intersection (n),set-difference (-),andcmss-product (x).\nIIUnion:RU8returnsarelation instance containing aUtuplesthatoccur\nineitherrelation instance Rorrelation instance 8(orboth).Rand8\nmustbeunion-compatible, andtheschemaoftheresultisdefinedtobe\nidentical totheschemaofR.\nTworelation instances aresaidtobeunion-compatible ifthefollowing\nconditions hold:\n~theyhavethesamenumber ofthefields,and\n-corresponding fields,takeninorderfromlefttoright,havethesame\ndomains.\nNotethat ~eldnamesarenotusedindefining union-compatibility. for\nconvenience, wewillassumethatthefieldsofRU5'inheritnamesfromR,\nifthefieldsofRhavenames.(Thisassumption isimplicit indefining the\nschemaofRU5'tobeidentical totheschemaofR,asstatedearlier.)\nIIIIntersection: Rn5'returnsarelation instance containing alltuplesthat\noccurinbothRandS.Therelations RandSmustbeunion-compatible,\nandtheschemaoftheresultisdefinedtobeidentical totheschemaofR.", "139": "Relational AlgebraandCalC'ul1L8 H15\n\u2022Set-difference: R-8returnsarelationinstance containing alltuplesthat\noccurinRbutnotin8.Therelations Rand8mustbeunion-compatible,\nandtheschemaoftheresultisdefinedtobeidentical totheschemaofR.\n\u2022Cross-product: Rx 8returnsarelation instance whoseschemacontains\nallthefieldsofR(inthesameorderastheyappearinR)followed byall\nthefieldsof8(inthesameorderastheyappearin8).TheresultofRx 8\ncontains OIletuple(1',s)(theconcatenation oftuplesrands)foreachpair\noftuples l'ER,SE8.Thecross-product opertion issometimes called\nCartesian product.\n\\\\Teusetheconvention thatthefieldsofRx 8inheritnamesfromthe\ncorresponding fieldsofRand8.Itispossible forbothRand8tocontain\noneormorefieldshavingthesamename;thissituation createsanaming\nconfi'ict. Thecorresponding fieldsinRx 8areunnamed andarereferred\ntosolelybyposition.\nInthepreceding definitions, notethateachoperator canbeappliedtorelation\ninstances thatarecomputed usingarelational algebra(sub)expression.\nWenowillustrate thesedefinitions through severalexamples. Theunionof81\nand82isshowninFigure4.8.Fieldsarelistedinorder;fieldnamesarealso\ninherited from81.82hasthesamefieldnames,ofcourse,sinceitisalsoan\ninstance ofSailors.Ingeneral, fieldsof82mayhavedifferent names;recallthat\nwerequireonlydomains tomatch.Notethattheresultisasetoftuples.TUples\nthatappearinboth81and82appearonlyoncein81U82.Also,81uRIis\nnotavalidoperation becausethetworelations arenotunion-compatible. The\nintersection of81and82isshowninFigure4.9,andtheset-difference 81-82\nisshowninFigure4.10.\n22Dustin 7 45.0\n31Lubber 8 55.5\n58Rusty 10 35.0\n28yuppy 9 35.0\n44guppy 5 35.0\nFigure4.831u52\nTheresultofthecross-product 81xRlisshowninFigure4.11.BecauseRl\nand81bothhaveafieldnamedsid,byourconvention onfieldnames,the\ncorresponding twofieldsin81xRlareunnamed, andreferred tosolelybythe\nposition inwhichtheyappearinFigure4.11.Thefieldsin81xRlhavethe\nsamedomains asthecorresponding fieldsinRland5'1.InFigure4.11,sidis", "140": "106\n..isifi \"\"\".h.~\"\n31Lubber 8 55.5\n58Rusty 10 35.0\nFigure4.981n82GHAPTERf4\nli~\u00b7iiJB1ff/fj,me It,{4t~rf1l1f:4f1ei I\nI22IDustinI7[3fOJ\nFigure4.1081-82\nlistedinparentheses toemphasize thatitisnotaninherited fieldname;only\nthecorresponding domainisinherited.\n(sid!)bidaay\n22Dustin 7 45.02210110/10/96\n22Dustin 7 45.05810311/12/96\n31Lubber 8 55.52210110/10/96\n31Lubber 8 55.55810311/12/96\n58Rusty 10 35.02210110/10/96\n58Rusty 10 35.05810311/12/96\nFigure4.1181xR1\n4.2.3Renaming\nWehavebeencarefultoadoptfieldnameconventions thatensurethattheresult\nofarelational algebraexpression inherits fieldnamesfromitsargument (input)\nrelation instances inanaturalwaywhenever possible. However, nameconflicts\ncanariseinsomecases;forexample, in81xRl.Itistherefore convenient\ntobeabletogivenamesexplicitly tothefieldsofarelation instance thatis\ndefinedbyarelational algebraexpression. Infact,itisoftenconvenient togive\ntheinstance itselfanamesothatwecanbreakalargealgebraexpression into\nsmallerpiecesbygivingnamestotheresultsofsubexpressions.\nvVeintroduce arenaming operatorpforthispurpose. Theexpression p(R(F),E)\ntakesanarbitrary relational algebraexpression Eandreturnsaninstance of\na(new)relation calledR.Rcontains thesametuplesastheresultofEand\nhasthesameschema asE,butsomefieldsarerenamed. Thefieldnamesin\nrelation RarethesarneasinE,exceptforfieldsrenamed intheTenaming list\nF,whichisalistoftermshavingtheformoldname ~,newnarne orposition ~\nrW1llTlJLrne. Forptobewell-defined, references tofields(intheformofoldnarnes\norposit.ions intherenaming list)maybeunarnbiguous andnotwofieldsinthe\nresultmayhavethesamename.Sometimes wewanttoonlyrenarnefieldsor\n(re)name therelation; wetherefore treatbothRandFasoptional intheuse\nofp.(Ofcourse,itismeaningless toomitboth.)", "141": "Relational AlgebTaandCalc\"Uh18 107\nForexample, theexpression p(C(l ----7s'id1,5 ----7sid2),81xR1)returnsa\nrelationthatcontains thetuplesshowninFigure4.11andhasthefollowing\nschema: C(sidl:integer, ,marrw:string, mt'ing:integer, age:real,sid2:\ninteger, bid:integer, day:dates).\nItiscustomary toincludesomeadditional operators inthealgebra, butallof\nthemcanbedefinedintermsoftheoperators wehavedefinedthusfar.(In\nfact,therenaming operator isneededonlyforsyntactic convenience, andeven\nthenoperator isredundant; Rn8canbedefinedasR-(R-8).)Weconsider\ntheseadditional operators andtheirdefinition intermsofthebasicoperators\ninthenexttwosubsections.\n4.2.4Joins\nThejoinoperation isoneofthemostusefuloperations inrelational algebra\nandthemostcommonly usedwaytocombine information fromtwoormore\nrelations. Although ajoincanbedefinedasacross-product followed byselec\u00ad\ntionsandprojections, joinsarisemuchmorefrequently inpractice thanplain\ncross-products. Further, theresultofacross-product istypically muchlarger\nthantheresultofajoin,anditisveryimportant torecognize joinsandimple\u00ad\nmentthemwithout materializing theunderlying cross-product (byapplying the\nselections andprojections 'on-the-fly'). Forthesereasons, joinshavereceived\nalotofattention, andthereareseveralvariants ofthejoinoperation.1\nCondition Joins\nThemostgeneralversionofthejoinoperation acceptsajoincondition cand\napairofrelation instances asarguments andreturnsarelation instance. The\njoincond'it-ion isidentical toaselection condition inform.Theoperation is\ndefinedasfollows:\nR[:X)eS=O\"e(RXS)\nThus [:X)isdefinedtobeacross-product followed byaselection. Notethatthe\ncondition ccan(andtypically does)refertoattributes ofbothRandS.The\nreference toanattribute ofarelation, say,R,canbebypositioll (oftheform\nR.i)orbyIlame(oftheformR.name).\nAsanexample, theresultofSl[><JS1.8id<Rl.sid R1isshowninFigure4.12.\nBecause sidappears inboth81andR1,thecorresponding fieldsintheresult\nofthecross-product 81xR1(andtherefore intheresultof81[:X)S1.sid<Rl.sid R1)\n1Several variants ofjoinsarenotdiscussed inthischapter. Animportant c.la..'iSofjoins,called\n01lterjoins,isdiscussed inChapter 5.", "142": "108 CHAPTER ..t1\nareunnamed. Domains areinherited fromthecorresponding fieldsof81and\nRl.\nI(sid)IsnarneIratingIageI\u00b7\u00b7\u00b7{si41:lbidda/lj\nI22IDustin 7 45.058I103I11/12/96\nI31ILubber 8.-55.558I103I11/12/96\nFigure4.1251NSl.sid<R1.sid R1\nEquijoin\nAcommon specialcaseofthejoinoperation R[>(]8iswhenthejoincondition\nconsists solelyofequalities (connected by1\\)oftheformR.name1 =8.name2,\nthatis,equalities between twofieldsinRandS.Inthiscase,obviously, thereis\nsomeredundancy inretaining bothattributes intheresult.Forjoinconditions\nthatcontain onlysuchequalities, thejoinoperation isrefinedbydoingan\nadditional projection inwhich8.name2 isdropped. Thejoinoperation with\nthisrefinement iscalledequijoin.\nTheschemaoftheresultofanequijoin contains thefieldsofR(withthesame\nnamesanddomains asinR)followed bythefieldsof8thatdonotappear\ninthejoinconditions. Ifthissetoffieldsintheresultrelation includes two\nfieldsthatinheritthesamenamefromRand8,theyareunnamed intheresult\nrelation.\nWeillustrate 81l:<JR.sid=5.sid RlinFigure4.13.Notethatonlyonefieldcalled\nsidappears intheresult.\n~,marneIratingIageI\u00b7bid\u00b71day=tJ\nI22DustInI7I45.0101I10/10/96 I\nI58Rust}~I10I~5.0103I11/12/96I\nFigure4.1381MR..,H1=S'.\"id HI\nNaturalJoin\nAfurtherspecial ca.'3eofthejoinoperation R[>(]SisaneqUlJom inwhich\nequalities arcspecified onallfieldshavingthesamenameinRandS.In\nthiscase,wecansimplyomitthejoincondition; thedefaultisthatthejoin\ncondition isacollection ofequalities onallcommon fields.Wecallthisspecial\ncaseanatumJjo'in,andithastheniceproperty thattheresultisguaranteed\nnottohavetwofieldswiththesaInename.", "143": "Relai'ional AlgelrraandCalculus lQ9\nTheequijoin expression 81D<m..sid=s.sid R1isactually anaturaljoinal1dcan\nsimplybedenoted as81[XlR1,sincetheonlycommon fieldissid.Ifthetwo\nrelations havenoattributes incommon, 81[XlRlissimplythecross-product.\n4.2.5Division\nThedivision operator isusefulforexpressing certainkindsofqueriesforexam\u00ad\nple,\"Findthenamesofsailorswhohavereserved allboats.\" Understanding\nhowtousethebasicoperators ofthealgebratodefinedivision isausefulexer\u00ad\ncise.However, thedivisionoperator doesnothavethesameimportance asthe\notheroperators-it isnotneededasoften,anddatabase systems donottryto\nexploitthesemantics ofdivision byimplementing itasadistinctoperator (as,\nforexample, isdonewiththejoinoperator).\nWediscussdivision through anexample. Consider tworelation instances A\nandBinwhichAhas(exactly) twofieldsxandyandBhasjustonefieldy,\nwiththesamedomain asinA.Wedefinethedivision operation AlBasthe\nsetofallxvalues(intheformofunarytuples)suchthatforeveryyvaluein\n(atupleof)B,thereisatuple(x,y)inA.\nAnother waytounderstand division isasfollows. Foreachxvaluein(thefirst\ncolumnof)A,consider thesetofyvaluesthatappearin(thesecondfieldof)\ntuplesofAwiththatxvalue.Ifthissetcontains (allyvaluesin)B,thex\nvalueisintheresultofAlB.\nAnanalogy withintegerdivision mayalsohelptounderstand division. For\nintegers AandB,AlBisthelargestintegerQsuchthatQ*B::::;A.:For\nrelation instances AandB,AlBisthelargestrelation instance Qsuchthat\nQxBS:::A.\nDivision isillustrated inFigure4.14.IthelpstothinkofAasarelation listing\nthepartssupplied bysuppliers andoftheBrelations aslistingparts.AIB'i\ncomputes suppliers whosupplyallpartslistedinrdation instance Bi.\nExpressing AlBin termsoftheba...sicalgebraoperators isaninteresting ex\u00ad\nercise,andthereadershouldtrytodothisbeforereadingfurther. Thebasic\nideaistocompute all:rvaluesinAthatarenotdisqualified. Anxvalueis\ndisqualified iflJyattaching ayvaluefromB,weobtainatuple(x,y)thatisnot\ninA.Wecancompute disqualified tuplesusingthealgebraexpression\nThus,wecandefineAlBa.....,", "144": "110\nAIsnoipnoI\n81\\pII\nslp2\n~._~~\n81ip4\n82 \\pI\n~_P2 -~\n83'p2\n84p2\ns4p4CHAPTER$4\nBl[P.!!~J AlBl~;~J,....---,~ LEU\nI82I\nB2Ipno] 83\nBE0\np4~AlB2\nB3~BE\nB1J84\np2~ p4 AlB3[ill\nFigure4.14Examples Illustrating Division\nTounderstand thedivision operation infullgenerality, wehavetoconsider the\ncasewhenbothxandyarereplaced byasetofattributes. Thegeneralization is\nstraightforward andleftasanexercise forthereader.Wediscusstwoadditional\nexamples illustrating division (Queries Q9andQ10)laterinthissection.\n4.2.6MoreExamples ofAlgebra Queries\nWenowpresentseveralexamples toillustrate howtowritequeries in relational\nalgebra. WeusetheSailors,Reserves, andBoatsschemaforallourexamples\ninthissection. Weuseparentheses asneededtomakeouralgebraexpressions\nunambiguous. Notethatalltheexample queriesinthischapter aregiven\nauniquequerynumber. Thequerynumbers arekeptuniqueacrossboththis\nchapterandtheSQLquerychapter(Chapter 5).Thisnumbering makesiteasy\ntoidentify aquerywhenitisrevisited inthecontextofrelational calculus and\nSQLandtocompare different waysofwritingthesamequery.(Allreferences\ntoaquerycanbefoundinthesubjectindex.)\nIntherestofthischapter (andinChapter 5),weillustrate queriesusingthe\ninstances 83ofSailors,R2ofReserves, andB1ofBoats,showninFigures\n4.15, 4.16, and4.17,respectively.\n(Q1)FindthenamesofsailorswhohavercscT'ucd boatlOS.\nThisquerycanbewrittenasfollows:\n\".marne(((Jbid=1O:~Re.5erve8) [XJ8ailoT.5)", "145": "Relational Algebra andCalcul1ls\n~l\u00bb> .....\"\"\"'.+A.\".,'\" hAh\n22Dustin 7 45.0\n29Brutus 1 33.0\n31Lubber 8 55.5\n32Andy 8 25.5\n58Rusty 10 35.0\n64Horatio 7 35.0\n71Zorba 10 16.0\n74Horatio 9 35.0\n85Art 3 25.5\n95Bob 3 63.5\nFigure4.15AnInstance 83ofSailors111,\n2210110/10/98\n2210210/10/98\n2210310/8/98\n2210410/7/98\n3110211/10/98\n3110311/6/98\n3110411/12/98\n641019/5/98\n641029/8/98\n741039/8/98\nFigure4.16AnInstance R2ofReserves\nWefirstcompute thesetoftuplesinReserves withbid=103andthentakethe\nnaturaljoinofthissetwithSailors. Thisexpression canbeevaluated onin\u00ad\nstancesofReserves andSailors.Evaluated ontheinstances R2andS3,ityields\narelationthatcontains justonefield,calledsname,andthreetuples(Dustin),\n(Horatio), and(Lubber). (Observe thattwosailorsarecalledHoratioandonly\noneofthemhasreserved aredboat.)\n[~]bname Icolor\u00b7I\n101Interlake blue\n102Interlake red\n103Clipper green\n104Marine red\nFigure4.17AnInstance HIofBoats\nWecanbreakthisqueryintosmallerpiecesllsingtherenaming operator p:\np(Temp1, IJbir1=103ReseTves)\np(Temp2, Temp11XJ Sailor's)\n1Tsname(Temp2)\nNoticethatbecauseweareonlyllsingptogivenamestointermediate relations,\ntherenaming listisoptional andisomitted. TempIdenotesanintermediate\nrelationthatidentifies reservations ofboat103.Temp2isanotherintermediate\nrelation, anditdenotessailorswhohave mad(~areservation inthesetTempl.\nTheinstances oftheserelations whenevaluating thisqueryontheinstances R2\nandS3areillustrated inFigures4.18and4.19.Finally,weextractthesname\ncolumnfromTemp2.", "146": "112\n22 10~~10/8/98\n3110311/6/98\n741039/8/98Dustin\n31Lubber 8\n74Horatio 9CHAPTER;l\n10/8/98\n11/6/98--\n9/8/98\nFigure 4.18Instance ofTempI Figure4.19Instance ofTemp2\nTheversionofthequeryusingpisessentially thesameastheoriginal query;\ntheuseofpisjustsyntactic sugar.However, thereareindeedseveraldistinct\nwaystowriteaqueryinrelational algebra. Hereisanother waytowritethis\nquery:\nJrsname(CJbid=103(Reserves IX!Sailors))\nInthisversionwefirstcompute thenaturaljoinofReserves andSailorsand\nthenapplytheselection andtheprojection.\nThisexample offersaglimpse oftheroleplayedbyalgebra inarelational\nDBMS.Queriesareexpressed byusersinalanguage suchasSQL.TheDBMS\ntranslates anSQLqueryinto(anextended formof)relational algebraand\nthenlooksforotheralgebraexpressions thatproducethesameanswersbutare\ncheaper toevaluate.Iftheuser'squeryisfirsttranslated intotheexpression\n7fsname(CJbid=103 (Reserves IX!Sailors))\nagoodqueryoptimizer willfindtheequivalent expression\n7rsname((CJb\u00b7id=103Reserves) IX!Sailors)\nFurther, theoptimizer willrecognize thatthesecondexpression islikelyto\nbelessexpensive tocompute because thesizesofintermediate relations are\nsmaller, thankstotheearlyuseofselection.\n(Q2)Findthenamesofsailorswhoha'vereserved aredboat.\n7f.marne((CJcolor='red' Boats) IX!Reserves !><JSailoI's)\nThisqueryinvolves aseriesoftwojoins.First,wechoose(tuplesdescribing)\nredboats.Then,wejointhissetwithReserves (natural join,withequality\nspecified onthE)bidcolumn) toidentify reservations ofredboats.Next,we\njointheresulting intermediate relationwithSailors(natural join,withequality\nspecified onthesidcolumn) toretrieve thenamesofsailorswhohavernade\nreservations forredboats.Finally, weprojectthesailors'names.Theanswer,\nwhenevaluated ontheinstances B1,R2,andS3,contains thenamesDustin,\nHoratio, andLubber.", "147": "Relational Algebra andCalculus\nAnequivalent expression is:B.3\nThereaderisinvitedtorewritebothofthesequeriesbyusingptomakethe\nintermediate relations explicitandcompare theschema.<=; oftheintermediate\nrelations. Thesecondexpression generates intermediate relations withfewer\nfields(andistherefore likelytoresultinintermediate relation instances with\nfewertuplesaswell).Arelational queryoptimizer wouldtrytoarriveatthe\nsecondexpression ifitisgiventhefirst.\n(Q3)Findthecolorsofboatsreserved byLubber.\nJrcolor((asname='Lubber,Sa'ilors) [XJReserves [XJBoats)\nThisqueryisverysimilartothequeryweusedtocompute sailorswhoreserved\nredboats.Oninstances Bl,R2,andS3,thequeryreturnsthecolorsgreen\nandred.\n(Q4)Findthenamesofsailorswhohavereserved atleastoneboat.\nJrsname(Sailors [XJReserves)\nThejoinofSailorsandReserves createsanintermediate relationinwhichtuples\nconsistofaSailorstuple'attached to'aReserves tuple.ASailorstupleappears\nin(sometupleof)thisintermediate relation onlyifatleastoneReserves tuple\nhasthesamesidvalue,thatis,thesailorhasmadesomereservation. The\nanswer, whenevaluated ontheinstances Bl,R2andS3,contains thethree\ntuples(Dustin), (HoTatio),and(LubbeT). Eventhoughtwosailorscalled\nHoratio havereserved aboat,theanswercontains onlyonecopyofthetuple\n(HoTatio),because theanswerisarelation, thatis,asetoftuples,withno\nduplicates.\nAtthispointitisworthremarking onhowfrequently thenaturaljoinoperation\nisusedinourexamples. Thisfrequency ismorethanjustacoincidence based\nonthesetofquerieswehavechosentodiscuss; thenaturaljoinisavery\nnatural, widelyusedoperation. Inparticular, naturaljoinisfrequently used\nwhenjoiningtwotablesonaforeignkeyfield.InQueryQ4,forexalnple, the\njoinequatesthesidfieldsofSailorsandReserves, andthesidfieldofReserves\nisaforeignkeythatreferstothesidfieldofSailors.\n(Q5)Findthenarnesofsailorswhohavereserved aTedOTagTeenboat.\np(Tempboats, (acoloT='rcd' Boats)U(acolor='green' Boats))\nJrsna\u00b7rne(Tempboats [XJReseTves [XJSailors)", "148": "114 CHAPTER $4\nvVeidentifythesetofallboatsthatareeitherredorgreen(Tempboats, which\ncontains boats\\viththebids102, 103, and104oninstances E1,R2,andS3).\nThenwejoinwithReserves toidentify sid..,ofsailorswhohavereserved OIleof\ntheseboats;thisgivesussids22,31,64,and74overourexample instances.\nFinally,wejoin(anintermediate relationcontaining thissetofsids)withSailors\ntofindthenamesofSailorswiththesesids.ThisgivesusthenamesDustin,\nHoratio, andLubberontheinstances E1,R2,andS3.Another equivalent\ndefinition isthefollowing:\np(Tempboats, (acolor='red'Vcolor='green' Boats))\n7fsname(Tempboats [><]Reserves [><]Sailors)\nLetusnowconsider averysimilarquery.\n(Q6)Findthenamesofsailorswhohavereserved aredandagreenboat.It\nistempting totrytodothisbysimplyreplacing Ubyninthedefinition of\nTempboats:\np(Tempboats2, (acolor='red,Eoats) n(O\"color='green,Boats))\n'7fsname(Tempboats2 [><]Reserves [><]Sailors)\nHowever, thissolution isincorrect-it insteadtriestocompute sailorswhohave\nreserved aboatthatisbothredandgreen.(SincebidisakeyforBoats,aboat\ncanbeonlyonecolor;thisquerywillalwaysreturnanemptyanswerset.)The\ncorrectapproach istofindsailorswhohavereserved aredboat,thensailors\nwhohavereserved agreenboat,andthentaketheintersection ofthesetwo\nsets:\np(Tempred, '7fsid((acolor='red' Eoats) [><]Reserves))\np(Tempgreen,\n '7fsid((O\"color='green,Boats) [><]Reserves))\n'7f,marne((Ternpred nTempgreen) [><]Sailors)\nThetwotemporary relations compute thesidsofsailors,andtheirintersection\nidentifies sailorswhohavereserved bothredandgreenboats.Oninstances\nBI,R2,and53,thesidsofsailorswhohavereserved aredboatare22,31,\nand64.Thes'icLsofsailorswhohavereserved agreenboatare22,31,and74.\nThus,sailors22and31havereserved botharedboatandagreenboat;their\nnamesareDustinandLubber.\nThisformulation ofQueryQ6caneasilybeadapted tofindsailors\\vhohave\nreserved redorgreenboats(QueryQ5);justreplacenbyU:\np(TempTed, '7fsid((O\"color=lrcd' Boats) [)<]Reserves))\np(Tempgreen, '7fsid((O\"color='green' Boats) [)<]Reserves))\n'7fsTwme((Tempred UTempgreen) [)<]Sailors)", "149": "Relatiorwl AlgebraandGalcurus 115\nIntheformulations ofQueries Q5andQ6,thefactthatsid(thefieldover\nwhichwecompute unionorintersection) isakeyforSailorsisveryimportant.\nConsider thefollowing attempt toanswerQueryQ6:\np(Tempred, Jrsname((CJcolor='red,Boats) [><]Reserves [><]Sailors))\np(Tempgreen,Jrsname((CJcoloT='gTeenlBoats) [><]Reserves [><]Sailors))\nTemprednTempgreen\nThisattempt isincorrect forarathersubtlereason.Twodistinctsailorswith\nthesamename,suchasHoratio inourexample instances, mayhavereserved\nredandgreenboats,respectively. Inthiscase,thenameHoratio (incorrectly)\nisincluded intheanswereventhoughnooneindividual calledHoratio has\nreserved aredboatandagreenboat.Thecauseofthiserroristhatsname\nisusedtoidentify sailors(whiledoingtheintersection) inthisversionofthe\nquery,butsnameisnotakey.\n(Q7)Findthenamesofsailorswhohavereser-ved atleasttwoboats.\np(Reser-vations, Jrsid,sname,bid (Sailors[><]Reserves))\np(Reservationpairs(l ---'?sid1,2---'?sname1,3---'?bid1,4---'?sid2,\n5---'?sname2, 6---'?bid2),Reservations xReservations)\nJrsname1CJ(sidl=sid2)I\\(bidl=1-bid2) Reservationpair-s\nFirst,wecompute tuplesoftheform(sid,sname, bid),wheresailorsidhasmade\nareservation forboatbid;thissetoftuplesisthetemporary relation Reserva\u00ad\ntions.NextwefindallpairsofReservations tupleswherethesamesailorhas\nmadebothreservations andtheboatsinvolved aredistinct. Hereisthecentral\nidea:Toshowthatasailorhasreserved twoboats,wemustfindtwoReserva\u00ad\ntionstuplesinvolving thesamesailorbutdistinct boats.Overinstances El,\nR2,andS3,eachofthesailorswithsids22,31,and64havereserved atleast\ntwoboats.Finally,weprojectthenamesofsuchsailorstoobtaintheanswer,\ncontaining thenamesDustin,Horatio, andLubber.\nNoticethatweincluded sidinReservations becauseitisthekeyfieldidentifying\nsailors,andweneedittocheckthattwoReservations tuplesinvolvethesame\nsailor.Asnotedintheprevious example, wecannotusesnameforthispurpose.\n(Q8)Findthesidsofsailorsw'ithageover20whohavenotTeseTved aTedboat.\nJrsid(CJage>20Sa'ilors) -\n7rsid((CJco[oT='red,Boats) [><]Reserves [><]Sa'ilors)\nThisqueryillustrates theuseoftheset-difference operator. Again,weusethe\nfactthatsidisthekeyforSailors. vVefirstidentify sailorsagedover20(over", "150": "116\ninstances B1,R2,andS3,.'!'ids22,29,31,32,58,64,74,85,and95)andthen\ndiscardthosewhohavereserved aredboat(sid.c;22,31,and64),toobtainthe\nanswer(sids29,32,58,74,85,and95).Ifwewanttocompute thenamesof\nsuchsailors,\\vemustfirstcompute theirsids(asshownearlier)andthenjoin\nwithSailorsandprojectthesnamevalues.\n(Q9)Findthenamesofsailors'Whohaverese'rved allboats.\nTheuseofthewordall(orevery)isagoodindication thatthedivisionoperation\nmightbeapplicable:\np(Tempsids, (7l\"sid,bidReserves) /(7l\"bidBoats))\n7l\"sname(Tempsids NSailors)\nTheintermediate relation Tempsids isdefinedusingdivision andcomputes the\nsetofsidsofsailorswhohavereserved everyboat(overinstancesBl,R2,and\nS3,thisisjustsid22).Notehowwedefinethetworelations thatthedivision\noperator (/)isappliedto\u00b7-\u00b7--the firstrelation hastheschema(sid,bid) andthe\nsecondhastheschema(b'id).Division thenreturnsallsidssuchthatthereisa\ntuple(sid,bid) inthefirstrelation foreachbidinthesecond. JoiningTempsids\nwithSailorsisnecessary toassociate nameswiththeselected sids;forsailor\n22,thenameisDustin.\n(Q10)Findthenamesofsailors'Whohavereserved allboatscalledInterlake.\np(Tempsids, (7l\".5'id,bidReserves) /(7l\"bid((Jbname='Interlake' Boats)))\n7l\"sname(Tempsids [XlSailors)\nTheonlydifference withrespecttotheprevious queryisthatnowweapplya\nselection toBoats,toensurethatwecompute bidsonlyofboatsnamedInterlake\nindefining thesecondargument tothedivision operator. OverinstancesEl,\nR2,andS3,Tempsids evaluates tosids22and64,andtheanswercontains\ntheirnames,DustinandHoratio.\n403RELATIONAL CALCULUS\nRelational calculus isanalternative torelational algebra. Incontra.':;t tothe\nalgebra, whichisprocedural, thecalculus isnonprocedural, ordeclarative, in\nthatitallowsustodescribe thesetofanswers without beingexplicitabout\nhowtheyshouldbecomputed. Relational calculus hashadabiginfluence on\nthedesignofcommercial querylanguages sucha,sSQLand,especially, Query\u00ad\nby-Example (QBE).\nThevariantofthecalculus wepresentindetailiscalledthetuplerelational\ncalculus (TRC). Variables inTRCtakeontuplesasvalues.Inanother vari-", "151": "RelatiO'Tul,l AlgebraandCalculus\nant,calledthedomain relational calculus (DRC), thevariables rangeover\nfieldvalues.TRChashadmoreofaninfluence onSQL,\\vhileDRChasstrongly\ninfluenced QBE.vVediscussDRCinSection4.3.2.2\n4$3.1TupleRelational Calculus\nAtuplevariable isavariable thattakesontuplesofaparticular relation\nschema asvalues.Thatis,everyvalueassigned toagiventuplevariable has\nthesamenumber andtypeoffields.Atuplerelational calculus queryhasthe\nform{TIp(T)},whereTisatuplevariable andp(T)denotes aformulathat\ndescribes T;wewillshortlydefineformulas andqueriesrigorously. Theresult\nofthisqueryisthesetofalltuplestforwhichtheformulap(T)evaluates to\ntruewithT=t.Thelanguage forwritingformulasp(T)isthusattheheartof\nTRCandessentially asimplesubsetoffirst-order logic.Asasimpleexample,\nconsider thefollowing query.\n(Q11)Findallsailorswitharatingabove7.\n{SISESailors 1\\S.rating>7}\nWhenthisqueryisevaluated onaninstance oftheSailorsrelation, thetuple\nvariableSisinstantiated successively witheachtuple,andthetestS.rat'ing>7\nisapplied. Theanswercontains thoseinstances ofSthatpassthistest.On\ninstance S3ofSailors,theanswercontains Sailorstupleswithsid31, 32,58,\n71,and74.\nSyntaxofTRCQueries\nWenowdefinetheseconcepts formally, beginning withthenotionofaformula.\nLetRelbearelation name,RandSbetuplevariables, abeanattribute of\nR,andbbeanattribute ofS.Letopdenoteanoperator intheset{<,>,=\n,:S;,2:,=I-}.Anatomicformula isoneofthefollowing:\nIIIRERef\nlIIIR.aopS.b\nIIlIR.aopconstant, orconstant opR.a\nAformula isrecursively definedtobeoneofthefollowing, wherepandq\narethemselves formula.s andp(R)denotes aformula inwhichthevariableR\nappears:\n.~-----------\n2Thematerial onDRCisreferred tointhe(online) chapter OIlQBE;withtheexception ofthis\nchapter, thematerial onDRCandTRecanbeomitted without lossofcontinuity.", "152": "118 CHAPTER .,4\n\u2022anyatomicformula\n\u2022-'p,P/\\q,PVq,orp:::}q\n\u20223R(p(R)), whereRisatuplevariable\n\u2022'ifR(p(R)) ,whereRisatuplevariable\nInthelasttwoclauses,thequantifiers :3and'ifaresaidtobindthevariableR.\nAvariable issaidtobefreeinaformula orsubformuia (aformula contained\ninalargerformula) ifthe(sub)formula doesnotcontainanoccurrence ofa\nquantifier thatbindsit.3\nWeobservethateveryvariable inaTRCformula appears inasubformula\nthatisatomic,andeveryrelationschemaspecifies adomainforeachfield;this\nobservation ensuresthateachvariable inaTRCformula hasawell-defined\ndomainfromwhichvaluesforthevariable aredrawn.Thatis,eachvariable\nhasawell-defined type,intheprogramming language sense.Informally, an\natomicformulaREReigivesRthetypeoftuplesinReI,andcomparisons\nsuchasR.aopS.bandR.aopconstant inducetyperestrictions onthefield\nR.a.Ifavariable Rdoesnotappearinanatomicformula oftheformRERei\n(Le.,itappears onlyinatomicformulas thatarecomparisons), wefollowthe\nconvention thatthetypeofRisatuplewhosefieldsincludeall(andonly)fields\nofRthatappearintheformula.\nWedonotdefinetypesofvariables formally, butthetypeofavariable should\nbeclearinmostcases,andtheimportant pointtonoteisthatcomparisons of\nvalueshavingdifferent typesshouldalwaysfail.(Indiscussions ofrelational\ncalculus, thesimplifying assumption isoftenmadethatthereisasingledomain\nofconstants andthisisthedomainassociated witheachfieldofeachrelation.)\nATRCqueryisdefinedtobeexpression oftheform{TIp(T)},whereTis\ntheonlyfreevariable intheformula p.\nSemantics ofTRCQueries\nWhatdoesaTRCquerymean?Moreprecisely, whatisthesetofanswertuples\nforagivenTRCquery?Theanswer toaTRCquery{TIp(T)},asnoted\nearlier,isthesetofalltuplestforwhichtheformulapeT)evaluates totrue\nwithvariable T&'3signed thetuplevaluet:.Tocomplete thisdefinition, wemust\nstatewhichassignments oftuplevaluestothefreevariables inaformula make\ntheformula evaluate totrue.\n3vVemaketheassumption thateachvariable inaformula iseitherfreeorboundbyexactly one\noccurrence ofaquantifier, toavoidworrying aboutdetailssucha.'lnestedoccurrences ofquantifiers\nthatbindsome,butnotall,occurrences ofvariables.", "153": "Relational AlgebraandCalcuhl8 119\nAqueryisevaluated onagiveninstance ofthedatabase. Leteachfreevariable\ninaformulaFbeboundtoatuplevalue.Forthegivenassignment oftuples\ntovariables, withrespecttothegivendatabase instance, Fevaluates to(or\nsimply'is')trueifoneofthefollowing holds:\n\u2022 Fisanatomicformula RERel,andRisassigned atupleintheinstance\nofrelation Rel.\n\u2022 Fisacomparison R.aopS.b,R.aopconstant, orconstant opR.a,and\nthetuplesassigned toRandShavefieldvaluesR.aandS.bthatmakethe\ncomparison true.\n\u2022 Fisoftheform---,pandpisnottrue,or oftheformp1\\q,andbothpand\nqaretrue,oroftheformpVqandoneofthemistrue,or oftheform\np=}qandqistruewhenever4pistrue.\n\u2022 Fisoftheform3R(p(R)), andthereissomeassignment oftuplestothe\nfreevariables inp(R),including thevariableR,5thatmakestheformula\np(R)true.\n\u2022 FisoftheformVR(p(R)), andthereissomeassignment oftuplestothe\nfreevariables inp(R)thatmakestheformulap(R)truenomatterwhat\ntupleisassigned toR.\nExamples ofTRCQueries\nWenowillustrate thecalculus through severalexamples, usingtheinstances\nB1ofBoats,R2ofReserves, andS3ofSailorsshowninFigures4.15,4.16,\nand4.17.Weuseparentheses asneededtomakeourformulas unambiguous.\nOften,aformulap(R)includes acondition RERel,andthemeaning ofthe\nphrases sometupleRandforalltuplesRisintuitive. Weusethenotation\n3RERel(p(R)) for3R(RERel1\\p(R)). Similarly, weusethenotation\nVRERel(p(R)) forVR(RERel=}p(R)).\n(Q12)Findthenamesandagesofsailorswitharatingabove7.\n{PI3SESailors(S.rating >71\\Pname=S.sname 1\\Page=S.age)}\nThisqueryillustrates ausefulconvention: Pisconsidered tobeatuplevariable\nwithexactlytwofields,whicharecallednameandage,because thesearethe\nonlyfieldsofPmentioned andPdoesnotrangeoveranyoftherelations in\nthequery;thatis,thereisnosubformula oftheformPERelname. The\nresultofthisqueryisarelation withtwofields,nameandage.Theatomic\n4WheneveT shouldbereadmoreprecisely as'forallassignments oftuplestothefreevariables.'\n5Notethatsomeofthefreevariables inp(R)(e.g.,thevariableRitself)IIlaybeboundinP.", "154": "120 CHAPTERJ4\nformulas P.name =S.sname andPage=S.agegivevaluestothefieldsofan\nanswertupleP.Oninstances E1,R2,andS3,theansweristhesetoftuples\n(Lubber,55.5), (Andy,25.5),(Rusty, ~~5.0),(Zorba,16.0),::lnd(Horatio, 35.0).\n(Q1S)Findtheso;ilorname,boat'id,andreseT1}Q.tion dateforeachreservation.\n{PI3REReseT\"ues 3SESailors\n(R.sid=8.sid!\\P.bid=R.bid!\\P.day=R.day!\\P.sname =S.sname)}\nForeachReserves tuple,welookforatupleinSailorswiththesamesid.Given\napairofsuchtuples,weconstruct ananswertuplePwithfieldssname, bid,\nanddaybycopyingthecorresponding fieldsfromthesetwotuples.Thisquery\nillustrates howwecancombine valuesfromdifferent relations ineachanswer\ntuple.Theanswertothisqueryoninstances E1,R2,and83isshowninFigure\n4.20.\nIsname~ .....day\nDustin 10110/10/98\nDustin 10210/10/98\nDustin 10310/8/98\nDustin 10410/7/98\nLubber 10211/10/98\nLubber 10311/6/98\nLubber 10411/12/98\nHoratio 1019/5/98\nHoratio 1029/8/98\nHoratio 1039/8/98\nFigure4.20AnswertoQueryQ13\n(Q1)Findthenamesofsailorswhohavereserved boatlOS.\n{PI35ESailors 3REReserves(R.s'id =S.sid!\\R.b'id=103\n!\\Psname =8.snarne)}\nThisquerycanbereadasfollows: \"Retrieve allsailortuplesforwhichthere\nexistsatuple,inReserves havingthesamevalueinthes,idfieldandwith\nb'id=103.\"Thatis,foreachsailortuple,welookforatupleinReserves that\nshowsthatthissailorha\"reserved boat 10~~.TheanswertuplePcontains just\nonefield,sname.\n((22)Findthenarnesofsailorswhohavereserved an:.dboat.\n{PI:38ESailors :3REReserves(R.sid =5.sid!\\P.sname=S.8name", "155": "Relational Algebra (nulCalculus 121\n)\n1\\3BEBoats(B.llid =R.md1\\B.color='red'))}\nThisquerycanbereadasfollows: \"Retrieve allsailortuplesSforwhich\nthereexisttuplesRinReserves andBinBoatssuchthatS.sid=R.sid,\nR.bid=B.b'id,andB.coior='red'.\" Another waytowritethisquery,which\ncorresponds morecloselytothisreading, isasfollows:\n{PI3SESailoTs 3REReserves 3BEBoats\n(Rsid=S.sid1\\B.bid=R.bid1\\B.color='red'1\\Psname=S.sname)}\n(Q7)Findthenamesofsailorswhohavereserved atleasttwoboats.\n{PI3SESailors3RlEReserves 3R2EReserves\n(S.sid=R1.sid1\\R1.sid=R2.sid 1\\R1.bid =I-R2.bid\nI\\Psname =S.sname)}\nContrast thisquerywiththealgebra versionandseehowmuchsimplerthe\ncalculus versionis.Inpart,thisdifference isduetothecumbersome renaming\noffieldsinthealgebraversion,butthecalculus versionreallyissimpler.\n(Q9)Findthenarnesofsailorswhohavereserved allboats.\n{PI3SESailorsVBEBoats\n(3REReserves(S.sid =R.sid1\\R.bid=B.bid1\\Psname =S.sname))}\nThisquerywasexpressed usingthedivisionoperator inrelational algebra. Note\nhoweasilyitisexpressed inthecalculus. Thecalculus querydirectly reflects\nhowwemightexpressthequeryinEnglish: \"FindsailorsSsuchthatforall\nboatsBthereisaReserves tupleshowing thatsailorShasreserved boatB.\"\n(Q14)Findsailorswhohavereserved allredboats.\n{SISESailor's 1\\VBEBoats\n(B.color ='red':::}(3REReserves(S.sid =R.sid1\\R.bid=B.bid)))}\nThisquerycanbereadasfollows: Foreachcandidate (sailor), ifaboatisred,\nthesailormusthavereserved it.Thatis,foracandidate sailor,aboatbeing\nredmustimplythatthesailorhasreserved it.Observethatsincewecanreturn\nanentiresailortupleastheans\\verinsteadofjustthesailor'sname,weavoided\nintroducing anewfreevariable (e.g.,thevariable Pintheprevious example)\ntoholdtheanswervalues.OninstancesBl.R2,andS3,theanswercontains\ntheSailorstupleswithsids22and31.\nWecanwritethisquerywithout usingimplication, byobserving thatanex\u00ad\npression oftheformp:::}qislogically equivalent to-'pVq:\n{S!SESailors 1\\VBEBoats", "156": "122 CHAPTER .~\n(B.coioT i-'Ted'V(3REReSeTVeS(S.sid =R..':tid/\\ R.b'id=B.lJid)))}\nThisqueryshouldbereada.sfollows: \"FindsailorsSsuchthat,forallboatsB,\neithertheboatisnotredoraReserves tupleshowsthatsailorShasreserved\nboatB.\"\n4.3.2Domain Relational Calculus\nAdomain variable isavariable thatrangesoverthevaluesinthedomain\nofsomeattribute (e.g.,thevariable canbeassigned anintegerifitappears\ninanattribute whosedomain isthesetofintegers). ADRCqueryhasthe\nform{(XI,X2, ...,Xn)IP((XI,X2, ...,Xn))},whereeachXiiseitheradomain\nvariable oraconstant andp((Xl,X2,...,xn))denotes aDRCformula whose\nonlyfreevariables arethevariables amongtheXi,1Sisn.Theresultofthis\nqueryisthesetofalltuples(Xl,X2,...,xn)forwhichtheformula evaluates to\ntrue.\nADRCformula isdefinedinamanner verysimilartothedefinition ofaTRC\nformula. Themaindifference isthatthevariables arenowdomainvariables.\nLetopdenoteanoperator intheset{<,>,=,S,~,i-}andletXandYbe\ndomainvariables. Anatomic formula inDRCisoneofthefollowing:\nII(Xl,X2,...,Xn)ERel,whereReiisarelation withnattributes; each\nXi,1SiSniseitheravariable oraconstant\nIIXopY\nIIXopconstant, orconstant opX\nAformula isrecursively definedtobeoneofthefollowing, wherePandq\narethemselves formulas andp(X)denotes aformula inwhichthevariable X\nappears:\nIIanyatomicformula\nII--.p,P/\\q,PVq,orp=}q\nII3X(p(X)), whereXisadomainvariable\nII\\/X(p(X)), whereXisadomainvariable\nThereaderisinvitedtocompare thisdefinition withthedefinition ofTRC\nforrnulch'3 andseehowcloselythesetwodefinitions correspond. \\Vewillnot\ndefinethesemantics ofDRCformula.s formally; thisisleftasanexercise for\nthereader.", "157": "Relat'ional Algebra andCalculus\nExamples ofDRCQueries\nvVenowillustrate DRCthrough severalexamples. Thereaderisinvitedto\ncompare thesewiththeTRCversions.\n(Q11)Findallsa'ilorswitharatingabove7.\n{(1,N,T,A)I(I,N,T,A)ESa'ilors/\\T>7}\nThisdiffersfromtheTRCversioningivingeachattribute a(variable) name.\nThecondition (1,N,T,A)ESailorsensuresthatthedomainvariables I,N,\nT,andAarerestricted tobefieldsofthesametuple.Incomparison withthe\nTRCquery,wecansayT>7insteadofS.rating>7,butwemustspecifythe\ntuple(I,N,T,A)intheresult,ratherthanjustS.\n(Q1)Findthenamesofsailorswhohavereserved boat103.\n{(N)I31,T,A((1,N,T,A)ESa'ilors\n/\\311',Br,D((11',Br,D)EReserves /\\11'=I/\\Br=103))}\nNotethatonlythesnamefieldisretained intheanswerandthatonlyN\nisafreevariable. Weusethenotation 3Ir,Br,D( ...)asashorthand for\n3Ir(3Br(?JD( ...))).Veryoften,allthequantified variables appearinasin\u00ad\nglerelation, asinthisexample. Anevenmorecompact notation inthiscase\nis3(11',Br,D)EReserves. Withthisnotation, whichweusehenceforth, the\nquerywouldbeasfollows:\n{(N)I31,T,A((I,N,T,A)ESailors\n/\\3(11',Br,D)EReserves(Ir =I/\\Br=103))}\nThecomparison withthecorresponding TRCformula shouldnowbestraight\u00ad\nforward. Thisquerycanalsobewritten asfollows; notetherepetition of\nvariableIandtheuseoftheconstant 103:\n{(N)I31,T,A((1,N,T,A)ESailors\n/\\3D((1,103,D)EReserves))}\n(Q2)FindthenamesofsailorswhohaveTeserved aredboat.\n{(N)I31,T,A((1,N,T,A)ESailors\n/\\3(1,Br,D)EReseTves /\\3(Br,BN,'Ted') EBoats)}\n(Q7)FindthenamesofsailoT.'!whohaveTeseTved atleasttwoboat.s.\n{(N)I31,T,A((1,N,T,A)ESailors/\\\n?JBrl,BT2,Dl,D2((1,Brl,DI)EReserves\n/\\(1,Br2,D2)EReserves /\\Brl#Br2))}", "158": "124 CHAPTER ..fl\nNotehowtherepeated useofvariableIensuresthatthesamesailorhasreserved\nboththeboatsinquestion.\n(Q9)FindthenamesofsailorswhohaveTeserved allboat8.\n{(N)I~I,T,A((I,N,T,A)ESailors!\\\nVB,BN,C(-,((B, BN,C) EBoats)V\n(::J(Ir,Br,D)EReserves(I =IT!\\BT=B))))}\nThisquerycanbereadasfollows: \"FindallvaluesofNsuchthatsometuple\n(I,N,T,A)inSailorssatisfies thefollowing condition: Forevery(B,BN,C),\neitherthisisnotatupleinBoatsorthereissometuple(IT,BT,D)inReserves\nthatprovesthatSailorIhasreserved boatB.\"TheVquantifier allowsthe\ndomain variables B,BN,andCtorangeoverallvaluesintheirrespective\nattribute domains, andthepattern '-,((B,BN,C)EBoats)V'isnecessary to\nrestrictattention tothosevaluesthatappearintuplesofBoats.Thispattern\niscommon inDRCformulas, andthenotation V(B,BN,C)EBoatscanbe\nusedasashortcut instead. Thisissimilartothenotation introduced earlier\nfor3.Withthisnotation, thequerywouldbewrittenasfollows:\n{(N) I31,T,A((I,N,T,A)ESa'iloTs !\\V(B,BN,C)EBoats\n(3(1'1',BT,D)EReseTves(I =IT!\\BT=B)))}\n(Q14)FindsailoTswhohaveTeseTved allTedboats.\n{(I,N,T,A)I(I,N,T,A)ESailoTs!\\ V(B,BN,C)EBoats\n(C='red'=??J(Ir,BT,D)EReserves(I =IT!\\Br=B))}\nHere,wefindallsailorssuchthat,foreveryredboat,thereisatupleinReserves\nthatshowsthesailorhasreserved it.\n4.4EXPRESSIVE POWER OFALGEBRA AND\nCALCULUS\n\\Vepresented twoformalquerylanguages fortherelational model.Arethey\nequivalent inpower? Caneveryquerythatcanbeexpressed inrelational\nalgebra alsobeexpressed inrelational calculus? Theanswerisyes,itcan.\nCaneveryquerythatcanbeexpressed inrelational calculus alsobeexpressed\ninrelational algebra? Beforeweanswerthisquestion, weconsider amajor\nproblem withthecalculus aswepresented it.\nConsider thequery{SI-,(SESailors)}. Thisqueryissyntactically correct.\nHowever, itasksforalltuplesSsuchthatSisnotin(thegiveninstance of)", "159": "Relational Algebra an,dCalculu8 125\nSailors.ThesetofsuchStuplesisobviously infinite, inthecontextofinfinite\ndomains suchasthesetofallintegers. Thissimpleexample illustrates an\nunsafequery.Itisdesirable torestrictrelational calculus todisallow unsafe\nqueries.\nvVenowsketchhowcalculus queriesarerestricted tobesafe.Consider asetI\nofrelation instances, withoneinstance perrelationthatappears inthequery\nQ.LetDom(Q,1)bethesetofallconstants thatappearintheserelation\ninstances Iorintheformulation ofthequeryQitself.Sinceweallowonly\nfiniteinstances I,Dom(Q,1)isalsofinite.\nForacalculus formulaQtobeconsidered safe,ataminimum wewantto\nensurethat,foranygivenI,thesetofanswers forQcontains onlyvaluesin\nDom(Q,1).Whilethisrestriction isobviously required, itisnotenough. Not\nonlydowewantthesetofanswerstobecomposed ofconstants inDom(Q, 1),\nwewishtocompnte thesetofanswers byexamining onlytuplesthatcontain\nconstants inDom(Q,1)!Thiswishleadstoasubtlepointassociated withthe\nuseofquantifiers Vand:::J:GivenaTRCformulaoftheform:::JR(p(R)),wewant\ntofindallvaluesforvariableRthatmakethisformulatruebychecking only\ntuplesthatcontainconstants inDom(Q,1).Similarly, givenaTRCformulaof\ntheformVR(p(R)), wewanttofindanyvaluesforvariableRthatmakethis\nformulafalsebychecking onlytuplesthatcontainconstants inDom(Q, 1).\nWetherefore defineasafeTRCformula Qtobeaformula suchthat:\n1.ForanygivenI,thesetofanswers forQcontains onlyvaluesthatarein\nDom(Q,1).\n2.Foreachsubexpression of theform:::JR(p(R)) inQ,ifatupler(assigned\ntovariableR)makestheformulatrue,thenrcontains onlyconstants in\nDorn(Q,I).\n3.Foreachsubexpression of theformVR(p(R)) inQ,ifatupler(assigned\ntovariable R)contains aconstant thatisnotinDom(Q,1),thenrmust\nmaketheformulatrue.\nNotethatthisdefinition isnotconstructive, thatis,itdoesnottellushmvto\ncheckifaqueryissafe.\nThequeryQ={SI-.(SESailors)} isunsafebythisdefinition. Dom(Q,1)\nisthesetofallvaluesthatappearin(aninstance Iof)Sailors. Consider the\ninstanceSlshowninFigure4.1.Theanswertothisqueryobviously includes\nvaluesthatdonotappearinDorn(Q,81).", "160": "126 CHAPTERJ4\nReturning tothequestion ofexpressiveness, wecanshowthateveryquerythat\ncanbeexpressed usingasaferelational calculus querycanalsobeexpressed as\narelational algebraquery.Theexpressive powerofrelational algebraisoften\nusedasametricofhowpowerful arelational database querylanguage is.If\naquerylanguage canexpressallthequeriesthatwecanexpressinrelational\nalgebra, itissaidtoberelationally complete. Apractical querylanguage is\nexpected toberelationally complete; inaddition, commercial querylanguages\ntypically supportfeaturesthatallowustoexpresssomequeriesthatcannotbe\nexpressed inrelational algebra.\n4.5REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Whatistheinputtoarelational query?Whatistheresultofevaluating\naquery?(Section 4.1)\n\u2022Database systems usesomevariantofrelational algebratorepresent query\nevaluation plans.Explain whyalgebraissuitable forthispurpose. (Sec\u00ad\ntion4.2)\n\u2022Describe theselection operator. Whatcanyousayaboutthecardinality\noftheinputandoutputtablesforthisoperator? (Thatis,iftheinputhas\nktuples,whatcanyousayabouttheoutput?) Describe theprojection\noperator. Whatcanyousayaboutthecardinality oftheinputandoutput\ntablesforthisoperator? (Section 4.2.1)\n\u2022Describe thesetoperations ofrelational algebra, including union(U),in\u00ad\ntersection (n),set-difference (-),andcross-product (x).Foreach,what\ncanyousayaboutthecardinality oftheirinputandoutputtables?(Sec\u00ad\ntion4.2.2)\n\u2022Explain howtherenaming operator isused.Isitrequired? Thatis,ifthis\noperator isnotallowed, isthereanyquerythatcannolongerbeexpressed\ninalgebra? (Section 4.2.3)\n\u2022Defineallthevariations ofthejoinoperation. vVhyisthejoinoperation\ngivenspecialattention? Cannotweexpresseveryjoinoperation interms\nofcross-product, selection, andprojection? (Section 4.2.4)\n\u2022Definethedivision operation intermsoftheba--sicrelational algebraop\u00ad\nerations. Describe atypicalquerythatcallsfordivision. Unlikejoin,the\ndivision operator isnotgivenspecialtreatment indatabase systems. Ex\u00ad\nplainwhy.(Section 4.2.5)", "161": "Relational AlgebnlandCalculus 1~7\n\u2022Relational calculus issaidtobeadeclarati've language, incontrast toalge\u00ad\nbra,whichisaprocedural language. Explainthedistinction. (Section 4.3)\n\u2022Howdoesarelational calculus query'describe' resulttuples?Discussthe\nsubsetoffirst-order predicate logicusedintuplerelational calculus, with\nparticular attention touniversal andexistential quantifiers, boundandfree\nvariables, andrestrictions onthequeryformula. (Section 4.3.1).\n\u2022vVhatisthedifference between tuplerelational calculus anddomainrela\u00ad\ntionalcalculus? (Section 4.3.2).\n\u2022Whatisanunsafecalculus query? Whyisitimportant toavoidsuch\nqueries? (Section 4.4)\n\u2022Relational algebraandrelational calculus aresaidtobeequivalent inex\u00ad\npressive power. Explain whatthismeans,andhowitisrelatedtothe\nnotionofrelational completeness. (Section 4.4)\nEXERCISES\nExercise 4.1Explainthestatement thatrelational algebraoperators canbecomposed. Why\nistheabilitytocompose operators important?\nExercise 4.2Giventworelations R1andR2,whereR1contains N1tuples,R2contains N2\ntuples,andN2>N1>0,givetheminimum andmaximum possible sizes(intuples)forthe\nresulting relation produced byeachofthefollowing relational algebraexpressions. Ineach\ncase,stateanyassumptions abouttheschemas forR1andR2neededtomaketheexpression\nmeaningful:\n(1)R1UR2,(2)R1nR2,(3)R1~R2,(4)R1xR2,(5)(Ta=5(R1), (6)7Ta(R1),and\n(7)R1/R2\nExercise 4.3Consider thefollowing schema:\nSuppliers( sid:integer, sname:string, address: string)\nParts(pid: integer, pname:string, color:string)\nCatalog( sid:integer, pid:integer, cost:real)\nThekeyfieldsareunderlined, andthedomain ofeachfieldislistedafterthefieldname.\nTherefore sidisthekeyforSuppliers, pidisthekeyforParts,andsidandpidtogether form\nthekeyforCatalog. TheCatalog relation liststhepricescharged forpartsbySuppliers. Write\nthefollowing queriesinrelational algebra, tuplerelational calculus, anddomain relational\ncalculus:\n1.Findthenarnesofsuppliers whosupplysomeredpart.\n2.Findthesidsofsuppliers whosupplysomeredorgreenpart.\n:3.Findthesidsofsuppliers whosupplysomeredpartorareat221PackerAve.\n4.Findthesidsofsuppliers whosupplysomercdpartandsomegreenpart.", "162": "128 CHAPTER 4:\n5.Findthesidsofsuppliers whosupplyeverypart.\n6.Findthesidsofsuppliers whosupplyeveryredpart.\n7.Findthesidsofsuppliers whosupplyeveryredorgreenpart.\n8.Findthesidsofsuppliers whosupplyeveryredpartorsupplyeverygreenpart.\n9.Findpairsofsidssuchthatthesupplier withthefirstsidcharges moreforsomepart\nthanthesupplier withthesecondsid.\n10.Findthepidsofpartssupplied byatleasttwodifferent suppliers.\n11.Findthepidsofthemostexpensive partssupplied bysuppliers namedYosemite Sham.\n12.Findthepidsofpartssupplied byeverysupplier atlessthan$200.(Ifanysupplier either\ndoesnotsupplythepartorcharges morethan$200forit,thepartisnotselected.)\nExercise 4.4Consider theSupplier-Parts-Catalog schemafromtheprevious question. State\nwhatthefollowing queriescompute:\n1.1fsname('rrsid(CTcolor='red' Parts) !Xl(O'cost<lOoCatalog) !XlSuppliers)\n2.1fsname(1fSid((0'color='red' Parts) !Xl(O'cost<looCatalog) !XlSuppliers))\n3.(1fsname((O'color'='red' Parts) [X](crcost<looCatalog) !XlSuppl'iers)) n\n4.(1fsid((crcolor='red,Parts) !Xl(crcost<10oCatalog) [X]Suppliers)) n\n(1fsid((CTcolor='green'Parts) [X](crcost<lOoCatalog) !XlSuppliers))\n(1f.sid,sname ((CTCO!07'='green' Parts) !Xl(CTcost<lOoCatalog) [X]Suppliers)))\nExercise 4.5Consider thefollowing relations containing airlineflightinformation:\nFlights(fino: integer, from:string, to:string,\nd\u00b7istance: integer, depaTts: time,arrives: time)\nAircraft( aid:integer, aname:string, cTuisingrange: integer)\nCertified( eid:integer, aid:integer)\nEmployees( eid:integer, ename:string, salary:integer)\nNotethattheEmployees relation describes pilotsandotherkindsofemployees cLSwell;every\npilotiscertified forsomeaircraft (otherwise, heorshewouldnotqualifyasapilot),andonly\npilotsarecertified tofly.\nWritethefollowing queriesinrelational algebra, tuplerelational calculus, anddomain rela\u00ad\ntionalcalculus. Notethatsomeofthesequeriesmaynotbeexpressible inrelational algebra\n(and,therefore, alsonotexpressible intupleanddomainrelational calculus)! Forsuchqueries,\ninformally explainwhytheycannotbeexpressed. (Seetheexercises attheendofChapter 5\nforadditional queriesovertheairlineschenla.)\n1.Fineltheeidsofpilotscertified forsomeBoeingaircraft.\n2.Findthenamesofpilotscertified forsomeBoeingaircraft.\n~).Findtheaidsofallaircraft that.canbeusedonnon-stop flightsfromBonntoMadras.", "163": "Relational Algebra andCalcuIu,s 129\n4.Identi(ytheflightsthatcanbepilotedbyeverypilotwhosesalaryismorethan$100,000.\n5.Findthenamesofpilotswhocanoperate planeswitharangegreaterthan3,000miles\nbutarenotcertified onanyBoeingaircraft.\n6.Findtheeidsofemployees whomakethehighestsalary.\n7.Findtheeidsofemployees whomakethesecondhighestsalary.\n8.Findtheeidsofemployees whoarecertified forthelargestnumber ofaircraft.\n9.Findtheeidsofemployees whoarecertified forexactlythreeaircraft.\n10.Findthetotalamount paidtoemployees assalaries.\n11.Isthereasequence offlightsfromMadison toTimbuktu? Eachflightinthesequence is\nrequired todepartfromthecitythatisthedestination oftheprevious flight;thefirst\nflightmustleaveMadison, thelastflightmustreachTimbuktu, andthereisnorestriction\nonthenumber ofintermediate flights.Yourquerymustdetermine whether asequence\nofflightsfromMadison toTimbuktu existsforanyinputFlightsrelation instance.\nExercise 4.6Whatisrelational completeness? Ifaquerylanguage isrelationally complete,\ncanyouwriteanydesiredqueryinthatlanguage?\nExercise 4.7Whatisanunsafequery?Giveanexample andexplainwhyitisimportant\ntodisallow suchqueries.\nBIBLIOGRAPHIC NOTES\nRelational algebrawasproposed byCoddin[187],andheshowedtheequivalence ofrelational\nalgebraandTRCin[189].Earlier,Kuhns[454]considered theuseoflogictoposequeries.\nLaCroix andPirottediscussed DRCin[459].Kluggeneralized thealgebraandcalculus to\ninclude aggregate operations in[439].Extensions ofthealgebraandcalculus todealwith\naggregate functions arealsodiscussed in[578].Merrett proposed anextended relational\nalgebrawithquantifiers suchasthenumberofthatgobeyondjustuniversal andexistential\nquantification [530].Suchgeneralized quantifiers arediscussed atlengthin[52].", "164": "5\nSQL:QUERIES,\nCONSTRNNTS, TRIGGERS\n..Whatisincluded intheSQLlanguage? WhatisSQL:1999?\n..Howarequeriesexpressed inSQL?Howisthemeaning ofaquery\nspecified intheSQLstandard?\n,..-HowdoesSQLbuildonandextendrelational algebraandcalculus?\nl\"-\\Vhatisgrouping? Howisitusedwithaggregate operations?\n...Whatarenestedqueries?\n..Whatarenullvalues?\n...Howcanweusequeriesinwritingcomplex integrity constraints?\n...Whataretriggers, andwhyaretheyuseful?Howaretheyrelatedto\nintegrity constraints?\nIttKeyconcepts: SQLqueries, connection torelational algebraand\ncalculus; features beyond algebra, DISTINCT clauseandmultiset se\u00ad\nmantics, grouping andaggregation; nestedqueries, correlation; set\u00ad\ncomparison operators; nullvalues,outerjoins;integrity constraints\nspecified usingqueries; triggersandactivedatabases, event-condition\u00ad\nactionrules.\n-------_. __._---_._------------_ ..__._---------------_ __----_.._.._---\n\\Vhatmenorgodsarethese?\\\\1hatInaiclens loth?\n\\Vhatmadpursuit? \\1\\7hatstruggle toescape?\n\\Vhatpipesandtilubrels? \\Vhatwildecstasy?\n....JohnKeats,Odcon(LGr'ccian Urn\nStructured QueryLanguage (SQL)isthemostwidelyusedconunercial rela\u00ad\ntionaldatabase language. Itwa.\",originally developed atIBlVIintheSEQUEL-\n130", "165": "131\nSQLStandards Conformance: SQL:1999 ha.,;;acollection offeatures\ncalledCoreSQLthatavendormustimplement toclaimconformance with\ntheSQL:1999 standard. Itisestimated thatallthemajorvendors can\ncomplywithCoreSQLwithlittleeffort.l\\IIanyoftheremaining features\nareorganized intopackages.\nForexample, packages addresseachofthefollowing (withrelevant chapters\ninparentheses): enhanced dateandtime,enhanced integrity management\nIandactivedatabases (thischapter), external language 'interfaces (Chapter\nl:6),OLAP(Chapter 25),andobjectfeatures (Chapter 23).TheSQL/Ml\\JI\nstandard complements SQL:1999 bydefining additional packages thatsup\u00ad\nportdatamining(Chapter 26),spatialdata(Chapter 28)andtextdocu\u00ad\nments(Chapter 27).Support forXMLdataandqueriesisforthcoming.\nXRMandSystem-R projects (1974-1977). Almostimmediately, othervendors\nintroduced DBMSproducts basedonSQL,anditisnowadefactostandard.\nSQLcontinues toevolveinresponse tochanging needsinthedatabase area.\nThecurrentANSI/ISO standard forSQLiscalledSQL:1999. Whilenotall\nDBMSproducts supportthefullSQL:1999 standard yet,vendors areworking\ntowardthisgoalandmostproducts alreadysupport thecorefeatures. The\nSQL:1999 standard isveryclosetotheprevious standard, SQL-92, withre\u00ad\nspecttothefeatures discussed inthischapter. Ourpresentation isconsistent\nwithbothSQL-92andSQL:1999, andweexplicitly noteanyaspectsthatdiffer\ninthetwoversions ofthestandard.\n5.1OVERVIEW\nTheSQLlanguage hasseveralaspectstoit.\n..TheDataManipulation Language (DML): ThissubsetofSQLallows\nuserstoposequeriesandtoinsert,delete,andmodifyrows.Queriesare\nthemainfocusofthischapter. Wecovered DMLcommands toinsert,\ndelete,andmodifyrowsinChapter 3.\n..TheDataDefinition Language (DDL): ThissubsetofSQLsupports\nthecreation, deletion, andmodification ofdefinitions fortablesandviews.\nIntegrity constraints canbedefinedontables,eitherwhenthetableis\ncreatedorlater.\\Vecocvered theDDLfeatures ofSQLinChapter 3.Al\u00ad\nthoughthestandard doesnotdiscussindexes, commercial implementations\nalsoprovidecommands forcreating anddeleting indexes.\n..Triggers andAdvanced Integrity Constraints: ThenewSQL:1999\nstandard includes support fortriggers, whichareactionsexecuted bythe", "166": "132 CHAPTER 5\nDBMSwhenever changestothedataba..'3e meetconditions specified inthe\ntrigger. vVecovertriggers inthischapter. SQLallowstheuseofqueries\ntospecifycomplex integrity constraint specifications. vVealsodiscusssuch\nconstraints inthischapter.\n\u2022Embedded andDynamic SQL:Embedded SQLfeatures allowSQL\ncodetobecalledfromahostlanguage suchasCorCOBOL. Dynamic\nSQLfeatures allowaquerytobeconstructed (andexecuted) atrun-time.\n\\Vecoverthesefeatures inChapter 6.\n\u2022Client-Server Execution andRemote Database Access: Thesecom\u00ad\nmandscontrolhowaclientapplication program canconnect toanSQL\ndatabase server,oraccessdatafromadatabase overanetwork. Wecover\nthesecommands inChapter 7.\n\u2022Transaction Management: Variouscommands allowausertoexplicitly\ncontrolaspectsofhowatnmsaction istobeexecuted. Wecoverthese\ncommands inChapter 21.\n\u2022Security: SQLprovides mechanisms tocontrolusers'accesstodataob\u00ad\njectssuchastablesandviews.WecovertheseinChapter 2l.\n\u2022Advanced features: TheSQL:1999 standard includes object-oriented\nfeatures (Chapter 23),recursive queries(Chapter 24),decision support\nqueries(Chapter 25),andalsoaddresses emerging areassuchasdatamin\u00ad\ning(Chapter 26),spatialdata(Chapter 28),andtextandXMLdataman\u00ad\nagement (Chapter 27).\n5.1.1Chapter Organization\nTherestofthischapter isorganized asfollows. WepresentbasicSQLqueries\ninSection5.2andintroduce SQL'ssetoperators inSection5.3.Wediscuss\nnestedqueries, inwhicharelation referred tointhequeryisitselfdefined\nwithinthequery,inSection5.4.vVecoveraggregate operators, whichallowus\ntowriteSQLqueriesthatarenotexpressible inrelational algebra, inSection\n5.5.\\Vediscussnullvalues,whicharespecialvaluesusedtoindicate unknown\nornonexistent fieldvalues,inSection5.6.Wediscusscomplex integrity con\u00ad\nstraintsthatcanbespecified usingtheSQLDDLinSection5.7,extending the\nSQLDDLdiscussion fromChapter 3;thenewconstraint specifications allow\nustofullyutilizethequerylanguage capabilities ofSQL.\nFinally, wediscusstheconcept ofanactivedataba8e inSections 5.8and5.9.\nAnactivedatabase h&'3acollection oftriggers, whicharespecified bythe\nDBA.Atriggerdescribes actionstobetakenwhencertainsituations arise.The\nDBMSlllonitors thedatabase, detectsthesesituations, andinvokesthetrigger.", "167": "SqL:QueT'ies. ConstTairLts, Triggf::T\"s\nTheSQL:1999 standard requires support fortriggers, andseveralrelational\nDB.rvISproducts alreadysupport someformoftriggers.\nAbouttheExamples\n~Tewillpresentanumberofsamplequeriesusingthefollowing tabledefinitions:\nSailors(sid:integer, sname:string, rating:integer, age:real)\nBoats(bid:integer, bname:string, color:string)\nReserves (sid:integer, bid:integer, day:date)\nWegiveeachqueryauniquenumber, continuing withthenumbering scheme\nusedinChapter 4.Thefirstnewqueryinthischapterhasnumber Q15.Queries\nQ1through Q14wereintroduced inChapter 4.1Weillustrate queriesusingthe\ninstances 83ofSailors,R2ofReserves, andB1ofBoatsintroduced inChapter\n4,whichwereproduce inFigures 5.1,5.2,and5.3,respectively.\nAlltheexample tablesandqueriesthatappearinthischapter areavailable\nonlineonthebook'swebpage at\nhttp://www.cs.wisc.edu/-dbbook\nTheonlinematerial includes instructions onhowtosetupOrade,IBMDB2,\nMicrosoft SQLServer,andMySQL, andscriptsforcreating theexample tables\nandqueries.\n5.2THEFORMOFABASICSQLQUERY\nThissectionpresents thesyntaxofasimpleSQLqueryandexplains itsmeaning\nthrough aconceptual Evaluation strategy. Aconceptual evaluation strategy is\nawaytoevaluate thequerythatisintended tobeeasytounderstand rather\nthanefficient. ADBMSwouldtypically executeaqueryinadifferent andmore\nefficient way.\nThebasicformofanSQLqueryis&'3follows:\nSELECT [DISTINCT] select-list\nFROMfrom-list\nWHEREqualification\n1Allreferences toaquerycanbefoundinthesubject indexforthebook.", "168": "134\nIsidIsname\u00b71 ratingIageICHAPTER 9\n22Dustin 7 45.0\n29Brutus 1 33.0\n31Lubber 8 55.5\n32Andy 8 25.5\n58Rusty 10 35.0\n64Horatio 7 35.0\n71Zorba 10 16.0\n74Horatio 9 35.0\n85Art 3 25.5\n95Bob 3 63.5\nFigure 5.1AnInstance 53ofSailors2210110/10/98\n2210210/10/98\n2210310/8/98\n2210410/7/98\n3110211/10/98\n3110311/6/98\n3110411/12/98\n641019/5/98\n641029/8/98\n741039/8/98\nFigure 5.2AnInstance R2ofReserves\n~bname Icolor \u00b7\u00b71\n101Interlake blue\n102Interlake red\n103Clipper green\n104Marine red\nFigure5.3AnInstanceBlofBoats\nEveryquerymusthaveaSELECT clause,whichspecifies columns toberetained\nintheresult,andaFROMclause,whichspecifies across-product oftables.The\noptional WHEREclausespecifies selection conditions onthetablesmentioned in\ntheFROMclause.\nSuchaqueryintuitively corresponds toarelational algebraexpression involving\nselections, projections, andcross-products. Thecloserelationship between SQL\nandrelational algebraisthebasisforqueryoptimization inarelational DBMS,\naswewillseeinChapters 12and15.Indeed,execution plansforSQLqueries\narerepresented usingavariation ofrelational algebraexpressions (Section 15.1).\nLetusconsider asimpleexample.\n(Q15)Findthe'namesandagesofallsailors.\nSELECT DISTINCT S.sname, S.age\nFROM SailorsS\nTheanswerisasetofrows,eachofwhichisapair(sname, age).Iftwoor\nmoresailorshavethesamenameandage,theanswerstillcontains justonepair", "169": "SQL: Q1Le7~ies. Con8tnrint8, TriggeT8 135\n~\nwiththatnameandage.Thisqueryisequivalent toapplying theprojection\noperator ofrelational algebra.\nIfweomitthekeyword DISTINCT, wewouldgetacopyoftherow(s,a)for\neachsailorwithnamesandagea;theanswerwouldbearnultiset ofrows.A\nmultiset issimilartoasetinthatitisanunordered collection ofelements,\nbuttherecouldbeseveralcopiesofeachelement, andthenumber ofcopiesis\nsignificant-two multisets couldhavethesameelements andyetbedifferent\nbecause thenumber ofcopiesisdifferent forsomeelements. Forexample, {a,\nb,b}and{b,a,b}denotethesamemultiset, anddifferfromthemultiset {a,\na,b}.\nTheanswertothisquerywithandwithout thekeyword DISTINCT oninstance\n53ofSailorsisshowninFigures 5.4and5.5.Theonlydifference isthatthe\ntupleforHoratio appears twiceifDISTINCT isomitted; thisisbecause there\naretwosailorscalledHoratioandage35.\nDustin 45.0\nBrutus 33.0\nLubber 55.5\nAndy 25.5\nRusty 35.0\nHoratio 35.0\nZorba 16.0\nHoratio 35.0\nArt 25.5\nBob 63.5IsnameIageI\n'-----\"--\nDustin 45.0\nBrutus 33.0\nLubber 55.5\nAndy 25.5\nRusty 35.0\nHoratio 35.0\nZorba 16.0\nArt 25.5\nBob 63.5I.snarneIageI\nFigure 5.4AnswertoQ15 Figure 5.5AnswertoQ15without DISTINCT\nOurnextqueryisequivalent toanapplication oftheselection operator of\nrelational algebra.\n(Q11)Findallsailorswitharatingabove7.\nSELECT S.sid,S.sname, S.rating, S.age\nFROM SailorsASS\nWHERE S.rating>7\nThisqueryusestheoptional keyword AStointroduce arangevariable. Inci\u00ad\ndentally, whenwewanttoretrieve allcolumns, asinthisquery,SQLprovides a", "170": "136 CHAPTER fj\nconvenient shorthand: \\eVecansimplywriteSELECT *.Thisnotation isuseful\nforinteractive querying, butitispoorstyleforqueriesthatareintended tobe\nreusedandmaintained because theschemaoftheresultisnotclearfromthe\nqueryitself;wehavetorefertotheschemaoftheunderlying Sailorsta.ble.\nAsthesetwoexamples illustrate, theSELECT clauseisactually usedtodopm\u00ad\njection,whereas selections intherelational algebrasenseareexpressed using\ntheWHEREclause!Thismismatch between thenamingoftheselection andpro\u00ad\njectionoperators inrelational algebraandthesyntaxofSQLisanunfortunate\nhistorical accident.\nWenowconsider thesyntaxofabasicSQLqueryinmoredetail.\n\u2022Thefrom-list intheFROMclauseisalistoftablenames. Atablename\ncanbefollowed byarangevariable; arangevariable isparticularly useful\nwhenthesametablenameappears morethanonceinthefrom-list.\n\u2022Theselect-list isalistof(expressions involving) columnnamesoftables\nnamedinthefrom-list. Column namescanbeprefixed byarangevariable.\n\u2022Thequalification intheWHEREclauseisaboolean combination (i.e.,an\nexpression usingthelogicalconnectives AND,OR,andNOT)ofconditions\noftheformexpression opexpression, whereopisoneofthecomparison\noperators {<,<=,=,<>,>=,>}.2Anexpression isacolumnname,a\nconstant, oran(arithmetic orstring)expression.\n\u2022TheDISTINCT keyword isoptional.Itindicates thatthetablecomputed\nasananswertothisqueryshouldnotcontainduplicates, thatis,twocopies\nofthesamerow.Thedefaultisthatduplicates arenoteliminated.\nAlthough thepreceding rulesdescribe (informally) thesyntaxofabasicSQL\nquery,theydonottellusthemeaning ofaquery.Theanswertoaqueryis\nitselfarelation whichisarnultisef ofrowsinSQL!--whose contents canbe\nunderstood byconsidering thefollowing conceptual evaluation strategy:\n1.Cmnpute thecross-product ofthetablesinthefrom-list.\n2.Deleterowsinthecross-product thatfailthequalification conditions.\n3.Deleteallcolumns thatdonotappearintheselect-list.\n4.IfDISTINCT isspecified, eliminate duplicate rows.\n2ExpressiollS withNOTcanalwaysbereplaced byequivalent expressions without NOTgiventheset\nofcomparison operators justlisted.", "171": "SCJL:Queries, ConstTaints, TriggeTs 137\n~\nThisstraightforward conceptual evaluation strategy makesexplicittherows\nthatmustbepresentintheanswertothequery.However, itislikelytobe\nquiteinefficient. Wewillconsider howaDB:MSactually evaluates queriesin\nlaterchapters; fornow,ourpurpose issimplytoexplainthemeaning ofaquery.\n\\Veillustrate theconceptual evaluation strategy usingthefollowing query':\n(Q1)Findthenamesofsailors'WhohavereseTved boatnumber 103.\nItcanbeexpressed inSQLasfollows.\nSELECT S.sname\nFROM SailorsS,Reserves R\nWHERE S.sid=R.sidANDR.bid=103\nLetuscompute theanswertothisqueryontheinstances R3ofReserves and\n84ofSailorsshowninFigures5.6and5.7,sincethecomputation onourusual\nexample instances (R2and83)wouldbeunnecessarily tedious.\n~day\nI22I10110/10/96\nI58I10311/12/96\nFigure 5.6Instance R3ofReserves~snameITatingIageI\n22dustin 7 45.0\n31lubber 8 55.5\n58rusty 10 35.0\nFigure5.7Instance 54ofSailors\nThefirststepistoconstruct thecross-product 84xR3,whichisshownin\nFigure5.8.\n~sname\u00b7j\n Tating\u00b7I\u00b7\u00b7\u00b7age~day\n22dustin 7 45.02210110/10/96\n22dustin 7 45.05810311/12/96\n31lubber 8 55.52210110/10/96\n31lubber 8---55.55810311/12/96\n58rusty 10 3.5.02210110/10/96\n58rusty 10 35.05810311/12/96\nFigure 5.884xRS\nThesecondstepistoapplythequalification S./rid=R.sidANDR.bid=103.\n(Notethatthefirstpartofthisqualification requires ajoinoperation.) This\nstepeliminates allbutthelastrowfromtheinstance showninFigure5.8.The\nthirdstepistoeliminate unwanted columns; onlysnameappears intheSELECT\nclause.ThisstepleavesuswiththeresultshowninFigure.5.9,whichisatable\nwithasinglecolumnand,a.c;ithappens, justonerow.", "172": "138\n!sna'me!\n[I1lStL]\nFigure5.9AnswertoQueryQl011R:land84\n5.2.1Examples ofBasicSQLQueriesCHAPTER 15\nvVenowpresentseveralexample queries, manyofwhichwereexpressed earlier\ninrelational algebraandcalculus (Chapter 4).Ourfirstexample illustrates\nthattheuseofrangevariables isoptional, unlesstheyareneededtoresolvean\nambiguity. QueryQl,whichwediscussed intheprevious section, canalsobe\nexpressed asfollows:\nSELECT sname\nFROM Sailors5,Reserves R\nWHERE S.sid=R.sidANDbid=103\nOnlytheoccurrences ofsidhavetobequalified, sincethiscolumnappears in\nboththeSailorsandReserves tables.Anequivalent waytowritethisqueryis:\nSELECT SHame\nFROM Sailors,Reserves\nWHERE Sailors.sid =Reserves.sid ANDbid=103\nThisqueryshowsthattablenamescanbeusedimplicitly asrowvariables.\nRangevariables needtobeintroduced explicitly onlywhentheFROMclause\ncontains morethanoneoccurrence ofarelation.3However, werecommend\ntheexplicit useofrangevariables andfullqualification ofalloccurrences of\ncolumns witharangevariable toimprove thereadability ofyourqueries. We\nwillfollowthisconvention inallourexamples.\n(Q16)Findthesidsofsa'iloTswhohaveTeseTved aTedboat.\nSELECT\nFROM\nWHERER.sid\nBoatsB,Reserves R\nB.bid=R.bidAND8.color='red'\nThisquerycontains ajoinoftwotables,followed byaselection onthecolor\nofboats.vVecanthinkof13andR&<;rowsinthecorresponding tablesthat\n:~Thetablenamecannotbeusedaiianimplicit. rangevariable oncearangevariable isintroduced\nfort.herelation.", "173": "SQL:QUEeries, Constraints, Triggers\n:prove'thatasailorwithsidR.sidreserved areelboatB.bid.Onourexample\ninstances R2and83(Figures 5.1and5.2),theanswerconsists oftheBids22,\n31,and64.Ifwewantthenamesofsailorsintheresult,wemustalsoconsider\ntheSailorsrelation, sinceReserves doesnotcontainthisinformation, asthe\nnextexample illustrates.\n(Q2)Findthenamesofsailors'WhohaveTeseTved aTedboat.\nSELECT\nFROM\nWHERES.sname\nSailorsS,Reserves R,Boats13\nS.sid=R.sidANDR.bid=13.bidANDB.color='red'\nThisquerycontains ajoinofthreetablesfollowed byaselection onthecolor\nofboats.ThejoinwithSailorsallowsustofindthenameofthesailorwho,\naccording toReserves tupleR,hasreserved aredboatdescribed bytuple13.\n(QS)FindthecoloTSofboatsreseTved byLubbeT.\nSELECT 13.color\nFROM SailorsS,Reserves R,Boats13\nWHERE S.sid=R.sidANDR.bid=B.bidANDS.sname ='Lubber'\nThisqueryisverysimilartotheprevious one.Notethatingeneraltheremay\nbemorethanonesailorcalledLubber (sincesnameisnotakeyforSailors);\nthisqueryisstillcorrectinthatitwillreturnthecolorsofboatsreserved by\nsomeLubber, ifthereareseveralsailorscalledLubber.\n(Q4)Findthenamesofsa'iloTswhohaveTeserved atleastoneboat.\nSELECT S.sname\nFROM SailorsS,Reserves R\nWHERE S.sid=R.sid\nThejoinofSailorsandReserves ensuresthatforeachselected sname,the\nsailorhasmadesomereservation. (Ifasailorhasnotmadeareservation, the\nsecondstepintheconceptual evaluation strategy wouldeliminate allrowsin\nthecross-product thatinvolvethissailor.)\n5.2.2Expressions andStringsintheSELECT Command\nSQLsupports amoregeneral versionoftheselect-list thanjustalistof\ncolu1nn8. Eachiteminaselect-list canbeoftheforme:l:pTcssion AScol\u00ad\n'wnrLno:rne, wherec:rprcs.sion isanyarithmetic orstringexpression overcolumn", "174": "140 CHAPTERf)\nnames(possibly prefixed byrangevariables) andconstants, andcolurnnswrne\nisane\"vnameforthiscolumnintheoutputofthequery.Itcanalsocontain\naggregates suchassmnandcount,whichwewilldiscussinSection5.5.The\nSQLstandard alsoincludes expressions overdateandtimevalues,whichwewill\nnotdiscuss. Although notpartoftheSQLstandard, manyimplementations\nalsosupport theuseofbuilt-infunctions suchassqrt,sin,andrnod.\n(Q17)Compute increments forthemtingsofpeTsons whohavesailedtwodif\u00ad\nferentboatsonthesameday.\nSELECT\nFROM\nWHERES.sname, S.rating+ 1ASrating\nSailorsS,Reserves R1,Reserves R2\nS.sid=R1.sidANDS.sid=R2.sid\nANDR1.day=R2.day ANDR1.bid<>R2.bid\nAlso,eachiteminaqualification canbeasgeneralasexpTession1 =expression2.\nSELECT S1.sname ASname1,S2.sname ASname2\nFROM SailorsSl,SailorsS2\nWHERE 2*S1.rating =S2.rating-1\nForstringcomparisons, wecanusethecomparison operators (=,<,>,etc.)\nwiththeordering ofstringsdetermined alphabetically asusual.Ifweneed\ntosortstringsbyanorderotherthanalphabetical (e.g.,sortstringsdenoting\nmonthnamesinthecalendar orderJanuary, February, March, etc.),SQLsup\u00ad\nportsageneralconcept ofacollation, orsortorder,foracharacter set.A\ncollation allowstheusertospecifywhichcharacters are'lessthan'whichothers\nandprovides greatflexibility instringmanipulation.\nInaddition, SQLprovides support forpatternmatching through theLIKEop\u00ad\nerator,alongwiththeuseofthewild-card symbols%(whichstandsforzero\normorearbitrary characters) and ~(whichstandsforexactlyone,arbitrary,\ncharacter). Thus,'_AB%'denotes apatternmatching everystringthatcon\u00ad\ntainsatlea.'3tthreecharacters, withthesecondandthirdcharacters beingA\nandBrespectively. Notethatunliketheothercomparison operators, blanks\ncanbesignificant fortheLIKEoperator (depending onthecollation forthe\nunderlying character set).Thus,'Jeff'='Jeff'istruewhile'Jeff'LIKE 'Jeff\n,isfalse.Anexample oftheuseofLIKEinaqueryisgivenbelow.\n(Q18)Findtheagesofsailorswh08enamebeginsandendswithBandhasat\nleastthreechamcters.\nSELECT S.age", "175": "SQL:Q'Il,e'rie8, Constraints, TTiggeTs 141\n$\nr---'-~~-~:~;-\n Expre~~~'~-:~'-'~:'\n '~Q'~'~\"\"~,~flecting the\nincr~~~~~~~mpo~~:l~ce ofI\nItextdata,SQL:1999 includes amorepowerful versionoftheLIKEoperator i\nicalledSIMILAR. Thisoperator allowsarichsetofregularexpressions tobeI\nIusedaspatterns whilesearching text.Theregularexpressions aresimilart~\nIthosesUPPo.rtedbytheUnixoperating systenifor stringsearches, although'\nthesyntaxisalittledifferent.\n--- . \u2022\u2022\u2022\u2022._m..-.-.-.-.- ....\u2022--..-----........ .-\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022.\u2022.\u2022\u2022\u2022\u2022\u2022\u2022\u2022.... --..-----.------- ..--..------------- ---------- -.\u2022\u2022..\u2022.---\u2022\u2022\u2022\u2022\u2022.\u2022\u2022.\u2022.\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022..\u2022.\u2022.\u2022\u2022\u2022\u2022\u2022\u2022.\u2022\u2022 -\u2022\u2022\u2022\u2022.....\u2022-\u2022\u2022\u2022\u2022.'.-\"\"-'-.J'.\nRelational Algebra andSQL:Thesetoperations ofSQLareavailable in\nrelational algebra. Themaindifference, ofcourse,isthattheyaremultiset\noperations inSQL,sincetablesaremultisets oftuples.\nFROM\nWHERESailorsS\nS.sname LIKE'B.%B'\nTheonlysuchsailorisBob,andhisageis63.5.\n5.3UNION, INTERSECT, ANDEXCEPT\nSQLprovides threeset-manipulation constructs thatextendthebasicquery\nformpresented earlier.Sincetheanswertoaqueryisamultiset ofrows,itis\nnaturaltoconsider theuseofoperations suchasunion,intersection, anddiffer\u00ad\nence.SQLsupports theseoperations underthenamesUNION, INTERSECT, and\nEXCEPT.4SQLalsoprovides othersetoperations: IN(tocheckifanelement\nisinagivenset),opANY,opALL(tocompare avaluewiththeelements in\nagivenset,usingcomparison operator op),andEXISTS (tocheckifasetis\nempty). INandEXISTS canbeprefixed byNOT,withtheobviousmodification\ntotheirmeaning. WecoverUNION, INTERSECT, andEXCEPTinthissection,\nandtheotheroperations inSection5.4.\nConsider thefollowing query:\n(Q5)Findthenamesofsailorswhohavereserved ared01'agreenboat.\nSELECT\nFROM\nWHERES.sname\nSailorsS,Reserves R,BoatsB\nS.sid=R.sidANDR.bid=B.bid\nAND(B.color ='red'ORB.color ='green')\n.._----\n4Notethatalthough theSQLstandard includes theseoperations, manysystems currently support\nonlyUNION.Also.manysystems recognize thekeyword MINUSforEXCEPT.", "176": "142 CHAPTERD\nThisqueryiseasilyexpressed usingtheORconnective intheWHEREclause.\nHovvever, thefollowing query,whichisidentical exceptfortheuseof'and'\nratherthan'or'intheEnglishversion,turnsouttobemuchmoredifficult:\n(Q6)Findthenamesofsailor'swhohaverescr'ved botharedandagreenboat.\nIfweweretojustreplacetheuseofORintheprevious querybyAND,inanalogy\ntotheEnglishstatements ofthetwoqueries, wewouldretrievethenamesof\nsailorswhohavereserved aboatthatisbothredandgreen.Theintegrity\nconstraint thatbidisakeyforBoatstellsusthatthesameboatcannothave\ntwocolors,andsothevariantoftheprevious querywithANDinplaceofORwill\nalwaysreturnanemptyanswerset.Acorrectstatement ofQueryQ6using\nANDisthefollowing:\nSELECT\nFROM\nWHERES.sname\nSailorsS,Reserves RI,BoatsBI,Reserves R2,BoatsB2\nS.sid=Rl.sidANDR1.bid =Bl.bid\nANDS.sid=R2.sidANDR2.bid=B2.bid\nANDB1.color='red' ANDB2.color ='green'\nWecanthinkofRIandBIasrowsthatprovethatsailorS.sidhasreserved a\nredboat.R2andB2similarly provethatthesamesailorhasreserved agreen\nboat.S.sname isnotincluded intheresultunlessfivesuchrowsS,RI,BI,R2,\nandB2arefound.\nTheprevious queryisdifficult tounderstand (andalsoquiteinefficient toex\u00ad\necute,asitturnsout).Inparticular, thesimilarity totheprevious ORquery\n(QueryQ5)iscompletely lost.Abettersolution forthesetwoqueriesistouse\nUNIONandINTERSECT.\nTheORquery(QueryQ5)canberewritten asfollows:\nSELECT\nFROM\nWHERE\nUNION\nSELECT\nFROM\nWHERES.sname\nSailorsS,Reserves R,BoatsB\nS.sicl=R.sidANDR.bid=B.bidANDB.color='red'\nS2.sname\nSailorsS2,BoatsB2,Reserves H2\nS2.sid=H2.sidANDR2.bid=B2.biclANDB2.color='green'\nThisquerysa,)'sthatwewanttheunionofthesetofsailorswhohavereserved\nredboatsandthesetofsailorswhohavereserved greenboats.Incomplete\nsymmetry, theANDquery(QueryQ6)canberewritten a.sfollovvs:\nSELECT S.snarne", "177": "SqL:Q'lleries7Constraints, Triggers\nFROM SailorsS,Reserves R,BoatsB\nWHERE S.sid=R.sidANDR.bid=B.bidANDB.color='red'\nINTERSECT\nSELECT S2.sname\nFROM SailorsS2,BoatsB2,Reserves R2\nWHERE S2.sid=R2.sidANDR2.bid=B2.bidANDB2.color='green'143\nThisqueryactually contains asubtlebug-iftherearetwosailorssuchas\nHoratio inourexample instances B1,R2,and83,oneofwhomhasreserved a\nredboatandtheotherhasreserved agreenboat,thenameHoratioisreturned\neventhoughnooneindividual calledHoratio hasreserved botharedanda\ngreenboat.Thus,thequeryactually computes sailornamessuchthatsome\nsailorwiththisnamehasreserved aredboatandsomesailorwiththesame\nname(perhaps adifferent sailor)hasreserved agreenboat.\nAsweobserved inChapter 4,theproblem arisesbecause weareusingsname\ntoidentify sailors,andsnameisnotakeyforSailors!Ifweselectsidinsteadof\nsnameintheprevious query,wewouldcompute thesetofsidsofsailorswho\nhavereserved bothredandgreenboats.(Tocompute thenamesofsuchsailors\nrequires anestedquery;wewillreturntothisexample inSection5.4.4.)\nOurnextqueryillustrates theset-difference operation inSQL.\n(Q19)Findthesidsofallsailor'swhohavereserved redboatsbutnotgreen\nboats.\nSELECT\nFROM\nWHERE\nEXCEPT\nSELECT\nFROM\nWHERES.sid\nSailorsS,Reserves R,BoatsB\nS.sid=R.sidANDR.bid=B.bidANDB.color='red'\nS2.sid\nSailorsS2,Reserves R2,BoatsB2\nS2.sid=R2.sidANDR2.bid=B2.bidANDB2.color='green'\nSailors22,64,and31havereserved redboats.Sailors22,74,and31have\nreserved greenboats.Hence,theanswercontains justthesid64.\nIndeed, sincetheReserves relation contains sidinformation, thereisnoneed\ntolookattheSailorsrelation, andwecanusethefollowing simplerquery:\nSELECT\nFROM\nWHERE\nEXCEPTH..sid\nBoatsB,Reserves R\nR.bicl=B.bidANDB.color='red'", "178": "144\nSELECT R2.sid\nFROM BoatsB2,Reserves R2\nWHERE R2.bicl=B2.bid ANDB2.color =:green'CHAPTER~5\nObserve thatthisqueryreliesonreferential integrity; thatis,thereareno\nreservations fornonexisting sailors.NotethatUNION,INTERSECT, andEXCEPT\ncanbeusedonanytwotablesthatareunion-compatible, thatis,havethesame\nnumber ofcolumns andthecolumns, takeninorder,havethesametypes.For\nexample, wecanwritethefollowing query:\n(Q20)Findallsidsofsailorswhohavearatingof10orreserved boat104.\nSELECT\nFROM\nWHERE\nUNION\nSELECT\nFROM\nWHERES.sid\nSailorsS\nS.rating =10\nR.sid\nReserves R\nR.bid=104\nThefirstpartoftheunionreturnsthesids58and71.Thesecondpartreturns\n22and31.Theansweris,therefore, thesetofsids22,31,58,and71.A\nfinalpointtonoteaboutUNION,INTERSECT, andEXCEPTfollows. Incontrast\ntothedefaultthatduplicates arenoteliminated unlessDISTINCT isspecified\ninthebasicqueryform,thedefaultforUNIONqueriesisthatduplicates are\neliminated! Toretainduplicates, UNIONALLmustbeused;ifso,thenumber\nofcopiesofarowintheresultisalwaysm+n,wheremandnarethenum\u00ad\nbersoftimesthattherowappears inthetwopartsoftheunion.Similarly,\nINTERSECT ALLretainscluplicates--the numberofcopiesofarowintheresult\nismin(m,n)-~ancl EXCEPT ALLalsoretains duplicates~the number ofcopies\nofarowintheresultism -n,where'mcorresponds tothefirstrelation.\n5.4NESTED QUERIES\nOneofthemostpowerful features ofSQLisnestedqueries. Anestedquery\nisaquerythathasanother queryembedded withinit;theembedded query\niscalledasuhquery. Theembedded querycanofcoursebeanestedquery\nitself;thusqueriesthathaveverydeeplynestedstructures arepossible. When\nwritingaquery,wesornetimes needtoexpressacondition thatreferstoatable\nthatmustitselfbecomputed. Thequeryusedtocompute thissubsidiary table\nisasubqueryandappears aspartofthemainquery.Asubquerytypically\nappears withintheWHEREclauseofaquery.Subqueries cansometimes appear\nintheFROMclauseortheHAVING clause(whichwepresentinSection 5.5).", "179": "SQL: QueT~ie8] Constraints] Triggers 145\n$\nr-~'-'-'~-.------- -~--- ,.,.._,--- ..--,,-,,-_ ,.---------\nIRelational Algebra andSQL:Nestingofqueriesisafeaturethatisnot\nIavailable inrelational algebra, butnestedqueriescanbetranslated into\nialgebra, aswewillseeinChapter 15.Nesting inSQLisinspired moreby\n,relational calculus thanalgebra. Inconjunction withsomeofSQL'sother\nfeatures, suchas(multi)set operators andaggregation, nestingisavery\nexpressive construct.\nThissectiondiscusses onlysubqueriesthatappearintheWHEREclause.The\ntreatment ofsubqueriesappearing elsewhere isquitesimilar. Someexamples of\nsubqueriesthatappearintheFROMclausearediscussed laterinSection5.5.1.\n5.4.1Introduction toNestedQueries\nAsanexample, letusrewritethefollowing query,whichwediscussed earlier,\nusinganestedsubquery:\n(Ql)Findthenamesofsailorswhohavereserved boat103.\nSELECT\nFROM\nWHERES.sname\nSailorsS\nS.sidIN(SELECT\nFROM\nWHERER.sid\nReserves R\nR.bid=103)\nThenestedsubquerycomputes the(multi)set ofsidsforsailorswhohavere\u00ad\nservedboat103(thesetcontains 22,31,and74oninstances R2and83),and\nthetop-level queryretrieves thenamesofsailorswhosesidisinthisset.The\nINoperator allowsustotestwhether avalueisinagivensetofelements; an\nSQLqueryisusedtogenerate thesettobetested.Notethatitisveryeasyto\nmodifythisquerytofindallsailorswhohavenotreserved boat103-we can\njustreplace INbyNOTIN!\nThebestwaytounderstand anestedqueryistothinkofitintermsofacon\u00ad\nceptualevaluation strategy. Inourexample, thestrategy consists ofexamining\nrowsinSailorsand,foreachsuchrow,evaluating thesubqueryoverReserves.\nIngeneral, theconceptual evaluation strategy thatwepresented fordefining\nthesemantics ofaquerycanbeextended tocovernestedqueriesasfollows:\nConstruct thecross-product ofthetablesintheFROMclauseofthetop-level\nqueryashefore.Foreachrowinthecross-product, whiletestingtheqllalifica-", "180": "146\ntionintheWHEREclause,(re)compute thesubquery.5 Ofcourse,thesubquery\nmightitselfcontainanothernestedsubquery,inwhichcaseweapplythesame\nideaonemoretime,leadingtoanevaluation strategy \\vithseverallevelsof\nnestedloops.\nAsanexample ofamultiply nestedquery,letusrewritethefollowing query.\n(Q2)Findthenamesofsailors'whoha'uereserved aredboat.\nSELECT\nFROM\nWHERES.sname\nSailorsS\nS.sidIN(SELECT R.sid\nFROM Reserves R\nWHERE R.bidIN(SELECT B.bid\nFROM BoatsB\nWHERE B.color='red'\nTheinnermost subqueryfindsthesetofbidsofredboats(102and104on\ninstance E1).Thesubquery onelevelabovefindsthesetofsidsofsailorswho\nhavereserved oneoftheseboats.Oninstances E1,R2,and83,thissetofsids\ncontains 22,31,and64.Thetop-level queryfindsthenamesofsailorswhose\nsidisinthissetofsids;wegetDustin,Lubber, andHoratio.\nTofindthenamesofsailorswhohavenotreserved aredboat,wcreplacethe\noutermost occurrence ofINbyNOTIN,asillustrated inthenextquery.\n(Q21)Findthenamesofsailorswhohavenotreserved aredboat.\nSELECT S.sname\nFROM SailorsS\nWHERES.sidNOTIN(SELECT\nFROM\nWHERER.sid\nReserves R\nR.bidIN(SELECT B.bid\nFROM BoatsB\nWHERE B.color ='red')\nThisqucrycomputes thenamesofsailorswhosesidisnotintheset22,31,\nand64.\nIncontrast toQueryQ21,wecanmodifytheprevious query(thenestedversion\nofQ2)byreplacing theinneroccurrence (ratherthantheouteroccurence) of\n5Sincetheinnersubquery inourexample doesnotdepend onthe'current' rowfromtheouter\nqueryillanyway,yournightwonderwhywehavetorecompute thesubquery foreachouterrow.For\nananswer, seeSection 5.4.2.", "181": "SQL:Queries, Con.,trf1'inis, Triggers\nINwithNOTIN.Thismodified querywouldcompute thenaU1eSofsailorswho\nhavereserved aboatthatisnotred,thatis,iftheyhaveareservation, itisnot\nforaredboat.Letusconsider how.Intheinnerquery,wecheckthatR.bid\nisnoteither102or104(thebidsofredboats).Theouterquerythenfindsthe\nsidsinReserves tuples\\vherethebidisnot102or104.Oninstances E1,R2,\nand53,theouterquerycomputes thesetofsids22,31,64,and74.Finally,\nwefindthenamesofsailorswhosesidisinthisset.\n\\VecanalsomodifythenestedqueryQ2byreplacing bothoccurrences ofIN\nwithNOTIN.Thisvariantfindsthenamesofsailorswhohavenotreserved a\nboatthatisnotred,thatis,whohavereserved onlyredboats(ifthey'vere\u00ad\nservedanyboatsatall).Proceeding asintheprevious paragraph, oninstances\nE1,R2,and53,theouterquerycomputes thesetofsids(inSailors) other\nthan22,31,64,and74.Thisistheset29,32,58,71,85,and95.Wethenfind\nthenamesofsailorswhosesidisinthisset.\n5.4.2Correlated NestedQueries\nInthenestedqueriesseenthusfar,theinnersubqueryhasbeencompletely\nindependent oftheouterquery.Ingeneral,theinnersubquerycoulddependon\ntherowcurrently beingexamined intheouterquery(intermsofourconceptual\nevaluation strategy). Letusrewritethefollowing queryoncemore.\n(Q1)Pindthenamesofsailorswhohavereserved boatnv,mber 103.\nSELECT\nFROM\nWHERES.sname\nSailorsS\nEXISTS (SELECT *\nFROM Reserves R\nWHERE R.bid=103\nANDR.sid=S.sid)\nTheEXISTS operator isanothersetcomparison operator, suchasIN.Itallows\nustotestwhether asetisnonempty, animplicit comparison withtheempty\nset.Thus,foreachSailorrow5,wetestwhether thesetofReserves rows\nRsuchthatR.bid=103ANDS.sid=R.sidisnonempty. Ifso,sailor5has\nreserved boatt03,andweretrievethename.'1'hesubqueryclearlydepends\nonthecurrentrowSandIIlUStbere-evaluated foreachrowinSailors. The\noccurrence ofSinthesubquery(intheformoftheliteralS.sid)iscalleda\ncOTTelation, andsuchqueriesarecalledcon-elated queries.\nThisqueryalsoillustrates theuseofthespecialsymbol*insituations where\nallwewanttodoistocheckthataqualifying rowexists,anddoHotreally", "182": "148 CHAPTER,.5\nwanttoretrieveanycolumns fromtherow.Thisisoneofthetwousesof*in\ntheSELECT clausethatisgoodprogramming style;theotheris&':1anargument\noftheCOUNTaggregate operation, whichwedescribe shortly.\nAsafurtherexample, byusingNOTEXISTSinsteadofEXISTS, wecancompute\nthenamesofsailorswhohavenotreserved aredboat.Closelyrelatedto\nEXISTS istheUNIQUE predicate. \\VhenweapplyUNIQUEtoasubquery, the\nresulting condition returnstrueifnorowappears twiceintheanswertothe\nsubquery,thatis,therearenoduplicates; inparticular, itreturnstrueifthe\nanswerisempty.(AndthereisalsoaNOTUNIQUEversion.)\n5.4.3Set-Comparison Operators\nWehavealreadyseentheset-comparison operators EXISTS, IN, andUNIQUE,\nalongwiththeirnegated versions. SQLalsosupports opANYandopALL,where\nopisoneofthearithmetic comparison operators{<,<=,=,<>,>=,>}.(SOME\nisalsoavailable, butitisjustasynonym forANY.)\n(Q22)FindsailorswhoseratingisbetterthansomesailorcalledHoratio.\nSELECT S.sid\nFROM SailorsS\nWHERE S.rating>ANY(SELECT\nFROM\nWHERES2.rating\nSailorsS2\nS2.sname ='Horatio' )\nIfthereareseveralsailorscalledHoratio, thisqueryfindsallsailorswhoserating\nisbetterthanthatofsomesailorcalledHoratio. Oninstance 83,thiscomputes\nthesids31,32,58,71,and74.\\\\ThatiftherewerenosailorcalledHoratio? In\nthiscasethecomparison S.rating>ANY...isdefinedtoreturnfalse,andthe\nqueryreturnsanelnptyanswerset.Tounderstand comparisons involving ANY,\nitisusefultothinkofthecomparison being carried outrepeatedly. Inthis\nexample, S.ratingissuccessively compared witheachratingvaluethatisan\nanswertothenestedquery.Intuitively, thesubquerymustreturnarowthat\nmakesthecomparison true,inorderforS.rat'ing>ANY...toreturntrue.\n(Q23)Findsailorswhoseratingisbetterthaneverysailor'calledHorat\u00b7to.\nvVecanobtainallsuchquerieswithasimplemodification toQueryQ22:Just\nreplace ANYwithALLintheWHEREclauseoftheouterquery.Oninstance 8~~,\nwewouldgetthesid\",58and71.IftherewerenosailorcalledHoratio, the\ncomparison S.rating>ALL...isdefinedtoreturntrue!Thequerywouldthen\nreturnthenamesofallsailors. Again,itisusefultothinkofthecomparison", "183": "SQL:C2uerie,s, ConstTain,ts, Triggers 149\nbeingcarriedoutrepeatedly. Intuitively, thecomparison mustbetrueforevery\nreturned rowforS.rating> ALL...toreturntrue.\nAsanother illustration ofALL,consider thefollowing query.\n(Q24JFindthe8ailor'swiththehighestrating.\nSELECT S.sid\nFROM SailorsS\nWHERE S.rating>=ALL(SELECT S2.rating\nFROM SailorsS2)\nThesubquerycomputes thesetofallratingvaluesinSailors.TheouterWHERE\ncondition issatisfied onlywhenS.rating isgreaterthanorequaltoeachof\ntheseratingvalues,thatis,whenitisthelargestratingvalue.Intheinstance\n53,thecondition issatisfied onlyforrating10,andtheanswerincludes the\nsid.\"ofsailorswiththisrating,Le.,58and71.\nNotethatINandNOTINareequivalent to=ANYand<>ALL,respectively.\n5.4.4MoreExamples ofNestedQueries\nLetusrevisitaquerythatweconsidered earlier using theINTERSECT operator.\n(Q6)Findthenamesofsailorswhohavereserved botharedandagreenboat.\nSELECT\nFROM\nWHERES.sname\nSailorsS,Reserves R,BoatsB\nS.sid=R.sidANDR.bid=B.bidANDB.color='red'\nANDS.sidIN(SELECT S2.sid\nFROM SailorsS2,BoatsB2,Reserves R2\nWHERE S2.sid=R2.sid ANDR2.bid=B2.bid\nANDB2.color ='green')\nThisquerycanbeunderstood asfollows: \"Findallsailorswhohavereserved\naredboatand,further, havesidsthatareincluded inthesetofsidsofsailors\nwhohavereserved agreenboat.\"Thisformulation ofthequeryillustrates\nhowqueriesinvolving INTERSECT canberewritten usingIN,whichisusefulto\nknowifyoursystemdoesnotsupport INTERSECT. Queries usingEXCEPT can\nbesimilarly rewritten byusingNOTIN.Tofindtheside:,ofsailorswhohave\nreserved redboatsbutnotgreenboats,wecansimplyreplacethekeyword IN\nintheprevious querybyNOTIN.", "184": "150 CHAPTER\"S\nAsitturnsout,writingthisquery(Q6)usingINTERSECT ismorecomplicated\nbecause wehavetousesidstoidentify sailors(whileintersecting) andhaveto\nreturnsailornames:\nSELECT S.sname\nFROM SailorsS\nWHERE S.sidIN((SELECT R.sid\nFROM BoatsB,Reserves R\nWHERE R.bid=B.bidANDB.color='red')\nINTERSECT\n(SELECT R2.sid\nFROM BoatsB2,Reserves R2\nWHERE R2.bid=B2.bidANDB2.color='green'))\nOurnextexample illustrates howthedivision operation inrelational algebra\ncanbeexpressed inSQL.\n(Q9)Findthenamesofsailors who haveTeseTved allboats.\nSELECT S.sname\nFROM SailorsS\nWHERE NOTEXISTS ((SELECT B.bid\nFROM BoatsB )\nEXCEPT\n(SELECT R.bid\nFROM Reserves R\nWHERE R.sid=S.sid))\nNotethatthisqueryiscorrelated--for eachsailorS,wechecktoseethatthe\nsetofboatsreserved bySincludes everyboat.Analternative waytodothis\nquerywithout usingEXCEPTfollows:\nSELECT S.sname\nFROM SailorsS\nWHERE NOTEXISTS (SELECT\nFROM\nWHEREB.bid\nBoatsB\nNOTEXISTS (SELECT R.bid\nFROM Reserves R\nWHERE R.bid=B.bid\nANDR.sid=S.sid))\nIntuitively, foreachsailorwecheckthatthereisnoboatthathasnotbeen\nreserved bythissailor.", "185": "SQL:Q'ueT'ics. Constraint8, Triggers lQJ\nSQL:1999 Aggregate Functions: Thecollection ofaggregate functions\nisgreatlyexpanded inthenewstandard, including severalstatistical\ntionssuchasstandard deviation, covariance, andpercentiles. However,\nnewaggregate functions areintheSQLjOLAP package andmaynot\nsupported byallvendors.\n5.5AGGREGATE OPERATORS\nInaddition tosimplyretrieving data,weoftenwanttoperform somecompu\u00ad\ntationorsummarization. Aswenotedearlierinthischapter, SQLallowsthe\nuseofarithmetic expressions. Wenowconsider apowerful classofconstructs\nforcomputing aggregate valuessuchasMINandSUM.Thesefeatures represent\nasignificant extension ofrelational algebra. SQLsupports fiveaggregate oper\u00ad\nations,whichcanbeappliedonanycolumn, sayA,ofarelation:\n1.COUNT([DISTINCT] A):Thenumber of(unique) valuesintheAcolumn.\n2.SUM([DISTINCT] A):Thesumofall(unique) valuesintheAcolumn.\n3.AVG([DISTINCT] A):Theaverage ofall(unique) valuesintheAcolumn.\n4.MAX(A):Themaximum valueintheAcolumn.\n5.MIN(A):Theminimum valueintheAcolumn.\nNotethatitdoesnotmakesensetospecifyDISTINCT inconjunction withMIN\norMAX(although SQLdoesnotpreclude this).\n(Q25)Findtheaverage ageofallsailors.\nSELECT AVG(S.age)\nFROM SailorsS\nOninstance 53,theaverage ageis37.4.Ofcourse,theWHEREclausecanbe\nusedtorestrictthesailorsconsidered incomputing theaverage age.\n(Q26)Findtheaverage ageofsailorswitharatingof10.\nSELECT AVG(S.age)\nFROM SailorsS\nWHERE S.rating=10\nTherearetwosuchsailors,andtheiraverage ageis25.5.MIN(orMAX)canbe\nusedinsteadofAVGintheabovequeriestofindtheageoftheyoungest (oldest)", "186": "1,..')0...\nsailor.However) findingboththenameandtheageoftheoldestsailorismore\ntricky,asthenextqueryillustrates.\n(Q,\"21)Findthenameandageoftheoldestsailor.\nConsider thefollowing attempt toanswerthisquery:\nSELECT S.sname, MAX(S.age)\nFROM SailorsS\nTheintentisforthisquerytoreturnnotonlythemaximum agebutalsothe\nnameofthesailorshavingthatage.However, thisqueryisillegalinSQL-if\ntheSELECT clauseusesanaggregate operation, thenitmustuseonlyaggregate\noperations unlessthequerycontains aGROUPBYclause!(Theintuition behind\nthisrestriction shouldbecomeclearwhenwediscusstheGROUPBYclausein\nSection5.5.1.)Therefore, wecannotuseMAX(S.age)aswellasS.sname inthe\nSELECT clause.Wehavetouseanestedquerytocompute thedesiredanswer\ntoQ27:\nSELECT\nFROM\nWHERES.sname, S.age\nSailorsS\nS.age= (SELECT MAX(S2.age)\nFROMSailorsS2)\nObservethatwehaveusedtheresultofanaggregate operation inthesubquery\nasanargument toacomparison operation. Strictlyspeaking, wearecomparing\nanagevaluewiththeresultofthesubquery,whichisarelation. However,\nbecause oftheuseoftheaggregate operation, thesubqueryisguaranteed to\nreturnasingletuplewithasinglefield,andSQLGonverts sucharelationtoa\nfieldvalueforthesakeofthecomparison. Thefollowing equivalent queryfor\nQ27islegalintheSQLstandard but,unfortunately, isnotsupported inmany\nsystems:\nSELECT\nFROM\nWHERES.sname, S.age\nSailorsS\n(SELECT MAX(S2.age)\nFROMSailorsS2)=S.age\n\\VccancountthenumberofsailorsusingCOUNT.Thisexarnple illustrates the\nuseof*asanargument toCOUNT,whichisusefulwhen\\vewanttocountall\nrows.\n(Q28)Countthen:umbCTofsa:iloTs.\nSELECT COUNT(*)", "187": "FROM SailorsS\nvVecanthinkof*asshorthand forallthecolumns (inthecross-product ofthe\nfrom-list intheFROMclause). Contrast thisquerywiththefollowing query,\nwhichcomputes thenumber ofdistinct sailornames.(Remember that,'mame\nisnotakey!)\n(Q29)Countthenmnberofd'i.fferent sailornames.\nSELECT COUNT(DISTINCT S.sname )\nFROM SailorsS\nOninstance83,theanswertoQ28is10,whereas theanswertoQ29is9\n(because twosailorshavethesamename,Horatio). IfDISTINCT isomitted,\ntheanswertoQ29is10,because thenameHoratio iscounted twice.IfCOUNT\ndoesnotinclude DISTINCT, thenCOUNT(*)givesthesameanswerasCOUNT(x),\nwherexisanysetofattributes. Inourexample, without DISTINCT Q29is\nequivalent toQ28.However, theuseofCOUNT(*)isbetterquerying style,\nsinceitisimmediately clearthatallrecordscontribute tothetotalcount.\nAggregate operations offeranalternative totheANYandALLconstructs. For\nexample, consider thefollowing query:\n(Q30)Findthenamesofsailorswhoareolderthantheoldestsailorwitha\nratingof10.\nSELECT\nFROM\nWHERES.sname\nSailorsS\nS.age> (SELECT MAX(S2.age)\nFROM SailorsS2\nWHERE S2.rating =10)\nOninstance83,theoldestsailorwithrating10issailor58,whoseageis~j5.\nThenamesofoldersailorsareBob,Dustin,Horatio, andLubber. UsingALL,\nthisquerycouldalternatively bewrittenasfollows:\nSELECT S.sname\nFROM SailorsS\nWHERE S.age>ALL(SELECT\nFROM\nWHERES2.age\nSailorsS2\nS2.rating =10)\nHowever, theALLqueryismoreerrorproncone couldeasily(andincorrectly!)\nuseANYinsteadofALL,andretrievesailorswhoareolderthansomesailorwith", "188": "154 CHAPTEFt,~5\nRelationa~ Algebra andSQL:~~~~:egation isafUIl~~~:\u00b7mental operati(~:l-'-l\nthatcanIlotbeexpressed inrelational algebra. Similarly, SQL'8grouping I\nconstruct cannotbeexpressed inalgebra. I\nL..- ._. .....__. I\naratingof10.TheuseofANYintuitively corresponds totheuseofMIN,instead\nofMAX,intheprevious query.\n5.5.1TheGROUP BYandHAVING Clauses\nThusfar,wehaveappliedaggregate operations toall(qualifying) rowsina\nrelation. Oftenwewanttoapplyaggregate operations toeachofanumber\nofgroups ofrowsinarelation, wherethenumber ofgroupsdepends onthe\nrelation instance (i.e.,isnotknowninadvance). Forexample, consider the\nfollowing query.\n(Q31)Findtheageoftheyoungest sailorforeachratinglevel.\nIfweknowthatratingsareintegers intherange1tola,wecouldwrite10\nqueriesoftheform:\nSELECT MIN(S.age)\nFROM SailorsS\nWHERE S.rating=i\nwherei=1,2,...,10.vVriting 10suchqueriesistedious. Moreimportant,\nwemaynotknowwhatratinglevelsexistinadvance.\nTowritesuchqueries, weneedamajorextension tothebasicSQLquery\nform,namely, theGROUPBYclause. Infact,theextension alsoincludes an\noptional HAVING clausethatcanbeusedtospecifyqualificatioIls overgroups\n(forexample, wemaybeinterested onlyinratinglevels> 6.Thegeneralform\nofanSQLquerywiththeseextensions is:\nSELECT [DISTINCT] select-list\nFROM from-list\nWHERE 'qualification\nGROUPBYgrouping-list\nHAVING group-qualification\nUsingtheGROUPBYclause,wecanwriteQ:na.sfollows:\nSELECT S.rating, MIN(S.age)", "189": "S(JL:queries. Constraints. Triggers\nFROM SailorsS\nGROUP BYS.rating\nLetusconsider someimportant pointsconcerning thenewclauses:\nIITheselect-list intheSELECT clauseconsists of(1)alistofcolumnnames\nand(2)alistoftermshavingtheformaggop(column-name) ASnew\u00ad\nname.vVealreadysawASusedtorenameoutputcolumns. Columns that\naretheresultofaggregate operators donotalreadyhaveacolumnname,\nandtherefore givingthecolumnanamewithASisespecially useful.\nEverycolumnthatappears in(1)mustalsoappearingrouping-list. The\nreasonisthateachrowintheresultofthequerycorresponds toonegmup,\nwhichisacollection ofrowsthatagreeonthevaluesofcolumns ingrouping\u00ad\nlist.Ingeneral, ifacolumnappears inlist(1),butnotingrouping-list,\ntherecanbemultiple rowswithinagroupthathavedifferent valuesinthis\ncolumn, anditisnotclearwhatvalueshouldbeassigned tothiscolumn\ninananswerrow.\nWecansometimes useprimary keyinformation toverifythatacolumn\nhasauniquevalueinallrowswithineach group. Forexample, ifthe\ngrouping-list contains theprimary keyofatableinthefrom-list, every\ncolumnofthattablehasauniquevaluewithineach group. InSQL:1999,\nsuchcolumns arealsoallowedtoappearinpart(1)oftheselect-list.\nIITheexpressions appearing inthegroup-qualification intheHAVING clause\nmusthaveasinglevaluepergroup.Theintuition isthattheHAVING clause\ndetermines whether ananswerrowistobegenerated foragivengroup.\nTosatisfythisrequirement inSQL-92, acolumnappearing inthegroup\u00ad\nqualification mustappeara'3theargument toanaggregation operator, or\nitmustalsoappearingrouping-list. InSQL:1999, twonewsetfunctions\nhavebeenintroduced thatallowustocheckwhether everyoranyrowina\ngroupsatisfies acondition; thisallowsustouseconditions similartothose\ninaWHEREclause.\nIIIIfGROUP BYisomitted, theentiretableisregarded asasinglegroup.\nvVeexplainthesemantics ofsuchaquerythrough anexample.\n(QS2)Findtheageoftheyoungest sa'ilorwhoiseligibletovote(i.e.,isatleast\n18yearsold)foreachratinglevelwithatleasth.uosuchsailors.\nSELECT\nFROM\nWHERE\nGROUP BY\nHAVINGS.rating, MIN(S.age) ASminage\nSailorsS\nS.age>=18\nS.rating\nCOUNT(*)>1", "190": "156 CHAPTERl,5\nvVewillevaluate thisqueryoninstance 83ofSailors,reproduced inFigure5.10\nforconvenience. Theinstance ofSailorsonwhichthisqueryistobeevaluated is\nshowninFigure5.10.Extending theconceptual evaluation strategy presented\ninSection5.2,weproceed asfollows. Thefirststepistoconstruct thecross\u00ad\nproduct oftablesinthefrom-list. Because theonlyrelation inthefrom-list\ninQueryQ32isSailors,theresultisjusttheinstance showninFigure5.10.\n22Dustin 7 45.0\n29Brutus 1 33.0\n31Lubber 8 55.5\n32Andy 8 25.5\n58Rusty 10 35.0\n64Horatio 7 35.0\n71Zorba 10 16.0\n74Horatio 9 35.0\n85Art 3 25.5\n95Bob 3 63.5\n96Frodo 3 25.5\nFigure5.10Instance 53ofSailors\nThesecondstepistoapplythequalification intheWHEREclause,S.age>=18.\nThisstepeliminates therow(71,zorba,10,16).Thethirdstepistoeliminate\nunwanted columns. Onlycolumns mentioned intheSELECT clause,theGROUP\nBYclause,ortheHAVING clausearenecessary, whichmeanswecaneliminate\nsidandsnameinourexample. TheresultisshowninFigure5.11.Observe\nthattherearetwoidentical rowswithrating3andage25.5-SQL doesnot\neliminate duplicates exceptwhenrequired todosobyuseoftheDISTINCT\nkeyword! Thenumber ofcopiesofarowintheintermediate tableofFigure\n5.11isdetermined bythenumber ofrowsintheoriginal tablethathadthese\nvaluesintheprojected columns.\nThefourthstepistosortthetableaccording totheGROUP BYclausetoidentify\nthegroups.TheresultofthisstepisshowninFigure5.12.\nThefifthstep,-istoapplythegroup-qualification intheHAVING clause,that\nis,thecondition COUNT(*)>1.Thisstepeliminates thegroupswithrating\nequalto1,9,and10.Observe thattheorderinwhichtheWHEREandGROUP\nBYclausesareconsidered issignificant: IftheWHEREclausewerenotconsid\u00ad\neredfirst,thegroupwithrating=10 wouldhavemetthegroup-qualification\nintheHAVING clause.Thesixthstepistogenerate oneanswerrowforeach\nremaining group.Theanswerrowcorresponding toagroupconsists ofasubset", "191": "SqL:queries, Constraints, Triggers\n3 25.5\n3 25.5\n3 63.5\n55.5\n25.5\n35.0\n35.0 I10~~tl?l (J;fJ6;\n11I33.0.f'(Lf'tTbf}iigge\u00b7\u00b7\u00b7\u00b7\u00b7.. .....\n7 45.0\n1 33.0\n8 55.5\n8 25.5\n10 35.0\n7 35.0\n9 35.0\n3 25.5\n3 63.5\n3 25.5\nFigure 5.11AfterEvaluation Step3 Figure 5.12AfterEvaluation Step4\nofthegrouping columns, plusoneormorecolumns generated byapplying an\naggregation operator. Inourexample, eachanswerrowhasaratingcolumn\nandaminagecolumn, whichiscomputed byapplying MINtothevaluesinthe\nagecolumnofthecorresponding group.Theresultofthisstepisshownin\nFigure5.13.\nIratingIminageI\n3 25.5\n7 35.0\n8 25.5\nFigure 5.13FinalResultinSample Evaluation\nIfthequerycontains DISTINCT intheSELECT clause,duplicates areeliminated\ninanadditional, andfinal,step.\nSQL:1999 ha.sintroduced twonewsetfunctions, EVERYandANY.Toillustrate\nthesefunctions, wecanreplacetheHAVING clauseinourexample by\nHAVING COUNT(*)>1ANDEVERY(S.age<=60)\nThefifthstepoftheconceptual evaluation istheoneaffected bythechange\nintheHAVING clause.Consider theresultofthefourthstep,showninFigure\n5.12.TheEVERYkeyword requires thateveryrowinagroupmustsatisfythe\nattached condition tomeetthegroup-qualification. Thegroupforrat'ing3does\nmeetthiscriterion andisdropped; theresultisshowninFigure5.14.", "192": "158 CHAPTER. 5\nSQL:1999 Extensions: Twonewsetfunctions, EVERYandANY,have\nbeenadded.vVhentheyareusedintheHAVING clause,thebasicintuition\nthattheclausespecifies acondition tobesatisfied byeachgroup,takenas\nawhole,remains unchanged. However, thecondition cannowinvolvetests\nonindividual tuplesinthegroup,whereas itpreviously reliedexclusively\nonaggregate functions overthegroupoftuples.\nItisworthcontrasting thepreceding querywiththefollowing query,inwhich\nthecondition onageisintheWHEREclauseinsteadoftheHAVING clause:\nSELECT\nFROM\nWHERE\nGROUPBY\nHAVINGS.rating, MIN(S.age) ASminage\nSailorsS\nS.age>=18ANDS.age<=60\nS.rating\nCOUNT(*)>1\nNow,theresultafterthethirdstepofconceptual evaluation nolongercontains\ntherowwithage63.5.Nonetheless, thegroupforrating3satisfiesthecondition\nCOUNT(*)>1,sinceitstillhastworows,andmeetsthegroup-qualification\nappliedinthefifthstep.ThefinalresultforthisqueryisshowninFigure5.15.\n3 25.5\n7 45.0\n8 55.5IratingIminageI\n55.5ratingIminage\n~ 145\n.0\nFigure5.14FinalResultofEVERYQuery Figure5.15ResultofAlternative Query\n5.5.2MoreExamples ofAggregate Queries\n(Q33) FOTeachredboat;findthenumberofreservations forthisboat.\nSELECT B.bid,COUNT(*)ASreservationcount\nFROM BoatsB,Reserves R\nWHERE R.bid=B.bidANDB.color='red'\nGROUPBYB.bid\nOninstances B1andR2,theanswertothisquerycontains thetwotuples(102,\n3)and(104,2).\nObserve thatthisversionofthepreceding queryisillegal:", "193": "SCdL:(J'ueries, Constraints. IhggeT8\nSELECT B.bicl,COUNT(*)ASreservationcount\nFROM BoatsB,Reserves R\nWHERE R.bid=B.bid\nGROUP BYB.bid\nHAVING B.color='red'lijj9\nEventhoughthegToup-qualification B.coloT ='Ted'issingle-valued pergroup,\nsincethegrouping attribute bidisakeyforBoats(andtherefore determines\ncoloT),SQLdisallows thisquery.6Onlycolumns thatappearintheGROUP BY\nclausecanappearintheHAVING clause,unlesstheyappearasarguments to\nanaggregate operator intheHAVING clause.\n(Q34)Findtheavemge ageofsailoTsfOTeachmtinglevelthathasatleasttwo\nsailoTs.\nSELECT\nFROM\nGROUP BY\nHAVINGS.rating, AVG(S.age) ASavgage\nSailorsS\nS.rating\nCOUNT(*)>1\nAfteridentifying groupsbasedonmting,weretainonlygroupswithatleast\ntwosailors.Theanswertothisqueryoninstance 83isshowninFigure5.16.\nImtingIavgageI\n3 44.5\n7 40.0\n8 40.5\n10 25.5\nFigure 5.16Q34AnswerImtingIavgageI\n3 45.5\n7 40.0\n8 40.5\n10 35.0\nFigure5.17Q35AnswerI\u00b7\u00b7ratingIav.qage]\n3 45.5\n7 40.0\n8 40.5\nFigure 5.18Q:36Answer\nThefollowing alternative formulation ofQueryQ34illustrates thattheHAVING\nclausecanhaveanestedsubquery,justliketheWHEREclause.Notethatwe\ncanuseS.mtiTLginsidethenestedsubqueryintheHAVING clausebecause it\nhasasinglevalueforthecurrentgroupofsailors:\nSELECT\nFROM\nGROUP BY\nHAVINGS.rating, AVG(S.age)ASavgage\nSailorsS\nS.rating\n1< (SELECT COUNT(*)\nFROMSailorsS2\nWHERES.rating=S2.Hl,ting )\n6Thisquerycanbeea..'iilyrewritten tobelegalinSQL:1999usingEVERYintheHAVING clause.", "194": "160 CHAPTER .;5\n(Q35)Findtheaverage ageofsailors'WhoaTeofvotingage (i.e.~atleast18\nyear8old)foreach'ratinglevelthathasatleasttwosailors.\nSELECT\nFROM\nWHERE\nGROUPBY\nHAVINGS.rating, AVG(S.age)ASavgage\nSailorsS\nS.age>=18\nS.rating\n1< (SELECT COUNT(*)\nFROMSailorsS2\nWHERES.rating =S2.rating )\nInthisvariantofQueryQ34,wefirstremovetupleswithage<=18andgroup\ntheremaining tuplesbyrating.Foreachgroup,thesubqueryintheHAVING\nclausecomputes thenumberoftuplesinSailors(without applying theselection\nage<=18)withthesameratingvalueasthecurrentgroup.Ifagrouphas\nlessthantwosailors,itisdiscarded. Foreachremaining group,weoutput\ntheaverage age.Theanswertothisqueryoninstance 53isshowninFigure\n5.17.NotethattheanswerisverysimilartotheanswerforQ34,withtheonly\ndifference beingthatforthegroupwithrating10,wenowignorethesailor\nwithage16whilecomputing theaverage.\n(Q36)Findtheaverage ageojsailorswhoaTeofvotingage(i.e.,atleast18\nyeaTsold)JOTeachratinglevelthathasatleasttwosuchsailors.\nSELECT\nFROM\nWHERE\nGROUPBY\nHAVINGS.rating, AVG(S.age)ASavgage\nSailorsS\nS.age>18\nS.rating\n1< (SELECT COUNT(*)\nFROMSailorsS2\nWHERES.rating =S2.rating ANDS2.age>=18)\nThisformulation ofthequeryreflectsitssimilarity toQ35.TheanswertoQ36\noninstance 53isshowninFigure5.18.ItdiffersfromtheanswertoQ35in\nthatthereisnotupleforrating10,sincethereisonlyonetuplewithrating10\nandage218.\nQueryQ36isactually verysimilartoQ32,asthefollowing simplerformulation\nshows:\nSELECT\nFROM\nWHERE\nGROUPBYS.rating, AVG\nSailorsS\nS.age>18\nS.rating(S.age)ASavgage", "195": "SQL:QueTies, Constraints, Triggers\nHAVING COUNT(*)>1\nThisformulation ofQ36takesadvantage ofthefactthattheWHEREclauseis\nappliedbeforegrouping isdone;thus,onlysailorswithage>18areleftwhen\ngrouping isdone.Itisinstructive toconsider yetanother wayofwritingthis\nquery:\nSELECT\nFROM\nWHERETemp.rating, Temp.avgage\n(SELECT S.rating, AVG(S.age)AS\nCOUNT(*)ASratingcount\nFROM SailorsS\nWHERE S.age>18\nGROUP BYS.rating) ASTemp\nTemp.ratingcount > 1avgage,\nThisalternative bringsoutseveralinteresting points. First,theFROMclause\ncanalsocontainanestedsubqueryaccording totheSQLstandard.7Second,\ntheHAVING clauseisnotneededatall.AnyquerywithaHAVING clausecan\nberewritten without one,butmanyqueriesaresimplertoexpresswiththe\nHAVING clause. Finally, whenasubquery appears intheFROMclause,using\ntheASkeyword togiveitanameisnecessary (sinceotherwise wecouldnot\nexpress, forinstance, thecondition Temp.ratingcount >1).\n(Q37)FindthoseratingsfOTwhichtheaverage ageofsailoTSisthem'inirnum\noverallratings.\nWeusethisquerytoillustrate thataggregate operations cannotbenested.One\nmightconsider writingitasfollows:\nSELECT\nFROM\nWHERES.rating\nSailorsS\nAVG(S.age)= (SELECT MIN(AVG(S2.age))\nFROM SailorsS2\nGROUP BYS2.rating )\nAlittlethought showsthatthisquerywillnotworkeveniftheexpression MIN\n(AVG(S2.age)), whichisillegal,wereallowed. Inthenestedquery,Sailorsis\npartitioned int,ogroupsbyrating,andtheaverage ageiscomputed foreach\nratingvalue.foreachgroup,applying MINtothisaverage agevalueforthe\ngroupwillreturnthesamevalue!Acorrectversionofthisqueryfollows.It\nessentially computes atemporary tablecontaining theaverage ageforeach\nratingvalueandthenfindstherating(s) forwhichthisaverage ageisthe\nminimum.\n7Notallcommercial database systems currently support nestedqueries intheFROMclause.", "196": "162 GHAPTERr5\nr-_ m .\nITheRelational ModelandSQL:Nullvaluesarcnotpartofthebask\nIrelational model. LikeSQL'streatment oftablesasmultisets oftuples,\n~liSisadel~.~~~~r~ ...~~~..\n1~._t_h_e_l_)ru_s_,i_c_l_l1_o_d_e_1. ----'\nSELECT\nFROM\nWHERETemp.rating, Temp.avgage\n(SELECT S.rating, AVG(S.age) ASavgage,\nFROM SailorsS\nGROUPBYS.rating) ASTemp\nTemp.avgage = (SELECT MIN(Temp.avgage) FROMTemp)\nTheanswertothisqueryoninstance 53is(10,25.5).\nAsanexercise, consider whether thefollowing querycomputes thesameanswer.\nSELECT\nFROM\nGROUPBYTemp.rating, MIN(Temp.avgage )\n(SELECT S.rating, AVG(S.age) AS\nFROM SailorsS\nGROUPBYS.rating) ASTemp\nTemp.ratingavgage,\n5.6NULLVALUES\nThusfar,wehaveassumed thatcolumnvaluesinarowarealwaysknown.In\npractice columnvaluescanbeunknown. Forexample, whenasailor,sayDan,\njoinsayachtclub,hemaynotyethavearatingassigned. Sincethedefinition\nfortheSailorstablehasaratingcolumn, whatrowshouldweinsertforDan?\n\\\\Thatisneededhereisaspecialvaluethatdenotesunknown. Suppose theSailor\ntabledefinition wasmodified toincludearnaiden-name column. However, only\nmarried womenwhotaketheirhusband's lastnamehaveamaidenname.For\nwomenwhodonottaketheirhusband's nameandformen,thenw'idcn-nmnc\ncolumnisinapphcable. Again,whatvaluedoweincludeinthiscolumnforthe\nrowrepresenting Dan?\nSQLprovides Hspecialcolumnvaluecallednulltouseinsuchsituations. \"Ve\nusenullwhenthecolumnvalueiseither'lJ,nknown orinapplicable. Usingour\nSailortabledefinition, wemightentertherow(98.Dan,null,39)torepresent\nDan.Thepresence ofnullvaluescomplicates rnanyissues,andweconsider the\nimpactofnullvaluesonSQLinthissection.", "197": "SQL:Q'lteT'leS, ConstT'aJnt.\" Trigger's\n5.6.1Comparisons UsingNullValues\nConsider acomparison suchasrat'in,g=8.IfthisisappliedtotherowforDan,\nisthiscondition trueorfalse'?SinceDan'sratingisunknown, itisreasonable\ntosaythatthiscomparison shouldevaluate tothevalueunknown. Infact,this\nistheC::lseforthecomparisons rating> 8andrating<8&'3well.Perhaps less\nobviously, ifwecompare twonullvaluesusing<,>,=,andsoon,theresultis\nalwaysunknown. Forexample, ifwehavenullintwodistinctrowsofthesailor\nrelation, anycomparison returns unknown.\nSQLalsoprovides aspecialcomparison operator ISNULLtotestwhether a\ncolumn valueisnull;forexample, wecansayratingISNULL,whichwould\nevaluate totrueontherowrepresenting Dan.Wecanalsosayrat'ingISNOT\nNULL,whichwouldevaluate tofalseontherowforDan.\n5.6.2LogicalConnectives AND,OR,andNOT\nNow,whataboutboolean expressions such asmting=8ORage<40and\nmting=8ANDage<40?Considering therowforDanagain,because age\n<40,thefirstexpression evaluates totrueregardless ofthevalueofrating,but\nwhataboutthesecond? Wecanonlysayunknown.\nButthisexample raisesanimportant point~once wehavenullvalues,we\nmustdefinethelogicaloperators AND,OR,andNOTusingathree-val1LCd logicin\nwhichexpressions evaluate totrue,false,orunknown. Weextendtheusu1'11\ninterpretations ofAND,OR,andNOTtocoverthecasewhenoneofthearguments\nisunknown &.,follows. Theexpression NOTunknown isdefinedtobeunknown.\nORoftwoarguments evaluates totrueifeitherargument evaluates totrue,\nandtounknown ifoneargument evaluates tofalseandtheotherevaluates to\nunknown. (Ifbotharguments arefalse,ofcourse, ORevaluates tofalse.) AND\noftwoarguments evaluates tofalseifeitherargument evaluates tofalse,and\ntounknown ifoneargument evaluates tounknown andtheotherevaluates to\ntrueorunknown. (Ifbotharguments aretrue,ANDevaluates totrue.)\n5.6.3ImpactonSQLConstructs\nBoolean expressions ariseinmanycontexts inSQI\",andtheimpactofnv,ll\nvaluesmustberecognized. H)rexample, thequalification intheWHEREclause\neliminates rows(inthecross-product oftablesnamedintheFROMclause)for\nwhichthequalification doesnotevaluate totrue.Therefore, inthepresence\nofnullvalues,anyrowthatevaluates tofalseorunknown iseliminated. Elim\u00ad\ninatingrowsthatevaluate tounknown h&')asubtlebutsignifieant impaeton\nqueries, especially nestedqueriesinvolving EXISTSorUNIQUE.", "198": "164 CHAPTER~5\nAnother issueinthepresence of'nullvaluesisthedefinition ofwhentworows\ninarelationinstance areregarded a.'3duplicates. TheSQLdefinition isthattwo\nrowsareduplicates ifcorresponding columns areeitherequal,orbothcontain\nTrull.Contra ..9tthisdefinition withthefactthatifwecompare twonullvalues\nusing=,theresultisunknown! Inthecontextofduplicates, thiscomparison is\nimplicitly treatedastrue,whichisananomaly.\nAsexpected, thearithmetic operations+,-,*,and/allreturnTmllifoneof\ntheirarguments isnull.However, nullscancausesomeunexpected behavior\nwithaggregate operations. COUNT(*) handles 'nullvaluesjustlikeothervalues;\nthatis,theygetcounted. Alltheotheraggregate operations (COUNT, SUM,AVG,\nMIN,MAX,andvariations usingDISTINCT) simplydiscardnullvalues--thus SUM\ncannotbeunderstood asjusttheaddition ofallvaluesinthe(multi)set of\nvaluesthatitisappliedto;apreliminary stepofdiscarding allnullvaluesmust\nalsobeaccounted for.Asaspecialcase,ifoneoftheseoperators-other than\nCOUNT-isappliedtoonlynullvalues,theresultisagainnull.\n5.6.4OuterJoins\nSomeinteresting variants ofthejoinoperation thatrelyonnullvalues,called\nouterjoins,aresupported inSQL.Consider thejoinoftwotables,saySailors\nMeReserves. TuplesofSailorsthatdonotmatchsomerowinReserves accord\u00ad\ningtothejoincondition cdonotappearintheresult.Inanouterjoin,on\ntheotherhanel,Sailorrowswithout amatching Reserves rowappearexactly\nonceintheresult,withtheresultcolumns inherited fromReserves assigned\nnullvalues.\nInfact,thereareseveralvariants oftheouterjoinidea.Inaleftouterjoin,\nSailorrowswithout amatching Reserves rowappearintheresult,butnotvice\nversa.Inarightouterjoin,Reserves rowswithout amatching Sailorsrow\nappearintheresult,butnotviceversa.Inafullouterjoin,bothSailors\nandReserves rowswithout amatchappearintheresult.(Ofcourse,rowswith\namatchalwaysappearintheresult,forallthesevariants, justliketheusual\njoins,sometimes calledinnerjoins,presented inChapter 4.)\nSQLallowsthedesiredtypeofjointobespecified intheFROMclause. For\nexample, thefollowing querylists(sid,b'id)pairscorresponding tosailorsand\nboatstheyha~ereserved:\nSELECT S.sid,R.bid\nFROM SailorsSNATURAL LEFTOUTERJOINReserves R\nTheNATURAL keyword specifies thatthejoincondition isequality onallcommon\nattributes (inthisexample, sid),andtheWHEREclauseisnotrequired (unless", "199": "Hj5\nwewanttospecifyadditional, non-join conditions). Ontheinstances ofSailors\nandReserves showninFigure5.6,thisquerycomputes theresultshownin\nFigure5.19.\nIsidIbidI\n22101\n31null\n58103\nFigure 5.19LeftOuterJoinofSailo7\"1andRese1<Jesl\n5.6.5Disallowing NullValues\nWecandisallow nullvaluesbyspecifying NOTNULLaspartofthefielddef\u00ad\ninition;forexample, snameCHAR(20) NOTNULL.Inaddition, thefieldsina\nprimary keyarenotallowedtotakeonnullvalues.Thus,thereisanimplicit\nNOTNULLconstraint foreveryfieldlistedinaPRIMARY KEYconstraint.\nOurcoverage ofnullvaluesisfarfromcomplete. Theinterested readershould\nconsultoneofthemanybooksdevoted toSQLforamoredetailed treatment\nofthetopic.\n5.7COMPLEX INTEGRITY CONSTRAINTS INSQL\nInthissectionwediscussthespecification ofcomplex integrity constraints that\nutilizethefullpowerofSQLqueries. Thefeatures discussed inthissection\ncomplement theintegrity constraint features ofSQLpresented inChapter 3.\n5.7.1Constraints overaSingleTable\nWecanspecifycomplex constraints overasingletableusingtableconstraints,\nwhichhavetheformCHECKconditional-expression. Forexample, toensurethat\nratingmustbeanintegerintherange1to10,wecoulduse:\nCREATE TABLESailors(sidINTEGER,\nsnameCHAR(10),\nratingINTEGER,\nageREAL,\nPRIMARY KEY(sid),\nCHECK(rating>=1ANDrating<=10))", "200": "166 CHAPTER*5\nToenforcetheconstraint thatInterlake boatscannotbereserved, wecoulduse:\nCREATE TABLEReserves(sid INTEGER,\nbidINTEGER,\nday DATE,\nFOREIGN KEY(sid)REFERENCES Sailors\nFOREIGN KEY(bid)REFERENCES Boats\nCONSTRAINT noInterlakeRes\nCHECK('Interlake' <>\n(SELECT B.bname\nFROM BoatsB\nWHERE B.bid=Reserves.bid )))\nWhenarowisinserted intoReserves oranexisting rowismodified, thecondi\u00ad\ntionalexpression intheCHECKconstraint isevaluated. Ifitevaluates tofalse,\nthecommand isrejected.\n5.7.2DomainConstraints andDistinctTypes\nAusercandefineanewdomain usingtheCREATE DOMAINstatement, which\nusesCHECKconstraints.\nCREATE DOMAINratingval INTEGER DEFAULT 1\nCHECK(VALUE>=1ANDVALUE<=10)\nINTEGER istheunderlying, orsource,typeforthedomainratingval, and\neveryratingval valuemustbeofthistype.Valuesinratingval arefurther\nrestricted byusingaCHECKconstraint; indefining thisconstraint, weusethe\nkeyword VALUEtorefertoavalueinthedomain. Byusingthisfacility,we\ncanconstrain thevaluesthatbelongtoadomainusingthefullpowerofSQL\nqueries. Onceadomain isdefined, thenameofthedomain canbeusedto\nrestrictcolumnvaluesinatable;wecanusethefollowing lineinaschema\ndeclaration, forexample:\nratingratingval\nTheoptional DEFAULT keyword isusedtoassociate adefaultvaluewithado\u00ad\nmain.Ifthedomainratingval isusedforacolumn insomerelation and\nnovalueisentered forthiscolumninaninserted tuple,thedefaultvalue1\nassociated withratingval isused.\nSQL'ssupport fortheconceptofadomainislimitedinanimportant respect.\nForexample, wecandefinetwodomains calledSailorId andBoatId, each", "201": "iii?\nSQL:1999 Distinct Types: :Manysystems, e.g.,Informix UDSandIBM\nDB2,alreadysupport thisfeature. Withitsintroduction, weexpectthat\nthesupport fordomains willbedeprecated, andeventually eliminated, in\nfutureversions oftheSqLstandard. Itisreallyjustonepartofabroad\nsetofobject-oriented features inSQL:1999, whichwediscussinChapter\n23.\nusingINTEGER astheunderlying type.Theintentistoforceacomparison ofa\nSailorId valuewithaBoatIdvaluetoalwaysfail(sincetheyaredrawnfrom\ndifferent domains); however, sincetheybothhavethesamebasetype,INTEGER,\nthecomparison willsucceed inSqL.Thisproblem isaddressed through the\nintroduction ofdistinct typesinSqL:1999:\nCREATE TYPEratingtype ASINTEGER\nThisstatement definesanewdistincttypecalledratingtype, withINTEGER\nasitssourcetype.Valuesoftyperatingtype canbecompared witheach\nother,buttheycannotbecompared withvaluesofothertypes.Inparticular,\nratingtype valuesaretreatedasbeingdistinctfromvaluesofthesourcetype,\nINTEGER--\u00b7\u00b7\u00b7\u00b7we cannotcompare themtointegers orcombine themwithintegers\n(e.g.,addanintegertoaratingtype value).Ifwewanttodefineoperations\nonthenewtype,forexample, anaveragefunction, wemustdosoexplicitly;\nnoneoftheexisting operations onthesourcetypecarryover. Wediscusshow\nsuchfunctions canbedefinedinSection23.4.1.\n5.7.3Assertions: ICsoverSeveralTables\nTableconstraints areassociated withasingletable,although theconditional\nexpression intheCHECKclausecanrefertoothertables. Tableconstraints\narerequired toholdonlyifthea,ssociated tableisnonempty. Thus,when\naconstraint involves twoormoretables,thetableconstraint mechanism is\nsometimes cumbersome andnotquitewhatisdesired. Tocoversuchsituations,\nSqLsupports thecreation ofassertions, whichareconstraints notassociated\nwithanyone table.\nAsanexample, suppose thatwewishtoenforcetheconstraint thatthenumber\nofboatsplusthenumber ofsailorsshouldbelessthan100.(Thiscondition\nIllightberequired, say,toqualifyasa'smaIl'sailingclub.)Wecouldtrythe\nfollowing tableconstraint:\nCREATE TABLESailors(sidINTEGER,\nsname CHAR(10),", "202": "168 CHAPTER$5\nratingINTEGER,\nageREAL,\nPRIMARY KEY(sid),\nCHECK(rating>=1ANDrating<=10)\nCHECK( (SELECT COUNT(S.sid)FROMSailorsS )\n+ (SELECT COUNT(B.bid)FROMBoatsB )\n<100))\nThissolution suffersfromtwodrawbacks. Itisassociated withSailors, al\u00ad\nthoughitinvolves Boatsinacompletely symmetric way.Moreimportant,\niftheSailorstableisempty,thisconstraint isdefined (asperthesemantics\noftableconstraints) toalwayshold,evenifwehavemorethan100rowsin\nBoats! vVecouldextendthisconstraint specification tocheckthatSailorsis\nnonempty, butthisapproach becomes cumbersome. Thebestsolution isto\ncreateanassertion, asfollows:\nCREATE ASSERTION smallClub\nCHECK((SELECT COUNT(S.sid) FROMSailorsS )\n+ (SELECT COUNT(B.bid)FROMBoatsB)\n<100)\n5.8TRIGGERS ANDACTIVE DATABASES\nAtrigger isaprocedure thatisautomatically invoked bytheDBMSinre\u00ad\nsponsetospecified changes tothedatabase, andistypically specified bythe\nDBA.Adatabase thathasasetofassociated triggers iscalledanactive\ndatabase. Atriggerdescription contains threeparts:\n\u2022Event: Achangetothedatabase thatactivates thetrigger.\n..Condition: Aqueryortestthatisrunwhenthetriggerisactivated.\n..Action: Aprocedure thatisexecuted whenthetriggerisactivated and\nitscondition istrue.\nAtriggercanbethought ofasa'daemon' thatmonitors adataba.se, andisexe\u00ad\ncutedwhenthedatabase ismodified inawaythatmatches theeventspecifica\u00ad\ntion.Aninsert,delete,orupdatestatement couldactivate atrigger,regardless\nofwhichuserorapplication invokedtheactivating statement; usersmaynot\nevenbeawarethatatriggerwa.'3executed asasideeffectoftheirprogram.\nAcondition inatriggercanbeatrue/false statement (e.g.,allemployee salaries\narelessthan$100,000) oraquery.Aqueryisinterpreted astrueiftheanswer", "203": "SQL:Que'ries, Constrairds, TriggeTs It>9\nsetisnonempty andfalseifthequeryha.')noanswers.Ifthecondition part\nevaluates totrue,theactiona.,sociated withthetriggerisexecuted.\nAtriggeractioncanexamine theanswers toth(~queryinthecondition part\nofthetrigger,refertooldandnewvaluesoftuplesmodified bythestatement\nactivating thetrigger,execute Hewqueries,andmakechangestothedatabase.\nInfact,anactioncanevenexecute aseriesofdata-definition commands (e.g.,\ncreatenewtables,changeauthorizations) andtransaction-oriented commands\n(e.g.,commit) orcallhost-language procedures.\nAnimportant issueiswhentheactionpartofatriggerexecutes inrelation to\nthestatement thatactivated thetrigger. Forexample, astatement thatinserts\nrecordsintotheStudents tablemayactivate atriggerthatisusedtomaintain\nstatistics onhowmany studen~s younger than18areinserted atatimebya\ntypicalinsertstatement. Depending onexactlywhatthetriggerdoes,wemay\nwantitsactiontoexecute beforechanges aremadetotheStudents tableor\nafterwards: Atriggerthatinitializes avariable usedtocountthenurnber of\nqualifying insertions shouldbeexecuted before,andatriggerthatexecutes once\nperqualifying inserted recordandincrements thevariable shouldbeexecuted\naftereachrecordisinserted (because wemaywanttoexamine thevaluesin\nthenewrecordtodetermine theaction).\n5.8.1Examples ofTriggers inSQL\nTheexamples showninFigure5.20,written usingOracleServersyntaxfor\ndefining triggers, illustrate thebasicconcepts behindtriggers. (TheSQL:1999\nsyntaxforthesetriggers issimilar; wewillseeanexample usingSQL:1999\nsyntaxshortly.) ThetriggercallediniLcount initializes acountervariable be\u00ad\nforeeveryexecution ofanINSERTstatement thataddstuplestotheStudents\nrelation. Thetriggercalledincr_count increments thecounterforeachinserted\ntuplethatsatisfies thecondition age<18.\nOneoftheexample triggersinFigure5.20executes beforetheaetivating state\u00ad\nment,andtheotherexample executes afterit.Atriggercanalsobescheduled\ntoexecute insteadoftheactivating statement; orindeferred fashion, atthe\nendofthetransaction containing theactivating statement; orinasynchronous\nfashion, aspartofaseparate transaction.\nTheexample inFigure5.20illustrates another pointabouttriggerexecution:\nAusermustbeabletospecifywhether atriggeristobeexecuted onceper\nmodified recordoronceperactivating statement. Iftheactiondepends onin\u00ad\ndividual changed records, forexample, wehavetoexamine theagefieldofthe\ninserted Students recordtodecidewhether toincrement thecount,thetrigger-", "204": "170 CHAPTER 5\nCREATE TRIGGER iniLeount BEFORE INSERT ONStudents 1*Event*1\nDECLARE\ncountINTEGER:\nBEGIN 1*Action*I\ncount:=0:\nEND\nCREATE TRIGGER incLcount AFTERINSERT ONStudents 1*Event*1\nWHEN(new.age<18)1*Condition; 'new'isjust-inserted tuple*1\nFOREACHROW\nBEGIN 1*Action; aprocedure inOracle's PL/SQL syntax*1\ncount:=count+1;\nEND\nFigure5.20Examples Illustrating Triggers\ningeventshouldbedefinedtooccurforeachmodified record;theFOREACH\nROWclauseisusedtodothis.Suchatriggeriscalledarow-level trigger. On\ntheotherhand,theiniLcount triggerisexecuted justonceperINSERTstate\u00ad\nment,regardless ofthenumber ofrecordsinserted, because wehaveomitted\ntheFOREACHROWphrase.Suchatriggeriscalledastatement-level trigger.\nInFigure5.20,thekeyword newreferstothenewlyinserted tuple.Ifanexisting\ntupleweremodified, thekeywords oldandnewcouldbeusedtorefertothe\nvaluesbeforeandafterthemodification. SQL:1999 alsoallowstheactionpart\nofatriggertorefertothesetofchanged records, ratherthanjustonechanged\nrecordatatime.Forexample, itwouldbeusefultobeabletorefertotheset\nofinserted Students recordsinatriggerthatexecutes onceaftertheINSERT\nstatement; wecouldcountthenumberofinserted recordswithage<18through\nanSQLqueryoverthisset.SuchatriggerisshowninFigure5.21andisan\naJternative tothetriggersshowninFigure5.20.\nThedefinition inFigure5.21usesthesyntaxofSQL:1999,inordertoillustrate\nthesimilarities anddifferences withrespecttothesyntaxusedinatypical\ncurrentDBMS.Thekeyword clauseNEWTABLEenablesustogiveatablename\n(InsertedTuples) tothesetofnewlyinserted tuples.TheFOREACHSTATEMENT\nclausespecifies astatement-level triggerandcanbeomitted because itisthe\ndefault. Thisdefinition doesnothaveaWHENclause;ifsuchaclauseisincluded,\nitfollowstheFOREACHSTATEMENT clause,justbeforetheactionspecification.\nThetriggerisevaluated onceforeachSQLstatement thatinsertstuplesinto\nStudents, andinsertsasingletupleintoatablethatcontains statistics onmod-", "205": "S(JL:(JneTie,s, Constraints, Triggers 171\nifications todatabase tables.Thefirsttwofieldsofthetuplecontainconstants\n(identifying themodified table,Students, andthekindofmodifying statement,\nanINSERT), andthethirdfieldisthenumber ofinserted Students tupleswith\nage<18.(ThetriggerinFigure5.20onlycomputes thecount;anadditional\ntriggerisrequired toinserttheappropriate tupleintothestatistics table.)\nCREATE TRIGGER seLcount AFTERINSERT ONStudents j*Event*j\nREFERENCING NEWTABLE ASInsertedTuples\nFOREACHSTATEMENT\nINSERT j*Action *j\nINTOStatisticsTable(Modified Table,ModificationType, Count)\nSELECT'Students', 'Insert', COUNT*\nFROMInsertedTuples I\nWHERE1.age<18\nFigure 5.21Set-Oriented Trigger\n5.9DESIGNING ACTIVE DATABASES\nTriggers offerapowerful mechanism fordealingwithchanges toadatabase,\nbuttheymustbeusedwithcaution. Theeffectofacollection oftriggers can\nbeverycomplex, andmaintaining anactivedatabase canbecomeverydifficult.\nOften,ajudicious useofintegrity constraints canreplacetheuseoftriggers.\n5.9.1WhyTriggers CanBeHardtoUnderstand\nInanactivedatabase system, whentheDBMSisabouttoexecuteastatement\nthatmodifies thedataba.se, itcheckswhether sometriggerisactivated bythe\nstatement. Ifso,theDBMSprocesses thetriggerbyevaluating itscondition\npart,andthen(ifthecondition evaluates totrue)executing itsactionpart.\nIfastatement activates morethanonetrigger,theDBMStypically processes\nallofthem,insennearbitrary order.Animportant pointisthattheexecution\noftheactionpartofatriggercouldinturnactivate another trigger. Inpar\u00ad\nticular,theexecution oftheactionpartofatriggercoulda,gainactivate the\nsarnetrigger;suchtriggers \"u'ecalledrecursive triggers. Thepotential for\nsuchchainactivations andtheunpredictable orderinwhichaDBMSprocesses\nactivated triggers canmakeitdifficult tounderstand theeffectofacollection\noftriggers.", "206": "172 CHAPTER'5\n5.9.2Constraints versusTriggers\nAcommon useoftriggers istomaintain databa..'3e consistency, andinsuch\ncases,weshouldalwaysconsider whether usinganintegrity constraint (e.g.,a\nforeignkeyconstraint) achieves thesamegoals.Themeaning ofaconstraint is\nnotdefinedoperationally, unliketheeffectofatrigger.Thisproperty makesa\nconstraint easiertounderstand, andalsogivestheDBMSmoreopportunities\ntooptimize execution. Aconstraint alsoprevents thedatafrombeingmade\ninconsistent byanykindofstatement, whereas atriggerisactivated byaspecific\nkindofstatement (INSERT, DELETE, orUPDATE). Again,thisrestriction makes\naconstraint easiertounderstand.\nOntheotherhand,triggers allowustomaintain database integrity inmore\nflexibleways,asthefollowing examples illustrate.\n\u2022Suppose thatwehaveatablecalledOrderswithfieldsiternid,quantity,\ncustornerid, andunitprice. Whenacustomer placesanorder,thefirst\nthreefieldvaluesarefilledinbytheuser(inthisexample, asalesclerk).\nThefourthfield'svaluecanbeobtained fromatablecalledItems,butit\nisimportant toincludeitintheOrderstabletohaveacomplete recordof\ntheorder,incasethepriceoftheitemissubsequently changed. Wecan\ndefineatriggertolookupthisvalueandincludeitinthefourthfieldof\nanewlyinserted record.Inaddition toreducing thenumber offieldsthat\ntheclerkh&'3totypein,thistriggereliminates thepossibility ofanentry\nerrorleadingtoaninconsistent priceintheOrderstable.\n\u2022Continuing withthisexample, wemaywanttoperform someadditional\nactionswhenanorderisreceived. Forexample, ifthepurchase isbeing\ncharged toacreditlineissuedbythecompany, wemaywanttocheck\nwhether thetotalcostofthepurch&'3e iswithinthecurrentcreditlimit.\nWecanuseatriggertodothecheck;indeed,wecanevenuseaCHECK\nconstraint. Usingatrigger,however, allowsustoimplement moresophis\u00ad\nticatedpoliciesfordealingwithpurchases thatexceedacreditlimit.For\ninstance, wemayallowpurchases thatexceedthelimitbynomorethan\n10%ifthecustomer hasdealtwiththecompany foratleastayear,and\naddthecustomer toatableofcandidates forcreditlimitincreases.\n5.9.3OtherUsesofTriggers\n.l\\'Ianypotential usesoftriggersgobeyondintegrity maintenance. Triggers can\nalertuserstounusual events (&'3reflected inupdates tothedataba..<;e). For\nexample, wemaywanttocheckwhether acustomer placinganorderh&smade\nenoughpurchases inthepastmonthtoqualifyforanadditional discount; if\nso,thesalesclerkmustbeinformed sothathe(orshe)cantellthecustomer", "207": "SQL:Q'UeT'Ze,S, CO'l/stmints, Tr'iggers\nandpossibly generate additional sales!\\Vecanrela;ythisinformation byusing\natriggerthatchecksrecentpurcha.ses andprintsamessage ifthecustomer\nqualifies forthediscount.\nTriggers cangenerate alogofeventstosupport auditing andsecurity checks.\nForexample, eachtimeacustomer placesanorder,wecancreatearecordwith\nthecustomer's IDandcurrentcreditlimitandinsertthisrecordinacustomer\nhistorytable.Subsequent analysis ofthistablemightsuggestcandidates for\nanincreased creditlimit(e.g.,customers whohaveneverfailedtopayabillon\ntimeandwhohavecomewithin10%oftheircreditlimitatleastthreetimes\ninthelastmonth).\nAstheexamples inSection5.8illustrate, wecanusetriggerstogatherstatistics\nontableaccesses andmodifications. Somedatabase systems evenusetriggers\ninternally asthebasisformanaging replicasofrelations (Section 22.11.1). Our\nlistofpotential usesoftriggers isnotexhaustive; forexample, triggers have\nalsobeenconsidered forworkflow management andenforcing business rules.\n5.10REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022WhatarethepartsofabasicSQLquery?Aretheinputandresulttables\nofanSQLquerysetsormultisets? Howcanyouobtainasetoftuplesas\ntheresultofaquery?(Section 5.2)\n\u2022Whatarerangevariables inSQL?Howcanyougivenamestooutput\ncolumns inaquerythataredefinedbyarithmetic orstringexpressions?\nWhatsupport doesSQLofferforstringpatternmatching? (Section 5.2)\n\u2022Whatoperations doesSQLprovide over(multi)sets oftuples,andhow\nwouldyouusetheseinwritingqueries? (Section 5.3)\n\u2022vVhatarenestedqueries? Whatiscorrelation innestedqueries? How\nwouldyouusetheoperators IN,EXISTS, UNIQUE, ANY,andALLinwriting\nnestedqueries? Whyaretheyuseful?Illustrate youranswerbyshowing\nhowtowritethedivisionoperator inSQL.(Section 5.4)\n\u2022\\Vhataggregate operators doesSQLsupport? (Section 5.5)\n\u2022\\i\\Thatisgmvping? Isthereacounterpart inrelational algebra? Explain\nthisfeature,anddiscllsstheinteraction oftheHAVINGandWHEREclauses.\nMention anyrestrictions thatmllstbesatisfied bythefieldsthatappearin\ntheGROUP BYclause.(Section 5.5.1)", "208": "174 CHAPTER?5\n\u2022\\Vhatarenullvalues? Aretheysupported intherelational model, &'3\ndescribed inChapter 3'1Hc)\\vdotheyaffectthemeaning ofqueries? Can\nprimary keyfieldsofatablecontainnullvalues?(Section 5.6)\n\u2022vVhattypesofSQLconstraints canbespecified usingthequerylanguage?\nCanyouexpressprimary keyconstraints usingoneofthesenewkinds\nofconstraints? Ifso,whydoesSQLprovide foraseparate primary key\nconstraint syntax?(Section 5.7)\n\u2022Whatisatrigger,andwhatareitsthreeparts?vVhatarethedifferences\nbetween row-level andstatement-level triggers? (Section 5.8)\n\u2022\\Vhycantriggersbehardtounderstand? Explain thedifferences between\ntriggersandintegrity constraints, anddescribe whenyouwouldusetrig\u00ad\ngersoverintegrity constrains andviceversa.Whataretriggers usedfor?\n(Section 5.9)\nEXERCISES\nOnlinematerial isavailable forallexercises inthischapter onthebook'swebpage at\nhttp://www.cs.wisc.edu/-dbbOok\nThisincludes scriptstocreatetablesforeachexercise forusewithOracle,IBMDB2,Microsoft\nSQLServer,andMySQL.\nExercise 5.1Consider thefollowing relations:\nStudent(snum: integer, sname:string, major:string, level:string, age:integer)\nClass(name:string, meets_at: time,room:string, fid:integer)\nEnrolled(snum: integer, cname:string)\nFaculty (fid:integer, fnarne:string, deptid:integer)\nThemeaning oftheserelations isstraightforward; forexample, Enrolled hasonerecordper\nstudent-class pairsuchthatthestudent isenrolled intheclass.\nWritethefollowing queriesinSQL.Noduplicates shouldbeprintedinanyoftheans\\vers.\n1.Findthenari1esofallJuniors(level=JR)whoareenrolled inaclasstaughtby1.Teach.\n2.Findtheageoftheoldeststudent whoiseitheraHistorymajororenrolled inacourse\ntaughtbyI.Teach.\n:3.FindthenamesofallclassesthateithermeetinroomR128orhavefiveormorestudents\nenrolled.\n4.FindtheIlamesofallstudents whoareenrolled intwoclassesthatmeetatthesame\ntime.", "209": "SCJL:Queries, ConstrainLslTriggers 175t\n5.Findthenamesoffacultymembers \\vhoteachineveryroominwhichsomeclassis\ntaught.\n6.Findthenamesoffacultymembers for\\vhornthecombined enrollment ofthecourses\nthattheyteachislessthanfive.\n7.Printthelevelandtheaverage ageofstudents forthatlevel,foreachlevel.\n8.Printthelevelandtheaverage ageofstudents forthatlevel,foralllevelsexceptJR.\n9.Foreachfacultymember thathastaughtclassesonlyinroomR128,printthefaculty\nmember's nameandthetotalnumber ofclassessheorhehastaught.\n10.Findthenamesofstudents enrolled inthemaximum number ofclasses.\n11.Findthenamesofstudents notenrolled inanyclass.\n12.Foreachagevaluethatappears inStudents, findthelevelvaluethatappears mostoften.\nForexample, iftherearemoreFRlevelstudents aged18thanSR,JR,orSOstudents\naged18,youshouldprintthepair(18,FR).\nExercise 5.2Consider thefollowing schema:\nSuppliers( sid:integer, sname:string, address: string)\nParts(pid: integer, pname:string, color:string)\nCatalog( sid:integer, pid:integer, cost:real)\nTheCatalog relation liststhepricescharged forpartsbySuppliers. Writethefollowing\nqueriesinSQL:\n1.Findthepnamesofpartsforwhichthereissomesupplier.\n2.Findthesnamesofsuppliers whosupplyeverypart.\n3.Findthesnamesofsuppliers whosupplyeveryredpart.\n4.Findthepnamcs ofpartssupplied byAcmeWidget Suppliers andnooneelse.\n5.Findthesidsofsuppliers whochargemoreforsomepartthantheaverage costofthat\npart(averaged overallthesuppliers whosupplythatpart).\n6.Foreachpart,findthesnameofthesupplier whochargesthemostforthatpart.\n7.Findthesidsofsuppliers whosupplyonlyredparts.\n8.Findthesidsofsuppliers whosupplyaredpartanelagreenpart.\n9.Findthesirl'iofsuppliers whosupplyaredpartoragreenpart.\n10.Foreverysupplier thatonlysupplies greenparts,printthenameofthesupplier andthe\ntotalnumber ofpartsthatshesupplies.\n11.Foreverysupplier thatsupplies agreenpartandareelpart,printthenameandprice\nofthemostexpensive partthatshesupplies.\nExercise 5.3Thefollowing relations keeptrackofairlineflightinformation:\nFlights(.flno: integer, from:string, to:string, di8tance: integer,\nrlepa7'i:s: time, a'T'l~ivcs: time, Tn~ice:integer)\nAircraft( aid:integer, aname:string, cTllisingT'ange: integer)\nCertified( eid:integer, aid:integer)\nEmployees( eid:integer Iename:string, salary:integer)", "210": "176 CHAPTE&5\nNotethattheEmployees relation describes pilotsandotherkindsofemployees aswell;every\npilotiscertified forsomeaircraft, andonlypilotsarecertified tofly.Writeeachofthe\nfollO\\ving queriesinSQL.(Additional queriesusingthesameschemaarelistedintheexereises\nfoT'Chapter4\u00b7)\n1.Findthenamesofaircraftsuchthatallpilotscertified tooperatethemearnmorethan\n$80,000.\n2.Foreachpilotwhoiscertified formorethanthreeaircraft, findtheeidandthemaximum\ncruisingmnge oftheaircraftforwhichsheorheiscertified.\n3.Findthenamesofpilotswhosesalaryislessthanthepriceofthecheapest routefrom\nLosAngeles toHonolulu.\n4.Forallaircraftwithcmisingmnge over1000miles,findthenameoftheaircraftandthe\naveragesalaryofallpilotscertified forthisaircraft.\n5.Findthenamesofpilotscertified forsomeBoeingaircraft.\n6.FindtheaidsofallaircraftthatcanbeusedonroutesfromLosAngelestoChicago.\n7.Identify theroutesthatcanbepilotedbyeverypilotwhomakesmorethan$100,000.\n8.Printtheenamesofpilotswhocanoperate planeswithcruisingmnge greaterthan3000\nmilesbutarenotcertified onanyBoeingaircraft.\n9.Acustomer wantstotravelfromMadison toNewYorkwithnomorethantwochanges\nofflight.Listthechoiceofdeparture timesfromMadison ifthecustomer wantstoarrive\ninNewYorkby6p.m.\n10.Compute thedifference between theaverage salaryofapilotandtheaverage salaryof\nallemployees (including pilots).\n11.Printthenameandsalaryofeverynonpilotwhosesalaryismorethantheaveragesalary\nforpilots.\n12.Printthenamesofemployees whoarecertified onlyonaircrafts withcruising range\nlongerthan1000miles.\n13.Printthenamesofemployees whoarecertified onlyonaircrafts withcruising range\nlongerthan1000miles,butonatleasttwosuchaircrafts.\n14.Printthenamesofemployees whoarecertified onlyonaircrafts withcruising range\nlongerthan1000milesandwhoarecertified onsomeBoeingaircraft.\nExercise 5.4Consider thefollowing relational schema. Anemployee canworkinmorethan\nonedepartment; thepcLtime fieldoftheWorksrelation showsthepercentage oftimethata\ngivenemployee worksinagivendepartment.\nEmp(eid: integer, ename:string, age:integer, salary:real)\nWorks(eid: integer, did:integer, pet_time: integer)\nDept(did.\u00b7 integer, budget:real,managerid: integer)\nWritethefollowing queriesinSQL:\n1.Printthenamesandagesofeachemployee whoworksinboththeHardware department\nandtheSoftware department.\n2.Foreachdepartment withmorethan20full-time-equivalent employees (i.e.,wherethe\npart~time andfull-time employees adduptoatleastthatmanyfull-time employees),\nprintthedidtogether withthenumber ofemployees thatworkinthatdepartment.", "211": "SQL:quehes, ConstTaint.s, Triggers 117\n,,\n18jones 3 30.0\n~--jonah 6 56.0 41\n22ahab 7 44.0\n63moby'mdl 15.0Is'idIsnameImting,ageI\nFigure5.22AnInstance ofSailors\n3.Printthenameofeachemployee whosesalaryexceedsthebudgetofallofthedepart\u00ad\nmentsthatheorsheworksin.\n4.Findthemanagerids ofmanagers whomanage onlydepartments withbudgets greater\nthan$1million.\n5.Findtheenamesofmanagers whomanagethedepartments withthelargestbudgets.\n6.Ifamanager manages morethanonedepartment, heorshecontrolsthesumofallthe\nbudgets forthosedepartments. Findthemanagerids ofmanagers whocontrolmorethan\n$5million.\n7.Findthemanagerids ofmanagers whocontrolthelargestamounts.\n8.Findtheenamesofmanagers whomanage onlydepartments withbudgets largerthan\n$1million,butatleastonedepartment withbudgetlessthan$5million.\nExercise 5.5Consider theinstance oftheSailorsrelation showninFigure5.22.\n1.WriteSQLqueriestocompute theaverage rating,usingAVGjthesumoftheratings,\nusingSUM;andthenumber ofratings, usingCOUNT.\n2.Ifyoudividethesumjustcomputed bythecount,wouldtheresultbethesameasthe\naverage? Howwouldyouranswerchangeifthesestepswerecarriedoutwithrespectto\ntheagefieldinsteadofmting?\n~3.Consider thefollowing query:Findthenamesofsailorswithahigherratingthanall\nsailorswithage<21.Thefollowing twoSQLqueriesattempt toobtaintheanswer\ntothisquestion. Dotheybothcompute theresult?Ifnot,explainwhy.Underwhat\nconditions wouldtheycompute thesameresult?\nS2.rating\nSailorsS2\nS2.age<21SELECT*\nFROM SailorsS\nWHERES.rating>ANY(SELECT\nFROM\n\\-/HERESELECT S.sname\nFROM SailorsS\nWHERE NOTEXISTS (SELECT*\nFROM SailorsS2\nWHERE S2.age<21\nANDS.rating<=S2.rating )\n4.Consider theinstance ofSailorsshowninFigure5.22.Letusdefineinstance SlofSailors\ntoconsistofthefirsttwotuples,instance S2tobethelasttwotuples,andStobethe\ngiveninstance.", "212": "178 CHAPTER'5\nShowtheleftouterjoinofSwithitself,withthejoincondition being8'id=sid.\n(b)ShowtherightouterjoinofS,vithitself,withthejoincondition beings'id=sid.\n(c)ShowthefullouterjoinofSwithitself,withthejoincondition beingS'id=sid.\n(d)ShowtheleftouterjoinofSlwithS2,withthejoincondition beingsid=sid.\n(e)ShowtherightouterjoinofSlwithS2,withthejoincondition beingsid=sid.\n(f)Showthefullouterjoinof81withS2,withthejoincondition beingsid=sid.\nExercise 5.6Answerthefollowing questions:\n1.Explain theterm'impedance mismatch inthecontext ofembedding SQLcommands ina\nhostlanguage suchasC.\n2.Howcanthevalueofahostlanguage variable bepassedtoanembedded SQLcommand?\n3.Explain theWHENEVER command's useinerrorandexception handling.\n4.Explain theneedforcursors.\n5.Giveanexample ofasituation thatcallsfortheuseofembedded SQL;thatis,interactive\nuseofSQLcommands isnotenough, andsomehostlang;uage capabilities areneeded.\n6.Writea Cprogram withembedded SQLcommands toaddress yourexample inthe\nprevious answer.\n7.Writea Cprogram withembedded SQLcommands tofindthestandard deviation of\nsailors'ages.\n8.Extendtheprevious program tofindallsailorswhoseageiswithinonestandard deviation\noftheaverage ageofallsailors.\n9.Explain howyouwouldwritea Cprogram tocompute thetransitive closureofagraph,\nrepresented asan8QLrelation Edges(jrom, to),usingembedded SQLcommands. (You\nneednotwritetheprogram, justexplainthemainpointstobedealtwith.)\n10.Explain thefollowing termswithrespecttocursors: 'tlpdatability, sens,itivity, andscml\u00ad\nlability.\n11.DefineacursorontheSailorsrelationthatisupdatable, scrollable, andreturnsanswers\nsortedbyage.WhichfieldsofSailorscansuchacursornotupdate? Why?\n12.Giveanexample ofasituation thatcallsfordynamic 8QL;thatis,evenembedded SQL\nisnotsufficient.\nExercise 5.7Consider thefollowing relational schemaandbrieflyanswerthequestions that\nfollow:\nEmp(eid:integer, cname:string, age:integer, salary:real)\n\\Vorks(eid:integer, did:integer, pet-time: integer)\nDept(did.'integer, budget: re~l,managerid: integer)\n1.Defineatableconstraint onEmpthatwillensurethatever)'employee makesatleELst\n$10,000.\n2.Defineatableconstraint onDeptthatwillensurethatallmanagers haveage>;'W.\n:3.Defineanassertion onDeptthatwillensurethatallmanagers haveage>30.Compare\nthisassertion withtheequivalent tableconstraint. Explain whichisbetter.", "213": "SQL:(JwTies, Const7nint.s, Triggers 119\n4.vVriteSQLstatements todeleteallinformation aboutemployees whosesalaries exceed\nthatofthemanager ofoneormoredepartments thattheyworkin.Besuretoensure\nthatalltherelevant integrity constraints aresatisfied afteryourupdates.\nExercise 5.8Consider thefollowing relations:\nStudent (sn'llrn:integer, sname:string, rnajor:string,\nlevel:string, age:integer)\nClass(narne: string, rneets_at: time,roorn:string, fid:integer)\nEnrolled (snurn:integer, cnarne:string)\nFaculty(fid:integer, fnarne:string, deptid:integer)\nThemeaning oftheserelations isstraightforward; forexample, Enrolled hasonerecordper\nstudent-class pairsuchthatthestudent isenrolled intheclass.\n1.WritetheSQLstatements required tocreatetheserelations, including appropriate ver\u00ad\nsionsofallprimary andforeignkeyintegrity constraints.\n2.Express eachofthefollowing integrity constraints inSQLunlessitisimplied bythe\nprimary andforeignkeyconstraint; ifso,explain howitisimplied.Iftheconstraint\ncannotbeexpressed inSQL,sayso.Foreachconstraint, statewhatoperations (inserts,\ndeletes,andupdates onspecificrelations) mustbemonitored toenforcetheconstraint.\n(a)Everyclasshasaminimum enrollment of5students andamaximum enrollment\nof30students.\n(b)Atleastonedassmeetsineachroom.\n(c)Everyfacultymember mustteachatleasttwocourses.\n(d)Onlyfacultyinthedepartment withdeptid=33 teachmorethanthreecourses.\n(e)Everystudent mustbeenrolled inthecoursecalledlVlathlOl.\n(f)Theroominwhichtheearliest scheduled class(i.e.,theclasswiththesmallest\nnucets_at value)meetsshouldnotbethesameastheroominwhichthelatest\nscheduled classmeets.\n(g)Twoclassescannotmeetinthesameroomatthesametime.\n(h)Thedepartment withthemostfacultymembers musthavefewerthantwicethe\nnumber offacultymembers inthedepartment withthefewestfacultymembers.\n(i)Nodepartment canhavemorethan10facultymembers.\n(j)Astudent cannotaddmorethantwocoursesatatime(i.e.,inasingleupdate).\n(k)Thenumber ofCSmajorsmustbemorethanthenumber ofMathmajors.\n(I)Thenumber ofdistinct coursesinwhichCSmajorsareenrolled isgreaterthanthe\nnumber ofdistinct coursesinwhichMathmajorsareenrolled.\n(rn)Thetotalenrollment incoursestaughtbyfacultyinthedepartment withdeptid=SS\nisgreaterthanthenumber ofivlathmajors.\n(n)TherelIlUstbeatleastoneCSmajorifthereareanystudents whatsoever.\n(0)Facultymembers fromdifferent departments cannotteachinthesameroom.\nExercise 5.9Discuss thestrengths andweaknesses ofthetriggermechanism. Contrast\ntriggers withotherintegrity constraints supported bySQL.", "214": "180\nExercise 5.10Consider thefollowing relational schema. Anemployee canworkinmore\nthanonedepartment; thepel-time fieldofthe\\Vorksrelation showsthepercentage oftime\nthatagivenemployee worksinagivendepartment.\nEmp(eid:integer, ename:string, age:integer, salary:real)\n\\Vorks(eid:integer, did:integer, pcLtime: integer)\nDept(did:integer, budget:real,mana,gerid: integer)\n\\VriteSQL-92 integrity constraints (domain, key,foreignkey,orCHECKconstraints; orasser\u00b7\u00b7\nbons)orSQL:1999 triggerstoensureeachofthefollowing requirements, considered indepen\u00ad\ndently.\n1.Employees mustmakeaminimum salaryof$1000.\n2.Everymanager mustbealsobeanemployee.\n3.Thetotalpercentage ofaUappointments foranemployee mustbeunder100%.\n4.Amanager mustalwayshaveahighersalarythananyemployee thatheorshemanages.\n5.Whenever anemployee isgivenaraise,themanager's salarymustbeincreased tobeat\nleastasmuch.\n6.Whenever anemployee isgivenaraise,themanager's salarymustbeincreased tobe\natleastasmuch.Further, whenever anemployee isgivenaraise,thedepartment's\nbudgetmustbeincreased tobegreaterthanthesumofsalariesofaUemployees inthe\ndepartment.\nPROJECT-BASED EXERCISE\nExercise 5.11Identify thesubsetofSQLqueriesthataresupported inMinibase.\nBIBLIOGRAPHIC NOTES\nTheoriginal versionofSQLwasdeveloped asthequerylanguage forIBM'sSystemRproject,\nanditsearlydevelopment canbetracedin[107,151].SQLhassincebecome themost\nwidelyusedrelational querylanguage, anditsdevelopment isnowsubjecttoaninternational\nstandardization process.\nAveryreadable andcomprehensive treatment ofSQL-92 ispresented byMeltonandSimon\nin[524],andthecentralfeatures ofSQL:1999 arecovered in[525].Wereferreaderstothese\ntwobooksforanauthoritative treatment ofSQL.AshortsurveyoftheSQL:1999 standard\nispresented in[237].Dateoffersaninsightful critique ofSQLin[202].Although someof\ntheproblems havebeenaddressed inSQL-92 andlaterrevisions, othersremain. Aformal\nsemantics foralargesubsetofSQLqueriesispresented in[560].SQL:1999 isthecurrentInter\u00ad\nnational Organization forStandardization (ISO)andAmerican National Standards Institute\n(ANSI)standard. MeltonistheeditoroftheANSIandISOSQL:1999 standard, document\nANSI/ISO/IEe 9075-:1999. Thecorresponding ISOdocument isISO/lEe 9075-:1999. A\nsuccessor, planned for2003,buildsonSQL:1999 SQL:200:3 isclosetoratification (a.sofJune\n20(2).DraftsoftheSQL:200:3 deliberations areavailable atthefollowing URL:\nftp://sqlstandards.org/SC32/", "215": "SqL:queries, COll./:!tTo/inLs, Triggers lSI\n[774]contains acollection ofpapersthatcovertheactivedatabase field.[794Jincludes a\ngoodin-depth introduction toactiverules,covering smnantics, applications anddesignissues.\n[251]discusses SQLextensions forspecifying integrity constraint checksthrough triggers.\n[123]alsodiscusses aprocedural mechanism, calledanalerter,formonitoring adatabase.\n[185]isarecentpaperthatsuggests howtriggers mightbeincorporated intoSQLextensions.\nInfluential activedatabase prototypes includeAriel[366],HiPAC[516J,ODE[18],Postgres\n[722],RDL[690],andSentinel [36].[147]compares variousarchitectures foractivedatabase\nsystems.\n[32]considers conditions underwhichacollection ofactiveruleshasthesamebehavior,\nindependent ofevaluation order.Semantics ofactivedatabases isalsostudied in[285]and\n[792].Designing andmanaging complex rulesystems isdiscussed in[60,225].[142]discusses\nrulemanagement usingChimera, adatamodelandlanguage foractivedatabase systems.", "216": "1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1", "217": "PARTII\nAPPLICATION DEVELOPMENT", "218": "", "219": "6\nDATABASE APPLICATION\nDEVELOPMENT\n..Howdoapplication programs connecttoaDBMS?\n..Howcanapplications manipulate dataretrieved fromaDBMS?\n..Howcanapplications modifydatainaDBMS?\n..Whatarecursors?\n..WhatisJDBCandhowisitused?\n..WhatisSQLJandhowisitused?\n..Whatarestoredprocedures?\n..Keyconcepts: Embedded SQL,Dynamic SQL,cursors; JDBC,\nconnections, drivers, ResultSets, java.sql, SQLJ;storedprocedures,\nSQL/PSM\nHf~profitsmostwhoservesbest.\n------Ivlotto forRotaryInternational\nInChapter 5,welookedatawiderangeofSQLqueryconstructs, treating SQL\nasanindependent language initsownright.Arelational DBMSsupports an\ninteuLctive SqLinterface, anduserscandirectly enterSQLcommands. This\nsimpleapproach isfineaslongasthetaskathandcanbeaccomplished entirely\nwithSQLcormnands. Inpractice, weoftenencounter situations inwhichwe\nneedthegreaterflexibility ofageneral-purpose programming language inaddi\u00ad\ntiontothedatamanipulation facilities provided bySQL.Forexample, wernay\nwanttointegrate adatabase application withanicegraphical userinterface,\norwemaywanttointegrate withotherexisting applications.\n185", "220": "186 CHAPTEFt 6\nJ\nApplications thatrelyontheDBMStomanagedatarunasseparate processes\nthatconnecttotheDBlvIStointeract withit.Onceaconnection isestablished,\nSQLcommands canbeusedtoinsert,delete,andmodifydata.SQLqueriescan\nbeusedtoretrievedesireddata.butweneedtobridgeanimportant difference\ninhowadatabase systemseesdataandhowanapplication program ina\nlanguage likeJavaorCseesdata:Theresultofadatabase queryisaset(or\nmultiset) orrecords, hutJavahasnosetormultiset datatype.Thismismatch\nisresolved through additional SQLconstructs thatallowapplications toobtain\nahandleonacollection anditerateovertherecordsoneatatime.\nvVeintroduce Embedded SQL,Dynamic SQL,andcursorsinSection6.1.Em\u00ad\nbeddedSQLallowsustoaccessdatausingstaticSQLqueriesinapplication\ncode(Section 6.1.1);withDynamic SQL,wecancreatethequeriesatrun-time\n(Section 6.1.3).Cursors bridgethegapbetween set-valued queryanswers and\nprogramming languages thatdonotsupport set-values (Section 6.1.2).\nTheemergence ofJavaasapopular application development language, espe\u00ad\nciallyforInternet applications, hasmadeaccessing aDBMSfromJavacodea\nparticularly important topic.Section6.2coversJDBC,aprograruming inter\u00ad\nfacethatallowsustoexecute SQLqueriesfromaJavaprogram andusethe\nresultsintheJavaprogram. JDBCprovides greaterportability thanEmbed\u00ad\ndedSQLorDynamic SQL,andofferstheabilitytoconnect toseveralDBMSs\nwithout recompiling thecode.Section6.4coversSQLJ,whichdoesthesame\nforstaticSQLqueries,butiseasiertoprogram inthanJava,withJDBC.\nOften,itisusefultoexecuteapplication codeatthedatabase server,ratherthan\njustretrievedataandexecute application logicinaseparate process. Section\n6.5coversstoredprocedures, whichenableapplication logictobestoredand\nexecuted atthedataba\"se server.Weconclude thechapter bydiscussing our\nB&NcasestudyinSection6.6.\n'Vhilewritingdatabase applications, wemustalsokeepinmindthattypically\nmanyapplication programs runconcurrently. Thetransaction concept, intro\u00ad\nducedinChapter 1,isusedtoencapsulate theeffectsofanapplication on\nthedatahase. Anapplication canselectcertaintransaction properties through\nSQLcormnands tocontrolthedegreetowhichitisexposed tothechanges of\notherconcurrently running applications. \\Vetouchonthetransaction concept\natmanypointsi,nthischapter, and,inparticular, covertransaction-related ~hS\u00ad\npectsofJDBC.Afulldiscussion oftransaction properties andSQL'ssupport\nfortransactions isdeferred untilChapter 16.\nExamples thatappearinthischapter areavailable onlineat\nhttp://www.cs.wisc.edu/-dbbook", "221": "Database Application DeveloplTu:nt\n6.1ACCESSING DATABASES FROlVlAPPLICATIONS187\nInthissection, wecoverhowSQLcommands canbeexecuted fromwithina\nprogram inahostlanguage suchasCorJava.TheuseofSQLcommands\nwithinahostlanguage program iscalledEmbedded SQL.DetailsofEmbed~\ndedSQLalsodependonthehostlanguage. Although similarcapabilities are\nsupported foravarietyofhostlanguages, thesyntaxsometimes varies.\nvVefirstcoverthebasicsofEmbedded SQLwithstaticSQLqueriesinSection\n6.1.1.Wethenintroduce cursorsinSection6.1.2.vVediscussDynamic SQL,\nwhichallowsustoconstruct SQLqueriesatruntime (andexecute them)in\nSection6.1.:3.\n6.1.1Embedded SQL\nConceptually, embedding SQLcommands inahostlanguage program isstraight\u00ad\nforward. SQLstatements (i.e.,notdeclarations) canbeusedwherever astate\u00ad\nmentinthehostlanguage isallowed (withafewrestrictions). SQLstatements\nmustbeclearlymarkedsothatapreprocessor candealwiththembeforein\u00ad\nvokingthecompiler forthehostlanguage. Also,anyhostlanguage variables\nusedtopassarguments intoanSQLcommand mustbedeclared inSQL.In\nparticular, somespecialhostlanguage variables mustbedeclared inSQL(so\nthat,forexample, anyerrorconditions arisingduringSQLexecution canbe\ncommunicated backtothemainapplication program inthehostlanguage).\nThereare,however, twocomplications tobearinmind.First,thedatatypes\nrecognized bySQLmaynotberecognized bythehostlanguage andviceversa.\nThismismatch istypically addressed bycastingdatavaluesappropriately be\u00ad\nforepassingthemtoorfrornSQLcommands. (SQL,likeotherprogramming\nlanguages, provides anoperator tocastvaluesofaIletypeintovaluesofan\u00ad\nothertype.)Thesecondcomplication h~stodowithSQLbeingset-oriented,\nandisaddressed usingcursors(seeSection6.1.2.Commands operate onand\nproduce tables,whicharesets\nInourdiscussion ofEmbedded SQL, w(~assmne thi'Ltthehostlanguage isC\nforconcretenc~ss. because minordiffercnces existinhowSQLstatements are\nembedded indiffercnt hostlanguages.\nDeclaring Variables andExceptions\nSQLstatements canrefertovariables definedinthehostprogram. Suchhost\u00ad\nlanguage variables mustbeprefixed byacolon(:)inSQLstatements andbe\ndeclared between thecommands EXECSQLBEGINDECLARE SECTION andEXEC", "222": "188 CHAPTER 6\n~\nSQLENDDECLARE SECTION. Thedeclarations aresimilartohowtheywould\nlookina Cprogram and,asusualinC.areseparated bysemicolons. For\nexample. wecandeclarevariables c-sname, c_sid,c_mt'ing, andcage(withthe\ninitialcusedasanamingconvention toemphasize thatthesearehostlanguage\nvariables) asfollows:\nEXECSQLBEGINDECLARE SECTION\ncharc_sname[20];\nlongcsid;\nshortcrating;\nfloatcage;\nEXECSQLENDDECLARE SECTION\nThefirstquestion thatarisesiswhichSQLtypescorrespond tothevarious\nCtypes,sincewehavejustdeclared acollection ofCvariables whoseval\u00ad\nuesareintended toberead(andpossibly set)inanSQLrun-time environ\u00ad\nmentwhenanSQLstatement thatreferstothemisexecuted. TheSQL-92\nstandard definessuchacorrespondence between thehostlanguage typesand\nSQLtypesforanumber ofhostlanguages. Inourexample, c_snamc hasthe\ntypeCHARACTER(20) whenreferred toinanSQLstatement, csidhasthetype\nINTEGER, crating hasthetypeSMALLINT, andcagehasthetypeREAL.\n\\VealsoneedsomewayforSQLtoreportwhatwentwrongifanerrorcondition\nariseswhenexecuting anSQLstatement. TheSQL-92 standard recognizes\ntwospecialvariables forreporting errors,SQLCODE andSQLSTATE. SQLCODE is\ntheolderofthetwoandisdefinedtoreturnsomenegative valuewhenan\nerrorcondition arises,without specifying furtherjustwhaterroraparticular\nnegative integerdenotes. SQLSTATE, introduced intheSQL-92standard forthe\nfirsttime,&':lsociates predefined valueswithseveralcommon errorconditions,\nthereby introducing someuniformity tohowerrorsarereported. Oneofthese\ntwovariables mustbedeclared. Theappropriate CtypeforSQLCODE islong\nandtheappropriate CtypeforSQLSTATE ischar[6J,thatis,acharacter string\nfivecharacters long.(Recallthenull-terminator inCstrings.) Inthischapter,\nweassumethatSQLSTATE isdeclared.\nEmbedding SQLStatements\nAllSQLstaternents embedded withinahostprogram mustbeclearlymarked,\nwiththedetailsdependent onthehostlanguage; inC,SQLstatements mustbe\nprefixed byEXECSQL.AnSQLstatement canessentially appearinanyplace\ninthehostlanguage program whereahostlanguage statement canappear.", "223": "Database Application DC?lelopment 189\nAsasimpleexample, thefollowing Embedded' SQLstatement insertsarow,\nwhosecolumnvaluesmebasedonthevaluesofthehostlanguage variables\ncontained init,intotheSailorsrelation:\nEXECSQL\nINSERT INTOSailorsVALUES(:c_sname, :csid,:crating, :cage);\nObserve thatasemicolon terminates thecommand, aspertheconvention for\nterminating statements inC.\nTheSQLSTATEvariable shouldbechecked forerrorsandexceptions aftereach\nEmbedded SQLstatement. SQLprovides theWHENEVER command tosimplify\nthistedioustask:\nEXECSQLWHENEVER [SQLERROR INOTFOUND] [CONTINUEIGOTOst'mt]\nTheintentisthatthevalueofSQLSTATE shouldbecheckedaftereachEmbedded\nSQLstatement isexecuted.IfSQLERROR isspecified andthevalueofSQLSTATE\nindicates anexception, controlistransferred tostmt,whichispresumably re\u00ad\nsponsible forerrorandexception handling. Control isalsotransferred tostmt\nifNOTFOUNDisspecified andthevalueofSQLSTATE is02000,whichdenotes NO\nDATA.\n6.1.2Cursors\nAmajorproblem inembedding SQLstatements inahostlanguage likeCis\nthatanimpedance mismatch occursbecause SQLoperates onset\"ofrecords,\nwhereas languages likeCdonotcleanlysupport aset-of-records abstraction.\nThesolution istoessentially provideamechanism thatallowsustoretrieve\nrowsoneatatimefromarelation.\nThismechanism iscalledacursor. vVecandeclareacursoronanyrelation\noronanySQLquery(because everyqueryreturnsasetofrows).Oncea\ncurwrisdeclared, wecanopenit(whichpositions thecursorjustbeforethe\nfirstrow);fetchthenextrow;movethecursor(tothenextrow,totherow\nafterthenextn,tothefirstrow,ortotheprevious row,etc.,byspecifying\nadditional parameters fortheFETCHcommand); orclosethecursor.Thus,a\ncursoressentially allowsustoretrievetherowsinatablebypositioning the\ncursorataparticular rowandreadingitscontents.\nBasicCursorDefinition andUsage\nr'11rsors enableustoexamine, inthehostlanguage program, acollection of\nJWScomputed byanEmbedded SQLstatement:", "224": "190 CHAPTEl} 6\n..\\Veusuallyneedtoopenacursoriftheembedded statement isaSELECT\n(i.e.)aquery). However, wecanavoidopening acursoriftheanswer\ncontains asinglerow,asweseeshortly.\n..INSERT, DELETE, andUPDATE staternents typically requirenocursor,al\u00ad\nthoughsomevariants ofDELETE andUPDATE useacursor.\nAsanexample, wecanfindthenameandageofasailor,specified byassigning\navaluetothehostvariable c~sir1,declared earlier,asfollows:\nEXECSQLSELECT\nINTO\nFROM\nWHERES.sname, S.age\n:c_sname, :c_age\nSailorsS\nS.sid=:c_sid;\nTheINTOclauseallowsustoassignthecolumns ofthesingleanswerrowto\nthehostvariables csname andc_age.Therefore, wedonotneedacursorto\nembedthisqueryinahostlanguage program. Butwhataboutthefollowing\nquery,whichcomputes thenamesandagesofallsailorswitharatinggreater\nthanthecurrentvalueofthehostvariable cminmting?\nSELECT S.sname, S.age\nFROM SailorsS\nWHERE S.rating>:c_minrating\nThisqueryreturns acollection ofrows,notjustonerow.'Whenexecuted\ninteractively, theanswers areprintedonthescreen.Ifweembedthisqueryin\na Cprogram byprefixing thecOlnmand withEXECSQL,howcantheanswers\nbeboundtohostlanguage variables? TheINTOclauseisinadequate because\nwemustdealwithseveralrows.Thesolution istouseacursor:\nDECLARE sinfoCURSOR FOR\nSELECT S.sname, S.age\nFROM SailorsS\nWHERE S.rating>:c_minrating;\nThiscodecanbeincluded ina Cprogram, andonceitisexecuted, thecursor\n8ir~loisdefined. Subsequently, wecanopenthecursor:\nOPENsinfo:\nThevalueofcminmting intheSQLqueryassociated withthecursoristhe\nvalueofthisvariable whenweopenthecursor. (Thecursordeclaration is\nprocessed atcompile-time, andtheOPENcommand isexecuted atrun-time.)", "225": "Database Applicat'ion Development 191,\nAcursorcanbethought ofas'pointing' toarowinthecollection ofanswers\ntothequeryassociated withit.vVhenacursorisopened, itispositioned just\nbeforethefirstrow.\\VecanusetheFETCHcommand toreadthefirstrowof\ncursorsinfointohostlanguage variables:\nFETCHsinfoINTO:csname, :cage;\nWhentheFETCHstatement isexecuted, thecursorispositioned topointat\nthenextrow(whichisthefirstrowinthetablewhenFETCHisexecuted for\nthefirsttimeafteropening thecursor)andthecolumnvaluesintheroware\ncopiedintothecorresponding hostvariables. Byrepeatedly executing this\nFETCHstatement (say,inawhile-loop intheCprogram), wecanreadallthe\nrowscomputed bythequery,onerowatatime.Additional parameters tothe\nFETCHcommand allowustoposition acursorinveryflexibleways,butwedo\nnotdiscussthem.\nHowdoweknowwhenwehavelookedatalltherowsassociated withthe\ncursor? Bylookingatthespecialvariables SQLCODE orSQLSTATE, ofcourse.\nSQLSTATE, forexample, issettothevalue02000,whichdenotes NODATA,to\nindicatethattherearenomorerowsiftheFETCHstatement positions thecursor\nafterthelastrow.\nWhenwearedonewithacursor,wecancloseit:\nCLOSEsinfo;\nItcanbeopenedagainifneeded, andthevalueof:cminrating inthe\nSQLqueryassociated withthecursorwouldbethevalueofthehostvariable\ncminrating atthattime.\nProperties ofCursors\nThegeneralformofacursordeclaration is:\nDECLARE cursomame [INSENSITIVE] [SCROLL] CURSOR\n[WITHHOLD]\nFORsomequery\n[ORDER BYorder-item-list ]\n[FORREADONLYIFORUPDATE ]\nAcursorcanbedeclared tobearead-only cursor (FORREADONLY)or,if\nitisacursoronabaserelation oranupdatable view,tobeanupdatable\ncursor (FORUPDATE).IfitisIIpdatable, simplevariants oftheUPDATEand", "226": "192 CHAPTER 6\nil'\nDELETE commands allowustoupdateordeletetherowonwhichthecursor\nispositioned. Forexample, ifsinfaisanupdatable cursorandopen,wecan\nexecutethefollowing statement:\nUPDATE SailorsS\nSET S.rating=S.rating ~1\nWHERE CURRENT ofsinfo;\nThisEmbedded SQLstatement modifies theratingvalueoftherowcurrently\npointed tobycursorsinfa;similarly, wecandeletethisrowbyexecuting the\nnextstatement:\nDELETE SailorsS\nWHERE CURRENT ofsinfo;\nAcursorisupdatable bydefaultunlessitisascrollable orinsensitive cursor\n(seebelow),inwhichcaseitisread-only bydefault.\nIfthekeyword SCROLLisspecified, thecursorisscrollable, whichmeansthat\nvariants oftheFETCHcommand canbeusedtoposition thecursorinvery\nflexibleways;otherwise, onlythebasicFETCHcommand, whichretrieves the\nnextrow,isallowed.\nIfthekeyword INSENSITIVE isspecified, thecursorbehaves asifitisranging\noveraprivatecopyofthecollection ofanswerrows.Otherwise, andbydefault,\notheractionsofsometransaction couldmodifytheserows,creating unpre\u00ad\ndictable behavior. Forexample, whilewearefetching rowsusingthesinfa\ncursor,wemightmodifyratingvaluesinSailorrowsbyconcurrently executing\nthecommand:\nUPDATE SailorsS\nSET S.rating=S.rating -\nConsider aSailorrowsuchthat(1)ithasnotyetbeenfetched, and(2)its\noriginal ratingvaluewouldhavemetthecondition intheWHEREclauseofthe\nqueryassociated withsinfa,butthenewratingvaluedoesnot.Dowefetch\nsuchaSailorrow'?IfINSENSITIVE isspecified, thebehavior isasifallanswers\nwerecomputed,and storedwhensinfowasopened; thus,theupdatecommand\nhasnoeffectontherowsfetchedbysinfaifitisexecuted aftersinfoisopened.\nIfINSENSITIVE isnotspecified, thebehavior isimplementation dependent in\nthissituation.\nAholdablecursorisspecified usingtheWITHHOLDclause,andisnotclosed\nwhenthetransaction isconunitted. Themotivation forthiscornesfromlong", "227": "Database Apphcation Development 193\ntransactions inwhichweaccess(andpossibly change) alargenumberofrowsof\natable.Ifthetransaction isaborted foranyreason,thesystempotentially has\ntoredoalotofworkwhenthetransaction isrestarted. Evenifthetransaction\nisnotaborted, itslocksareheldforalongtimeandreducetheconcurrency\nofthesystem. Thealternative istobreakthetransaction intoseveralsmaller\ntransactions, butremembering ourposition inthetablebetween transactions\n(andothersimilardetails)iscomplicated anderror-prone. Allowing theap\u00ad\nplication program tocommitthetransaction itinitiated, whileretaining its\nhandleontheactivetable(i.e.,thecursor)solvesthisproblem: Theapplica\u00ad\ntioncancommititstransaction andstartanewtransaction andtherebysave\nthechanges ithasmadethusfar.\nFinally,inwhatorderdoFETCHcommands retrieverows?Ingeneralthisorder\nisunspecified, buttheoptional ORDERBYclausecanbeusedtospecifyasort\norder.Notethatcolumns mentioned intheORDERBYclausecannotbeupdated\nthrough thecursor!\nTheorder-item-list isalistoforder-items; anorder-item isacolumnname,\noptionally followed byoneofthekeywords ASCorDESC.Everycolumnmen\u00ad\ntionedintheORDERBYclausemustalsoappearintheselect-list ofthequery\nassociated withthecursor;otherwise itisnotclearwhatcolumns weshould\nsorton.Thekeywords ASCorDESCthatfollowacolumncontrolwhether the\nresultshouldbesorted-with respecttothatcolumn-in ascending ordescend\u00ad\ningorder;thedefaultisASC.Thisclauseisappliedasthelaststepinevaluating\nthequery.\nConsider thequerydiscussed inSection5.5.1,andtheanswershowninFigure\n5.13.Suppose thatacursorisopenedonthisquery,withtheclause:\nORDERBYminage ASC,ratingDESC\nTheanswerissortedfirstinascending orderbyminage, andifseveralrows\nhavethesameminagevalue,theserowsaresortedfurtherindescending order\nbyrating.ThecursorwouldfetchtherowsintheordershowninFigure6.1.\nIratingIminage I\n8 25.5\n3 25.5\n7 35.0\nFigure 6.1Orderinwhich'fuplesAreFetched", "228": "194 CHAPTERc6\n6.1.3Dynamic SQL\nConsider anapplication suchasaspreadsheet oragraphical front-end that\nneedstoaccessdatafromaDBMS.Suchanapplication mustacceptcommands\nfromauserand,basedonwhattheuserneeds,generate appropriate SQL\nstatements toretrievethenecessary data.Insuchsituations, wemaynotbe\nabletopredictinadvancejustwhatSQLstatements needtobeexecuted, even\nthoughthereis(presumably) somealgorithm bywhichtheapplication can\nconstruct thenecessary SQLstatements onceauser'scommand isissued.\nSQLprovides somefacilities todealwithsuchsituations; thesearereferred\ntoasDynamic SQL.Weillustrate thetwomaincommands, PREPARE and\nEXECUTE, through asimpleexample:\ncharc_sqlstring[] ={\"DELETE FROMSailorsWHERE rating>5\"};\nEXECSQLPREPARE readytogoFROM:csqlstring;\nEXECSQLEXECUTE readytogo;\nThefirststatement declarestheCvariable c_sqlstring andinitializes itsvalueto\nthestringrepresentation ofanSQLcommand. Thesecondstatement resultsin\nthisstringbeingparsedandcompiled asanSQLcommand, withtheresulting\nexecutable boundtotheSQLvariable readytogo.(SincereadytogoisanSQL\nvariable, justlikeacursorname,itisnotprefixed byacolon.) Thethird\nstatement executes thecommand.\nManysituations requiretheuseofDynamic SQL.However, notethatthe\npreparation ofaDynamic SQLcommand occursatrun-time andisrun-time\noverhead. Interactive andEmbedded SQLcommands canbeprepared once\natcompile-time andthenre-executecl asoftenasdesired. Consequently you\nshouldlimittheuseofDynamic SQLtosituations inwhichitisessential.\nTherearemanymorethingstoknowaboutDynamic SQL~~~how wecanpa'3S\nparameters fromthehostlanguage program totheSQLstatement beingpre\u00ad\nparcel,forexample--but wedonotdiscussitfurther.\n6.2ANINTRODUCTION TOJDBC\nEmbedded SQLenablestheintegration ofSQLwithageneral-purpose pro\u00ad\ngramming language. Asdescribed inSection6.1.1,aDBMS-specific preproces\u00ad\nsortransforms theEmbedded SQLstatements intofunction callsinthehost\nlanguage. Thedetailsofthistranslation varyacrossDBMSs, andtherefore\neventhoughthesourcecodecanbecOlnpiled toworkwithdifferent DBMSs,\nthefinalexecutable worksonlywithonespecificDBMS.", "229": "Database Application Develop'Tnent 195,\nODBCandJDBC,shortforOpenDataBase Connectivity andJavaDataBase\nConnectivity, alsoenabletheintegration ofSQLwithageneral-purpose pro\u00ad\ngramming language. BothODBCandJDBCexposedatabase capabilities in\nastandardized waytotheapplication programmer through anapplication\nprogramming interface (API).Incontrast toEmbedded SQL,ODBCand\nJDBCallow asingleexecutable toaccessdifferent DBMSs 'Without recompi\u00ad\nlation.Thus,whileEmbedded SQLisDBMS-independent onlyatthesource\ncodelevel,applications usingODBCorJDBCareDBMS-independent atthe\nsourcecodelevelandattheleveloftheexecutable. Inaddition, usingODBC\norJDBC,anapplication canaccessnotjustoneDBMSbutseveraldifferent\nonessimultaneously.\nODBCandJDBCachieveportability attheleveloftheexecutable byintroduc\u00ad\ninganextralevelofindirection. Alldirectinteraction withaspecificDBMS\nhappens through aDBMS-specific driver. Adriverisasoftware program\nthattranslates theODBCorJDBCcallsintoDBMS-specific calls.Drivers\nareloadeddynamically ondemand sincetheDBMSstheapplication isgoing\ntoaccessareknownonlyatrun-time. Available driversareregistered witha\ndrivermanager.\nOneinteresting pointtonoteisthatadriverdoesnotnecessarily needto\ninteract withaDBMSthatunderstands SQL.Itissufficient thatthedriver\ntranslates theSQLcommands fromtheapplication intoequivalent commands\nthattheDBMSunderstands. Therefore, intheremainder ofthissection, we\nrefertoadatastoragesubsystem withwhichadriverinteracts asadata\nsource.\nAnapplication thatinteracts withadatasourcethrough ODBCorJDBCse\u00ad\nlectsadatasource,dynamically loadsthecorresponding driver,andestablishes\naconnection withthedatasource.Thereisnolimitonthenumber ofopen\nconnections, andanapplication canhaveseveralopenconnections todifferent\ndatasources. Eachconnection hastransaction semantics; thatis,changes from\noneconnection arevisibletootherconnections onlyaftertheconnection has\ncommitted itschanges. Whileaconnection isopcn,transactions areexecuted\nbysubmitting SQLstatements, retrieving results,processing errors,andfinally\ncommitting orrollingback.Theapplication disconnects fromthedatasource\ntoterminate theinteraction.\nIntheremainder ofthischapter, weconcentrate onJDBC.", "230": "196 CHAPTEij. 6\nr--\nIJDBCDrivers: Themostup-to-date sourceof.IDBCdriversistheSun\nJDBCDriverpageat\nhttp://industry.java.sun.com/products/jdbc/drivers\nJDBCdriversareavailable forallmajordatabase sytems.\n6.2.1Architecture\nThearchitecture ofJDBChasfourmaincomponents: theapplication, the\ndrivermanager, severaldatasourcespecific dr-iveTs,andthecorresponding\ndataSOUTces.\nTheapplication initiates andterminates theconnection withadatasource.\nItsetstransaction boundaries, submits SQLstatements, andretrieves the\nresults-----all through awell-defined interface asspecified bytheJDBCAPI.The\nprimary goalofthedr-ivermanager istoloadJDBCdriversandpassJDBC\nfunction callsfromtheapplication tothecorrectdriver.Thedrivermanager\nalsohandlesJDBCinitialization andinformation callsfromtheapplications\nandcanlogallfunction calls.Inaddition, thedrivermanager performs\u00b7 some\nrudimentary errorchecking. Thedr-iverestablishes theconnection withthe\ndatasource.Inaddition tosubmitting requests andreturning requestresults,\nthedrivertranslates data,errorformats, anderrorcodesfromaformthatis\nspecifictothedatasourceintotheJDBCstandard. Thedatasourceprocesses\ncommands fromthedriverandreturnstheresults.\nDepending ontherelative location ofthedatasourceandtheapplication,\nseveralarchitectural scenarios arepossible. DriversinJDBCarecla.ssified into\nfourtypesdepending onthearchitectural relationship between theapplication\nandthedatasource:\nIIITypeIBridges: Thistypeofdrivertranslates JDBCfunction calls\nintofunction callsofanother APIthatisnotnativetotheDBMS. An\nexample isaJDBC-ODBC bridge;anapplication canuseJDBCcallsto\naccessanODBCcompliant datasource.Theapplication loadsonlyone\ndriver,thebridge. Bridges havetheadvantage thatitiseasytopiggy\u00ad\nbacktheapplica.tion ontoanexisting installation, andnonewdrivershave\ntobeinstalled. Butusingbridges hl:l.-'3severaldrawbacks. Theincreased\nnumberoflayersbetweendatasourceandapplication affectsperformance.\nInaddition, theuserislimitedtothefunctionality thattheODBCdriver\nsupports.\niiiTypeIIDirectThanslation totheNativeAPIviaNon-Java\nDriver: Thistypeofdrivertranslates JDBCfunction callsdirectly into\nmethod invocations oftheAPIofonespecificdatasource.Thedriveris", "231": "Database Application Develop'll1,ent 197\n}\nusually,vritten usingacombination ofC++andJava;itisdynamically\nlinkedandspecifictothedatasource.Thisarchitecture performs signif\u00ad\nicantlybetterthanaJDBC-ODBC bridge.Onedisadvantage isthatthe\ndatabase driverthatimplements theAPIneedstobeinstalled oneach\ncomputer thatrunstheapplication.\nIIType III~~Network Bridges: Thedrivertalksoveranetwork toa\nmiddleware serverthattranslates theJDBCrequests intoDBMS-specific\nmethod invocations. Inthiscase,thedriverontheclientsite(Le.,the\nnetwork bridge)isnotDBMS-specific. TheJDBCdriverloadedbytheap~\nplication canbequitesmall,astheonlyfunctionality itneedstoimplement\nissending ofSQLstatements tothemiddleware server.Themiddleware\nservercanthenuseaTypeIIJDBCdrivertoconnect tothedatasource.\nIITypeIV-Direct Translation totheNativeAPIviaJavaDriver:\nInsteadofcallingtheDBMSAPIdirectly, thedrivercommunicates with\ntheDBMSthrough Javasockets. Inthiscase,thedriverontheclientsideis\nwritteninJava,butitisDBMS-specific. Ittranslates JDBCcallsintothe\nnativeAPIofthedatabase system. Thissolution doesnotrequireanin\u00ad\ntermediate layer,andsincetheimplementation isallJava,itsperformance\nisusuallyquitegood.\n6.3JDBCCLASSES ANDINTERFACES\nJDBCisacollection ofJavaclassesandinterfaces thatenablesdatabase access\nfromprograrl1s written intheJavalanguage. Itcontains methods forcon\u00ad\nnectingtoaremotedatasource,executing SQLstatements, examining sets\nofresultsfromSQLstatements, transaction management, andexception han\u00ad\ndling.Thecla.ssesandinterfaces arepartofthejava.sqlpackage. Thus,all\ncodefragments intheremainder ofthissectionshouldincludethestatement\nimportjava.sql.*atthebeginning ofthecode;weomitthisstatement in\ntheremainder ofthissection. JDBC2.0alsoincludes thejavax.sqlpack\u00ad\nage,theJDBCOptional Package. Thepackage javax.sqladds,among\notherthings,thecapability ofconnection poolingandtheRow-Set interface.\n\\\\Tediscussconnection poolinginSection6.3.2,andtheResultSetinterface in\nSection6.3.4.\n\\\\Tenowillustrate theindividual stepsthatarerequired tosubmitadataba.se\nquerytoadatasourceandtoretrievetheresults.\n6.3.1JDBCDriverManagement\nIn.lDBe,datasourcedriversaremanaged bytheDrivermanager class,which\nmaintains alistofallcurrently loadeddrivers. TheDrivermanager cla.sshas", "232": "198 CHAPTEa 6\nmethods registerDriver, deregisterDriver, andgetDrivers toenabledy\u00ad\nnamicaddition anddeletion ofdrivers.\nThefirststepinconnecting toadatasourceistoloadthecorresponding JDBC\ndriver. Thisisaccomplished byusingtheJavamechanism fordynamically\nloadingclasses.Thestaticmethod forName intheClassclassreturnstheJava\nclassasspecified intheargument stringandexecutes itsstaticconstructor.\nThestaticconstructor ofthedynamically loadedclassloadsaninstance ofthe\nDriverclass,andthisDriverobjectregisters itselfwiththeDriverManager\nclass.\nThefollowing Javaexample codeexplicitly loadsaJDBCdriver:\nClass.forName(\"oracle/jdbc.driver.OracleDriver\");\nTherearetwootherwaysofregistering adriver.Wecanincludethedriverwith\n-Djdbc.drivers=oracle/jdbc. driveratthecommand linewhenwestartthe\nJavaapplication. Alternatively, wecanexplicitly instantiate adriver,butthis\nmethod isusedonlyrarely,asthenameofthedriverhastobespecified in the\napplication code,andthustheapplication becomes sensitive tochangesatthe\ndriverlevel.\nAfterregistering thedriver,weconnecttothedatasource.\n6.3.2Connections\nAsessionwithadatasourceisstartedthrough creation ofaConnection object;\nAconnection identifies alogicalsessionwithadatasource;multiple connections\nwithinthesameJavaprogram canrefertodifferent datasourcesorthesame\ndatasource. Connections arespecified through aJDBCURL,aURLthat\nusesthejdbcprotocol. SuchaURLhastheform\njdbc:<subprotocol>:<otherParameters>\nThecodeexample showninFigure6.2establishes aconnection toanOracle\ndatabase assuming thatthestringsuserldandpassword aresettovalidvalues.\nInJDBC,connections canhavedifferent properties. Forexample, aconnection\ncanspecifythegranularity oftransactions. Ifautocommi tissetforacon\u00ad\nnection, theneachSQLstatement isconsidered tobeitsowntransaction. If\nautocommi tisoff,thenaseriesofstatements thatcompose atransaction can\nbecommitted usingthecommit0methodoftheConnection cla..<;s,oraborted\nusingtherollbackO method. TheConnection cla.'sshasmethods tosetthe", "233": "Database Appl'ication Development\nStringuri=..jdbc:oracle:www.bookstore.com:3083 ..\nConnection connection;\ntry{\nConnection connection =\nDriverManager. getConnection (urI,userId,password);\n}\ncatch(SQLException excpt){\nSystem.out.println( excpt.getMessageO);\nreturn;\n}\nFigure6.2Establishing aConnection withJDBC\n-----~--._--_._---~,._-----~---_._-----,199\nI\nJDBCConnections: Remember tocloseconnections todatasources\nandreturnsharedconnections totheconnection pool.Database systems\nhavealimitednumber ofresources available forconnections, andorphan\nconnections canoftenonlybedetected throughtime-outs-and whilethe\ndatabase systemiswaiting fortheconnection totime-out, theresources\nusedbytheorphanconnection arewasted.\nautocommit mode(Connection. setAutoCommi t)andtoretrieve thecurrent\nautocommit mode(getAutoCommit). Thefollowing methods arepartofthe\nConnection interface andpermitsettingandgettingotherproperties:\n\u2022publicintgetTransactionIsolation() throwsSQLExceptionand\npublicvoidsetTransactionlsolation(int 1)throws SQLException.\nThesetwofunctions getandsetthecurrentlevelofisolation fortransac\u00ad\ntionshandled inthecurrentconnection. AllfiveSQLlevelsofisolation\n(seeSection16.6forafulldiscussion) arepossible, andargument 1canbe\nsetasfollows:\n-TRANSACTIONJNONE\n-TRANSACTIONJREAD.UNCOMMITTED\n-TRANSACTIONJREAD.COMMITTED\n-TRANSACTIONJREPEATABLEJREAD\n-TRANSACTION.BERIALIZABLE\n\u2022publicboolean getReadOnlyO throws SQLException and\npublicvoidsetReadOnly(boolean readOnly) throws SQLException.\nThesetwofunctions allowtheusertospecifywhether thetransactions\nexecutecl through thisconnection arercadonly.", "234": "200 CHAPTER ()\n..publicboolean isClosed() throws SQLException.\nCheckswhether thecurrentconnection hasalreadybeenclosed.\n..setAutoCommi tandgetAutoCommi t.\nvVealreadydiscussed thesetwofunctions.\nEstablishing aconnection toadatasourceisacostlyoperation sinceitin\u00ad\nvolvesseveralsteps,suchasestablishing anetwork connection tothedata\nsource,authentication, andallocation ofresources suchasmemory. Incasean\napplication establishes manydifferent connections fromdifferent parties(such\nasaWebserver),connections areoftenpooledtoavoidthisoverhead. Acon\u00ad\nnection poolisasetofestablished connections toadatasource.Whenever a\nnewconnection isneeded,oneoftheconnections fromthepoolisused,instead\nofcreating anewconnection tothedatasource.\nConnection poolingcanbehandled eitherbyspecialized codeintheapplication,\northeoptional javax.sqlpackage, whichprovides functionality forconnection\npoolingandallowsustosetdifferent parameters, suchasthecapacity ofthe\npool,andshrinkage andgrowthrates.Mostapplication servers(seeSection\n7.7.2)implement thejavax.sqlpackage oraproprietary variant.\n6.3.3Executing SQLStatements\nWenowdiscusshowtocreateandexecuteSQLstatements usingJDBC.Inthe\nJDBCcodeexamples inthissection, weassumethatwehaveaConnection\nobjectnamedcon.JDBCsupports threedifferent waysofexecuting statements:\nStatement, PreparedStatement, andCallableStatement. TheStatement\nclassisthebaseclassfortheothertwostatment classes.Itallowsustoquery\nthedatasourcewithanystaticordynamically generated SQLquery.Wecover\nthePreparedStatement classhereandtheCallableStatement classinSection\n6.5,whenwediscussstoredprocedures.\nThePreparedStatement cla,CisdynamicaJly generates precompiled SQLstate\u00ad\nmentsthatcanbeusedseveraltimes;theseSQLstatements canhaveparam\u00ad\neters,buttheirstructure isfixedwhenthePreparedStatement object(repre\u00ad\nsentingtheSQLstatement) iscreated.\nConsider thesamplecodeusingaPreparedStatment objectshowninFigure\n6.3.TheSQLqueryspecifies thequerystring,butuses''1'forthevalues\noftheparameters, whicharesetlaterusingmethods setString, setFloat,\nandsetlnt. The''1'placeholders canbeusedanywhere inSQLstatements\nwheretheycanbereplaced withavalue.Examples ofplaceswheretheycan\nappearincludetheWHEREclause(e.g.,'WHEREauthor=?'), orinSQLUPDATE\nandINSERTstaternents, asinFigure6.3.ThemethodsetString isoneway", "235": "Database Application Develop'ment\n//initialquantity isalwayszero\nStringsql=\"INSERT INTOBooksVALUES('?, 7,'?,?,0,7)\";\nPreparedStatement pstmt=con.prepareStatement(sql);\n//nowinstantiate theparameters withvalues\n//a,ssumethatisbn,title,etc.areJavavariables that\n//containthevaluestobeinserted\npstmt.clearParameters() ;\npstmt.setString(l, isbn);\npstmt.setString( 2,title);\npstmt.setString( 3,author);\npstmt.setFloat(5, price);\npstmt.setInt(6, year);\nintnumRows =pstmt.executeUpdate();\nFigure6.3SQLUpdate UsingaPreparedStatement Object201\ntosetaparameter value;analogous methods areavailable forint,float,\nanddate.ItisgoodstyletoalwaysuseclearParameters 0beforesetting\nparameter valuesinordertoremoveanyolddata.\nTherearedifferent waysofsubmitting thequerystringtothedatasource.In\ntheexample, weusedtheexecute Updatecommand, whichisusedifweknow\nthattheSQLstatement doesnotreturnanyrecords(SQLUPDATE, INSERT,\nALTER,andDELETEstatements). TheexecuteUpdate methodreturnsaninte\u00ad\ngerindicating thenumberofrowstheSQLstatement modified; itreturns0for\nsuccessful execution without modifying anyrows.\nTheexecuteQuery methodisusediftheSQLstatement returnsdata,such&\"l\ninaregular SELECTquery.JDBChasitsowncursormechanism intheform\nofaResultSetobject,whichwediscussnext.Theexecute method ismore\ngeneralthanexecuteQuery andexecuteUpdate; thereferences attheendof\nthechapterprovidepointers withmoredetails.\n6.3.4Resul,tSets\nAsdiscussed intheprevious section, thestatement executeQuery returns a,\nResultSetobject,whichissimilartoacursor.ResultSetcursorsinJDBC\n2.0areverypowerful; theyallowforward andreversescrolling andin-place\neditingandinsertions.", "236": "202 CHAPTER 6\nInitsmostbasicform,theResultSetobjectallowsustoreadonerowofthe\noutputofthequeryatatime.Initially, theResultSetispositioned before\nthefirstrow,andwehavetoretrievethefirstrowwithanexplicitcalltothe\nnext0method. Thenextmethodreturnsfalseiftherearenomorerowsin\nthequeryanswer,andtrueother\\vise. Thecodefragment showninFigure6.4\nillustrates thebasicusageofaResultSetobject.\nResultSet rs=stmt.executeQuery(sqlQuery);\n//rsisnowacursor\n//firstcalltors.nextO movestothefirstrecord\n//rs.nextO movestothenextrow\nStringsqlQuery;\nResultSet rs=stmt.executeQuery(sqlQuery)\nwhile(rs.next()) {\n//processthedata\n}\nFigure6.4UsingaResultSet Object\nWhilenext()allowsustoretrievethelogically nextrowinthequeryanswer,\nwecanmoveaboutinthequeryanswerinotherwaystoo:\n\u2022previous 0movesbackonerow.\n\u2022absolute (intnum)movestotherowwiththespecified number.\n\u2022relative (intnum)movesforward orbackward (ifnumisnegative) rela\u00ad\ntivetothecurrentposition. relative (-1)hasthesameeffectasprevious.\n\u2022first0movestothefirstrow,andlast0movestothelastrow.\nMatching JavaandSQLDataTypes\nInconsidering theinteraction ofanapplication withadatasource,theissues\nweencountered inthecontext ofEmbedded SQL(e.g.,passing information\nbetween theapplication andthedatasourcethrough sharedvariables) arise\nagain.Todealwithsuchissues,JDBCprovides specialdatatypesandspeci\u00ad\nfiestheirrelationship tocorresponding SQLdatatypes.Figure6.5showsthe\naccessor methods inaResultSet objectforthemostcommon SQLdatatypes.\nWiththeseaccessor methods, wecanretrieve valuesfromthecurrentrowof\nthequeryresultreferenced bytheResultSetobject.Therearetwoformsfor\neachaccessor method: Onemethod retrieves valuesbycolumnindex,starting\natone,andtheotherretrieves valuesbycolumnname.Thefollowing exam\u00ad\npleshowshowtoaccessfieldsofthecurrentResultSetrowusingaccesssor\nmethods.", "237": "Database Application Development 2Q3\nISQLTypeIJavacla.c;;sIResultSet getmethodI\nBIT Boolean getBooleanO\nCHAR String getStringO\nVARCHAR String getStringO\nDOUBLE Double getDoubleO\nFLOAT Double getDoubleO\nINTEGER Integer getIntO\nREAL Double getFloatO\nDATE java.sql.Date getDateO\nTIME java.sql.Time getTimeO\nTIMESTAMP java.sql.TimeStamp getTimestam p()\nFigure6.5Reading SQLDatatypes fromaResultSet Object\nResultSet rs=stmt.executeQuery( sqIQuery);\nStringsqlQuerYi\nResultSet rs=stmt.executeQuery(sqIQuery)\nwhile(rs.nextO) {\nisbn=rs.getString(l);\ntitle=rs.getString(\" TITLE\");\n//processisbnandtitle\n}\n6.3.5Exceptions and Warnings\nSimilartotheSQLSTATE variable, mostofthemethods injava.sqlcanthrow\nanexception ofthetypeSQLException ifanerroroccurs. Theinformation\nincludes SQLState, astringthatdescribes theerror(e.g.,whether thestatement\ncontained anSQLsyntaxerror).Inaddition tothestandard getMessage 0\nmethod inherited fromThrowable, SQLException hastwoadditional methods\nthatprovide furtherinformation, andamethod toget(orchain)additional\nexceptions:\nIIIpublicStringgetSQLState 0returnsanSQLState identifier basedon\ntheSQL:1999 specification, asdiscussed inSection6.1.1.\n..public i:p.tgetErrorCode ()retrieves avendor-specific errorcode.\nIIIpublic SQLException getNextExceptionO getsthenextexception ina\nchainofexceptions associated withthecurrentSQLException object.\nAnSQL\\\u00a5arning isasubclass ofSQLException. Warnings arenotH\u2022.'3severeas\nerrorsandtheprogram canusuallyproceed without specialhandling ofwarn\u00ad\nings.\\Varnings arenotthrownlikeotherexceptions, andtheyarenotcaughta.,", "238": "204 CHAPTER\npartofthetry\"-catch blockaroundajava.sqlstatement. VVeHeedtospecif\u00ad\nicallytestwhether warnings exist.Connection, Statement, andResultSet\nobjectsallhaveagetWarnings 0method withwhichwecanretrieve SQL\nwarnings iftheyexist.Duplicate retrieval ofwarnings canbeavoidedthrough\nclearWarnings O.Statement objectsclearwarnings automatically onexecu\u00ad\ntionofthenextstatement; ResultSetobjectsclearwarnings everytimeanew\ntupleisaccessed.\nTypical codeforobtaining SQLWarnings lookssimilartothecodeshownin\nFigure6.6.\ntry{\nstmt=con.createStatement();\nwarning=con.getWarnings();\nwhile(warning !=null){\n//handleSQLWarnings //codetoprocesswarning\nwarning=warning.getNextWarningO; //getnextwarning\n}\ncon.clear\\Varnings() ;\nstmt.executeUpdate( queryString );\nwarning =stmt.getWarnings();\nwhile(warning!=null){\n//handleSQLWarnings //codetoprocesswarning\nwarning =warning.getNextWarningO; //getnextwarning\n}\n} //endtry\ncatch(SQLException SQLe){\n/ /codetohandleexception\n} / /endcatch\nFigure 6.6Processing JDBCWarnings andExceptions\n6.3.6Examining Database Metadata\n\\VecanusetlwDatabaseMetaData objecttoobtaininformation aboutthe\ndatabase systemitself,aswellasinformation frornthedatabase catalog. For\nexample, thefollowing codefragment showshowtoobtainthenameanddriver\nversionoftheJDBCdriver:\nDataba..seMetaData md=con.getMetaD<Lta():\nSystem.out.println(\"Driver Information:\");", "239": "Database Appl'imtion Developrnent\nSystem.out.println(\"Name:\" +md.getDriverNameO\n+\";version:\"+mcl.getDriverVersion());205\n~\nTheDatabaseMetaData objecthasmanymoremethods (inJDBC2.0,exactly\n134);welistsomemethods here:\n\u2022publicResultSetgetCatalogs 0throws SqLException. Thisfunction\nreturnsaResultSet thatcanbeusedtoiterateoverallthecatalogrelations.\nThefunctions getIndexInfo 0andgetTables 0workanalogously.\n\u2022pUblicintgetMaxConnections 0throws SqLException. Thisfunction\nreturnsthema.ximum numberofconnections possible.\nWewillconclude ourdiscussion ofJDBCwithanexample codefragment that\nexamines alldatabase metadata showninFigure6.7.\nDatabaseMetaData dmd=con.getMetaDataO;\nResultSet tablesRS=dmd.getTables(null,null,null,null);\nstringtableName;\nwhile(tablesRS.next()) {\ntableNarne=tablesRS .getString(\" TABLE_N AME\");\n//printouttheattributes ofthistable\nSystem.out.println(\"The attributes oftable\"\n+tableName+\"are:\");\nResultSet columnsRS =dmd.getColums(null,null,tableName, null);\nwhile(columnsRS.next()) {\nSystem.out. print(colummsRS.getString(\" COLUMN _NAME\")\n+\"\");\n}\n//printouttheprimary keysofthistable\nSystem.out.println(\"The keysoftable\"+tableName+\"are:\");\nResultSet keysRS=dmd.getPrimaryKeys(null,null,tableName);\nwhile(keysRS. next()){\n'System.out.print(keysRS.getStringC'COLUMN_NAME\") +\"\");\n}\n}\nFigure 6.7Obtaining Infon-nation about itDataSource", "240": "206 CHAPTER.:6\n6.4SQLJ\nSQLJ(shortfor'SQL-Java') wasdeveloped bytheSQLJGroup,agroupof\ndatabase vendors andSun.SQLJwasdeveloped tocomplement thedynamic\nwayofcreating queriesinJDBCwithastaticmodel.Itistherefore veryclose\ntoEmbedded SQL.UnlikeJDBC,havingsemi-static SQLqueriesallowsthe\ncompiler toperform SQLsyntaxchecks,strongtypechecksofthecompatibil\u00ad\nityofthehostvariables withtherespective SQLattributes, andconsistency\nofthequerywiththedatabase schema-tables, attributes, views,andstored\nprocedures--all atcompilation time.Forexample, inbothSQLJandEmbed\u00ad\ndedSQL,variables inthehostlanguage alwaysareboundstatically tothe\nsamearguments, whereas inJDBC,weneedseparate statements tobindeach\nvariable toanargument andtoretrievetheresult.Forexample, thefollowing\nSQLJstatement bindshostlanguage variables title,price,andauthortothe\nreturnvaluesofthecursorbooks.\n#sqlbooks= {\nSELECTtitle,priceINTO:title,:price\nFROMBooksWHEREauthor=:author\n};\nInJDBC,wecandynamically decidewhichhostlanguage variables willhold\nthequeryresult.Inthefollowing example, wereadthetitleofthebookinto\nvariable ftitleifthebookwaswrittenbyFeynman, andintovariable otitle\notherwise:\n//assumewehaveaResultSetcursorrs\nauthor=rs.getString(3);\nif(author==\"Feynman\") {\nftitle=rs.getString(2):\n}\nelse{\notitle=rs.getString(2);\n}\nvVhenwritingSQLJapplications, wejustwriteregularJavacodeandembed\nSQLstatements according toasetofrules.SQLJapplications arepre-processed\nthrough anSQLJtranslation program thatreplaces theembedded SQLJcode\nwithcallstoanSQLJJavalibrary.Themodified program codecanthenbe\ncompiled byanyJavacompiler. UsuallytheSQLJJavalibrarymakescallsto\naJDBCdriver,whichhandlestheconnection tothedatab&'3e system.", "241": "Database Application Development 2Q7\nAnimportant philosophical difference existsbetween Embedded SQLandSQLJ\nandJDBC.Sincevendors providetheirownproprietary versions ofSQL,itis\nadvisable towriteSQLqueriesaccording totheSQL-92orSQL:1999 standard.\nHowever, whenusingEmbedded SQL,itistempting tousevendor-specific SQL\nconstructs thatofferfunctionality beyondtheSQL-92orSQL:1999 standards.\nSQLJandJDBCforceadherence tothestandards, andtheresulting codeis\nmuchmoreportable acrossdifferent database systems.\nIntheremainder ofthissection,wegiveashortintroduction toSQLJ.\n6.4.1WritingSQLJCode\nWewillintroduce SQLJbymeansofexamples. LetusstartwithanSQLJcode\nfragment thatselectsrecordsfromtheBookstablethatmatchagivenauthor.\nStringtitle;Floatprice;Stringatithor;\n#sqliteratorBooks(Stringtitle,Floatprice);\nBooksbooks;\n//theapplication setstheauthor\n//executethequeryandopenthecursor\n#sqlbooks= {\nSELECTtitle,priceINTO:titIe,:price\nFROMBooksWHEREauthor=:author\n};\n//retrieveresults\nwhile(books.next()) {\nSystem.out.println(books.titleO +\",\"+books.price());\n}\nbooks.close() ;\nThecorresponding JDBCcodefragment looksasfollows(assuming wealso\ndeclaredprice,name,andauthor:\nPrcparcdStatcment stmt=connection.prepareStatement(\n\"SELECTtitle,priceFROMBooksWHEREauthor=?\");\n//settheparameter inthequeryanclexecuteit\nstmt.setString( 1,author);\nResultSet 1'8=stmt.executeQuery();\n//retrievetheresults\nwhile(rs.next()) {", "242": "208 CHAPTER\nSystem.out.println(rs.getString(l) +\",\"+rs.getFloat(2));\n}6\nComparing theJDBCandSQLJcode,weseethattheSQLJcodeismuch\neasiertoreadthantheJDBCcode.Thus,SQLJreducessoftware development\nandmaintenance costs.\nLetusconsider theindividual components oftheSQLJcodeinmoredetail.\nAllSQLJstatements havethespecialprefix#sql.InSQLJ,weretrievethe\nresultsofSQLquerieswithiterator objects, whicharebasically cursors. An\niterator isaninstance ofaniterator class.UsageofaniteratorinSQLJgoes\nthrough fivesteps:\n\u2022Declare theIterator Class:Inthepreceding code,thishappened through\nthestatement\n#sqliterator Books(Stringtitle,Floatprice);\nThisstatement createsanewJavaclassthatwecanusetoinstantiate\nobjects.\n\u2022Instantiate anIterator ObjectfromtheNewIterator Class:We\ninstantiated ouriteratorinthestatement Booksbooks;.\n\u2022Initialize theIterator UsingaSQLStatement: Inourexample, this\nhappens through thestatement #sqlbooks ;;;;;;....\n\u2022Iteratively, ReadtheRowsFromtheIterator Object: Thisstepis\nverysimilartoreadingrowsthrough aResultSetobjectinJDBC.\n\u2022ClosetheIterator Object.\nTherearetwotypesofiteratorclasses:namediterators andpositional iterators.\nFornamediterators, wespecifyboththevariable typeandthenameofeach\ncolumnoftheiterator. Thisallowsustoretrieveindividual columns bynameas\ninourprevious example wherewecouldretrievethetitlecolunmfromtheBooks\ntableusingtheexpression books.titIe().Forpositional iterators, weneed\ntospecifYonlythevariable typeforeachcolumnoftheiterator. Toaccess\ntheindividual columns oftheiterator, weuseaFETCH...INTOeonstruct,\nsimilartoEmbedded SQL.Bothiterator typeshavethesameperformance;\nwhichiteratortousedepends ontheprogrammer's taste.\nLetusrevisitourexample. \\Vecanmaketheiterator apositional iterator\nthrough thefollowing statement:\n#sqliterator Books(String, Float);\nvVethenretrievetheindividual rowsfromtheiterator 3,.'3follows:", "243": "Database Application Development\nwhile(true){\n#sql{FETCH:booksINTO:title,:price,};\nif(books.endFetch()) {\nbreak:\n}\n//processthebook\n}\n6.5STORED PROCEDURES200\nItisoftenimportant toexecute somepartsoftheapplication logicdirectly in\ntheprocessspaceofthedatabase system. Running application logicdirectly\natthedataba.se hastheadvantage thattheamount ofdatathatistransferred\nbetween thedatabase serverandtheclientissuingtheSQLstatement canbe\nminimized, whileatthesametimeutilizing thefullpowerofthedataba.se\nserver.\nWhenSQLstatements areissuedfromaremoteapplication, therecordsinthe\nresultofthequeryneedtobetransferred fromthedatabase systembackto\ntheapplication. Ifweuseacursortoremotely accesstheresultsofanSQL\nstatement, theDBMShasresources suchaslocksandmemory tiedupwhilethe\napplication isprocessing therecordsretrieved through thecursor.Incontrast,\nastoredprocedure isaprogram thatisexecuted through asingleSQL\nstatement thatcanbelocallyexecuted andcompleted withintheprocessspace\nofthedatabase server.Theresultscanbepackaged intoonebigresultand\nreturned totheapplication, ortheapplication logiccanbeperformed directly\nattheserver,without havingtotransmit theresultstotheclientatalL\nStoredprocedures arealsobeneficial forsoftware engineering rea,sons. Once\nastoredprocedure isregistered withthedatabase server,different userscan\nre-usethestoredprocedure, eliminating duplication ofeffortsinwritingSQL\nqueriesorapplication logic,andmakingcodemaintenance ea.\"lY.Inaddition,\napplication programmers donotneedtoknowthethedataba.se schemaifwe\nencapsulate alldataba.'3e accessintostoredprocedures.\nAlthough they,are calledstoredprocedur'es, theydonothavetobeprocedures\ninaprogramming language sense;theycanbefunctions.\n6.5.1Creating aSimpleStoredProcedure\nLetuslookattheexample storedprocedure written inSQLshowninFigure\n(i.S.vVeseethatstoredprocedures musthaveaname;thisstoredprocedure", "244": "210 CHAPTER' 6\nhasthename'ShowNumberOfOrders.' Otherwise, itjustcontains anSQL\nstatement thatisprecompiled andstoredattheserver.\nCREATE PROCEDURE ShowNumberOfOrders\nSELECT C.cid,C.cname, COUNT(*)\nFROM Customers C,Ordersa\nWHERE C.cid=O.cid\nGROUP BYC.cid,C.cname\nFigure6.8AStoredProcedure inSQL\nStoredprocedures canalsohaveparameters. Theseparameters havetobe\nvalidSQLtypes,andhaveoneofthreedifferent modes: IN,OUT,orINOUT.\nINparameters arearguments to'thestoredprocedure. OUTparameters are\nreturned fromthestoredprocedure; itassignsvaluestoallOUTparameters\nthattheusercanprocess. INOUTparameters combine theproperties ofINand\nOUTparameters: Theycontainvaluestobepassedtothestoredprocedures, and\nthestoredprocedure cansettheirvaluesasreturnvalues.Storedprocedures\nenforcestricttypeconformance: Ifaparameter isoftypeINTEGER, itcannot\nbecalledwithanargument oftypeVARCHAR.\nLetuslookatanexample ofastoredprocedure witharguments. Thestored\nprocedure showninFigure6.9hastwoarguments: book_isbn andaddedQty.\nItupdates theavailable number ofcopiesofabookwiththequantity froma\nnewshipment.\nCREATE PROCEDURE Addlnventory (\nINbook_isbn CHAR(lO),\nINaddedQty INTEGER)\nUPDATEBooks\nSET\nWHEREqty_in_stock =qtyjn_stock+addedQty\nbookjsbn =isbn\nFigure6.9AStoredProcedure withArguments\nStoredprocedures donothavetobewritteninSQL;theycanbewritteninany\nhostlanguage. Asanexample, thestoredprocedure showninFigure0.10isa\nJavafunction thatisdynamically executed bythedataba ..<;eserverwhenever it\niscalledbythedient:\n6.5.2CallingStoredProcedures\nStoredprocedures canbecalledininteractive SQLwiththeCALLstatement:", "245": "Database Application Development\nCREATE PROCEDURE RallkCustomers(IN number INTEGER)\nLANGUAGE Java\nEXTERNAL NAME'file:///c:/storedProcedures/rank.jar'\nFigure6.10AStoredProcedure inJava211\nCALLstoredProcedureName(argumentl, argument2, ...,argumentN);\nInEmbedded SQL,thearguments toastoredprocedure areusuallyvariables\ninthehostlanguage. Forexample, thestoredprocedure AddInventory would\nbecalledasfollows:\nEXECSQLBEGINDECLARE SECTION\ncharisbn[lO];\nlongqty;\nEXECSQLENDDECLARE SECTION\n//setisbnandqtytosomevalues\nEXECSQLCALLAddInventory(:isbn,:qty);\nCallingStoredProcedures fromJDBC\nWecancallstoredprocedures fromJDBCusingtheCallableStatment class.\nCallableStatement isasubclass ofPreparedStatement andprovides thesame\nfunctionality. Astoredprocedure couldcontainmultiple SQLstaternents ora\nseriesofSQLstatements-thus, theresultcouldbemanydifferent ResultSet\nobjects. Weillustrate thecasewhenthestoredprocedure resultisasingle\nResultSet.\nCallableStatement cstmt=\nCOIl.prepareCall(\" {callShowNumberOfOrders}\");\nResultSet rs=cstmt.executeQueryO\nwhile(rs.next())\nCallingStoredProcedures fromSQLJ\nThestoredprocedure 'ShowNumberOfOrders' iscalledasfollowsusingSQLJ:\n//createthecursorclass\n#sql!terator CustomerInfo(int cid,Stringcname,intcount);\n//createthecursor", "246": "212\nCustomer Infocustomerinfo;\n//callthestoredprocedure\n#sqlcustomerinfo ={CALLShowNumberOfOrders};\nwhile(customerinfo.nextO) {\nSystem.out.println(customerinfo.cid() +\",\"+\ncustomerinfo.count()) ;\n}\n6.5.3SQLIPSMCHAPTER (5\nAllmajordataba...<;e systems providewaysforuserstowritestoredprocedures in\nasimple,generalpurpose language closelyalignedwithSQL.Inthissection,we\nbrieflydiscusstheSQL/PSM standard, whichisrepresentative ofmostvendor\u00ad\nspecificlanguages. InPSM,wedefinemodules, whicharecollections ofstored\nprocedures, temporary relations, andotherdeclarations.\nInSQL/PSM, wedeclareastoredprocedure asfollows:\nCREATE PROCEDURE name(parameter 1,...,parameterN)\nlocalvariable declarations\nprocedure code;\nWecandeclareafunction similarly asfollows:\nCREATE FUNCTION name(parameterl, ...,parameterN)\nRETURNS sqIDataType\nlocalvariable declarations\nfunction code;\nEachparameter isatripleconsisting ofthemode(IN,OUT,orINOUT as\ndiscussed intheprevious section), theparameter name,andtheSQLdatatype\noftheparameter. WecanseenverysimpleSQL/PSM procedures inSection\n6.5.1.Inthiscase,thelocalvariable declarations wereempty,andtheprocedure\ncodeconsisted ofanSQLquery.\nWestartoutwithanexample ofaSQL/PSM function thatillustrates the\nmainSQL/PSM constructs. Thefunction takesasinputacustomer identified\nbyhercidandayear.Thefunction returnstheratingofthecustomer, which\nisdefined a...'3follows: Customers whohaveboughtmorethantenbooksduring\ntheyeararerated'two';customer whohavepurcha...<;ed between 5and10books\narerated'one',otherwise thecustomer israted'zero'.Thefollowing SQL/PSM\ncodecomputes theratingforagivencustomer andyear.\nCREATE PROCEDURE RateCustomer", "247": "Database Appl'ication Development\n(INcustIdINTEGER, INyearINTEGER)\nRETURNS INTEGER\nDECLARE ratingINTEGER;\nDECLARE numOrders INTEGER;\nSETnumOrders =\n(SELECT COUNT(*) FROMOrders0WHEREO.tid=custId);\nIF(numOrders> 10)THENrating=2;\nELSEIF(numOrders>5) THENrating=1;\nELSErating=O;\nENDIF;\nRETURNrating;\nLetususethisexample togiveashortoverview ofsomeSQL/PSM constructs:\n\u2022Wecandeclarelocalvariables usingtheDECLARE statement. Inourexam\u00ad\nple,wedeclaretwolocalvariables: 'rating', and'numOrders'.\n\u2022PSM/SQL functions returnvaluesviatheRETURNstatement. Inourex\u00ad\nample,wereturnthevalueofthelocalvariable 'rating'.\n\u2022vVecanassignvaluestovariables withtheSETstatement. Inourexample,\nweassigned thereturnvalueofaquerytothevariable 'numOrders'.\n\u2022SQL/PSM h&<;branches andloops.Branches havethefollowing form:\nIF(condition) THENstatements;\nELSEIFstatements;\nELSEIFstatements;\nELSEstatements; ENDIF\nLoopsareoftheform\nLOOP\nstaternents:\nENDLOOP\n\u2022Queriescanbeusedaspartofexpressions inbranches; queriesthatreturn\nasingle;raluecanbeassigned tovariables asinourexample above.\n\u2022'Wecanusethesamecursorstatements &sinEmbedded SQL(OPEN,FETCH,\nCLOSE),butwedonotneedtheEXECSQLconstructs, andvariables donot\nhavetobeprefixed byacolon':'.\nWeonlygaveaveryshortoverview ofSQL/PSM; thereferences attheendof\nthechapterprovidemoreinformation.", "248": "214 CHAPTER \u20aci\n6.6CASESTUDY: THEINTERNET BOOKSHOP\nDBDudes finishedlogicaldatabase design,asdiscussed inSection3.8,andnow\nconsider thequeriesthattheyhavetosupport. Theyexpectthattheapplica\u00ad\ntionlogicwillbeimplemented inJava,andsotheyconsider JDBCandSQLJas\npossible candidates forinterfacing thedatabase systemwithapplication code.\nRecallthatDBDudes settledonthefollowing schema:\nBooks(isbn:CHAR(10), title:CHAR(8), author: CHAR(80),\nqty_in_stock: INTEGER, price:REAL,year_published: INTEGER)\nCustomers( cid:INTEGER, cname: CHAR(80), address: CHAR(200))\nOrders(ordernum: INTEGER, isbn:CHAR(lO), cid:INTEGER,\ncardnum: CHAR(l6), qty:INTEGER, order_date: DATE,ship_date: DATE)\nNow,DBDudes considers thetypesofqueriesandupdatesthatwillarise.They\nfirstcreatealistoftasksthatwillbeperformed intheapplication. Tasks\nperformed bycustomers includethefollowing.\nIICustomers searchbooksbyauthorname,title,orISBN.\n..Customers register withthewebsite. Registered customers mightwant\ntochangetheircontactinformation. DBDudes realizethattheyhaveto\naugment theCustomers tablewithadditional information tocapturelogin\nandpassword information foreachcustomer; wedonotdiscussthisaspect\nanyfurther.\nIIICustomers checkoutafinalshopping baskettocomplete asale.\nIIICustomers addanddeletebooksfroma'shopping basket'atthewebsite.\n..Customers checkthestatusofexisting ordersandlookatoldorders.\nAdministrative ta.'3ksperformed byemployees ofB&Narelistednext.\nIIEmployees lookupcustomer contactinformation.\nIIIEmployees addnewbookstotheinventory.\n..Employees fulfillorders,andneedtoupdatetheshipping dateofindividual\nbooks.\n..Employees analyze thedatatofindprofitable customers andcustomers\nlikelytorespond tospecialmarketing campaigns.\nNext,DBDudes consider thetypesofqueriesthatwilla,riseoutofthesetasks.\nTosupport searching forbooksbyname,author, title,orISBN,DBDudes\ndecidetowriteastoredprocedure asfollows:", "249": "Database Application Development\nCREATE PROCEDURE SearchByISBN (INbook.isbn CHAR(10))\nSELECTB.title,B.author, B.qty_in~'3tock, B.price, B.yeaLpublished\nFROMBooksB\nWHEREB.isbn=book.isbn\nPlacinganorderinvolves inserting oneormorerecordsintotheOrderstable.\nSinceDBDudes hasnotyetchosentheJava-based technology toprogram the\napplication logic,theyassumefornowthattheindividual booksintheorder\narestoredattheapplication layerinaJavaarray.Tofinalizetheorder,they\nwritethefollowing JDBCcodeshown in Figure6.11,whichinsertstheelements\nfromthearrayintotheOrderstable.Notethatthiscodefragment assumes\nseveralJavavariables havebeensetbeforehand.\nStringsql=\"INSERT INTOOrdersVALUES(7, 7, 7, 7, 7, 7)\";\nPreparedStatement pstmt=con.prepareStatement(sql);\ncon.setAutoCommit(false);\ntry{\n//orderList isavectorofOrderobjects\n//ordernum isthecurrentordernumber\n//ddistheIDofthecustomer, cardnum isthecreditcardnumber\nfor(inti=O;iiorderList.lengthO; i++)\n//nowinstantiate theparameters withvalues\nOrdercurrentOrder=orderList[i];\npstmt.clearParameters ();\npstmt.setInt(l, ordernum);\npstmt.setString(2, Order.getlsbnO);\npstmt.setInt(3, dd);\npstmt.setString(4, creditCardNum);\npstmt.setlnt(5, Order.getQtyO);\npstmt.setDate(6, null);\npstmt.executeUpdate();\n}\ncon.commit();\ncatch(SqLException e){\ncon.rollbackO;\nSystem.ou t.println(e.getMessage());\n}\nFigure6.11Inserting aCompleted OrderintotheDatabase", "250": "216 CHAPTER (}\nDBDudes writesotherJDBCcodeandstoredprocedures foralloftheremain\u00ad\ningtasks.Theyusecodesimilartosomeofthefragments thatwehaveseenin\nthischapter.\nIIEstablishing aconnection toadatabase, asshowninFigure6.2.\nIIAddingnewbookstotheinventory, a'3showninFigure6.3.\nIIProcessing resultsfromSQLqueries a'3showninFigure6.4-\nIIForeachcustomer, showing howmanyordersheorshehasplaced. We\nshowedasamplestoredprocedure forthisqueryinFigure6.8.\nIIIncrea'3ing theavailable number ofcopiesofabookbyaddinginventory,\nasshowninFigure6.9.\nIIRanking customers according totheirpurchases, asshowninFigure6.10.\nDBDudcs takescaretomaketheapplication robustbyprocessing exceptions\nandwarnings, asshowninFigure6.6.\nDBDudes alsodecidetowriteatrigger,whichisshowninFigure6.12.When\u00ad\neveraneworderisenteredintotheOrderstable,itisinserted with ship~date\nsettoNULL.Thetriggerprocesses eachrowintheorderandcallsthestored\nprocedure 'UpdateShipDate'. Thisstoredprocedure (whosecodeisnotshown\nhere)updates the(anticipated) ship_date oftheneworderto'tomorrow', in\ncaseqtyjlLstock ofthecorresponding bookintheBookstableisgreaterthan\nzero.Otherwise, thestoredprocedmesetstheship_date totwoweeks.\nCREATE TRIGGER update_ShipDate\nAFTERINSERT ONOrders\nFOREACHROW\nBEGINCALLUpdatcShipDate(new); END1*Event*j\n1*Action*j\nFigure6.12TriggertoUpdatetheShipping DateofNewOrders\n6.7REVIEW QUESTIONS\nAnswers tothei'eviewquestions canbefoundinthelistedsections.\nlYlvVhyisitnotstraightforward tointegrate SQLquerieswithahostpro\u00ad\ngramming language? (Section 6.1.1)\nIIiiHowdowedeclarevariables inErnbcdded SQL?(Section 6.1.1)", "251": "Database Applicat'ion Deuelop'Tnent 217\n'*\n\u2022HowdoweuseSQLstatements withinahostlangl.lage? Howdowecheck\nforerrorsinstatement execution? (Section 6.1.1)\n\u2022Explain theimpedance mismatch between hostlanguages andSQL,and\ndescribe howcursorsaddressthis.(Section 6.1.2)\n\u2022'\\Thatproperties cancursorshave?(Section 6.1.2)\n\u2022WhatisDynamic SQLandhowisitdifferent fromEmbedded SQL?(Sec\u00ad\ntion6.1.3)\n\u2022WhatisJDBCandwhatareitsadvantages? (Section 6.2)\n\u2022Whatarethecomponents oftheJDBCarchitecture? Describe fourdiffer\u00ad\nentarchitectural alternatives forJDBCdrivers.(Section 6.2.1)\n\u2022HowdoweloadJDBCdriversinJavacode?(Section 6.3.1)\n\u2022Howdowemanage connections todatasources? Whatproperties can\nconnections have?(Section 6.3.2)\n\u2022Whatalternatives doesJDBCprovideforexecuting SQLDMLandDDL\nstatements? (Section 6.3.3)\n\u2022Howdowehandleexceptions andwarnings inJDBC?(Section 6.3.5)\n\u2022'Whatfunctionality provides theDatabaseMetaDataclass? (Section 6.3.6)\n\u2022WhatisSQLJandhowisitdifferent fromJDBC?(Section 6.4)\n\u2022vVhyarestoredprocedures important? Howdowedeclarestoredproce\u00ad\nduresandhowaretheycalledfromapplication code?(Section 6.5)\nEXERCISES\nExercise 6.1Brieflyanswerthefollowing questions.\n1.Explain thefollowing terms:Cursor,Embedded SQL,JDBC,SQLJ,storedprocedure.\n2.Whatarethedifferences between JDBCandSQLJ?\\Nhydotheybothexist?\n3.Explain thetermstoredprocedure, andgiveexamples whystoredprocedures areuseful.\nExercise 6.2Explain howthefollowing stepsareperformed inJDBC:\n1.Connect toadatasource.\n2.Start,commit, andaborttransactions.\n3.Callastoredprocedure.\nHowarethesestepsperformed inSQLJ?", "252": "218 CHAPTER (:)\nExercise 6.3Compare exception handling andhandling ofwarnings illembedded SQL,dy\u00ad\nnamicSQL,.IDBC,andSQL.I.\nExercise 6.4Answerthefollowing questions.\n1.Whydoweneedaprecompiler totranslate embedded SQLandSQL.J?Whydowenot\nneedaprecompiler for.IDBC?\n2.SQL.Jandembedded SQLusevariables inthehostlanguage topassparameters toSQL\nqueries, whereas .JDBCusesplaceholders markedwitha''1'.Explain thedifference, and\nwhythedifferent mechanisms areneeded.\nExercise 6.5Adynamic websitegenerates HTMLpagesfrominformation storedina\ndatabase. Whenever apageisrequested, isitdynamically assembled fromstaticdataand\ndatainadatabase, resulting inadatabase access. Connecting tothedatabase isusually\natime~consuming process, sinceresources needtobeallocated, andtheuserneedstobe\nauthenticated. Therefore, connection pooling--setting upapoolofpersistent database\nconnections andthenreusingthemfordifferent requests cansignificantly improve theper\u00ad\nformance ofdatabase-backed websites. Sinceservlets cankeepinformation beyond single\nrequests, wecancreateaconnection pool,andallocate resources fromittonewrequests.\nWriteaconnection poolclassthatprovides thefollowing methods:\nIIICreatethepoolwithaspecified number ofopenconnections tothedatabase system.\n11IIObtainanopenconnection fromthepool.\nIIIRelease aconnection tothepool.\nIIIDestroy thepoolandcloseallconnections.\nPROJECT-BASED EXERCISES\nInthefollowing exercises, youwillcreatedatabase-backed applications. Inthischapter, you\nwillcreatethepartsoftheapplication thataccessthedatabase. Inthenextchapter, you\nwillextendthiscodetoother&'3pectsoftheapplication. Detailed information aboutthese\nexercises andmaterial formoreexercises canbefoundonlineat\nhttp://www.cs.wisc.edu/-dbbook\nExercise 6.6RecalltheNotown Records database thatyouworkedwithinExercise 2.5and\nExercise 3.15.Youhavenowbeentaskedwithdesigning awebsite forNotown. Itshould\nprovidethefollowing functionality:\nIIIUsen;cansem'chforrecordsbynameofthemusician, titleofthealbum,andBameof\nthesong.\n11IIUserscanregister withthesite,andregistered usersca.nlogontothesite.Oncelogged\non,usersshouldnothavetologonagainunlesstheyareinactive foralongtime.\nIIIUserswhohaveloggedontothesitecanadditemstoashopping basket.\n11IIUserswithitemsintheirshopping basketcancheckoutandma.keapurchase.", "253": "Database Apphcation De'velopment 219\nNOtOWIl wantstouseJDBCtoaccessthedatab&<;e, \\\u00a5rite.JDBCcodethatperforms the\nnecessary dataaccessandmanipulation. Youwillintegrate thiscodewithapplication logic\nandpresentation inthenextchapter.\nIfNotown hadchosenSQLJinsteadofJDBC,howwouldyourcodechange?\nExercise 6.7Recallthedatabase schema forPrescriptions-R-X thatyoucreated inExer~\ncise2.7.ThePrescriptions-R-X chainofpharmacies hasnowengaged youtodesigntheir\nnewwebsite. Thewebsite hastwodifferent classesofusers:doctorsandpatients. Doctors\nshouldbeabletoenternewprescriptions fortheirpatients andmodifyexisting prescriptions.\nPatients shouldbeabletodeclarethemselves aspatients ofadoctor;theyshouldbeable\ntocheckthestatusoftheirprescriptions online;andtheyshouldbeabletopurchase the\nprescriptions onlinesothatthedrugscanbeshipped totheirhomeaddress.\nFollowtheanalogous stepsfromExercise 6.6towriteJDBCcodethatperforms thenec\u00ad\nessarydataaccessandmanipulation. Youwillintegrate thiscodewithapplication logicand\npresentation inthenextchapter.\nExercise 6.8Recalltheuniversity database schemathatyouworkedwithinExercise 5.l.\nTheuniversity hasdecided tomoveenrollment toanonlinesystem. Thewebsite hastwo\ndifferent classesofusers:facultyandstudents. Faculty shouldbeabletocreatenewcourses\nanddeleteexisting courses, andstudents shouldbeabletoenrollinexisting courses.\nFollowtheanalogous stepsfromExercise 6.6towriteJDBCcodethatperforms thenec\u00ad\nessarydataaccessandmanipulation. Youwillintegrate thiscodewithapplication logicand\npresentation inthenextchapter.\nExercise 6.9Recalltheairlinereservation schemathatyouworkedoninExercise 5.3.De\u00ad\nsignanonlineairlinereservation system. Thereservation systemwillhavetwotypesofusers:\nairlineemployees, andairlinepassengers. Airlineemployees canschedule newflightsandcan\u00ad\ncelexisting flights.Airlinepassengers canbookexisting flightsfromagivendestination.\nFollowtheanalogous stepsfromExercise 6.6towriteJDBCcodethatperforms thenec\u00ad\nessarydataaccessandmanipulation. Youwillintegrate thiscodewithapplication logicand\npresentation inthenextchapter.\nBIBLIOGRAPHIC NOTES\nInformation onODBCcanbefoundonMicrosoft's webpage(www.microsoft.com/data/ odbc),\nandinformation onJDBCcanbefoundontlwJavawebpage(java.sun.com/products/jdbc).\nThereexistrnanybooksonODBC,forexample, Sanders' ODBCDeveloper's Guicle[652]and\nthelvIicrosoft ODBCSDK[5:3;3].BooksonJDBCinclude worksbyHamilton etal.[359],\nReese[621],andWhiteeta!.[773].", "254": "7\nINTERNET APPLICATIONS\nItHowdowenameresources ontheInternet?\nItHowdoWebbrowsers andwebservers communicate?\nItHowdowepresentdocuments ontheInternet? Howdowedifferen\u00ad\ntiatebetween formatting andcontent?\nItWhatisathree-tier application architecture? Howdowewritethree\u00ad\ntieredapplications?\nItWhydowehaveapplication servers?\n..Keyconcepts: Uniform Resource Identifiers (URI),Uniform Re.\u00ad\nsourceLocators (URL);Hypertext Transfer Protocol (HTTP), state\u00ad\nlessprotocol; Java;HTML;XML,XMLDTD;three-tier architecture,\nclient-server architecture; HTMLforms;JavaScript; cascading style\nsheets,XSL;application server;Common Gateway Interface (CGI);\nservlet;JavaServer Page(JSP);cookie\nWow!They've gottheInternet oncomputers now!\n--Homer Simpson, TheSimpsons\n7.1INTROpUCTION\nTheproliferation ofcomputer networks, including theInternet andcorporate\n'intranets,' hasenabled userstoaccessalargenumber ofdatasources. This\nincreased accesstodatabases islikelytohaveagreatpractical impact;data\nandservices cannowbeoffereddirectly tocustomers inwaysimpossible until\n220", "255": "Intc'T7wt Applications 221\nrecently. Examples ofsuchelectronic commerce rtpplications includepur\u00ad\nchasingbooksthrough a\\Vebretailersuch <1.'3Amazon.com, engaging inonline\nauctions atasite such aseBay,andexchanging bids andspecifications for\nproducts between companies. Theemergence ofstandards suchasXrvILfor\ndescribing thecontent ofdocuments islikelytofurtheraccelerate electronic\ncommerce andotheronlineapplications.\nWhilethefirstgeneration ofInternet siteswerecollections ofHTMLfiles,most\nmajorsitestodaystorealargepart(ifnotall)oftheirdataindatabase systems.\nTheyrelyonDBMSstoprovidefast,reliableresponses touserrequests received\novertheInternet. Thisisespecially trueofsitesforelectronic commerce and\notherbusiness applications.\nInthischapter, wepresentanoverview ofconcepts thatarecentraltoInternet\napplication development. Westartoutwithabasicoverview ofhowtheInternet\nworksinSection7.2.Weintroduce HTMLandXML,twodataformatsthatare\nusedtopresentdataontheInternet, inSections 7.3and7.4.InSection7.5,we\nintroduce three-tier architectures, awayofstructuring Internet applications\nintodifferent layersthatencapsulate different functionality. InSections 7.6\nand7.7,wedescribe thepresentation layerandthemiddlelayerindetail;the\nDBMSisthethirdlayer.Weconclude thechapterbydiscussing ourB&Ncase\nstudyinSection7.8.\nExamples thatappearinthischapterareavailable onlineat\nhttp://www.cs.wisc.edu/-dbbook\n7.2INTERNET CONCEPTS\nTheInternet hasemerged asauniversal connector between globallydistributed\nsoftware systems. Tounderstand howitworks,webeginbydiscussing twoba\"lic\nissues:howsitesontheInternet areidentified, andhowprograms atonesite\ncommunicate withothersites.\nvVefirstintroduce Uniform Resource Identifiers, anamingschemaforlocating\nresources ontheInternet inSection7.2.1.\\Vethentalkaboutthemostpopular\nprotocol foraccessing resources overtheVv\"eh,thehypertext transfer protocol\n(HTTP) inSe(tion7.2.2.\n7.2.1Uniform Resource Identifiers\nUniform Resource Identifiers (URIs), arestringsthatuniquely identify\nresources 011theInternet. Aresource isanykindofinformation thatcan", "256": "222 CHAPTER 7;\nj;istributed Applications andService-Oriented Architectures:\nI~headventofXML,duetoitsloosely-coupled nature,hasmade\u00b7infor\u00ad\nmationexchange between different applications feasibletoanextentprevi\u00ad\nouslyunseen.ByusingXMLforinformation exchange, applications canbe\nwrittenindifferent programming languages, runondifferent operating sys\u00ad\ntems,andyettheycanstillshareinformation witheachother.Thereare\nalsostandards forexternally describing theintended contentofanXML\nfileormessage, mostnotablytherecently adopted W3CXMLSchemas\nstandard.\nApromising conceptthathasarisenoutoftheXMLrevolution isthenotion\nofaWebservice. AWebserviceisanapplication thatprovides awell\u00ad\ndefinedservice,packaged asasetofremotely callableprocedures accessible\nthrough theInternet. Webserviceshavethepotential toenablepowerful\nnewapplications bycomposing existing Webservices-all communicating\nseamlessly thankstotheuseofstandardizedXML-based information ex\u00ad\nchange. Severaltechnologies havebeendeveloped orarecurrently under\ndevelopment thatfacilitate designandimplementation ofdistributed ap\u00ad\nplications. SOAPisaW3Cstandard forXML-based invocation ofremote\nservices(thinkXMLRPC)thatallowsdistributed applications tocommu\u00ad\nnicateeithersynchronously orasynchronously viastructured, typedXML\nmessages. SOAPcallscanrideonavarietyofunderlying transport layers,\nincluding HTTP(partofwhatismakingSOAPsosuccessful) andvari\u00ad\nousreliablemessaging layers.Related totheSOAPstandard areW3C's\nWebServices Description Language (WSDL) fordescribing Web\nservice interfaces, andUniversal Description, Dis.;;overy, andInte\u00ad\ngration (UDDI), aWSDL-based Webservicesregistrystandard (think\nyellowpagesforWebservices).\nSOAP-based Webservices arethefoundation forMicrosoft's recently re\u00ad\nleased.NETframework, theirapplication development infrastructure and\nassociated run-time systemfordeveloping distributed applications, aswell\nasfortheWebservicesofferings ofmajorsoftware vendors suchasIBM,\nBEA,andothers.Manylargesoftware application vendors(majorcompa\u00ad\nnieslikePeopleSoft andSAP)haveannounced planstoprovideWebservice\ninterfaces totheirproducts andthedatathattheymanage, andmanyare\nhopingthatXMLandWebserviceswillfinallyprovidetheanswertothe\nlong-standing problem ofenterprise application integration. Webservices\narealsobeinglookedtoasanaturalfoundation forthenextgeneration of\nbusiness processmanagement (orworkflow) systems.", "257": "Internet Applications 223\nbeidentified byaURI,andexamples includewebpages, images,downloadable\nfiles,servicesthatcanberemotely invoked, mailboxes, andsoon.Themost\ncommon kindofresource isastaticfile(suchasaHTMLdocument), buta\nresource mayalsobeadynamically-generated HTMLfile,amovie,theoutput\nofaprogram, etc.\nAURIhasthreeparts:\n\u2022The(nameofthe)protocol usedtoaccesstheresource.\n\u2022Thehostcomputer wheretheresource islocated.\n\u2022Thepathnameoftheresource itselfonthehostcomputer.\nConsider anexample URI,suchashttp://www.bookstore.com/index .html.\nThisURIcanbeinterpreted asfollows. UsetheHTTPprotocol (explained in\nthenextsection)toretrievethedocument index.htmllocatedatthecomputer\nwww.bookstore.com.This example URIisaninstance ofaUniversal Re\u00ad\nsourceLocator (URL), asubsetofthemoregeneralURInamingscheme;\nthedistinction isnotimportant forourpurposes. Asanother example, the\nfollowing HTMLfragment showsaURIthatisanemailaddress:\n<ahref=lImailto:webmaster@bookstore.comll>Emailthewebmaster.</A>\n7.2.2TheHypertext Transfer Protocol (HTTP)\nAcommunication protocol isasetofstandards thatdefinesthestructure\nofmessages between twocommunicating partiessothattheycanunderstand\neachother'smessages. TheHypertext Transfer Protocol (HTTP) isthe\nmostcommon communication protocol usedovertheInternet.Itisaclient\u00ad\nserverprotocol inwhichaclient(usually aWebbrowser) sendsarequesttoan\nHTTPserver,whichsendsaresponse backtotheclient.Whenauserrequests\nawebpage (e.g.,clicksonahyperlink), thebrowser sendsHTTPrequest\nmessages fortheobjectsinthepagetotheserver.Theserverreceives the\nrequests andresponds withHTTPresponse messages, whichincludethe\nobjects. Itisimportant torecognize thatHTTPisusedtotransmit allkinds\nofresources, notjustfiles,butmostresources ontheInternet todayareeither\nstaticfilesor:(lIesoutputfromserver-side scripts.\nAvariantoftheHTTPprotocol calledtheSecure Sockets Layer(SSL)\nprotocol usesencryption toexchange information securely between clientand\nserver.Wepostpone adiscussion ofSSLtoSection21.5.2andpresentthebasic\nHTTPprotocol inthischapter.", "258": "224 CHAPTER\nAsanexample, consider whathappens ifauserclicksonthefollowing link:\nhttp://www.bookstore.com/index .html.'Wefirstexplainthestructure ofan\nHTTPrequestmessage andthenthestructure ofanHTTPresponse message.\nHTTPRequests\nTheclient(\\\\Tebbrowser) establishes aconnection withthewebserverthat\nhoststheresource andsendsaHTTPrequestmessage. Thefollowing example\nshowsasampleHTTPrequestmessage:\nGETindex.html HTTP/l.l\nUser-agent: Mozilla/4.0\nAccept: text/html, image/gif, image/jpeg\nThegeneralstructure ofanHTTPrequestconsists ofseverallinesofASCII\ntext,withanemptylineattheend.Thefirstline,therequest line,hasthree\nfields:theHTTPmethod field,theURIfield,andtheHTTPversion\nfield.Themethod fieldcantakeonvaluesGETandPOST; intheexam\u00ad\nplethemessage requests theobjectindex.html.(Wediscussthedifferences\nbetween HTTP GETandHTTPPOSTindetailinSection7.11.)Theversion\nfieldindicates whichversionofHTTPisusedbytheclientandcanbeused\nforfutureextensions oftheprotocol. Theuseragentindicates thetypeof\ntheclient(e.g.,versions ofNetscapeorInternet Explorer); wedonotdiscuss\nthisoptionfurther. Thethirdline,starting withAccept, indicates whattypes\noffilestheclientiswillingtoaccept. Forexample, ifthepageindex.html\ncontains amoviefilewiththeextension .mpg,theserverwillnotsendthisfile\ntotheclient,astheclientisnotreadytoacceptit.\nHTTPResponses\nTheserverresponds withanHTTPresponse message.Itretrieves tht:page\nindex.html,usesittoassemble theHTTPresponse message, andsendsthe\nmessage totheclient.AsampleHTTPresponse lookslikethis:\nHTTP/l.l 200OK\nDate:Mon,04Mar200212:00:00 GMT\nContent-Length: 1024\nContent-Type: text/html\nLast-Modified: Mall,22JUIl199809:23:24 GMT\n<HTML>\n<HEAD>\n</HEAD>\n<BODY>", "259": "Internet Applications\n<H1>Barns andNobbleInternet Bookstore</H1>\nOurinventory:\n<H3>Science</H3>\n<B>TheCharacter ofPhysical Law</B>225\nTheHTTPresponse message hasthreeparts:astatusline,severalheader\nlines,andthebodyofthemessage (whichcontains theactualobjectthatthe\nclientrequested). Thestatuslinehasthreefields(analogous totherequest\nlineoftheHTTPrequestmessage): theHTTPversion(HTTP/1.1), astatus\ncode(200),andanassociated servermessage (OK).Common statuscodesand\nassociated messages are:\n\u2022200OK:Therequestsucceeded andtheobjectiscontained inthebodyof\ntheresponse message\";\n\u2022400BadRequest: Agenericerrorcodeindicating thattherequestcould\nnotbefulfilledbytheserver.\n\u2022404NotFound:Therequested objectdoesnotexistontheserver.\n\u2022505HTTPVersion NotSupported: TheHTTPprotocol versionthatthe\nclientusesisnotsupported bytheserver.(RecallthattheHTTPprotocol\nversionsentintheclient'srequest.)\nOurexample hasthreeheader lines:Thedateheaderlineindicates thetime\nanddatewhentheHTTPresponse wascreated(notthatthisisnottheobject\ncreation time).TheLast-Modified headerlineindicates whentheobjectwas\ncreated. TheContent-Length headerlineindicates thenumberofbytesinthe\nobjectbeingsentafterthelastheaderline.TheContent-Type headerline\nindicates thattheobjectintheentitybodyisHTMLtext.\nTheclient(theWebbrowser) receivestheresponse message, extractstheHTML\nfile,parsesit,anddisplays it.Indoingso,itmightfindadditional URIsinthe\nfile,anditthenusestheHTTPprotocol toretrieve eachoftheseresources,\nestablishing anewconnection eachtime.\nOneimportant issueisthattheHTTPprotocol isastateless protocol. Every\nmessage----from, theclienttotheHTTPserverandvice-versa-is self-contained,\nandtheconnection established witharequest ismaintained onlyuntilthe\nresponse message issent.Theprotocol provides nomechanism toautomatically\n'remember' previous interactions between clientandserver.\nThestateless natureoftheHTTPprotocol hasamajorimpactonhowInter\u00ad\nnetapplications arewritten. Consider auserwhointeracts withourexalIlple", "260": "226 CHAPTER ,7\nbookstore application. Assumethatthebookstore permits userstologinto\nthesiteandthencarryoutseveralactions,suchasordering booksorchanging\ntheiraddress, without logginginagain(untiltheloginexpiresortheuserlogs\nout).Howdowekeeptrackofwhether auserisloggedinornot?SinceHTTP\nisstateless, wecannotswitchtoadifferent state(saythe'loggedin'state)at\ntheprotocol level.Instead, foreveryrequestthattheuser(moreprecisely, his\norherWebbrowser) sendstotheserver,wemustencodeanystateinformation\nrequired bytheapplication, suchastheuser'sloginstatus.Alternatively, the\nserver-side application codemustmaintain thisstateinformation andlookit\nuponaper-request basis.Thisissueisexplored furtherinSection7.7.5.\nNotethatthestatelessness ofHTTPisatradeoff between easeofimplementa\u00ad\ntionoftheHTTPprotocol andeaseofapplication development. Thedesigners\nofHTTPchosetokeeptheprotocol itselfsimple,anddeferred anyfunctionality\nbeyondtherequestofobjectstoapplication layersabovetheHTTPprotocol.\n7.3HTMLDOCUMENTS\nInthissectionandthenext,wefocusonintroducing HTMLandXML.In\nSection7.6,weconsider howapplications canuseHTMLandXMLtocreate\nformsthatcaptureuserinput,communicate withanHTTPserver,andconvert\ntheresultsproduced bythedatamanagement layerintooneoftheseformats.\nHTMLisasimplelanguage usedtodescribe adocument. Itisalsocalleda\nmarkup language because HTMLworksbyaugmenting regulartextwith\n'marks'thatholdspecialmeaning foraWebbrowser. Commands inthelan\u00ad\nguage,calledtags,consist(usually) ofastarttagandanendtagofthe\nform<TAG>and</TAG>, respectively. Forexample, consider theHTMLfrag\u00ad\nmentshowninFigure7.1.Itdescribes awebpage thatshowsalistofbooks.\nThedocument isenclosed bythetags<HTML>and</HTML>, marking itasan\nHTMLdocument. Theremainder ofthedocument-enclosed in<BODY>...\n</BoDY>-contains information aboutthreebooks.Dataabouteachbookis\nrepresented asanunordered list(UL)whoseentriesaremarked withtheLI\ntag.HTMLdefinesthesetofvalidtagsaswell8.'3themeaning ofthetags.:For\nexample, HTMLspecifies thatthetag<TITLE> isavalidtagthatdenotesthe\ntitleofthedocument. Asanother example, thetag<UL>alwaysdenotesan\nunordered list.\nAudio,video,andevenprograms (written inJava,ahighlyportable language)\ncanbeincluded inHTMLdocuments. vVhenauserretrieves suchadocument\nusingasuitable browser, imagesinthedocument arcdisplayed, audioandvideo\nclipsareplayed,andembedded programs areexecuted attheuset'smachine;\ntheresultisarichmultimedia presentation. Thee8.\"iewithwhichHTMLdocu-", "261": "Internet Applications\n<HTML>\n<HEAD>\n</HEAD>\n<BODY>\n<Hl>Barns andNobbleInternet Bookstore</Hl>\nOurinventory:\n<H3>Science</H3>\n<B>TheCharacter ofPhysical Law</B>\n<UL>\n<LI>Author: Richard Feynman</LI>\n<LI>Published 1980</LI>\n<Ll>Hardcover</LI>\n</UL>\n<H3>Fiction</H3>\n<B>Waiting fortheMahatma</B>\n<UL>\n<LI>Author: R.K.Narayan</LI>\n<LI>Published 1981</Ll>\n</UL>\n<B>TheEnglishTeacher</B>\n<UL>\n<LI>Author: R.K.Narayan</LI>\n<LI>Published 1980</LI>\n<LI>Paperback</LI>\n</UL>\n</BODY>\n</HTML>\nFigure7.1BookListinginHTML227\u00bb\nmentscanbecreated--there arenowvisualeditorsthatautomatically generate\nHTML----and accessed usingInternet browsers hasfueledtheexplosive growth\noftheWeb.\n7.4XMLDOCUMENTS\nInthissection, weintroduce XMLa.'3adocument format,andconsider how\napplications canutilizeXML.Managing XMLdocuments inaDBMSposes\nseveralnewchallenges; wediscussthisa.'3pectofXMLinChapter 27.", "262": "228 CHAPTERl\nvVhileHTl\\.fLcanbeusedtomarkupdocuments fordisplaypurposes, itis\nnotadequate todescribe thestructure ofthecontentformoregeneralapplica\u00ad\ntions.Forexample, wecansendtheHTMLdocument showninFigure7.1to\nanother application thatdisplays it,butthesecondapplication cannotdistin\u00ad\nguishthefirstnamesofauthors fromtheirlastnames.(Theapplication can\ntrytorecoversuchinformation bylookingatthetextinsidethetags,butthis\ndefeatsthepurpose ofusingtagstodescribe document structure.) Therefore,\nHTMLisunsuitable fortheexchange ofcomplex documents containing product\nspecifications orbids,forexample.\nExtensible Markup Language (XML) isamarkup language developed to\nremedytheshortcomings ofHTML. Incontrast toafixedsetoftagswhose\nmeaning isspecified bythelanguage (asinHTML), XMLallowsuserstode\u00ad\nfinenewcollections oftagsthatcanbeusedtostructure anytypeofdataor\ndocument theuserwishestotransmit. XMLisanimportant bridgebetween\nthedocument-oriented viewofdataimplicitinHTMLandtheschema-oriented\nviewofdatathatiscentraltoaDBMS.Ithasthepotential tomakedatabase\nsystems moretightlyintegrated intoWebapplications thaneverbefore.\nXMLemerged fromtheconfluence oftwotechnologies, SGMLandHTML.The\nStandard Generalized Markup Language (SGML) isametalanguage\nthatallowsthedefinition ofdataanddocument interchange languages suchas\nHTML.TheSGMLstandard waspublished in1988,andmanyorganizations\nthatrnanagealargenumberofcomplex documents haveadopted it.Duetoits\ngenerality, SGMLiscomplex andrequires sophisticated programs toharness\nitsfullpotential. XMLwasdeveloped tohavemuchofthepowerofSGML\nwhileremaining relatively simple. Nonetheless, XML,likeSGML,allowsthe\ndefinition ofnewdocument markup languages.\nAlthough XMLdoesnotprevent auserfromdesigning tagsthatencodethe\ndisplayofthedatainaWebbrowser, thereisastylelanguage forXMLcalled\nExtensible StyleLanguage (XSL). XSLisastandard wayofdescribing\nhowanXMLdocmnent thatadherestoacertainvocabulary oftagsshouldbe\ndisplayed.\n7.4.1Introduction toXML\nVveusethesmaJIXMLdocmnent showninFigure7.2a,sanexample.\n11IIElements: Elements, alsocalledtags,a.rctheprimary building blocksof\nanXMLdocmnent. Thestartofthecontentofanelement ELMismarked\nwith<ELM>,whichiscalledthestarttag,andtheendofthecontentend\nismarkedwith</ELM>, calledtheendtag.Inourexample document.", "263": "Internet Applicai'ions 229\nTheDesignGoalsofXML: XMLwa..\"ldeveloped'startingin 1996bya\nworking groupunderguidance ofthe';YorldWideWebConsortium (W3C)\nXMLSpecialInterest Group. ThedesigngoalsforXMLincluded the\nfollowing:\n1.XMLshouldbecompatible withSGML.\n2.Itshouldbeeasytowriteprograms thatprocessXMLdocuments.\n3.ThedesignofXMLshouldbeformalandconcise.\ntheelement BOOKLIST encloses allinformation inthesampledocument.\nTheelement BOOKdemarcates alldataassociated withasinglebook.\nXMLelements arecasesensitive: theelement BOOKisdifferent from\nBook.Elements mustbeproperly nested.Starttagsthatappearinside\nthecontentofothertagsmusthaveacorresponding endtag.Forexample,\nconsider thefollowing XMLfragment:\n<BOOK>\n<AUTHOR>\n<FIRSTNAME> Richard</FIRSTNAME>\n<LASTNAME>Feynluan</LASTNAME>\n</AUTHOR>\n</BOOK>\nTheelement AUTHORiscompletely nestedinsidetheelement BOOK,and\nboththeelements LASTNAME andFIRSTNAME arenestedinsidetheelement\nAUTHOR.\n..Attributes: Anelement canhavedescriptive attributes thatprovidead\u00ad\nditional information abouttheelement. Thevaluesofattributes areset\ninsidethestarttagofanelement. Forexample, letELMdenoteanelement\nwiththeattribute att.Wecansetthevalueofatttovaluethrough the\nfollowing expression: <ELMatt=\"value II>.Allattribute valuesmustbe\nenclosed inquotes. InFigure7.2,theelement BOOKhastwoattributes.\nTheattribute GENREindicates thegenreofthebook(science orfiction)\nandtheattribute FORMATindicates whether thebookisahardcover ora\npaperback.\nIIIEntityReferences: Entities areshortcuts forportions ofcommon textor\nthecontent of external files,andwecalltheusageofanentityintheXML\ndocument anentityreference. Wherever anentityreference appears in\nthedocument, itistextually replaced byitscontent. Entityreferences\nstartwitha'&'andendwitha';'.Fivepredefined entitiesinXMLare\nplaceholders forchara.cters withspecialmeaning inXML.Forexample, the", "264": "230 CHAPTER~7\n<?xmlversion=11.0\" encoding=\"UTF-SIlstandalone=ll yesll?>\n<BOOKLIST>\n<BOOKGENRE=\" Science\" FORMAT=\"Hardcover\" >\n<AUTHOR>\n<FIRSTNAME> Richard </FIRSTNAME>\n<LASTNAME>Feynman</LASTNAME>\n</AUTHOR>\n<TITLE>The Character ofPhysical Law</TITLE>\n<PUBLISHED>1980</PUBLISHED>\n</BOOK>\n<BOOK> GENRE=\" Fiction\" >\n<AUTHOR>\n<FIRSTNAME>R.K.</FIRSTNAME>\n<LASTNAME>Narayan</LASTNAME>\n</AUTHOR>\n<TITLE> Waiting fortheMahatma</TITLE>\n<PUBLISHED>1981</PUBLISHED>\n</BOOK>\n<BOOKGENRE=\" Fiction\" >\n<AUTHOR>\n<FIRSTNAME>R.K.</FIRSTNAME>\n<LASTNAME>Narayan</LASTNAME>\n</AUTHOR>\n<TITLE>The English Teacher</TITLE>\n<PUBLISHED> 1980</PUBLISHED>\n</BOOK>\n</BOOKLIST>\nFigure 7.2BookInformation inXML\n<character thatmarksthebeginning ofanXMLcommand isreserved and\nhastoberepresented bytheentityIt.Theotherfourreserved characters\nare&,>,\",and';theyarerepresented bytheentities amp,gt,quot,\nandapos.Forexample, thetext'1<5'hastobeencoded inanXML\ndocument &'3follows: &apos;1&1t ;5&apos;. Wecanalsouseentitiesto\ninsertarbitrary Unicode characters intothetext.Unicode isastandard\nforcharacter representations, similartoASCII.Forexample, wecandisplay\ntheJapanese Hiragana character ausingtheentityreference &#x3042.\n\u2022Comments: Wecaninsertcomments anywhere inanXMLdocument.\nComments startwith<!-andendwith->.Comments cancontain arbi\u00ad\ntrarytextexceptthestring--.", "265": "Internet Applications\n\u2022Document TypeDeclarations (DTDs): InXML,wecandefineour\nownmarkup language. ADTDisasetofrulesthatallowsustospecify\nourownsetofelements, attributes, andentities. Thus,aDTDisbasically\nagrammar thatindicates whattagsareallowed, inwhatordertheycan\nappear,andhowtheycanbenested. WediscussDTDsindetailinthe\nnextsection.\nWecallanXMLdocument well-formed ifithasnoassociated DTDbut\nfollowsthesestructural guidelines:\n\u2022Thedocument startswithanXMLdeclaration. Anexample ofanXML\ndeclaration isthefirstlineoftheXMLdocument showninFigure7.2.\n\u2022 Arootelement contains alltheotherelements. Inourexample, theroot\nelement istheelement BOOKLIST.\n\u2022Allelements mustbeproperly nested.Thisrequirement statesthatstart\nandendtagsofanelementmustappearwithinthesameenclosing element.\n7.4.2XMLDTDs\nADTDisasetofrulesthatallowsustospecifyourownsetofelements,\nattributes, andentities. ADTDspecifies whichelements wecanuseandcon\u00ad\nstraintsontheseelements, forexample, howelements canbenestedandwhere\nelements canappearinthedocument. Wecalladocument validifaDTDis\nassociated withitandthedocument isstructured according totherulessetby\ntheDTD.Intheremainder ofthissection, weusetheexample DTDshownin\nFigure7.3toillustrate howtoconstruct DTDs.\n<!DOCTYPE BOOKLIST [\n<!ELEMENT BOOKLIST (BOOK)*>\n<!ELEMENT BOOK(AUTHOR,TITLE,PUBLISHED?\u00bb\n<!ELEMENT AUTHOR (FIRSTNAME,LASTNAME\u00bb\n<!ELEMENT FIRSTNAME (#PCDATA\u00bb\n<!ELEMENT LASTNAME (#PCDATA\u00bb\n<!ELEMENT TITLE (#PCDATA\u00bb\n<!ELEMENT PUBLISHED (#PCDATA\u00bb\n<!ATTLIST BOOKGENRE (ScienceIFiction) #REQUIRED>\n<!ATTLIST BOOKFORMAT (PaperbackIHardcover) \"Paperback\">\n]>\nFigure 7.3Bookstore XMLDTD", "266": "232 CHAPTER .;{\nADTDisenclosed in<!DOCTYPE name[DTDdeclarationJ >,wherenameis\nthenameoftheoutermost enclosing tag,andDTDdeclaration isthetextof\ntherulesoftheDTD.TheDTDstartswiththeoutermost element---the root\nelenwnt--which isBOOKLIST inourexample. Consider thenextrule:\n<!ELEMENT BOOKLIST (BOOK)*>\nThisruletellsusthattheelement BOOKLIST consists ofzeroormoreBOOK\nelements. The*afterBOOKindicates howmanyBOOKelements canappear\ninsidetheBOOKLIST element. A*denoteszeroormoreoccurrences, a+denotes\noneormoreoccurrences, anda?denoteszerooroneoccurrence. Forexample,\nifwewanttoensurethataBOOKLIST hasatleastonebook,wecouldchange\ntheruleasfollows:\n<!ELEMENT BOOKLIST (BOOK)+>\nLetuslookatthenextrule:\n<!ELEMENT BOOK(AUTHOR,TITLE,PUBLISHED?\u00bb\nThisrulestatesthataBOOKelement contains aAUTHORelement, aTITLEele\u00ad\nment,andanoptional PUBLISHED clement. Notetheuseofthe?toindicate\nthattheinformation isoptional byhavingzerooroneoccurrence oftheelement.\nLetusmoveaheadtothefollowing rule:\n<!ELEMENT LASTNAME (#PCDATA\u00bb\nUntilnowweconsidered onlyelements thatcontained otherelements. This\nrulestatesthatLASTNAME isanelementthatdoesnotcontainotherelements,\nbutcontains actualtext.Elements thatonlycontainotherelements aresaid\ntohaveelement content, whereas elements thatalsocontain #PCDATA are\n::laidtohavemixedcontent. Ingeneral, anelement typedeclaration hasthe\nfollowing structure:\n<!ELEMENT (contentType\u00bb\nFivepossible contenttypesare:\nIIIOtherelements.\nIIThespecialsyrnbol#PCDATA, whichindicates (parsed) character data.\nIIThespecialsymbolEMPTY,whichindicates thattheelementhasnocontent.\nElements thathavenocontentarenotrequired tohaveanendtag.\n11IIThespecialsymbol ANY,whichindicates thatanycontent ispermitted.\nThiscontentshouldbeavoidedwhenever possible ::linceitdisablesallcheck\u00ad\ningofthedocument structure insidetheelement.", "267": "Internet Apphcat'ions 2~3\n\u2022Aregular expression constructed fromthepreceding fourchoices. A\nregularexpression isoneofthefollowing:\n-expLexp2,exp3:Alistofregularexpressions.\n-exp*:Anoptional expression (zeroormoreoccurrences).\n-exp?:Anoptional expression (zerooroneoccurrences).\n-exp+:Amandatory expression (oneormoreoccurrences).\n-expl Iexp2:explorexp2.\nAttributes ofelements aredeclared outsidetheelement. Forexample, consider\nthefollowing attribute declaration fromFigure7.3:\n<!ATTLIST BOOKGENRE (ScienceIFiction) #REQUIRED\u00bb\nThisXMLDTDfragment specifies theattribute GENRE,whichisanattribute\noftheelement BOOK.Theattribute cantaketwovalues: ScienceorFiction.\nEachBOOKelement mustbedescribed initsstarttagbyaGENREattribute\nsincetheattribute isrequired asindicated by#REQUIRED. Letuslookatthe\ngeneralstructure ofaDTDattribute declaration:\n<!ATTLIST elementName (attName attType default)+>\nThekeyword ATTLIST indicates thebeginning ofanattribute declaration. The\nstringelementName isthenameoftheelement withwhichthefollowing at\u00ad\ntributedcfinition isassociated. Whatfollowsisthedeclaration ofoneormore\nattributes. Eachattribute hasaname,asindicated byattName, andatype,\nasindicated byattType. XMLdefinesseveralpossible typesforanattribute.\nWediscussonlystringtypesandenumerated typeshere.Anattribute of\ntypestringcantakeanystringasavalue.Wecandeclaresuchanattribute by\nsettingitstypefieldtoCDATA.F'orexample, wecandeclareathirdattribute of\ntypestringoftheelernent BOOKa.sfollows:\n<!ATTLIST BOOKedition CDATA\"1\">\nIfanattribute hasanenumerated type,welistallitspossible valuesinthe\nattribute declaration. Inourexample, theitttribute GENREisanenumerated\nattribute type;itspossible attribute valuesare'Science' and'Fiction'.\nThelastpart'Ofanattribute declaration iscalleditsdefault specification.\nTheDTDinFigure7.:3showstwodifferent defaultspecifications: #REQUIRED\nitndthestring'Pitperback'. Thedefaultspecification #REQUIRED indicates that\ntheattribute isrequired andwhenever itsassociated element itppears some\u00ad\nwhereintheXMLdocument ~tvaluefortheattribute mustbespecified. The\ndebultspecification indicated bythestring'Paperback' indicates thattheat\u00ad\ntributeisnotrequired; whenever itsa.')sociated element itppearswithout setting", "268": "234\n<?xmlversion=11.0\" encoding=IUTF-8\" standalone=\" no\"?>\n<!DOCTYPE BOOKLIST SYSTEM\" books.dtd\" >\n<BOOKLIST>\n<BOOKGENRE=\" Science\" FORMAT=\" Hardcover\" >\n<AUTHOR>\nFigure7.4BookInformation inXML\nXMLSchema: TheDTDmechanism hasseverallimitations, inspiteof\nitswidespread use.Forexample, elements andattributes cannotbeas\u00ad\nsignedtypesinaflexibleway,andelements arealwaysordered, evenifthe\napplication doesnotrequirethis.XMLSchema isanewW3Cproposal\nthatprovides amorepowerful waytodescribe document structure than\nDTDs;itisasuperset ofDTDs,allowing legacydatatobehandled eas\u00ad\nily.Aninteresting aspectisthatitsupports uniqueness andforeignkey\nconstraints.\navaluefortheattribute, theattribute automatically takesthevalue'Paper\u00ad\nback'.Forexample, wecanmaketheattribute value'Science' thedefaultvalue\nfortheGENREattribute asfollows:\n<!ATTLIST BOOKGENRE (ScienceIFiction) \"Science\" >\nInourbookstore example, theXMLdocument withareference totheDTDis\nshowninFigure7.4.\n7.4.3Domain-Specific DTDs\nRecently, DTDshavebeendeveloped forseveralspecialized domains-including\nawiderangeofcommercial, engineering, financial, industrial, andscientific\ndomains----and alotoftheexcitement aboutXMLh3...<;itsoriginsinthebelief\nthatmoreandmorestandardized DTDswillbedeveloped. Standardized DTDs\nwouldenableseamless dataexchange amongheterogeneous sources, aproblem\nsolvedtodayeitherbyimplementing specialized protocols suchasElectronic\nDataInterchange (EDI)orbyimplementing adhocsolutions.\nEveninanenvironment whereallXMLdataisvalid,itisnotpossible to\nstraightforwardly integrate severalXMLdocuments bymatching elements in\ntheirDTDs,because evenwhentwoelements haveidentical namesintwo\ndifferent DTDs,themeaning oftheelements couldbecompletely different.\nIfbothdocuments useasingle,standard DTD,weavoidthisproblem. The", "269": "Internet Applications 235\ndevelopment ofstandardized DTDsismoreasocialprocessthanaresearch\nproblem, sincethemajorplayersinagivendomainorindustry segment have\ntocollaborate.\nForexample, themathematical markup language (MathML) hasbeen\ndeveloped forencoding mathematical material ontheWeb.Therearetwo\ntypesofMathML elements. The28presentation elements describe thelay\u00ad\noutstructure ofadocument; examples arethemrowelement, whichindicates a\nhorizontal rowofcharacters, andthemsupelement, whichindicates abaseanda\nsubscript. The75content elements describe mathematical concepts. Anex\u00ad\nampleisthepluselement, whichdenotestheaddition operator. (Athirdtype\nofelement, themathelement, isusedtopassparameters totheMathML pro\u00ad\ncessor.) MathML allowsustoencodemathematical objectsinbothnotations\nsincetherequirements oftheuseroftheobjectsmightbedifferent. Content\nelements encodetheprecisemathematical meaning ofanobjectwithout ambi\u00ad\nguity,andthedescription canbeusedbyapplications suchascomputer algebra\nsystems. Ontheotherhand,goodnotation cansuggestthelogicalstructure to\nahumanandemphasize keyaspectsofanobject;presentation elements allow\nustodescribe mathematical objectsatthislevel.\nForexample, consider thefollowing simpleequation:\nx2-4x-32=0\nUsingpresentation elements, theequation isrepresented asfollows:\n<mrow>\n<mrow> <msup><mi>x</mi><mn>2</mn></msup>\n<mo>-</mo>\n<mrow><mn>4</mn>\n<mo>&invisibletimes;</mo>\n<mi>x</mi>\n</mrow>\n<mo>-</mo><mn>32< /mn>\n</mrow><mo>=</mo><mn>O</nm>\n</mrow>\nUsingcontentelements, theequation isdescribed asfollows:\n<reln><eq/>\n<apply>\n<minus/><apply> <power/> <ci>x</ci> <cn>2</cn> </apply>\n<apply> <times/> <cn>4</cn> <ci>x</ci> </apply>\n<cn>32</cn>", "270": "236\n</apply> <cn>O</cn>\n</reln>CHAPTERJ7\nNotetheadditional powerthatwegainfromusingMathML insteadofen\u00ad\ncodingtheformula inHTML.Thecommon wayofdisplaying mathematical\nobjectsinsideanHTMLobjectistoincludeimagesthatdisplaytheobjects,\nforexample, asinthefollowing codefragment:\n<IMGSRC=lIimages/equation.gifllALI=IIx**2-4x-32=10II>\nTheequation isencoded insideanIMGtagwithanalternative displayformat\nspecified intheALItag.Usingthisencoding ofamathematical objectleads\ntothefollowing presentation problems. First,theimageisusuallysizedto\nmatchacertainfontsize,andonsystems withotherfontsizestheimageis\neithertoosmallortoolarge.Second, onsystems withadifferent background\ncolor,thepicturedoesnotblendintothebackground andtheresolution ofthe\nimageisusuallyinferiorwhenprinting thedocument. Apartfromproblems\nwithchanging presentations, wecannoteasilysearchforaformula orformula\nfragments onapage,sincethereisnospecificmarkup tag.\n7.5THETHREE-TIER APPLICATION ARCHITECTURE\nInthissection, wediscusstheoverallarchitecture ofdata-intensive Internet\napplications. Data-intensive Internet applications canbeunderstood interms\nofthreedifferent functional components: datamanagement, application logic,\nandpTesentation. Thecomponent thathandlesdatamallgement usuallyutilizes\naDBMSfordatastorage,butapplication logicandpresentation involvemuch\nmorethanjusttheDBMSitself.\nWestartwithashortoverview ofthehistoryofdatabase-backed application\narchitectures, andintroduce single-tier andclient-server architectures inSection\n7.5.1.\\Veexplainthethree-tier architecture indetailinSection7.5.2,andshow\nitsadvantages inSection7.5.3.\n7.5.1Single-Tier andClient-Server Architectures\nInthissection, weprovidesomeperspective onthethree-tier architecture by\ndiscussing single-tier andclient-server architectures, thepredecessors ofthe\nthree-tier architecture. Initially, data-intensive applications werecombined into\nasingletier,including theDBMS, application logic,anduserinterface, a\"\nillustrated inFigure7.5.Theapplication typically ranonamainframe, and\nusersaccessed itthrough dumbteT'minals thatcouldperform onlydatainput\nanddisplay. Thisapproach ha..sthebenefitofbeingeasilymaintained bya\ncentraladministrator.", "271": "InteTnet Applications\nClient\nApplication Logic\nDBMSj\nFigure7.5ASingle-TierArchitecture\nFigure 7.6ATwo-Server Architecture: ThinClients\nSingle-tier architectures havea,nimportant drawback: Usersexpectgraphical\ninterfaces thatrequiremuchmorecomputational powerthansimpledumbter\u00ad\nminals. Centralized computation ofthegraphical displays ofsuchinterfaces\nrequires muchmorecomputational powerthanasingleserverhclSavailable,\nandthussingle-tier architectures donotscaletothousands ofusers.Thecom\u00ad\nmoditization ofthePCandtheavailability ofcheapclientcomputers ledto\nthedeveloplnent ofthetwo-tier architecture.\nTwo-tier architectures, oftenalsoreferred toa<;client-server architec\u00ad\ntures,consistofaclientcomputer andaservercomputer, whichinteract\nthrough awell-defined protocol. Whatpartofthefunctionality theclientim\u00ad\nplements, andwhatpartislefttotheserver,canvary.Inthetraditional client\u00ad\nserverarchitecture, theclientimplements justthegraphical userinterface,\nandtheserver.implements boththebusiness logicandthedatamanagement;\nsuchclientsareoftencalledthinclients, andthisarchitecture isillustra,ted in\nFigure7.6.\nOtherdivisions arepossible, suchasmorepowerful clientsthathnplement both\nuserinterface andbusiness logic,orclientsthatimplement userinterface and\npartofthebusiness logic,withtheremaining partbeingimplemented atthe", "272": "238\n//~\\ I--\"-\"-'---~-~I1\\/ Chent ..j\nI \\IApplication LogicI\ni i /~. __-1\nClient\nApplication Logic\nFigure7.7ATwo-TierArchitecture: ThickClientsCHAPTERt7\nserverlevel;suchclientsareoftencalledthickclients, andthisarchitecture is\nillustrated inFigure7.7.\nCompared tothesingle-tier architecture, two-tier architectures physically sep\u00ad\naratetheuserinterface fromthedatamanagement layer.Toimplement two\u00ad\ntierarchitectures, wecannolongerhavedumbterminals ontheclientside;\nwerequirecomputers thatrunsophisticated presentation code(andpossibly,\napplication logic).\nOverthelasttenyears,alargenumberofclient-server development toolssuch\nMicrosoft VisualBasicandSybasePowerbuilder havebeendeveloped. These\ntoolspermitrapiddevelopment ofclient-server software, contributing tothe\nsuccessoftheclient-server model,especially thethin-client version.\nThethick-client modelhasseveraldisadvantages whencompared tothethin\u00ad\nclientmodel.First,thereisnocentralplacetoupdateandmaintain thebusi\u00ad\nnesslogic,sincetheapplication coderunsatmanyclientsites.Second, alarge\namount oftrustisrequired between theserverandtheclients. Asanexam-\u00ad\npIe,theDBMSofabankhastotrustthe(application executing atan)ATM\nmachine toleavethedatabase inaconsistent state.(Onewaytoaddressthis\nproblem isthrough storedprocedures, trustedapplication codethatisregistered\nwiththeDBMSandcanbecalledfromSQLstatelnents. 'Vediscussstored\nprocedures indetailinSection6.5.)\nAthirddisadvantage ofthethick-client architecture isthatitdoesnotscale\nwiththenumberofclients;ittypically cannothandlemorethanafewhundred\nclients. Theapplication logicattheclientissuesSQLqueriestotheserver\nandtheserverreturnsthequeryresulttotheclient,wherefurtherprocessing\ntakesplace.Largequeryresultsmightbetransferred between clientandserver.", "273": "Inter-net Applications 2:19\nApplication\nLogicClient\n\u2022\u2022\u2022\nClient\nFigure 7.8AStandard Three-Tier Architecture\n(Storedprocedures canmitigate thisbottleneck.) Fourth,thick-client systems\ndonotscaleastheapplication accesses moreandmoredatabase systems. As\u00ad\nsumetherearexdifferent database systemsthatareaccessed byyclients,then\ntherearex.ydifferent connections openatanytime,clearlynotascalable\nsolution.\nThesedisadvantages ofthick-client systems andthewidespread adoption of\nstandard, verythinclients~notably, Webbrowsers~have ledtothewidespread\nusethin-client architectures.\n7.5.2 Three~TierArchitectures\nThethin-client two-tier architecture essentially separates presentation issues\nfromtherestoftheapplication. Thethree-tier architecture goesonestep\nfurther,andalsoseparates application logicfromdatamanagement:\nIIIPresentation Tier:Usersrequireanaturalinterface tomakerequests,\nprovideinput,andtoseeresults.Thewidespread useoftheInternet has\nmadeWeb-based interfaces increasingly popular.\nIIIMiddle Tier:Theapplication logicexecutes here.Anenterprise-class\napplication reflectscomplex business processes, andiscodedinageneral\npurpose language suchasC++orJava.\nIIIDataManagement Tier:Data-intensive Webapplications involveDBMSs,\nwhicharethesubjectofthisbook.\nFigure7.8showsabasicthree-tier architecture. Different technologies have\nbeendeveloped toenabledistribution ofthethreetiersofanapplication across\nmultiple hardware platforms anddifferent physical sites.Figure7.9showsthe\ntechnologies relevant toeachtier.", "274": "240\n~i~-----\",\".~._,----~~---.~u\u00b7\"r-----\u00b7\u00b7'\"\n, ClientProgramI JavaScript\n(WebBr_~=:~)__\n~_~_~~~~~__________ J\nHTIP\n---:;;\"\"io:~~I--\" servle~~~----l\nJSP I\n~PPlication Server)~ __.__.__.....XSLT ~\nJDBe.SQLJ\nData\nStorage---I----- XML-\n(Databasesystem)__ ___Stored p:cedure~~__\nFigure7.9Technologies fortheThreeTiers\nOverview ofthePresentation TierCHAPTERi' 7\nAtthepresentation layer,weneedtoprovideformsthrough whichtheuser\ncanissuerequests, anddisplayresponses thatthemiddletiergenerates. The\nhypertext markup language (HTML) discussed inSection7.3isthebasicdata\npresentation language.\nItisimportant thatthislayerofcodebeeasytoadapttodifferent display\ndevicesandformats; forexample, regulardesktops versushandheld devices\nversuscellphones. Thisadaptivity canbeachieved eitheratthemiddletier\nthrough generation ofdifferent pagesfordifferent typesofclient,ordirectlyat\ntheclientthroughstylesheetsthatspecifyhowthedatashouldbepresented.\nInthelattercase,themiddletierisresponsible forproducing theappropriate\ndatainresponse touserrequests, whereas thepresentation layerdecideshow\ntodisplaythatinformation.\n\\Vecoverpresentation tiertechnologies, including stylesheets,inSection7.6.\nOverview oftheMiddleTier\nThemiddlelayerrunscodethatimplements thebusiness logicoftheapplica\u00ad\ntion:Itcontrols whatdataneedstobeinputbeforeanactioncanbeexecuted,\ndetermines thecontrolflowbetween multi-action steps,controls accesstothe\ndatabase layer,andoftenassembles dynamically generated HTMLpagesfrom\ndataba\"se queryresults.", "275": "Internet Applications 24;1\nThemiddletiercodeisresponsible forsupporting allthedifferent rolesinvolved\nintheapplication. Forexample, inanInternet shopping siteimplementation,\nwewouldlikecustomers tobeabletobrowsethecatalogandmakepurchases,\nadministrators tobeabletoinspectcurrentinventory, andpossibly dataana\u00ad\nlyststoasksummary queriesaboutpurchase histories. Eachoftheserolescan\nrequiresupport forseveralcomplex actions.\nForexample, consider theacustomer whowantstobuyanitem(afterbrowsing\norsearching thesitetofindit).Beforeasalecanhappen, thecustomer has\ntogothrough aseriesofsteps:Shehastoadditemstohershopping ba.sket,\nshehastoprovidehershipping addressandcreditcardnumber (unlessshehas\nanaccountatthesite),andshehastofinallyconfirmthesalewithtaxand\nshipping costsadded.Controlling theflowamongthesestepsandremembering\nalreadyexecuted stepsisdoneatthemiddletieroftheapplication. Thedata\ncarriedalongduringthisseriesofstepsmightinvolvedatabase accesses, but\nusuallyitisnotyetpermanent (forexample, ashopping basketisnotstored\ninthedatabase untilthesaleisconfirmed).\nWecoverthemiddletierindetailinSection7.7.\n7.5.3Advantages oftheThree-Tier Architecture\nThethree-tier architecture hasthefollowing advantages:\n1/Heterogeneous Systems: Applications canutilizethestrengths ofdif\u00ad\nferentplatforms anddifferent software components atthedifferent tiers.\nItiseasytomodifyorreplacethecodeatanytierwithout affecting the\nothertiers.\nIIThinClients: Clientsonlyneedenoughcomputation powerforthepre\u00ad\nsentation layer.Typically, clientsareWebbrowsers.\nIIIntegrated DataAccess: Inmanyapplications, thedatamustbeac\u00ad\ncessedfromseveralsources. Thiscanbehandled transparently atthe\nmiddletier,wherewecancentrally manage connections toalldatabase\nsystems involved.\nIIScalabilit,y toManyClients: Eachclientislightweight andallaccessto\nthesystemisthrough themiddletier.Themiddletiercansharedatabase\nconnections acrossclients,andifthemiddletierbecomes thebottle-neck,\nwecandeployseveralserversexecuting themiddletiercode;clientscan\nconnect toanyone oftheseservers, ifthelogicisdesigned appropriately.\nThisisillustrated inFigure7.10,whichalsoshowshowthemiddletier\naccesses multiple datasources. Ofcourse,werelyupontheDBMSforeach", "276": "242 CHAPTER\nFigure7.10 Middle~Tier Replication andAccesstoMultiple DataSources7\ndatasourcetobescalable (andthismightinvolveadditional parallelization\norreplication, asdiscussed inChapter 22).\n\u2022Software Development Benefits: Bydividing theapplication cleanly\nintopartsthataddress presentation, dataaccess,andbusiness logic,we\ngainmanyadvantages. Thebusiness logiciscentralized, andistherefore\neasytomaintain, debug,andchange. Interaction between tiersoccurs\nthrough well-defined, standardized APls.Therefore, eachapplication tier\ncanbebuiltoutofreusable components thatcanbeindividually developed,\ndebugged, andtested.\n7.6THEPRESENTATION LAYER\nInthissection, wedescribe technologies fortheclientsideofthethree-tier ar\u00ad\nchitecture. vVediscussHTMLformsasaspecialmeansofpa.ssingarguments\nfromtheclienttothemiddletier(i.e.,fromthepresentation tiertothemiddle\ntier)inSection7.6.1.InSection7.6.2,weintroduce JavaScript, aJava-based\nscripting language thatcanbeusedforlight-weight computation intheclient\ntier(e.g.,forsimpleanimations). Weconclude ourdiscussion ofclient-side tech\u00ad\nnologies bypresenting stylesheetsinSection7.6.3.Stylesheetsarelanguages\nthatallowustopresentthesamewebpage withdifferent formatting forclients\nwithdifferent presentation capabilities; forexample, Webbrowsers versuscell\nphones,orevenaNetscape browser versusMicrosoft's Internet Explorer.\n7.6.1HTMLForms\nHTMLformsareacommon wayofcommunicating datafromtheclienttierto\nthemiddletier.Thegeneralformatofaformisthefollowing:\n<FORMACTION=\"page.jsp\" METHOD=\"GET\" NAME=\"LoginForm\">", "277": "Internet Applications\n</FORM>246\nAsingleHTMLdocument cancontainmorethanoneform.InsideanHTML\nform,wecanhaveanyHTMLtagsexceptanother FORMelement.\nTheFORMtaghasthreeimportant attributes:\n\u2022ACTION: Specifies theURIofthepagetowhichtheformcontents are\nsubmitted; iftheACTIONattribute isabsent,thentheURIofthecurrent\npageisused.Inthesampleabove,theforminputwouldbesubmited to\nthepagenamedpage.jsp,whichshouldprovide logicforprocessing the\ninputfromtheform.(Wewillexplainmethods forreadingformdataat\nthemiddletierinSection7.7.)\n\u2022METHOD: TheHTTP/1.0method usedtosubmittheuserinputfromthe\nfilled-out formtothewebserver. Therearetwochoices, GETandPOST;we\npostpone theirdiscussion tothenextsection.\n\u2022NAME:Thisattribute givestheformaname.Although notnecessary,\nnaming formsisgoodstyle.InSection 7.6.2,wediscusshowtowrite\nclient-side programs inJavaScript thatrefertoformsbynameandperform\nchecksonformfields.\nInsideHTMLforms,theINPUT,SELECT, andTEXTAREA tagsareusedtospecify\nuserinputelements; aformcanhavemanyelements ofeachtype.Thesimplest\nuserinputelement isanINPUTfield,astandalone tagwithnoterminating tag.\nAnexample ofanINPUTtagisthefollowing:\n<INPUTTYPE=ltext\" NAME=\"title\">\nTheINPUTtaghasseveralattributes. Thethreemostimportant onesareTYPE,\nNAME,andVALUE.TheTYPEattribute determines thetypeoftheinputfield.If\ntheTYPEattribute h&'3valuetext,thenthefieldisatextinputfield.Ifthe\nTYPEattribute hasvaluepassword, thentheinputfieldisatextfieldwherethe\nenteredcharacters aredisplayed asstarsonthescreen.IftheTYPEattribute\nhasvaluereset,itisasimplebuttonthatresetsallinputfieldswithinthe\nformtotheirdefaultvalues.IftheTYPEattribute hasvaluesubmit, thenitis\nabuttonthatsendsthevaluesofthedifferent inputfieldsintheformtothe\nserver.Notethatresetandsubmitinputfieldsaffecttheentireform.\nTheNAMEattribute oftheINPUTtagspecifies thesymbolic nameforthisfield\nandisusedtoidentifythevalueofthisinputfi.eldwhenitissenttotheserver.\nNAMEhastobesetforINPUTtagsofalltypesexceptsubmitandreset.Inthe\npreceding example, wespecifiedtitleastheNAMEoftheinputfield.", "278": "244 CHAPTER' 7\nTheVALUEattribute ofaninputtagcanbeusedfortextorpassword fieldsto\nspecifythedefaultcontents ofthefield.Forsubmitorresetbuttons, VALUE\ndetermines thelabelofthebutton.\nTheforminFigure7.11showstwotextfields,oneregulartextinputfieldand\nonepassword field.Italsocontains twobuttons, aresetbuttonlabeled'Reset\nValues'andasubmitbuttonlabeled'Logon.'Notethatthetwoinputfields\narenamed,whereas theresetandsubmitbuttonhavenoNAMEattributes.\n<FORMACTION=\"page.jsp\" METHoD=\"GET\" NAME=\"LoginForm\">\n<INPUT TYPE=\"text\" NAME=\"username\" VALUE=\" Joe\"><P>\n<INPUT TYPE=\"password\" NAME=\"p&ssword\"><P>\n<INPUTTYPE=\"reset\" VALUE=\"Reset Values\"><P>\n<INPUT TYPE=\"submit\" VALUE=\"Log on\">\n</FoRM>\nFigure 7.11HTl'vlLFormwithTwoTextFieldsandTwoButtons\nHTMLformshaveotherwaysofspecifying userinput,suchastheaforemen\u00ad\ntionedTEXTAREA andSELECTtags;wedonotdiscussthem.\nPassingArguments toServer~Side Scripts\nAsmentioned atthebeginning ofSection7.6.1,therearetwodifferent waysto\nsubmitHTMLFormdatatothewebserver. Ifthemethod GETisused,then\nthecontents oftheformareassembled intoaqueryURI(asdiscussed next)\nandsenttotheserver.Ifthemethod POSTisused,thenthecontents ofthe\nformareencoded asintheGETmethod, butthecontents aresentinaseparate\ndatablockinsteadofappending themdirectly totheURI.Thus,intheGET\nmethod theformcontents aredirectly visibletotheuserastheconstructed\nURI,whereas inthePOSTmethod, theformcontents aresentinsidetheHTTP\nrequestmessage bodyandarenotvisibletotheuser.\nUsingtheGETmethod givesuserstheopportunity tobookmark thepagewith\ntheconstructed URIandthusdirectlyjumptoitinsubsequent sessions; this\nisnotpossible withthePOSTmethod. ThechoiceofGETversusPOSTshould\nbedetermined' bytheapplication anditsrequirements.\nLetuslookattheencoding oftheURIwhentheGETmethod isused.The\nencoded URIhasthefollowing form:\naction?name1=vallle1&name2=value2&name;J=value3", "279": "Internet Applicat'icJns 245\nTheactionistheURIspecified intheACTIONattribute totheFORMtag,orthe\ncurrentdocument URIifnoACTIONattribute wasspecified. The'name=value'\npairsaretheuserinputsfromtheINPUTfieldsintheform.ForformINPUT\nfieldswheretheuserdidnotinputanything, thenameisstilpresentwithan\nemptyvalue(name=). Asaconcrete example, consider thePCl,.'3sword submission\nformattheendoftheprevious section. Assumethattheuserinputs'John\nDoe'asusername, and'secret'aspassword. ThentherequestURIis:\npage.jsp?username=J 01111+Doe&password=secret\nTheuserinputfromformscancontaingeneralASCIIcharacters, suchasthe\nspacecharacter, butURIshavetobesingle,consecutive stringswithnospaces.\nTherefore, specialcharacters suchasspaces,'=',andotherunprintable charac\u00ad\ntersareencoded inaspecialway.TocreateaURIthathasformfieldsencoded,\nweperform thefollowing threesteps:\n1.Convert allspecialcharacters inthenamesandvaluesto'%xyz,'where\n'xyz'istheASCIIvalueofthecharacter inhexadecimal. Specialcharacters\ninclude=,&,%,+,andotherunprintable characters. Notethatwecould\nencodeallcharacters bytheirASCIIvalue.\n2.Convert allspacecharacters tothe'+'character.\n3.Gluecorresponding namesandvaluesfromanindividual HTMLINPUTtag\ntogether with'='andthenpastename-value pairsfromdifferent HTML\nINPUTtagstogether using'&'tocreatearequestURIoftheform:\naction?namel=value1&name2=value2&name3=value3\nNotethatinordertoprocesstheinputelements fromtheHTMLformat\nthemiddletier,weneedtheACTIONattribute oftheFORMtagtopointtoa\npage,script,orprogram thatwillprocessthevaluesoftheformfieldstheuser\nentered. Wediscusswaysofreceiving valuesfromformfieldsinSections 7.7.1\nand7.7.3.\n7.6.2JavaScript\nJavaScript isascripting language attheclienttierwithwhichwecanadd\nprograms towebpages thatrundirectlyattheclient(Le.,atthemachine run\u00ad\nningtheWeb!)rowser). JavaScript isoftenusedforthefollowing typesof\ncomputation attheclient:\nIIIBrowser Detection: JavaScript canbeusedtodetectthebrowser type\nandloadabrowser-specific page.\nIIIFormValidation: JavaScript isusedtoperform simpleconsistency checks\nonformfields.Forexample, aJavaScript program mightcheckwhether a", "280": "246 CHAPTER~ 7\nforminputthatasksforanemailaddresscontains thecharacter '@,'orif\nallrequired fieldshavebeeninputbytheuser.\n\u2022Browser Control: Thisincludes opening pagesincustomized windows;\nexamples includetheannoying pop-upadvertisements thatyouseeatmany\nwebsites, whichareprogrammed usingJavaScript.\nJavaScript isusuallyembedded intoanHTMLdocument withaspecialtag,\ntheSCRIPTtag.TheSCRIPTtaghastheattribute LANGUAGE, whichindicates\nthelanguage inwhichthescriptiswritten. ForJavaScript, wesetthelan\u00ad\nguageattribute toJavaScript. Another attribute oftheSCRIPTtagisthe\nSRCattribute, whichspecifies anexternal filewithJavaScript codethatisau\u00ad\ntomatically embedded intotheHTMLdocument. Usually JavaScript source\ncodefilesusea'.js'extension. Thefollowing fragment showsaJavaScript file\nincluded inanHTMLdocument:\n<SCRIPT LANGUAGE=\" JavaScript\" SRC=\"validateForm.js\"> </SCRIPT>\nTheSCRIPTtagcanbeplacedinsideHTMLcomments sothattheJavaScript\ncodeisnotdisplayed verbatim inWebbrowsers thatdonotrecognize the\nSCRIPTtag.Hereisanother JavaScipt codeexample thatcreatesapop-up\nboxwithawelcoming message. WeenclosetheJavaScipt codeinsideHTML\ncomments forthereasonsjustmentioned.\n<SCRIPT LANGUAGE=\" JavaScript\" >\n<I--\nalert(\"Welcome toourbookstore\");\n//-->\n</SCRIPT>\nJavaScript provides twodifferent commenting styles:single-line comments that\nstartwiththe'//'character, andmulti-line comments starting with'/*'and\nendingwith,*/'characters.l\nJavaScript hasvariables thatcanbenumbers, boolean values(trueorfalse),\nstrings,andsomeotherdatatypesthatwedonotdiscuss. Globalvariables have\ntobedeclared inadvance oftheirusagewiththekeyword var,andtheycan\nbeusedanywhere insidetheHTMLdocuments. Variables localtoaJavaScript\nfunction (explained next)neednotbedeclared. Variables donothaveafixed\ntype,butimplicitly havethetypeofthedatatowhichtheyhavebeenassigned.\n1Actually, '<!--'alsomarksthestartofasingle-line comment, whichiswhywedidnothave\ntomarktheHTMLstarting cormnent '<!--'inthepreceding example usingJavaScript comment\nnotation. Incontrast, theHTMLclosingcomment \"-->\"hastobecommented outinJavaScript as\nitisinterpreted otherwise.", "281": "Internet Applications 247,\nJavaScript hastheusualassignment operators (=,+=,etc.),theusualarith\u00ad\nmeticoperators (+,-,*,/,%),theusualcomparison operators (==,!=,\n>=,etc.),andtheusualboolean operators (&&forlogical AND, 11forlogical\nOR,and!fornegation). Stringscanbeconcatenated usingthe'+'charac\u00ad\nter.Thetypeofanobjectdetermines thebehavior ofoperators; forexample\n1+1is2,sinceweareaddingnumbers, whereas \"1\"+\"1\" is\"11,\"sincewe\nareconcatenating strings. JavaScript contains theusualtypesofstatements,\nsuchasassignments, conditional statements (ifCcondition){statements;}\nelse{statements; }),andloops(for-loop, do-while, andwhile-loop).\nJavaScript allowsustocreatefunctions usingthefunction keyword: function\nfCargl,arg2){statements;}. Wecancallfunctions fromJavaScript code,\nandfunctions canreturnvaluesusingthekeyword return.\nWeconclude thisintroduction toJavaScript withalargerexample ofaJavaScript\nfunction thattestswhether theloginandpassword fieldsofaHTMLformare\nnotempty.Figure7.12showstheJavaScript function andtheHTMLform.\nTheJavaScript codeisafunction calledtestLoginEmptyO thattestswhether\neitherofthetwoinputfieldsintheformnamedLoginForm isempty.Inthe\nfunction testLoginEmpty, wefirstusevariable loginForm torefertotheform\nLoginForm usingtheimplicitly definedvariable document, whichreferstothe\ncurrentHTMLpage.(JavaScript hasalibraryofobjectsthatareimplicitly de\u00ad\nfined.)Wethencheckwhether eitherofthestringsloginForm. userif.value\norloginForm. password. valueisempty.\nThefunction testLoginEmpty ischecked withinaformeventhandler. An\neventhandler isafunction thatiscalledifaneventhappens onanobjectin\nawebpage. TheeventhandlerweuseisonSubmit,whichiscalledifthesubmit\nbuttonispressed(oriftheuserpressesreturninatextfieldintheform).If\ntheeventhandlerreturnstrue,thentheformcontents aresubmitted tothe\nserver,otherwise theformcontents arenotsubmitted totheserver.\nJavaScript hasfunctionality thatgoesbeyondthebasicsthatweexplained in\nthissection;theinterested readerisreferred tothebibliographic notesatthe\nendofthischapter.\n7.6.3StyleSheets\nDifferent clients havedifferent displays, andweneedcorrespondingly different\nwaysofdisplaying thesameinformation. Forexample, inthesimplest ca.se,\nwemightneedtousedifferent fontsizesorcolorsthatprovidehigh-contra.st\nonablack-and-white screen.Asamoresophisticated example, wemightneed\ntore-arrange objectsonthepagetoaccommodate smallscreensinpersonal", "282": "248 CHAPTER 7\n<SCRIPT LANGUAGE==\" JavaScript\">\n<!--\nfunction testLoginEmpty()\n{\n10ginForm =document.LoginForm\nif((loginForm.userid.value ==\"\")II\n(loginFonn. password. value==I.II)){\nalert(,Please entervaluesforuseridandpassword.');\nreturnfalse;\n}\nelse\nreturntrue;\n}\n//-->\n</SCRIPT>\n<HiALIGN=\"CENTER\" >BarnsandNobbleInternet Bookstore</Hi>\n<H3ALIGN=\"CENTER\">Plec1Se enteryouruseridandpassword:</H3>\n<FORM NAME=\"LoginFormllMETHOD=\"POST\"\nACTION=IITableOfContents.jsp\"\nonSubmit=\"returntestLoginEmptyO\" >\nUserid:<INPUT TYPE=\"TEXT\" NAME=lIuserid\"><P>\nPassword: <INPUT TYPE=\"PASSWORD\" NAME=\"password\"><P>\n<INPUT TYPE=\"SUBMIT\" VALUE=\"Login \"NAME=\"SUBMIT\">\n<INPUT TYPE=\"RESET\" VALUE=IIClear Input\" NAME=\"RESET\">\n</FORM>\nFigure 7.12FormValidation withJavaScript\ndigitalassistants (PDAs). Asanother example, wemighthighlight different\ninfonnation tofocusonsomeimportant partofthepage.Astylesheetisa\nmethodtoadaptthesamedocument contents todifferent presentation formats.\nAstylesheetcontains instructions thattella'Vebbrowser (orwhatever the\nclientusestodisplaythewebpage) howtotranslate thedataofadocument\nintoapresentation thatissuitable fortheclient'sdisplay.\nStylesheetsseparate thetransformative aspectofthepagefromtheren\u00ad\nderingaspectsofthepage.Duringtransformation, theobjectsintheXML\ndocument arerearranged toformadifferent structure, toomitpartsofthe\nXMLdocument, ortomergetwodifferent XMLdocuments intoasingledocu\u00ad\nment.Duringrendering, wetaketheexisting hierarchical structure oftheXML\ndocument andformatthedocument according totheuser'sdisplaydevice.", "283": "Inte17u'.t Apphcations\nBODY{BACKGROUND-COLOR: yellow}\nHi{FONT-SIZE: 36pt}\nH3{COLOR: blue}\nP{MARGIN-LEFT: 50px;COLOR:red}\nFigure7.13AnExample Stylesheet249\nTheuseofstylesheetshasmanyadvantages. First,wecanreusethesamedoc\u00ad\numentmanytimesanddisplayitdifferently depending onthecontext. Second,\nwecantailorthedisplaytothereader's preference suchasfontsize,colorstyle,\nandevenlevelofdetail.Third,wecandealwithdifferent outputformats, such\nasdifferent outputdevices(laptops versuscellphones), different displaysizes\n(letterversuslegalpaper),anddifferent displaymedia(paperversusdigital\ndisplay). Fourth,wecanstandardize thedisplayformatwithinacorporation\nandthusapplystylesheetconventions todocuments atanytime.Further,\nchanges andimprovements tothesedisplayconventions canbemanaged ata\ncentralplace.\nTherearetwostylesheetlanguages: XSLandess.esswascreatedforHTML\nwiththegoalofseparating thedisplaycharacteristics ofdifferent formatting\ntagsfromthetagsthemselves. XSLisanextension ofesstoarbitrary XML\ndocurnents; besidesallowing ustodefinewaysofformatting objects, XSLcon\u00ad\ntainsatransformation language thatenables ustorearrange objects. The\ntargetfilesforessareHTMLfiles,whereas thetargetfilesforXSLareXML\nfiles.\nCascading StyleSheets\nACascading StyleSheet(CSS)defineshowtodisplayHTMLelements.\n(InSection7.13,weintroduce amoregeneralstylesheetlanguage designed for\nXMLdocuments.) Stylesarenormally storedinstylesheets,whicharefiles\nthatcontainstyledefinitions. Manydifferent HTMLdocuments, suchasall\ndocuments inawebsite, canrefertothesameess.Thus,wecanchangethe\nformatofawebsitebychanging asinglefile.Thisisaveryconvenient way\nofchanging thelayoutofmanywebpages attheseunetime,andafirststep\ntowardtheseparation ofcontentfrompresentation.\nAnexample stylesheetisshowninFigure7.13.Itisincluded intoanHTML\nfilewiththefollowing line:\n<LINKREL=\"style sheet\"TYPE=\"text/css\" HREF=\"books.css\" />", "284": "250 CHAPTERt7\nEachlineinaCSSsheetconsists ofthreeparts;aselector, aproperty, anda\nvalue.Theyaresyntactically arranged inthefollowing way:\nselector {property: value}\nTheselector istheelementortagwhoseformatwearedefining. Theproperty\nindicates thetag'sattribute whosevaluewewanttosetinthestylesheet,and\ntheproperty istheactualvalueoftheattribute. Asanexample, consider the\nfirstlineoftheexample stylesheetshowninFigure7.13:\nBODY{BACKGROUND-COLOR: yellow}\nThislinehasthesameeffectaschanging theHTMLcodetothefollowing:\n<BODYBACKGROUND-COLOR=\" yellow\">.\nThevalueshouldalwaysbequoted,asitcouldconsistofseveralwords.More\nthanoneproperty forthesameselector canbeseparated bysemicolons as\nshowninthelastlineoftheexample inFigure7.13:\nP{MARGIN-LEFT: 50px;COLOR:red}\nCascading stylesheetshaveanextensive syntax;thebibliographic notesatthe\nendofthechapterpointtobooksandonlineresources onCSSs.\nXSL\nXSLisalanguage forexpressing stylesheets.AnXSLstylesheetis,likeCSS,\nafilethatdescribes howtodisplayanXMLdocument ofagiventype.XSL\nsharesthefunctionality ofCSSandiscompatible withit(although itusesa\ndifferent syntax).\nThecapabilities ofXSLvastlyexceedthefunctionality ofCSS.XSLcontains\ntheXSLTransformation language, orXSLT,alanguage thatallows 11Sto\ntransform theinputXMLdocument intoaXMLdocument withanotherstruc\u00ad\nture.Forexample, withXSLTwecanchangetheorderofelements thatweare\ndisplaying (e.g.;bysortingthem),processelements morethanonce,suppress\nelements inoneplaceandpresenttheminanother, andaddgenerated textto\nthepresentation.\nXSLalsocontains theXMLPathLanguage (XPath), alanguage that\nallowsustorefertopartsofanXMLdocument. WediscussXPathinSection", "285": "Inte1~net Applications 251\n27.XSLalsocontains XSLFormatting Object,awayofformatting theoutput\nofanXSLtransformation.\n7.7THEMIDDLE TIER\nInthissection, wediscusstechnologies forthemiddletier.Thefirstgen\u00ad\nerationofmiddle-tier applications werestand-alone programs written ina\ngeneral-purpose programming language suchasC,C++,andPerl.Program\u00ad\nmersquicklyrealizedthatinteraction withastand-alone application wasquite\ncostly;theoverheads includestarting theapplication everytimeitisinvoked\nandswitching processes between thewebserver andtheapplication. Therefore,\nsuchinteractions donotscaletolargenumbers ofconcurrent users.Thisled\ntothedevelopment oftheapplication server, whichprovides therun-time\nenvironment forseveraltechnologies thatcanbeusedtoprogram middle-tier\napplication components. Mostoftoday'slarge-scale websites useanapplication\nservertorunapplication codeatthemiddletier.\nOurcoverage oftechnologies forthemiddletiermirrorsthisevolution. We\nstartinSection7.7.1withtheCommon Gateway Interface, aprotocol thatis\nusedtotransmit arguments fromHTMLformstoapplication programs run\u00ad\nningatthemiddletier.Weintroduce application serversinSection7.7.2.We\nthendescribe technologies forwritingapplication logicatthemiddletier:Java\nservlets (Section 7.7.3)andJavaServerPages(Section 7.7.4).Another impor\u00ad\ntantfunctionality isthemaintenance ofstateinthemiddletiercomponent of\ntheapplication astheclientcomponent goesthrough aseriesofstepstocom\u00ad\npleteatransaction (forexample, thepurchase ofamarketbasketofitemsor\nthereservation ofaflight).InSection7.7.5,wediscussCookies, oneapproach\ntomaintaining state.\n7.7.1CGI:TheCommon Gateway Interface\nTheCommon Gateway Interface connects HTMLformswithapplication pro\u00ad\ngrams.Itisaprotocol thatdefineshowarguments fromformsarepassedto\nprograms attheserverside.WedonotgointothedetailsoftheactualCGI\nprotocol sincelibraries enableapplication programs togetarguments fromthe\nHTMLfonn;weshortlyseeanexample inaCGIprogram. Programs that\ncommunicate withthewebserver viaCGIareoftencalledCGIscripts, since\nmanysuchapplication programs werewritteninascripting language such Ike.;\nPerl.\nAsanexample ofaprogram thatinterfaces withanHTMLformviaCGI,\nconsider thesamplepageshowninFigure7.14.Thiswebpage contains aform\nwhereausercanfillinthenameofanauthor.Iftheuserpressesthe'Send", "286": "252 CHAPTER, 7\n<HTML><HEAD><TITLE>The Database Bookstore</TITLE></HEAD>\n<BODY>\n<FORMACTION=\"find_books.cgi IIMETHOD=POST>\nTypeanauthorname:\n<INPUT TYPE=\"text IINAME=lauthorName\"\nSIZE=30 MAXLENGTH=50>\n<INPUT TYPE=\"submi tilvalue=\"Send it\">\n<INPUTTYPE=lreset\" VALUE=\"Clear form II>\n</FORM>\n</BODY></HTML>\nFigure7.14ASample'NebPageWhereFormInputIsSenttoaCGIScript\nit'button,thePerlscript'findBooks.cgi' showninFigure7.14isexecuted as\naseparate process. TheCGlprotocol defineshowthecommunication between\ntheformandthescriptisperformed. Figure7.15illustrates theprocesses\ncreatedwhenusingtheCGlprotocol.\nFigure7.16showstheexample CGlscript,written inPerl.Weomiterror\u00ad\nchecking codeforsimplicity. Perlis\u00b7aninterpreted language thatisoftenused\nforCGlscripting andmanyPerllibraries, calledmodules, providehigh-level\ninterfaces totheCGlprotocol. \\Veuseonesuchlibrary,calledtheDBIli\u00ad\nbrary,inourexample. TheCGImoduleisaconvenient collection offunctions\nforcreating CGlscripts.Inpart1ofthesamplescript,weextracttheargument\noftheHTMLformthatispassed along fromtheclientasfollows:\n$authorName =$dataln- >paramCauthorName');\nNotethattheparameter nameauthorName wa.susedintheforminFigure\n7.14tonamethefirstinputfield.Conveniently, theCGlprotocol abstracts the\nactualimplementation ofhowthewebpage isreturned totheWebbrowser; the\nwebpage consistssimplyoftheoutputofourprogram, andwestartassembling\ntheoutputHTMLpageinpart2.Everything thescriptwritesinprint\u00ad\nstatements ispartofthedynamically constructed webpage returned tothe\nbrowser. \\Vefinishinpart3byappending theclosingformattagstothe\nresulting page.\n7.7.2Application Servers\nApplication logiccanbeenforced through server-side programs thatarein\u00ad\nvokedusingtheCGlprotocol. However, sinceeachpagerequestresultsinthe\ncreation ofanewprocess, thissolution doesnotscalewelltoalargenumber\nofsimultaneous requests. Thisperformance problem ledtothedevelopment of", "287": "InteTnet Applications 253\nDBMSc++\nApplicationIHTTP i-l\nWebBrowserr-~WebServerI\n//(G(\n c~~-p-ro-c-'e-s-s\n -l--~\nCGI~ -JDBCI\n\u2022\u2022 \u2022 CGI Process2 'I\nL..-- ---'\nFigure7.15Process Structure witheGIScripts\n#!/usr/bin/perl\nuseCGI;\n###part1\n$dataln=newCGI;\n$dataln-l,headerO;\n$authorName =$dataln-l,param('authorName');\n###part2\nprint(II<HTML><TITLE> Argument passingtest</TITLE> II);\nprint(IITheuserpassedthefollowing argument: II);\nprint(lIauthorName: \",$authorName);\n###part3\nprint(\"</HTML>\");\nexit;\nFigure 7.16ASimplePerlScript\nspecialized programs calledapplication servers. Anapplication servermain\u00ad\ntainsapoolofthreads orprocesses andusesthesetoexecute requests. Thus,\nitavoidsthestartupcostofcreating anewprocessforeachrequest.\nApplication servershaveevolved intoflexiblemiddle-tier packages thatpro\u00ad\nvidemanyfunctions inaddition toeliminating theprocess-creation overhead.\nTheyfacilitate concurrent accesstoseveralheterogeneous datasources(e.g.,by\nproviding JDBCdrivers), andprovidesessionmanagement services. Often,\nbusiness processes involveseveralsteps.Usersexpectthesystemtomaintain\ncontinuity duringsuchamultistep session. Severalsessionidentifiers suchas\ncookies, URIextensions, andhiddenfieldsinHTMLformscanbeusedto\nidentify asession. Application serversprovide functionality todetectwhena\nsessionstartsandendsandkeeptrackofthesessions ofindividual users.They", "288": "254\nWebBrowser\nDODDO\u2022\u2022\u2022:\nIPoolofservlets I\n--~-----~-~_ .....JDBC\nJDBC/ODBCCHAPTER\" 7\nc++\nApplication\nJavaBeans\nApplication\nDBMSI\nDBMS2\nFigure7.17ProcessStructure intheApplication ServerArchitecture\nalsohelptoensuresecuredatabase accessbysupporting ageneraluser-idmech\u00ad\nanism.(Formoreonsecurity, seeChapter 21.)\nApossible architecture forawebsitewithanapplication serverisshowninFig\u00ad\nure7.17.Theclient(aWebbrowser) interacts withthewebserver through the\nHTTPprotocol. Thewebserver deliversstaticHTMLorXMLpagesdirectly\ntotheclient.Toassemble dynamic pages,thewebserver sendsarequesttothe\napplication server.Theapplication servercontacts oneormoredatasourcesto\nretrievenecessary dataorsendsupdaterequests tothedatasources. Afterthe\ninteraction withthedatasourcesiscompleted, theapplication serverassembles\nthewebpage andreportstheresulttothewebserver, whichretrieves thepage\nanddeliversittotheclient.\nTheexecution ofbusiness logicatthewebserver's site,server-side process\u00ad\ning,hasbecomeastandard modelforimplementing morecomplicated business\nprocesses ontheInternet. Therearemanydifferent technologies forserver-side\nprocessing andweonlymention afewinthissection;theinterested readeris\nreferred tothebibliographic notesattheendofthechapter.\n7.7.3Servlets\nJavaservlets arepiecesofJavacodethatrunonthemiddletier,ineither\nwebservers orapplication servers. Therearespecialconventions onhowto\nreadtheinputfromtheuserrequestandhowtowriteoutputgenerated bythe\nservlet.Servlets aretrulyplatform-independent, andsotheyhavebecomevery\npopularwithWebdevelopers.\nSinceservletsareJavaprograms, theyareveryversatile. Forexample, servlets\ncanbuildwebpages, accessdatabases, andmaintain state.Servlets haveaccess", "289": "InteT1Iet AIJplications\nimportjava.io.*;\nimportjavCLx.servlet. *;\nimportjavax.servlet.http. *;\npUblicclassServletTemplate extends HttpServlet {\npublicvoiddoGet(HttpServletRequest request,\nHttpServletResponse response)\nthrowsServletException, IOException {\nPrintWriter out=response.getWriter();\n/ /Use'out'tosendcontenttobrowser\nout.println(\"Hello World\");\n}\n}\nFigure 7.18ServletTemplate255\n@\ntoallJavaAPls,including JDBC.Allservlets mustimplement theServlet\ninterface. Inmostcases,servlets extendthespecificHttpServlet classfor\nserversthatcommunicate withclientsviaHTTP.TheHttpServlet classpro\u00ad\nvidesmethods suchasdoGetanddoPosttoreceivearguments fromHTML\nforms,anditsendsitsoutputbacktotheelientviaHTTP.Servlets that\ncommunicate through otherprotocols (suchasftp)needtoextendtheclass\nGenericServlet.\nServlets arecompiled Javaclassesexecuted andmaintained byaservletcon\u00ad\ntainer. Theservletcontainer manages thelifespan ofindividual servlets by\ncreating anddestroying them.Although servletscanrespondtoanytypeofre\u00ad\nquest,theyarecommonly usedtoextendtheapplications hostedbywebservers.\nForsuchapplications, thereisausefullibraryofHTTP-specific servletclasses.\nServlets usuallyhandlerequests fromHTMLformsandmaintain statebetween\ntheclientandtheserver.Wediscusshowtomaintain stateinSection7.7.5.\nAtemplate ofagenericservletstructure isshowninFigure7.18.Thissimple\nservletjustoutputs thetwowords\"HelloWorld,\" butitshowsthegeneral\nstructure ofafull-fledged servlet.Therequest objectisusedtoreadHTML\nformdata.Theresponse objectisusedtospecifytheHTTPresponse status\ncodeandheaders oftheHTTPresponse. Theobjectoutisusedtocompose\nthecontentthatisreturned totheclient.\nRecallthatHTTPsendsbackthestatusline,aheader,ablankline,andthen\nthecontext. Rightnowourservletjustreturnsplaintext.Wecanextendour\nservletbysettingthecontenttypetoHTML,generating HTML a,sfollows:", "290": "256 CHAPTER .7\nPrinfWriter out=response.get\\Vriter();\nStringdocType=\n\"<!DOCTYPE HTMLPUBLIC \"-//W3C//DTD HTML4.0\"+\n\"Transitional/ /EN\">\\n\";\nout.println(docType+\n\"<HTML>\\n\" +\n\"<HEAD><TITLE> Hello'vVWW</TITLE></HEAD> \\n\"+\n\"<BODY>\\n\" +\n\"<Hl>Hello WWW</Hl>\\n\" +\n\"</BODY></HTML>\");\nWhathappens duringthelifeofaservlet? Severalmethods arecalledat\ndifferent stagesinthedevelopment ofaservlet. Whenarequested pageis\naservlet,thewebserver forwards therequesttotheservletcontainer, which\ncreatesaninstance oftheservletifnecessary. Atservletcreation time,the\nservletcontainer callstheinit()method, andbeforedeallocating theservlet,\ntheservletcontainer callstheservlet'sdestroyO method.\nWhenaservletcontainer callsaservletbecause ofarequested page,itstarts\nwiththeservice ()method, whosedefaultbehavior istocalloneofthefollow\u00ad\ningmethods basedontheHTTPtransfer method: service ()callsdoGet0\nforaHTTPGETrequest, anditcallsdoPost()foraHTTPPOSTrequest.\nThisautomatic dispatching allowstheservlettoperform different tasksonthe\nrequestdatadepending ontheHTTPtransfer method. Usually, wedonotover\u00ad\nridetheservice ()method, unlesswewanttoprogram aservletthathandles\nbothHTTPPOSTandHTTPGETrequests identically.\nWeconclude ourdiscussion ofservletswithanexample, showninFigure7.19,\nthatillustrates howtopassarguments fromanHTMLformtoaservlet.\n7.7.4JavaServer Pages\nIntheprevious section, wesawhowtouseJavaprograms inthemiddletier\ntoencodeapplication logicanddynamically generate webpages. Ifweneeded\ntogenerate HTMLoutput,wewroteittotheoutobject.Thus,wecanthink\naboutservletsasJavacodeembodying application logic,withembedded HTML\nforoutput.\nJavaServer pages(.JSPs)interchange therolesofoutputamIapplication logic.\nJavaServer pagesarewritten inHTMLwithservlet-like codeembedded in\nspecialHT1VILtags.Thus,incomparison toservlets, JavaServer pagesare\nbettersuitedtoquicklybuilding interfaces thathavesomelogicinside,wherea..':i\nservlets arebettersuitedforcomplex application logic.", "291": "Internet Applications\nimportjava.io.*;\nimportjavax.servlet. *;\nimportjavax.servlet.http. *;\nimportjava.util. *;\npublicclassReadUserName extends HttpServlet {\npublicvoiddoGet(HttpServletRequest request,\nHttpServletResponse response)\nthrowsServletException, IOException {\nresponse.setContentType('j textjhtml'j);\nPrintWriter out=response.getWriter();\nout.println(\"<BODY>\\n\" +\n\"<HiALIGN=CENTER> Username: </Hi>\\n\" +\n\"<UL>\\n\" +\n\"<LI>title: \"\n+request.getParameter(\"userid\") +\"\\n\"+\n+request.getParameter(\"password'j) +\"\\nj'+\n1</UL>\\n\" +\n1</BODY></HTML>\")j\n}\npublicvoiddoPost(HttpServletRequest request,\nHttpServletResponse response)\nthrowsServletException, IOException {\ndoGet(request, response);\n}\n}\nFigure7.19Extracting theUserNameandPassword FromaForm257\nJ", "292": "258 CHAPTER,7\n~Whilethereisabigdifference fortheprogrammer, themiddletierhandles\nJavaServer pagesinaverysimpleway:Theyareusuallycompiled intoaservlet,\nwhichisthenhandled byaservletcontainer analogous tootherservlets.\nThecodefragment inFigure7.20showsasimpleJSPexample. Inthemiddle\noftheHTMLcode,weaccessinformation thatwaspassedfromaform.\n<!DOCTYPE HTMLPUBLIC 11_//W3C//DTDHTML4.0\nTransitional//ENlI>\n<HTML>\n<HEAD><TITLE>Welcome toBarnesandNobble</TITLE></HEAD>\n<BODY>\n<Hl>Welcome back!</Hl>\n<%Stringname=\"NewUserll;\nif(request.getParameter(lIusernamell) !=null){\nname=request .getParameter (\"username\" );\n}\n%>\nYouareloggedonasuser<%=name%>\n<P>\nRegular HTMLforalltherestoftheon-linestore'swebpage.\n</BODY>\n</HTML>\nFigure7.20Reading FormParameters inJSP\n7.7.5Maintaining State\nAsdiscussed inprevious sections, thereisaneedtomaintain auser'sstate\nacrossdifferent pages.Asanexample, consider auserwhowantstomakea\npurchase attheBarnesandNobblewebsite. Theusermustfirstadditems\nintohershopping basket,whichpersistswhileshenavigates through thesite.\nThus,weusethenotionofstatemainlytoremember information astheuser\nnavigates through thesite.\nTheHTTPprotocol isstateless. Wecallaninteraction withawebserver state\u00ad\nlessifnoinforination isretained fromonerequesttothenextrequest. Wecall\naninteraction withawebserver stateful, orwesaythatstateismaintained,\nifsome memory isstoredbetween requests totheserver,anddifferent actions\naretakendepending onthecontents stored.", "293": "Internet Applico,tiol/s 259\n!\nInourexample ofBarnesandNobble, weneedtomaintain theshopping basket\nofauser.Sincestateisnotencapsulated intheHTTPprotocol, ithastobe\nmaintained eitherattheserverorattheclient.SincetheHTTPprotocol\nisstateless bydesign,letusreviewtheadvantages anddisadvantages ofthis\ndesigndecision. First,astateless protocol iseasytoprogram anduse,and\nitisgreatforapplications thatrequirejustretrieval ofstaticinformation. In\naddition, noextramemory isusedtomaintain state,andthustheprotocol\nitselfisveryefficient. Ontheotherhand,without someadditional mechanism\natthepresentation tierandthemiddletier,wehavenorecordofprevious\nrequests, andwecannotprogram shopping basketsoruserlogins.\nSincewecannotmaintain stateintheHTTPprotocol, whereshouldwemtain\u00ad\ntainstate?Therearebasically twochoices. Wecanmaintain stateinthe\nmiddletier,bystoringinformation inthelocalmainmemory oftheapplica\u00ad\ntionlogic,oreveninadatabase system. Alternatively, wecanmaintain state\nontheclientsidebystoringdataintheformofacookie.Wediscussthesetwo\nwaysofmaintaining stateinthenexttwosections.\nMaintaining StateattheMiddleTier\nAtthemiddletier,wehaveseveralchoicesastowherewemaintain state.\nFirst,wecouldstorethestateatthebottomtier,inthedatabase server.The\nstatesurvives crashesofthesystem,butadatabase accessisrequired toquery\norupdatethestate,apotential performance bottleneck. Analternative isto\nstorestateinmainmemory atthemiddletier.Thedrawbacks arethatthis\ninformation isvolatileandthatitmighttakeupalotofmainmemory. We\ncanalsostorestateinlocalfilesatthemiddletier,&sacompromise between\nthefirsttwoapproaches.\nAruleofthumbistousestatemaintenance atthemiddletierordatabase tier\nonlyfordatathatneedstopersistovermanydifferent usersessions. Examples\nofsuchdataarepastcustomer orders,click-stream datarecording auser's\nmovement through thewebsite, orotherpermanent choicesthatausermakes,\nsuchasdecisions aboutpersonalized sitelayout,typesofmessages theuseris\nwillingtoreceive,andsoon.Astheseexamples illustrate, stateinformation is\noftencentered arounduserswhointeract withthewebsite.\nMaintaining StateatthePresentation Tier:Cookies\nAnother possibility istostorestateatthepresentation tierandpassittothe\nmiddletierwitheveryHTTPrequest. Weessentially workaroundaround\nthestatelessness oftheHTTPprotocol bysendingadditional information with\neveryrequest. Suchinformation iscalledacookie.", "294": "260 CHAPTE~ 7\n//no88Lrequired\n/ /onemonthlifetimeAcookieisacollection of(name, val'Ue)~~pairs thatcanbemanipulated at\nthepresentation andmiddletiers.Cookies areea..''!YtouseinJavaservlets\nandJava8erver Pagesandprovide asimplewaytomakenon-essential data\npersistent attheclient.Theysurviveseveralclientsessions becausetheypersist\ninthebrowser cacheevenafterthebrowser isclosed.\nOnedisadvantage ofcookiesisthattheyareoftenperceived asasbeinginvasive,\nandmanyusersdisablecookiesintheirWebbrowser; browsers allowusersto\npreventcookiesfrombeingsavedontheirmachines. Another disadvantage is\nthatthedatainacookieiscurrently limitedto4KB,butformostapplications\nthisisnotabadlimit.\nWecanusecookiestostoreinformation suchastheuser'sshopping basket,login\ninformation, andothernon-permanent choicesmadeinthecurrentsession.\nNext,wediscusshowcookiescanbemanipulated fromservletsatthemiddle\ntier.\nTheServletCookieAPI\nAcookieisstored.inasmalltextfileattheclientand.contains (name, val'l1e/\u00ad\npairs,wherebothnameandvaluearestrings. Wecreateanewcookiethrough\ntheJavaCookieclassinthemiddletierapplication code:\nCookiecookie=newCookie( IIusername\" ,\"guest\");\ncookie.setDomain(\" www.bookstore.com ..);\ncookie.set8ecure( false);\ncookie.setMaxAge( 60*60*24 *7*31);\nresponse.addCookie( cookie);\nLetuslookateachpartofthiscode.First,wecreateanewCookieobjectwith\nthespecified (name, val'l1e)~~\u00b7pair. Thenwesetattributes ofthecookie;welist\nsomeofthemostcommon attributes below:\nIIIsetDomain andgetDomain: Thedomain specifies thewebsitethatwill\nreceivethecookie.Thedefaultvalueforthisattribute isthedomainthat\ncreatedthecookie.\nIIsetSecure andgetSecure: Ifthisflagistrue,thenthecookieissentonly\nifwearellsingasecureversionoftheHTTPprotocol, such <t,<;88L.\nIIIsetMaxAge andgetMaxAge: TheMaxAgeattribute determines thelifetime\nofthecookieinseconds.IfthevalueofMaxAgeislessthanorequalto\nzero,thecookieisdeletedwhenthebrowser isclosed.", "295": "Inte7~net Applications 26~\n\u2022setName andgetName: Wedidnotusethesefunctions inourcodefragment;\ntheyallowustoIlamethecookie.\n\u2022setValue andgetValue: Thesefunctions allowustosetandreadthe\nvalueofthecookie.\nThecookieisaddedtotherequest objectwithintheJavaservlettobesent\ntotheclient.Onceacookieisreceived fromasite(www.bookstore.comin this\nexample), theclient'sWebbrowser appends ittoallHTTPrequests itsends\ntothissite,untilthecookieexpires.\nWecanaccessthecontents ofacookieinthemiddle-tier codethrough the\nrequest objectgetCookies 0method, whichreturnsanarrayofCookieob\u00ad\njects.Thefollowing codefragment readsthearrayandlooksforthecookie\nwithname'username.'\nCookieD cookies=request.getCookiesO;\nStringtheUser;\nfor(int i=O;i<cookies.length; i++){\nCookiecookie=cookies[i];\nif(cookie.getNameO.equals(\"username\"))\ntheUser =cookie.getValueO;\n}\nAsimpletestcanbeusedtocheckwhether theuserhasturnedoft'cookies:\nSendacookietotheuser,andthencheckwhether therequest objectthat\nisreturned stillcontains thecookie.Notethatacookieshouldnevercontain\nanunencrypted password orotherprivate, unencrypted data,astheusercan\neasilyinspect,modify,anderaseanycookieatanytime,including inthemiddle\nofasession. Theapplication logicneedstohavesufficient consistency checks\ntoensurethatthedatainthecookieisvalid.\n7.8CASESTUDY: THEINTERNET BOOKSHOP\nDBDudes nowmovesontotheimplementation oftheapplication layerand\nconsiders alternatives forconnecting theDBMStotheWorldWideWeb.\nDBDudes begiflsbyconsidering sessionmanagement. Forexample, userswho\nlogintothesite,browsethecatalog, andselectbookstobuydonotwant\ntore-enter theircllstomer identification numbers. Sessionmanagement hasto\nextendtothewholeprocessofselecting books,addingthemtoashopping cart,\npossibly removing booksfromthecart,andchecking outandpayingforthe\nbooks.", "296": "262 CHAPTERi7\nDBDudes thenconsiders whether webpages forbooksshouldbestaticordy\u00ad\nnamic.Ifthereisastaticwebpage foreachbook,thenweneedanextra\ndatabase fieldintheBooksrelationthatpointstothelocation ofthefile.\nEventhoughthisenablesspecialpagedesignsfordifferent books,itisavery\nlabor-intensive solution. DBDudes convinces B&Ntodynamically assemble\nthewebpage forabookfromastandard template instantiated withinforma\u00ad\ntionaboutthebookintheBooksrelation. Thus,DBDudes donotusestatic\nHTMLpages,suchastheoneshowninFigure7.1,todisplaytheinventory.\nDBDudes considers theuseofXMLa'Sadataexchange formatbetween the\ndatabase serverandthemiddletier,orthemiddletierandtheclienttier.\nRepresentation ofthedatainXMLatthemiddletierasshowninFigures7.2\nand7.3wouldalloweasierintegration ofotherdatasourcesinthefuture,but\nB&Ndecidesthattheydonotanticipate aneedforsuchintegration, andso\nDBDudes decidenottouseXMLdataexchange atthistime.\nDBDudes designstheapplication logicasfollows. Theythinkthattherewill\nbefourdifferent webpages:\n\u2022index.jsp:ThehomepageofBarnsandNobble. Thisisthemainentry\npointfortheshop.Thispagehassearchtextfieldsandbuttonsthatallow\ntheusertosearchbyauthorname,ISBN,ortitleofthebook.Thereis\nalsoalinktothepagethatshowstheshopping cart,cart.jsp.\n\u2022login.jsp:Allowsregistered userstologin.HereDBDudesusean\nHTMLformsimilartotheonedisplayed inFigure7.11.Atthemiddle\ntier,theyuseacodefragment similartothepieceshowninFigure7.19\nandJavaServerPages asshowninFigure7.20.\n\u2022search. jsp:Listsallbooksinthedatabase thatmatchthesearchcondi\u00ad\ntionspecified bytheuser.Theusercanaddlisteditemstotheshopping\nbasket;eachbookha'3abuttonnexttoitthataddsit.(Iftheitemis\nalreadyintheshopping basket,itincrements thequantity byone.)There\nisalsoacounterthatshowsthetotalnumber ofitemscurrently inthe\nshopping basket.(DBDucles makesanotethat that aquantity offivefora\nsingleitemintheshopping basketshouldindicate atotalpurcha'3c quantity\noffiveaswell.)Thesearch. jsppagealsocontains abuttonthatdirects\ntheusertocart.jsp.\nIIIcart.jsp:Listsallthebookscurrently intheshopping basket.Thelist\u00ad\ningshouldincludeallitemsintheshopping basketwiththeproduct name,\nprice,atextboxforthequantity (whichtheusercanusetochangequanti\u00ad\ntiesofitems),andabuttontoremovetheitemfromtheshopping basket.\nThispagehasthreeotherbuttons: onebuttontocontinue shopping (which\nreturnstheusertopageindex.jsp),asecondbuttontoupdatetheshop-", "297": "Inter'net Applications\npingbasketwiththealteredquantities fromthetextboxes,andathird\nbuttontoplacetheorder,whichdirectstheusertothepageconfirm.jsp.\nIIconiirm.jsp:Liststhecomplete ordersofarandallowstheusertoenter\nhisorhercontactinformation orcustomer ID.Therearetwobuttons on\nthispage:onebuttontocanceltheorderandasecondbuttontosubmit\nthefinalorder.Thecancelbuttonernptiestheshopping ba.'3ketandreturns\ntheusertothehomepage.Thesubmitbuttonupdates thedatabase with\ntheneworder,empties theshopping basket,andreturnstheusertothe\nhomepage.\nDBDudes alsoconsiders theuseofJavaScript atthepresentation tiertocheck\nuserinputbeforeitissenttothemiddletier.Forexample, inthepage\nlogin.jsp,DBDudes islikelytowriteJavaScript codesimilartothatshown\ninFigure7.12.\nThisleavesDBDudes withonefinaldecision: howtoconnect applications to\ntheDBMS.Theyconsider thetwomainalternatives presented inSection7.7:\nCGIscriptsversususinganapplication serverinfrastructure. IftheyuseCGI\nscripts,theywouldhavetoencodesessionmanagement logic-not aneasytask.\nIftheyuseanapplication server,theycanmakeuseofallthefunctionality\nthattheapplication serverprovides. Therefore, theyrecommend thatB&N\nimplement server-side processing usinganapplication server.\nB&Nacceptsthedecision touseanapplication server,butdecidesthatno\ncodeshouldbespecifictoanyparticular application server,sinceB&Ndoes\nnotwanttolockitselfintoonevendor. DBDudes agreesproceeds tobuildthe\nfollowing pieces:\nIIIDBDudes designs toplevelpagesthatallowcustomers tonavigate the\nwebsiteaswellasvarioussearchformsandresultpresentations.\nIIAssuming thatDBDudes selectsaJava-ba ..sedapplication server,theyhave\ntowriteJavaservletstoprocessform-generated requests. Potentially, they\ncouldreuseexisting (possibly commercially available) JavaBeans. They\ncanuseJDBCa.\"adataba.':ie interface; exarnples ofJDBCcodecanbe\nfoundinSection6.2.Instead ofprograrnming servlets, theycouldresort\ntoJavaServerPagesandannotate pageswithspecial.JSPmarkup tags.\nIIDBDudes selectanapplication serverthatusesproprietary markup tags,\nbutduetotheirarrangement withB&N,theyarenotallowedtousesuch\ntagsintheircode.\nFor completeness, weremarkthatifDBDudes andB&NhadagreedtouseCGr\nscripts,DBDucles wouldhavehadthefollowing ta.sks:", "298": "264 CHAPTER~ 7\nIICreatethetoplevelHTMLpagesthatallowuserstonavigate thesiteand\nvaTiousformsthatallowuserstosearchthecatalogbyISBN,authorname,\nortitle.Anexample pagecontaining asearchformisshowninFigure\n7.1.Inaddition totheinputforms,DBDudes mustdevelopappropriate\npresentations fortheresults.\nIIDevelopthelogictotrackacustomer session. Relevant information mustbe\nstoredeitherattheserversideorinthecustomer's browser usingcookies.\nIIWritethescriptsthatprocessuserrequests. Forexample, acustomer can\nuseaformcalled'Searchbooksbytitle'totypeinatitleandsearchfor\nbookswiththattitle.TheCGIinterface communicates withascriptthat\nprocesses therequest. Anexample ofsuchascriptwritteninPerlusing\ntheDBIlibraryfordataaccessisshowninFigure7.16.\nOurdiscussion thusfarcoversonlythecustomer interface, thepartofthe\nwebsitethatisexposed toB&N'scustomers. DBDudes alsoneedstoadd\napplications thatallowtheemployees andtheshopownertoqueryandaccess\nthedatabase andtogenerate summary reportsofbusiness activities.\nComplete filesforthecasestudycanbefoundonthewebpage forthisbook.\n7.9REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIWhatareURIsandURLs?(Section 7.2.1)\nIIHowdoestheHTTPprotocol work?Whatisastateless protocol? (Sec\u00ad\ntion7.2.2)\nIIExplainthemainconcepts ofHTML.Whyisitusedonlyfordatapresen\u00ad\ntationandnotdataexchange? (Section 7.3)\nIIWhataresomeshortc.ornings ofHTML,andhowdoesXMLaddressthem?\n(Section 7.4)\nIIWhatarethemaincomponents ofanXMLdocument? (Section 7.4.1)\nIIWhydowehaveXMLDTDs? Whatisawell-formed XMLdocument?\nWhatisavalidXMLdocument? Giveanexample ofanXMLdocument\nthatisvalidbutnotwell-formed, andviceversa.(Section 7.4.2)\nII'Whatistheroleofdomain-specific DTDs?(Section 7.4.3)\nII\\Vhatisathree-tier architecture? 'Whatadvantages doesitofferoversingle\u00ad\ntierandtwo-tier architectures? Giveashortoverview ofthefunctionality\nateachofthethreetiers.(Section 7.5)", "299": "Internet Apphcat-ions 2&5\n\u2022Explain hmvthree-tier architectures address eachofthefollowing issues\nofdataba.<;e-backed Internet applications: heterogeneity, thinclients,data\nintegration, scalability, software development. (Section 7.5.3)\n\u2022WriteanHTMLform.Describe allthecomponents ofanHTMLform.\n(Section 7.6.1)\n\u2022Whatisthedifference between theHTML GETandPOSTmethods? How\ndoesURIencoding ofanHT~ILformwork?(Section 7.11)\n\u2022WhatisJavaScript usedfor?WriteaJavaScipt function thatchecks\nwhether anHTMLformelement contains asyntactically validemailad\u00ad\ndress.(Section 7.6.2)\n\u2022Whatproblem dostylesheetsaddress? Whataretheadvantages ofusing\nstylesheets?(Section 7.6.3)\n\u2022WhatareCa.5cading StyleSheets? Explain thecomponents ofCa.<;cading\nStyleSheets.WhatisXSLandhowitisdifferent fromCSS?(Sections\n7.6.3and7.13)\n\u2022WhatisCGlandwhatproblem doesitaddress? (Section 7.7.1)\n\u2022Whatareapplication serversandhowaretheydifferent fromwebservers?\n(Section 7.7.2)\n\u2022Whatareservlets? HowdoservletshandledatafromHTMLforms?Ex\u00ad\nplainwhathappens duringthelifetimeofaservlet.(Section 7.7.3)\n\u2022Whatisthedifference between servlets andJSP?Whenshouldweuse\nservletsandwhen should weuseJSP?(Section 7.7.4)\n\u2022Whydoweneedtomaintain stateatthemiddletier?Whatarecookies?\nHowdoesabrowserhandlecookies? Howcanweaccessthedataincookies\nfromservlets? (Section 7.7.5)\nEXERCISES\nExercise 7.1Brieflyanswerthefollowing questions:\n1.Explain thefollowing termsanddescribe whattheyareusedfor:HTML, URL,XML,\nJava,JSP,XSL,XSLT,servlet,cookie,HTTP,ess,DTD.\n2.WhatiseGl?WhywaseGIintroduced? Whatarethedisadvantages ofanarchitecture\nusingeelscripts?\n3.\\Vhatisthedifference between awebserver andanapplication server?WhatfUl1cionality\ndotypicalapplication serversprovide?\n4.WhenisanXMLdocument well-formed? WhenisanXMLdocument valid?\nExercise 7.2Brieflyanswerthefollowing questions abouttheHTTPprotocol:", "300": "266 CHAPTER$ 7\n1.\\Nhatisacommunication protocol?\n2.\"Whatisthestructure ofanHTTPrequestmessage? Whatisthestructure ofanHTTP\nresponse message? \\VhydoHTTPmessages carryaversionfield?\n3.vVhatisastateless protocol? \"WhywasHTTPdesigned tobestateless?\n4.ShowtheHTTPrequest message generated whenyourequestthehomepageofthis\nbook(http://TNWW .cs.wisc.edurdbbook). ShowtheHTTPresponse message thatthe\nservergenerates forthatpage.\nExercise 7.3Inthisexercise, youareaskedtowritethefunctionality ofagenericshopping\nbasket;youwillusethisinseveralsubsequent projectexercises. WriteasetofJSPpagesthat\ndisplays ashopping basketofitemsandallowsuserstoadd,remove, andchangethequantity\nofitems.Todothis,useacookiestorageschemethatstoresthefollowing information:\n\u2022TheUserIdoftheuserwhoownstheshopping basket.\n\u2022Thenumber ofproducts storedintheshopping basket.\nI!Aproduct idandaquantity foreachproduct.\nWhenmanipulating cookies, remember tosettheExpires property suchthatthecookiecan\npersistforasessionorindefinitely. Experiment withcookies usingJSPandmakesureyou\nknowhowtoretrieve, setvalues,anddeletethecookie.\nYouneedtocreatefiveJSPpagestomakeyourprototype complete:\n..IndexPage(index.jsp):Thisisthemainentrypoint.Ithasalinkthatdirectsthe\nusertotheProducts pagesotheycanstartshopping.\nI!Products Page(products. jsp):Showsalistingofallproducts inthedatabase with\ntheirdescriptions andprices.Thisisthemainpagewheretheuserfillsouttheshopping\nbasket.Eachlistedproduct shouldhaveabuttonnexttoit,whichaddsittotheshopping\nbasket. (Iftheitemisalready intheshopping basket, itincrements thequantity by\none.)Thereshouldalsobeacountertoshowthetotalnumber ofitemscurrently inthe\nshopping basket.Notethatifauserhasaquantity offiveofasingleitemintheshopping\nbasket,thecounter shouldindicate atotalquantity offive.Thepagealsocontains a\nbuttonthatdirectstheusertotheCartpage.\nI!CartPage(cart.jsp):Showsalistingofallitemsintheshopping basketcookie.The\nlistingforeachitemshouldincludetheproduct name,price,atextboxforthequantity\n(theusercanchangcthequantity ofitemshere),andabuttontoremovetheitemfrom\ntheshopping basket.Thispagehasthreeotherbuttons: onebuttontocontinue shopping\n(whichreturnstheusertotheProducts page),asecondbuttontoupdatethecookie\nwiththealteredquantities fromthetextboxes,andathirdbuttontoplaceorconfirm\ntheorder,whichdirectstheusertotheConfirm page.\nI!Confirm Pl;tge(confirm. jsp):List.sthefinalorder.Therearetwobut.tons onthis\npage.Onebuttoncancelst.heorderandtheothersubmits thecompleted order.The\ncancelbuttonjustdeletesthecookieandreturnsthelIsertotheIndexpage.Thesubmit\nbuttonupdates thedatabase withtheneworder,delet.esthecookie,andreturnsthelIser\ntotheIndexpage.\nExercise 7.4Intheprevious exercise, replacethepageproducts. jspwiththefollmving\nsearchpagesearch. jsp.'T'hispageallowsuserstosearchproducts bynameordescrip\u00ad\ntion.Thereshouldbebothatextboxforthesearchtextandradiobuttons toallowthe", "301": "Internet Applications 2@7\nusertochoosebetween search-by-name andsearch-by-description (as\\vellasasubmitbut\u00ad\ntontoretrieve theresults), Thepagethathandles searchresultsshouldbemodeled after\nproducts.jsp (asdescribed intheprevious exercise) andbecalledproducts.jsp. Itshould\nretrieve allrecordswherethesearchtextisasubstring ofthenameordescription (aschosen\nbytheuser).Tointegrate thiswiththeprevious exercise, simplyreplaceallthelinksto\nproducts. jspwithsearch. jsp.\nExercise 7.5'Writeasimpleauthentication mechanism (without usingencrypted transfer of\npasswords, forsimplicity). Wesayauserisauthenticated ifshehasprovided avalidusername\u00ad\npassword combination tothesystem;otherwise, wesaytheuserisnotauthenticated. Assume\nforsimplicity thatyouhaveadatabase schemathatstoresonlyacustomer idandapassword:\nPasswords(cid: integer, username: string, password: string)\n1.Howandwhereareyougoingtotrackwhenauseris'loggedon'tothesystem?\n2.Designapagethatallowsaregistered usertologontothesystem.\n3.Designapageheaderthatcheckswhether theuservisitingthispageisloggedin.\nExercise 7.6(DuetoJeffDerstadt) TechnoBooks.com isintheprocessofreorganizing its\nwebsite. Amajorissueishowtoefficiently handlealargenumber ofsearchresults. Ina\nhumaninteraction study,itfoundthatmodemuserstypically liketoview20searchresultsat\natime,anditwouldliketoprogram thislogicintothesystem. Queriesthatreturnbatchesof\nsortedresultsarecalledtopNqueries. (SeeSection25.5foradiscussion ofdatabase support\nfortopNqueries.) Forexample, results1-20arereturned, thenresults 21~40,then41-60,\nandsoOIl.Different techniques areusedforperforming topNqueriesandTechnoBooks.com\nwouldlikeyoutoimplement twoofthem.\nInfrastructure: Createadatabase withatablecalledBooksandpopulate itwithsome\nbooks,usingtheformatthatfollows. ThisgivesyouIIIbooksinyourdatabase withatitle\nofAAA,BBB,CCC,DDD,orEEE,butthekeysarenotsequential forbookswiththesame\ntitle.\nBooks(bookid:INTEGER, title:CHAR(80), author: CHAR(80), price:REAL)\nFori=1to111{\nInsertthetuple(i,\"AAA\", \"AAAAuthor\", 5.99)\ni=i+l\nInsertthetuple(i,\"BBB\",\"BBBAuthor\", 5.99)\ni=i+1\nInsertthetuple(i,\"CCC\", \"CCCAuthor\", 5.99)\ni=i+1\nInsertthetuple(i,\"DDD\", \"DDDAuthor\", 5.99)\n1=i+l\nInsertthetuple(i,\"EEE\",\"EEEAuthor\", 5.99)\nPlaceholder Technique: Thesimplest approach totopNqueriesistostoreaplaceholder\nforthefirstandlastresulttuples,andthenperform thesamequery.Whenthenewquery\nresultsarereturned, youcaniteratetotheplaceholders andreturntheprevious ornext20\nresults.", "302": "268\nITuplesShown LowerPlaceholder Previous SetUpperPlaceholder NextSetI\n1-20 1 None 20\"-21-40\n21-40 21 1-20 40 41-60\n41-60 41 21-40 60 61-80\nWriteawebpage inJSPthatdisplays thecontents oftheBookstable,sortedbytheTitleand\nBookId, andshowing theresults20atatime.Thereshouldbealink(whereappropriate) to\ngettheprevious 20resultsorthenext20results. Todothis,youcanencodetheplaceholders\ninthePrevious orNextLinksasfollows. Assumethatyouaredisplaying records21-40.Then\ntheprevious linkisdisplay. jsp?lower=21 andthenextlinkisdisplay. jsp?upper=40.\nYoushouldnotdisplayaprevious linkwhentherearenoprevious results;norshouldyou\nshowaNextlinkiftherearenomoreresults.Whenyourpageiscalledagaintogetanother\nbatchofresults,youcanperform thesamequerytogetalltherecords, iteratethrough the\nresultsetuntilyouareattheproperstarting point,thendisplay20moreresults.\nWhataretheadvantages anddisadvantages ofthistechnique?\nQueryConstraints Technique: Asecondtechnique forperforming topNqueries isto\npushboundary constraints intothequery(intheWHEREclause)sothatthequeryreturnsonly\nresultsthathavenotyetbeendisplayed. Although thischanges thequery,fewerresultsare\nreturned anditsavesthecostofiterating uptotheboundary. Forexample, consider the\nfollowing table,sortedby(title,primary key).\nIBatchIResultNumber TitleIPrimary Key\n1 1 AAA 105\n1 2 BBB 13\n1 3eee 48\n1 4 DDD 52\n1 5 DDD 101\n2 6 DDD 121\n2 7 EEE 19\n2 8 EEE 68\n2 9 FFF 2\n2 10 FFF 33\nFFF.\"~\n:~ 11 58\n3 12 FFF 59\n3 13 GGG 93\n3 14 EHH 132\n3 15 HHH 135\nInbatch1,rows1t.hrough 5aredisplayed, inbatch2rows6through 10aredisplayed, andso\non.Usingtheplaceholder technique, all15resultswouldbereturned foreachbatch.Using\ntheconstraint technique, batch1displays results1-5butreturnsresults1-15,batch2will\ndisplayresults6-10butreturnsonlyresults6-15,andbatch :~willdisplayresults11-15but\nreturnonlyresults11-15.", "303": "Internet Applications 299\nTheconstraint canbepushedintothequerybecause ofthesortingofthistable.Consider\nthefollowing queryforbatch2(displaying results6-10):\nEXECSQLSELECT B.Title\nFROM BooksB\nWHERE (B.Title='DDD'ANDB.BookId>101)OR(B.Title>'DDD')\nORDER BYB.Title, B.Bookld\nThisqueryfirstselectsallbookswiththetitle'DDD,'butwithaprimary keythatisgreater\nthanthatofrecord5(record5hasaprimary keyof101).Thisreturnsrecord6.Also,any\nbookthathasatitleafter'DDD'alphabetically isreturned. Youcanthendisplaythefirst\nfiveresults.\nThefollowing information needstoberetained tohavePrevious andNextbuttonsthatreturn\nmoreresults:\n\u2022Previous: Thetitleofthefirstrecordintheprevious set,andtheprimary keyofthe\nfirstrecordintheprevious set.\n\u2022Next:Thetitleofthefirstrecordinthenextset;theprimary keyofthefirstrecordin\nthenextset.\nThesefourpiecesofinformation canbeencoded intothePrevious andNextbuttons asinthe\nprevious part.Usingyourdatabase tablefromthefirstpart,writeaJavaServer Pagethat\ndisplays thebookinformation 20recordsatatime.ThepageshouldincludePrevious and\nNextbuttonstoshowtheprevious ornextrecordsetifthereisone.Usetheconstraint query\ntogetthePrevious andNextrecordsets.\nPROJECT~BASED EXERCISES\nInthischapter, youcontinue theexercises fromtheprevious chapter andcreatethepartsof\ntheapplication thatresideatthemiddletierandatthepresentation tier.Moreinformation\nabouttheseexercises andmaterial formoreexercises canbefoundonlineat\nhttp://~.cs.wisc.edu/-dbbook\nExercise 7.7RecalltheNotown Records websitethatyouworkedoninExercise 6.6.Next,\nyouareaskedtodevelop theactualpagesfortheNotown Records website. Designthepart\nofthewebsitethatinvolves thepresentation tierandthemiddletier,andintegrate thecode\nthatyouwroteinExercise 6.6toaccessthedatabase.\nI.Describe indetailthesetofwebpages thatuserscanaccess.Keepthefollowing issues\ninmind:\n\u2022Allusersstartatacommon page.\n\u2022Foreachaction,whatinputdoestheuserprovide? Howwilltheuserprovideit-by\nclicking onalinkorthrough anHTMLform?\n\u2022Whatsequence ofstepsdoesausergothrough topurchase arecord? Describe the\nhigh-level application flowbyshowing howeachlIseractionishandled.", "304": "270 CHAPTER .,7\n2.vVritethewebpages inHTMLwithout dynamic content.\n3.vVriteapagethatallowsuserstologontothesite.Usecookiestostoretheinformation\npermanently attheuser'sbrowser.\n4.Augment thelog-onpagewithJavaScript codethatchecksthattheusername consists\nonlyofthecharacters fromatoz.\n5.Augment thepagesthatallowuserstostoreitemsinashopping basketwithacondition\nthatcheckswhether theuserhasloggedontothesite.Iftheuserhasnotyetloggedon,\nthereshouldbenowaytoadditemstotheshopping cart.Implement thisfunctionality\nusingJSPbychecking cookieinformation fromtheuser.\n6.Createtheremaining pagestofinishthewebsite.\nExercise 7.8Recalltheonlinepharmacy projectthatyouworked oninExercise 6.7in\nChapter 6.Followtheanalogous stepsfromExercise 7.7todesigntheapplication logicand\npresentation layerandfinishthewebsite.\nExercise 7.9Recalltheuniversity database projectthatyouworkedoninExercise 6.8in\nChapter 6.Followtheanalogous stepsfromExercise 7.7todesigntheapplication logicand\npresentation layerandfinishthewebsite.\nExercise 7.10Recalltheairlinereservation projectthatyouworkedoninExercise 6.9in\nChapter 6.Followtheanalogous stepsfromExercise 7.7todesigntheapplication logicand\npresentation layerandfinishthewebsite.\nBIBLIOGRAPHIC NOTES\nThelatestversionofthestandards mentioned inthischapter canbefoundatthewebsite\noftheWorldWideWebConsortium (www.w3.org).Itcontains linkstoinformation about\nI-ITML, cascading stylesheets,XIvIL,XSL,andmuchmore.ThebookbyHallisagen\u00ad\neralintroduction toWebprogn1.111ming technologies [357];agoodstarting pointontheWeb\niswww.Webdeve1oper.com. Therearemanyintroductory booksonCGIprogranuning, for\nexample [210,198].TheJavaSoft (java.sun.com)homepageisagoodstarting pointfor\nServlets, .JSP,andallotherJava-related technologies. ThebookbyHunter[394]isagood\nintroduction toJavaServlets. Microsoft supports ActiveServerPages(ASP),acomparable\ntedmology to.lSI'.l'vIoreinformation aboutASPcanbefoundontheMicrosoft Developer's\nNetwork hornepage(msdn.microsoft. com).\nThereareexcellent websites devoted totheadvancement ofXML,forexample 1.l1-iTW.xm1.com\nandwww.ibm.com/xm1. thatalsocontain aplethora oflinkswithinformation abouttheother\nstandards. Therearegoodintroductory booksonmanydiflerent aspectsofXML,forexarnple\n[195,158,597,474, :381,320].Information aboutUNICODE canbefoundonitshomepage\nhttp://www.unicode.org.\nInforrnation about.lavaServer Pagesane!servlets canbefoundontheJavaSoft homepageat\njava.sun.comatjava.sun.com/products/j spandatjava.sun.com/products/servlet.", "305": "PARTIII\nSTORAGE ANDINDEXING", "306": "1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1", "307": "8\nOVERVIEW'OF STORAGE\nANDINDEXING\n..HowdoesaDBMSstoreandaccesspersistent data?\n..WhyisI/Ocostsoimportant fordatabase operations?\n..HowdoesaDBMSorganize filesofdatarecordsondisktominimize\nI/Ocosts?\n...Whatisanindex,andwhyisitused?\n..Whatistherelationship between afileofdatarecordsandanyindexes\nonthisfileofrecords?\n..Whatareimportant properties ofindexes?\n..Howdoesahash-based indexwork,andwhenisitmosteffective?\n..Howdoesatree-based indexwork,andwhenisitmosteffective?\n...Howcanweuseindexestooptimize performance foragivenworkload?\n..Keyconcepts: external storage, buffermanager, pageI/O;fileorga-\nnization, heapfiles,sortedfiles;indexes,dataentries,searchkeys,clus\u00ad\nteredindex,clustered file,primary index;indexorganization, hash\u00ad\nbasedandtree-based indexes; costcomparison, fileorganizations and\ncommon operations; performance tuning,workload, composite search\nkeys,useofclustering,\n____________________ J\nIfyoudon'tfinditintheindex,lookverycarefully through theentirecatalog.\n--Sears, Roebuck, andCo.,Consumers' Guide,1897\nTheba.'3icabstraction ofdatainaDBMSisacollection ofrecords, orafile,\nandeachfileconsists of oneormorepages.Thefilesandaccessmethods", "308": "274 CHAPTER 8\nsoftware layerorganizes datacarefully tosupport fastaccesstodesiredsubsets\nofrecords. Understanding howrecordsareorganized isessential tousinga\ndatabase systemeffectively, anditisthemaintopicofthischapter.\nAfileorganization isamethod ofarranging therecordsinafilewhenthe\nfileisstoredondisk.Eachfileorganization makescertainoperations efficient\nbutotheroperations expensive.\nConsider afileofemployee records, eachcontaining age,name,andsalfields,\nwhichweuseasarunning example inthischapter.Ifwewanttoretrieve\nemployee recordsinorderofincreasing age,sortingthefilebyageisagoodfile\norganization, butthesortorderisexpensive tomaintain ifthefileisfrequently\nmodified. Further, weareofteninterested insupporting morethanoneoper\u00ad\nationonagivencollection ofrecords. Inourexample, wemayalsowantto\nretrieve allemployees whomakemorethan$5000.Wehavetoscantheentire\nfiletofindsuchemployee records.\nAtechnique calledindexing canhelpwhenwehavetoaccessacollection of\nrecordsinmultiple ways,inaddition toefficiently supporting variouskindsof\nselection. Section8.2introduces indexing, animportant aspectoffileorgani\u00ad\nzationinaDBMS.Wepresentanoverview ofindexdatastructures inSection\n8.3;amoredetailed discussion isincluded inChapters 10and11.\nWeillustrate theimportance ofchoosing anappropriate fileorganization in\nSection8.4through asimplified analysis ofseveralalternative fileorganizations.\nThecostmodelusedinthisanalysis, presented inSection8.4.1,isusedin\nlaterchapters aswelLInSection8.5,wehighlight someimportant choicesto\nbemadeincreating indexes. Choosing agoodcollection ofindexestobuild\nisarguably thesinglemostpowerful tooladatabase administrator hasfor\nimproving performance.\n8.1DATAONEXTERNAL STORAGE\nADBMSstoresvastquantities ofdata,andthedatamustpersistacrosspro\u00ad\ngramexecutions. Therefore, dataisstoredonexternal storagedevicessuchas\ndisksandtapes,andfetchedintomainmemory asneededforprocessing. The\nunitofinformation readfromorwrittentodiskisapage.Thesizeofapage\nisaDBMSparameter, andtypicalvaluesare4KBor8KB.\nThecostofpageI/O(inputfromdisktomainInemory andoutputfrommem\u00ad\norytodisk)dominates thecostoftypicaldatabase operations, anddataba,'>e\nsystems arecarefully optimized torninimize thiscost.Whilethedetailsofhow", "309": "Storage andIndexing :175\nfilesofrecordsarephysically storedondiskandhowmainmemory isutilized\narecoveredinChapter 9,thefollowing pointsareimportant tokeepinmind:\n\u2022Disksarethemostimportant external storagedevices. Theyallowusto\nretrieve anypageata(moreorless)fixedcostperpage.However, ifwe\nreadseveralpagesintheorderthattheyarestoredphysically, thecostcan\nbemuchlessthanthecostofreadingthesamepagesinarandom order.\n\u2022Tapesaresequential accessdevicesandforceustoreaddataonepageafter\ntheother.Theyaremostlyusedtoarchivedatathatisnotneededona\nregularbasis.\n\u2022Eachrecordinafilehasauniqueidentifier calledarecordid,orridfor\nshort.Anridha.'3theproperty thatwecanidentifythediskaddressofthe\npagecontaining therecordbyusingtherid.\nDataisreadintomemory forprocessing, andwrittentodiskforpersistent\nstorage, byalayerofsoftware calledthebuffermanager. Whenthefilesand\naccessmethods layer(whichweoftenrefertoasjustthefilelayer)needsto\nprocessapage,itasksthebuffermanager tofetchthepage,specifying the\npage'srid.Thebuffermanager fetchesthepagefromdiskifitisnotalready\ninmemory.\nSpaceondiskismanaged bythediskspacem,anager, according totheDBMS\nsoftware architecture described inSection1.8.Whenthefilesandaccessmeth\u00ad\nodslayerneedsadditional spacetoholdnewrecordsinafile,itasksthedisk\nspacemanager toallocate anadditional diskpageforthefile;italsoinforms\nthediskspacemanager whenitnolongerneedsoneofitsdiskpages.Thedisk\nspacemanager keepstrackofthepagesinusebythefilelayer;ifapageisfreed\nbythefilelayer,thespacernanager tracksthis,andreusesthespaceifthefile\nlayerrequests anewpagelateron.\nIntherestofthischapter, wefocusonthefilesandaccessmethods layer.\n8.2FILEORGANIZATIONS ANDINDEXING\nThefileofrecords isanimportant abstraction inaDBMS,andisimple\u00ad\nmentedbythefilesandaccessmethods layerofthecode.Afilecanbecreated,\ndestroyed, andhaverecordsinserted intoanddeletedfromit.Italsosupports\nscallS;ascanoperation allowsustostepthrough alltherecordsinthefileone\natatime.Arelatioll istypically stored a.':lafileofrecords.\nThefilelayerstorestherecordsinafileinacollection ofdiskpages.Itkeeps\ntrackofpagesallocated toeachfile,andasrecordsareinserted intoanddeleted\nfromthefile,italsotracksavaila.ble spacewithinpagesallocated tothefile.", "310": "276 CHAPTER 8\nThesimplest filestructure isanunordered file,orheapfile.Records ina\nheapfilearestoredinrandom orderacrossthepagesofthefile.Aheapfile\norganization supports retrieval ofallrecords, orretrieval ofaparticular record\nspecified byitsrid;thefilemanager mustkeeptrackofthepagesallocated for\nthefile.(\"Vedeferthedetailsofhowaheapfileisimplemented toChapter 9.)\nAnindexisadatastructure thatorganizes datarecordsondisktooptimize\ncertainkindsofretrieval operations. Anindexallowsustoefficiently retrieve\nallrecordsthatsatisfysearchconditions onthesearchkeyfieldsoftheindex.\nWecanalsocreateadditional indexesonagivencollection ofdatarecords,\neachwithadifferent searchkey,tospeedupsearchoperations thatarenot\nefficiently supported bythefileorganization usedtostorethedatarecords.\nConsider ourexample ofemployee records. Wecanstoretherecordsinafile\norganized asanindexonemployee age;thisisanalternative tosortingthefile\nbyage.Additionally, wecancreateanauxiliary indexfilebasedonsalary,to\nspeedupqueriesinvolving salary.Thefirstfilecontains employee records, and\nthesecondcontains recordsthatallowustolocateemployee recordssatisfying\naqueryonsalary.\n\"Veusethetermdataentrytorefertotherecordsstoredinanindexfile.A\ndataentrywithsearchkeyvaluek,denoted ask*,contains enoughinformation\ntolocate(oneormore)datarecordswithsearchkeyvaluek.Wecanefficiently\nsearchanindextofindthedesireddataentries,andthenusethesetoobtain\ndatarecords(ifthesearedistinctfromdataentries).\nTherearethreemainalternatives forwhattostoreasadataentryinanindex:\n1.Adataentryhisanactualdatarecord(withsearchkeyvaluek).\n2.Adataentryisa(k,rid)pair,whereridistherecordidofadatarecord\nwithsearchkeyvaluek.\n3.Adataentryisa(k.rid-list) pair,whererid-listisalistofrecordidsof\ndatarecordswithsearchkeyvaluek.\nOfcourse,iftheindexisusedtostoreactualdatarecords, Alternative (1),\neachentrybisadatarecordwithsearchkeyvaluek.Wecanthinkofsuchan\nindex &'3aspecialfileorganization. Suchanindexed fileorganization can\nbeusedinsteadof,forexarnple, asortedfileoranunordered fileofrecords.\nAlternatives (2)and(3),whichcontaindataentriesthatpointtodatarecords,\nareindependent ofthefileorganization thatisusedfortheindexed file(i.e.,", "311": "Storage andIndexing 277.\nthefilethatcontains thedatarecords). Alternative (3)offersbetterspaceuti\u00ad\nlizationthanAlternative (2),butdataentriesarevariable inlength,depending\nonthenumberofdatarecordswithagivensearchkeyvalue.\nIfwewanttobuildmorethanoneindexonacollection ofdatarecords-for\nexample, wewanttobuildindexesonboththeageandthesalfieldsforacol\u00ad\nlectionofemployee records-~at mostoneoftheindexesshoulduseAlternative\n(1)because weshouldavoidstoringdatarecordsmultiple times.\n8.2.1Clustered Indexes\nWhenafileisorganized sothattheordering ofdatarecordsisthesameas\norclosetotheordering ofdataentriesinsomeindex,wesaythattheindex\nisclustered; otherwise, itclustered isanunclustered index.Anindexthat\nusesAlternative (1)isclustered, bydefinition. AnindexthatusesAlternative\n(2)or(3)canbeaclustered indexonlyifthedatarecordsaresortedonthe\nsearchkeyfield.Otherwise, theorderofthedatarecordsisrandom, defined\npurelybytheirphysical order,andthereisnoreasonable waytoarrangethe\ndataentriesintheindexinthesameorder.\nInpractice, filesarerarelykeptsortedsincethisistooexpensive tomaintain\nwhenthedataisupdated~ So,inpractice, aclustered indexisanindexthatuses\nAlternative (1),andindexesthatuseAlternatives (2)or(3)areunclustered.\nWesometimes refertoanindexusingAlternative (1)asaclustered file,\nbecause thedataentriesareactualdatarecords, andtheindexistherefore a\nfileofdatarecords. (Asobserved earlier,searches andscansonanindexreturn\nonlyitsdataentries,evenifitcontains additional information toorganize the\ndataentries.)\nThecostofusinganindextoanswerarangesearchquerycanvarytremen\u00ad\ndouslybasedonwhether theindexisclustered. Iftheindexisclustered, i.e.,\nweareusingthesearchkeyofaclustered file,theridsinqualifying dataentries\npointtoacontiguous collection ofrecords, andweneedtoretrieveonlyafew\ndatapages.Iftheindexisunclustered, eachqualifying dataentrycouldcontain\naridthatpointstoadistinctdatapage,leadingtoasmanydatapagel/Os\n8.'3thenumberofdataentriesthatmatchtherangeselection, asillustrated in\nFigure8.1.Thispointisdiscussed furtherinChapter 13.\n8.2.2Primary andSecondary Indexes\nAnindexonasetoffieldsthatincludes theprimaTy key(seeChapter 3)is\ncalledaprimary index;otherindexesarecalledsecondary indexes. (The\ntermsjJrimaTy inde.TandsecondaTy indexaresometimes usedwithadifferent", "312": "278\nIndexentries\n(Directsearchfor\ndataenrries)\nDataentries\nData\nrecords\nFigure8.1Uuelllst.ered IndexUsingAlt.ernat.ive (2)CHAPTER .~\nIndexfile\nDatatile\nmeaning: AnindexthatusesAlternative (1)iscalledaprimary index,and\nonethatusesAlternatives (2)or(3)iscalledasecondary index.Wewillbe\nconsistent withthedefinitions presented earlier,butthereadershouldbeaware\nofthislackofstandard terminology intheliterature.)\nTwodataentriesaresaidtobeduplicates iftheyhavethesamevalueforthe\nsearchkeyfieldassociated withtheindex.Aprimary indexisguaranteed not\ntocontainduplicates, butanindexonother(collections of)fieldscancontain\nduplicates. Ingeneral, asecondary indexcontains duplicates. Ifweknow\ntha.tnoduplicates exist,thatis,weknowthatthesearchkeycontains some\ncandidate key,wecalltheindexaunique index.\nAnimportant issueishowdataentriesinanindexareorganized tosupport\nefficient retrieval ofdataentries.vVe discussthisnext.\n8.3INDEXDATASTRUCTURES\nOnewaytoorganize dataentriesistohashdataentriesonthesea.rchkey.\nAnother waytoorganize dataentriesistobuildatree-like datastructure that\ndirectsasearchfordataentries. \"Veintroduce thesetwobasicapproaches ill\nthissection. \\iV~estudytree-based indexing inmoredetailinChapter 10and\nha\"sh-based indexing inChapter 11.\nWenotethatthechoiceofhashortreeindexing techniques canbecombined\nwithanyofthethreealternatives fordataentries.", "313": "StoTageandIndexing\n8.3.1Hash-Based Indexing2'49\nViecanorganize recordsusingatechnique calledhashingtoquicklyfindrecords\nthathaveagivensearchkeyvalue.Forexample, ifthefileofemployee records\nishashedonthenamefield,wecanretrieveallrecordsaboutJoe.\nInthisapproach, therecordsinafilearegrouped inbuckets, whereabucket\nconsists of aprimary pageand,possibly, additional pageslinkedinachain.\nThebuckettowhicharecordbelongscanbedetermined byapplying aspecial\nfunction, calledahashfunction, tothesearchkey.Givenabucketnumber,\nahash-based indexstructure allowsustoretrieve theprimary pageforthe\nbucketinoneortwodiskl/Os.\nOninserts,therecordisinserted intotheappropriate bucket,with'overflow'\npagesallocated asnecessary. Tosearchforarecordwithagivensearchkey\nvalue,weapplythehashfunction toidentifythebuckettowhichsuchrecords\nbelongandlookatallpagesinthatbucket.Ifwedonothavethesearchkey\nvaluefortherecord,forexample, theindexisbasedonsalandwewantrecords\nwithagivenagevalue,wehavetoscanallpagesinthefile.\nInthischapter, weassumethatapplying thehashfunction to(thesearchkey\nof)arecordallowsustoidentifyandretrievethepagecontaining therecord\nwithoneI/O.Inpractice, hash-based indexstructures thatadjustgracefully\ntoinsertsanddeletesandallowustoretrievethepagecontaining arecordin\nonetotwol/Os(seeChapter 11)areknown.\nHashindexing isillustrated inFigure8.2,wherethedataisstoredinafilethat\nishashedonage;thedataentriesinthisfirstindexfilearetheactualdata\nrecords. Applying thehashfunction totheagefieldidentifies thepagethat\ntherecordbelongsto.Thehashfunction hforthisexample isquitesimple;\nitconverts thesearchkeyvaluetoitsbinaryrepresentation andusesthetwo\nleastsignificant bitsasthebucketidentifier.\nFigure8.2alsoshowsanindexwithsearchkeysalthatcontains (sal,rid)pairs\nasdataentries.Thetid(shortforrecordid)component ofadataentryinthis\nsecondindexisapointertoarecordwithsearchkeyvaluesal(andisshown\ninthefigureasanarrowpointing tothedatarecord).\nUsingtheterminology introduced inSection8.2,Figure8.2illustrates Alter\u00ad\nnativE\"S(1)and(2)fordataentries.Thefileofemployee recordsishashedon\nage,andAlternative (1)isusedforfordataentries.Thesecondindex,onsal,\nalsouseshashing tolocatedataentries,whicharenow(sal,ridofemployee\nrecoT'(~pairs;thatis,Alternative (2)isusedfordataentries.", "314": "280 CHAPTER 8\nAshby.25,3000\nBasu,33,4003\nBristow,29,2007\nh(age)=l0\nCass,50,5004\nDaniels,22,6003\nFileof<sal,rid>pairs\nEmployees filehashedonagehashedonsal\nFigure8.2Index-Organized FileHashedonage,withAuxiliary Indexonsal\nNotethatthesearchkeyforanindexcanbeanysequence ofoneormore\nfields,anditneednotuniquely identify records. Forexample, inthesalary\nindex,twodataentrieshavethesamesearchkeyvalue6003.(Thereisan\nunfortunate overloading ofthetermkeyinthedatabase literature. Aprimary\nkeyorcandidate key-fields thatuniquely identify arecord;seeChapter 3~is\nunrelated totheconcept ofasearchkey.)\n8.3.2Tree-Based Indexing\nAnalternative tohash-based indexing istoorganize records usingatree\u00ad\nlikedatastructure. Thedataentriesarearranged insortedorderbysearch\nkeyvalue,andahierarchical searchdatastructure ismaintained thatdirects\nsearches tothecorrectpageofdataentries.\nFigure8.3showstheemployee recordsfromFigure8.2,thistimeorganized ina\ntree-structured indexwithsearchkeyage. Eachnodeinthisfigure(e.g.,nodes\nlabeledA,B,L1,L2)isaphysical page,andretrieving anodeinvolves adisk\nI/O.\nThelowestlevelofthetree,calledtheleaflevel,contains thedataentries;\ninourexample, theseareemployee records. Toillustrate theideasbetter,we\nhavedrawnFigure8.3asiftherewereadditional employee records, somewith\nagelessthan22andsomewithagegreaterthanEiO(thelowestandhighest\nagevaluesthatappearinFigure8.2).Additional recordswithagelessthan\n22wouldappearinleafpagestotheleftpageL1,andrecordswithagegreater\nthan50wouldappearinleafpagestotherightofpage L~~.", "315": "StorageandIndel:ing 281\n~\n...\nLEAFLEVEL L1/\nDaniels.22.6003\n/'\"\"Ashby,25,3000\n/I--B-ris-to-w-, 2-9,-2-00-7--YL3\nSmith,44,3000\nTracy,44,5004\nCass,50,5004...\nFigure8.3Tree\u00b7Structured Index\nThisstructure allowsustoefficiently locatealldataentrieswithsearchkey\nvaluesinadesiredrange.Allsearches beginatthetopmost node,calledthe\nroot,andthecontents ofpagesinnon-leaf levelsdirectsearches tothecorrect\nleafpage.Non-leaf pagescontainnodepointers separated bysearchkeyvalues.\nThenodepointertotheleftofakeyvaluekpointstoasubtreethatcontains\nonlydataentrieslessthank.Thenodepointertotherightofakeyvaluek\npointstoasubtreethatcontains onlydataentriesgreaterthanorequaltok.\nInourexample, suppose wewanttofindalldataentrieswith24<age<50.\nEachedgefromtherootnodetoachildnodeinFigure8.2hasalabelthat\nexplains whatthecorresponding subtreecontains. (Although thelabelsforthe\nremaining edgesinthefigurearenotshown,theyshouldbeeasytodeduce.)\nInourexample search,welookfordataentrieswithsearchkeyvalue>24,\nandgetdirected tothemiddlechild,nodeA.Again,examining thecontents\nofthisnode,wearedirected tonodeB.Examining thecontents ofnodeB,we\naredirected toleafnodeLl,whichcontains dataentrieswearelookingfor.\nObserve thatleafnodesL2andL3alsocontaindataentriesthatsatisfyour\nsearchcriterion. Tofacilitate retrieval ofsuchqualifying entriesduringsearch,\nallleafpagesaremaintained inadoubly-linked list.Thus,wecanfetchpage\nL2usingthe'next'pointeronpageLl,andthenfetchpageL3usingthe'next'\npointeronL2.\nThus,thenumberofdiskI/Osincurred duringasearchisequaltothelength\nofapathfromtheroottoaleaf,plusthenumberofleafpageswithqualifying\ndataentries. TheB+treeisanindexstructure thatensuresthatallpaths\nfromtheroottoaleafinagiventreeareofthesamelength,thatis,the\nstructure isalwaysbalanced inheight.Finding thecorrectleafpageisfaster", "316": "282 CHAPTER 8\n-1,\nthanbinarysearchofthepagesinasortedfilebecause each non~leaf nodecan\naccommodate averylargenumberofnode-pointers, andtheheightofthetree\nisrarelymorethanthreeorfourinpractice. Theheightofabalanced treeis\nthelengthofapathfromroottoleaf;inFigure8.3,theheightisthree.The\nnumber ofl/Ostoretrieve adesiredleafpageisfour,including therootand\ntheleafpage.(Inpractice, therootistypically inthebufferpoolbecause it\nisfrequently accessed, andwereallyincurjustthreeI/Osforatreeofheight\nthree.)\nTheaveragenumber ofchildren foranon-leaf nodeiscalledthefan-out of\nthetree.Ifeverynon-leaf nodehasnchildren, atreeofheighthhasnhleaf\npages.Inpractice, nodesdonothavethesamenumberofchildren, butusing\ntheaveragevalueFforn,westillgetagoodapproximation tothenumberof\nleafpages,Fh.Inpractice, Fisatleast100,whichmeansatreeofheightfour\ncontains 100millionleafpages.Thus,wecansearchafilewith100millionleaf\npagesandfindthepagewewantusingfourl/Os;incontrast, binarysearchof\nthesamefilewouldtakelog21OO,000,000 (over25)l/Os.\n8.4COMPARISON OFFILEORGANIZATIONS\nWenowcompare thecostsofsomesimpleoperations forseveralbasicfile\norganizations onacollection ofemployee records. Weassumethatthefilesand\nindexesareorganized according tothecomposite searchkey(age,sa~,andthat\nallselection operations arespecified onthesefields.Theorganizations thatwe\nconsider arethefollowing:\n\u2022Fileofrandomly orderedemployee records, orheapfile.\n\u2022Fileofemployee recordssortedon(age,sal).\n\u2022Clustered B+treefilewithsearchkey(age,sal).\n\u2022Heapfilewithanunclustered B+treeindexon(age,sal).\n\u2022Heapfilewithanunclustered hashindexon(age,sal).\nOurgoalistoemphasize theimportance ofthechoiceofanappropriate file\norganization, andtheabovelistincludes themainalternatives toconsider in\npractice. Obviously, wecankeeptherecordsunsorted orsortthem.Wecan\nalsochoosetobuildanindexonthedatafile.Notethatevenifthedatafile\nissorted,anindexwhosesearchkeydiffersfromthesortorderbehaves likean\nindexonaheapfile!\nTheoperations weconsider arethese:", "317": "Storage andIndexing 283\n\u2022Scan:Fetchallrecordsinthefile.Thepagesinthefilemustbefetched\nfromdiskintothebufferpool.ThereisalsoaCPUoverhead perrecord\nforlocating therecordonthepage(inthepool).\n\u2022SearchwithEquality Selection: Fetchallrecordsthatsatisfyanequal\u00ad\nityselection; forexample, \"Findtheemployee recordfortheemployee with\nage23andsal50.\"Pagesthatcontainqualifying recordsmustbefetched\nfromdisk,andqualifying recordsmustbelocatedwithinretrieved pages.\n\u2022SearchwithRangeSelection: Fetchallrecordsthatsatisfyarange\nselection; forexample, \"Findallemployee recordswithagegreaterthan\n35.\"\n\u2022InsertaRecord: Insertagivenrecordintothefile.Wemustidentifythe\npageinthefileintowhichthenewrecordmustbeinserted, fetchthatpage\nfromdisk,modifyittoincludethenewrecord,andthenwritebackthe\nmodified page.Depending onthefileorganization, wemayhavetofetch,\nmodify,andwritebackotherpagesaswell.\n\u2022DeleteaRecord: Deletearecordthatisspecified usingitsrid.Wemust\nidentifythepagethatcontains therecord,fetchitfromdisk,modifyit,and\nwriteitback.Depending onthefileorganization, wemayhavetofetch,\nmodify,andwritebackotherpagesaswell.\n8.4.1CostModel\nInourcomparison offileorganizations, andinlaterchapters, weuseasimple\ncostmodelthatallowsustoestimate thecost(intermsofexecution time)of\ndifferent database operations. WeuseBtodenotethenumber ofdatapages\nwhenrecordsarepackedontopageswithnowastedspace,andRtodenote\nthenumber ofrecordsperpage.Theaverage timetoreadorwriteadisk\npageisD,andtheaveragetimetoprocessarecord(e.g.,tocompare afield\nvaluetoaselection constant) isC.Intheha.'3hedfileorganization, weusea\nfunction, calledahashfunction, tomaparecordintoarangeofnumbers; the\ntimerequired toapplythehashfunction toarecordisH.Fortreeindexes, we\nwilluseFtodenotethefan-out, whichtypically isatlea.'3t100asmentioned\ninSection8.3.2.\nTypicalvaluestodayareD=15milliseconds, CandH=100nanoseconds; we\ntherefore expectthecostofI/Otodominate. I/Oisoften(eventypically) the\ndominant component ofthecostofdatabase operations, andsoconsidering I/O\ncostsgivesusagoodfirstapproximation tothetruecosts.Further, CPUspeeds\naresteadilyrising,whereas diskspeedsarenotincreasing atasimilarpace.(On\ntheotherhand,asmainmemory sizesincrease, amuchlargerfraction ofthe\nneededpagesarelikelytofitinmemory, leadingtofewerI/Orequests!) \\Ve", "318": "284 CHAPTER,8\nhavechosentoconcentrate ontheI/Ocomponent ofthecostmodel,andwe\nassumethesimpleconstant Cforin-memory per-record processing cost.Bear\nthefollO\\ving observations inmind:\n..Realsystems mustconsider otheraspectsofcost,suchasCPUcosts(and\nnetwork transmission costsinadistributed database).\n..Evenwithourdecision tofocusonI/Ocosts,anaccurate modelwouldbe\ntoocomplex forourpurposes ofconveying theessential ideasinasimple\nway.Wetherefore useasimplistic modelinwhichwejustcountthenumber\nofpagesreadfromorwrittentodiskasameasure ofI/O.\\lVeignorethe\nimportant issueofblocked accessinouranalysis-typically, disksystems\nallowustoreadablockofcontiguous pagesinasingleI/Orequest. The\ncostisequaltothetimerequired toseekthefirstpageintheblockand\ntransfer allpagesintheblock.Suchblocked accesscanbemuchcheaper\nthanissuingoneI/Orequestperpageintheblock,especially ifthese\nrequests donotfollowconsecutively, because wewouldhaveanadditional\nseekcostforeachpageintheblock.\nWediscusstheimplications ofthecostmodelwhenever oursimplifying as\u00ad\nsumptions arelikelytoaffectourconclusions inanimportant way.\n8.4.2HeapFiles\nScan:ThecostisB(D+RC)because wemustretrieveeachofBpagestaking\ntimeDperpage,andforeachpage,processRrecordstakingtimeCperrecord.\nSearchwithEquality Selection: Suppose thatweknowinadvance that\nexactlyonerecordmatches thedesiredequality selection, thatis,theselection\nisspecified onacandidate key.Onaverage, wemustscanhalfthefile,assuming\nthattherecordexistsandthedistribution ofvaluesinthesearchfieldisuniform.\nForeachretrieved datapage,wemustcheckallrecordsonthepagetoseeif\nitisthedesiredrecord.ThecostisO.5B(D+RC).Ifnorecordsatisfies the\nselection, however, wemustscantheentirefiletoverifythis.\nIftheselection isnotonacandidate keyfield(e.g.,\"Findemployees aged18\"),\nwealwayshavetoscantheentirefilebecause recordswithage=18couldbe\ndispersed alloverthefile,andwehavenoideahowmanysuchrecordsexist.\nSearch withRangeSelection: Theentirefilemustbescanned because\nqualifying recordscouldappearanywhere inthefile,andwedonotknowhow\nmanyqualifying recordsexist.ThecostisB(D+RC).", "319": "StorageandInde:r'ing 285\nf\nInsert: \\Veassumethatrecordsarealwaysinserted attheendofthefile.\\\u00a5e\nmustfetchthelastpageinthefile,addtherecord,andwritethepageback.\nThecostis2D+C.\nDelete: Wemustfindtherecord,removetherecordfromthepage,andwrite\nthemodified pageback.vVeassumethatnoattempt ismadetocompact the\nfiletoreclaimthefreespacecreatedbydeletions, forsimplicity.1Thecostis\nthecostofsearching plusC+D.\nWeassumethattherecordtobedeletedisspecified usingtherecordid.Since\nthepageidcaneasilybeobtained fromtherecordid,wecandirectlyreadin\nthepage.Thecostofsearching istherefore D.\nIftherecordtobedeletedisspecified usinganequality orrangecondition\nonsomefields,thecostofsearching isgiveninourdiscussion ofequality and\nrangeselections. Thecostofdeletion isalsoaffectedbythenumberofqualifying\nrecords, sinceallpagescontaining suchrecordsmustbemodified.\n8.4.3SortedFiles\nScan:ThecostisB(D+RC)because allpagesmustbeexamined. Notethat\nthiscaseisnobetterorworsethanthecaseofunordered files.However, the\norderinwhichrecordsareretrieved corresponds tothesortorder,thatis,all\nrecordsinageorder,andforagivenage,bysalorder.\nSearchwithEquality Selection: Weassumethattheequality selection\nmatches thesortorder(age,sal).Inotherwords,weassumethataselection\ncondition isspecified onatleclstthefirstfieldinthecomposite key(e.g.,age=\n30).Ifnot(e.g.,selection sal=t50ordepartment =\"Toy\"), thesortorder\ndoesnothelpusandthecostisidentical tothatforaheapfile.\nWecanlocatethefirstpagecontaining thedesiredrecordorrecords, should\nanyqualifying recordsexist,withabinarysearchinlog2Bsteps.(Thisanalysis\nassumes thatthepagesinthesortedfilearestoredsequentially, andwecan\nretrievetheithpageonthefiledirectly inonediskI/O.)Eachsteprequires\nadiskI/Oandtwocornparisons. Oncethepageisknown,thefirstqualifying\nrecordcanagainbelocatedbyabinarysearchofthepageatacostofClog2R.\nThecostisDlo92B+Clog2R,whichisasignificant improvement oversearching\nheapfiles.\n]Inpractice, adirectory orotherdatastructure isusedtokeeptrackoffreespace,andrecordsare\ninserted intothefirstavailable freeslot,asdiscussed inChapter 9.Thisincreases thecostofinsertion\nanddeletion alittle,butnotenoughtoaffectourcomparison.", "320": "286 CHAPTER~8\nIfseveralrecordsqualify(e.g.,\"Findallemployees aged18\"),theyareguar\u00ad\nanteedtobeadjacent toeachotherduetothesortingonage,andsothe\ncostofretrieving allsuchrecordsisthecostoflocating thefirstsuchrecord\n(Dlog2B+Clog 2R)plusthecostofreading allthequalifying recordsinsequen\u00ad\ntialorder.Typically, allqualifying recordsfitonasinglepage.Ifnorecords\nqualify,thisisestablished bythesearchforthefirstqualifying record,which\nfindsthepagethatwouldhavecontained aqualifying record,hadoneexisted,\nandsearches thatpage.\nSearch withRangeSelection: Againassuming thattherangeselection\nmatches thecomposite key,thefirstrecordthatsatisfiestheselection islocated\nasforsearchwithequality. Subsequently, datapagesaresequentially retrieved\nuntilarecordisfoundthatdoesnotsatisfytherangeselection; thisissimilar\ntoanequality searchwithmanyqualifying records.\nThecostisthecostofsearchplusthecostofretrieving thesetofrecordsthat\nsatisfythesearch.Thecostofthesearchincludes thecostoffetching thefirst\npagecontaining qualifying, ormatching, records. Forsmallrangeselections,\nallqualifying recordsappearonthispage.Forlargerrangeselections, wehave\ntofetchadditional pagescontaining matching records.\nInsert: Toinsertarecordwhilepreserving thesortorder,wemustfirstfind\nthecorrectposition inthefile,addtherecord,andthenfetchandrewriteall\nsubsequent pages(because alltheoldrecordsareshiftedbyoneslot,assuming\nthatthefilehasnoemptyslots).Onaverage, wecan&'3sumethattheinserted\nrecordbelongsinthemiddleofthefile.Therefore, wemustreadthelatterhalf\nofthefileandthenwriteitbackafteraddingthenewrecord.Thecostisthat\nofsearching tofindtheposition ofthenewrecordplus2 .(O.5B(D+RC)),\nthatis,searchcostplusB(D+RC).\nDelete: Wemustsearchfortherecord,removetherecordfromthepage,and\nwritethemodified pageback.Wemustalsoreadandwriteallsubsequent\npagesbecause allrecordsthatfollowthedeletedrecordmustbemovedupto\ncornpact thefreespace.2Thecostisthesameasforaninsert,thatis,search\ncostplusB(D+RC).Giventheridoftherecordtodelete,wecanfetchthe\npagecontaining therecorddirectly.\nIfrecordstobedeletedarespecified byanequality orrangecondition, thecost\nofdeletion depends onthenumber ofqualifying records.Ifthecondition is\nspecified onthesortfield,qualifying recordsareguaranteed tobecontiguous,\nandthefirstqualifying recordcanbelocatedusingbinarysearch.\n2Unlike aheapfile.thereisnoinexpensive waytomanage freespace,soweaccount forthecost\nofcompacting itfilewhenilrecordisdeleted.", "321": "ilStorage andIndexing\n8.4.4Clustered Files\nInaclustered file,extensive empirical studyhasshownthatpagesareusually\natabout67percentoccupancy. Thus,theHumber ofphysical datapagesis\nabout1.5B,andweusethisobservation inthefollowing analysis.\nScan:Thecostofascanis1.5B(D+RC)because alldatapagesmustbe\nexamined; thisissimilartosortedfiles,withtheobvious adjustment forthe\nincreased number ofdatapages.Notethatourcostmetricdoesnotcapture\npotential differences incostduetosequential I/O.Wewouldexpectsortedfiles\ntobesuperior inthisregard,although aclustered fileusingISAM(ratherthan\nB+trees)wouldbeclose.\nSearchwithEquality Selection: Weassumethattheequality selection\nmatches thesearchkey(age,sal).Wecanlocatethefirstpagecontaining\nthedesiredrecordorrecords, shouldanyqualifying recordsexist,inlogF1.5B\nsteps,thatis,byfetching allpagesfromtheroottotheappropriate leaf.In\npractice, therootpageislikelytobeinthebufferpoolandwesaveanI/O,\nbutweignorethisinoursimplified analysis. Eachsteprequires adiskI/O\nandtwocomparisons. Oncethepageisknown,thefirstqualifying recordcan\nagainbelocatedbyabinarysearchofthepageatacostofClog2R. Thecost\nisDlogF1.5B +Clog 2R,whichisasignificant improvement oversearching even\nsortedfiles.\nIfseveralrecordsqualify(e.g.,\"Findallemployees aged18\"),theyareguar\u00ad\nanteedtobeadjacent toeachotherduetothesortingonage,andsothe\ncostofretrieving allsuchrecordsisthecostoflocating thefirstsuchrecord\n(Dlogp1.5B +Clog2R)plusthecostofreading allthequalifying recordsin\nsequential order.\nSearchwithRangeSelection: Againassuming thattherangeselection\nmatches thecomposite key,thefirstrecordthatsatisfiestheselection islocated\na..'3itisforsearchwithequality. Subsequently, datapagesaresequentially\nretrieved (usingthenextandprevious linksattheleaflevel)untilarecordis\nfoundthatdoesnotsatisfytherangeselection; thisissimilartoanequality\nsearchwithmanyqualifying records.\nInsert: Toinsertarecord,wemustfirstfindthecorrectleafpageintheindex,\nreadingeverypagefromroottoleaf.Then,wemustaddthellewrecord.Most\nofthetime,theleafpagehassufficient spaceforthenewrecord,andallwe\nneedtodoistowriteoutthemodified leafpage.Occasionally, theleafisfull\nandweneedtoretrieve andmodifyotherpages,butthisissufficiently rare", "322": "288 CHAPTER :8\nthatwecanignoreitinthissimplified analysis. Thecostistherefore thecost\nofsearchplusonewrite,DlogFL5B+Clog2R+D.\nDelete: \\;Yemustsearchfortherecord,removetherecordfromthepage,\nandwritethemodified pageback.Thediscussion andcostanalysis forinsert\napplieshereaswell.\n8.4.5HeapFilewithUnclustered TreeIndex\nThenumber ofleafpagesinanindexdepends onthesizeofadataentry.\nWeassumethateachdataentryintheindexisatenththesizeofanem\u00ad\nployeedatarecord,whichistypical. Thenumber ofleafpagesintheindexis\no.1(L5B) =O.15B,ifwetakeintoaccountthe67percentoccupancy ofindex\npages.Similarly, thenumber ofdataentriesonapage10(0.67R)=6.7R,\ntakingintoaccount therelativesizeandoccupancy.\nScan:Consider Figure8.1,whichillustrates anunclustered index.Todoafull\nscanofthefileofemployee records, wecanscantheleafleveloftheindexand\nforeachdataentry,fetchthecorresponding datarecordfromtheunderlying\nfile,obtaining datarecordsinthesortorder(age,sal).\nWecanreadalldataentriesatacostofO.15B(D+6.7RC)l/Os.Nowcomes\ntheexpensive part:Wehavetofetchtheemployee recordforeachdataentry\nintheindex.Thecostoffetching theemployee recordsisoneI/Operrecord,\nsincetheindexisunclustered andeachdataentryonaleafpageoftheindex\ncouldpointtoadifferent pageintheemployee file.Thecostofthisstepis\nBR(D+C),whichisprohibitively high.Ifwewanttheemployee records\ninsortedorder,wewouldbebetteroffignoring theindexandscanning the\nemployee filedirectly, andthensortingit.Asimple rule ofthumbisthatafile\ncanbesortedbyatwo-Pl1SS algorithm inwhicheachpassrequires readingand\nwritingtheentirefile.Thus,theI/OcostofsortingafilewithBpagesis4B,\nwhichismuchlessthanthecostofusinganunclustered index.\nSearch withEquality Selection: \\lVeassumethattheequalit.y selection\nmatches thesortorder(age,sal).\\Vecanlocatethefirstpagecontaining the\ndesireddataentryorentries,shouldanyqualifying entriesexist,inlagrO.15B\nsteps,thatis,byfetching allpagesfromtheroottotheappropriate leaf.Each\nsteprequires adiskI/Oandtwocomparisons. Oncethepageisknown,the\nfirstqua1ifying dataentrycanagainbelocatedbyabinarysearchofthepage\natacostofClog2G.7R.Thefirstqualifying datarecordcanbefetchedfronl\ntheemployee filewithanotherI/O.ThecostisDlogpO.15B +Clag26.7 R+D,\nwhichisasignificant improvement oversearching sortedfiles.", "323": "StorageandInde:rzng 289\n.~\nIfseveralrecordsqualify(e.g.,\"Findallemployees agedISn),theyarenot\nguaranteed tobeadjacent toeachother.Thecostofretrieving allsuchrecords\nisthecostoflocating thefirstqualifying dataentry(Dlo9pO.15B +Clo926.7R)\nplusoneI/Operqualifying record.Thecostofusinganunclustered indexis\ntherefore verydependent onthenumber ofqualifying records.\nSearchwithRangeSelection: Againassuming thattherangeselection\nmatches thecomposite key,thefirstrecordthatsatisfiestheselection islocated\nasitisforsearchwithequality. Subsequently, dataentriesaresequentially\nretrieved (usingthenextandprevious linksattheleafleveloftheindex)\nuntiladataentryisfoundthatdoesnotsatisfytherangeselection. Foreach\nqualifying dataentry,weincuroneI/Otofetchthecorresponding employee\nrecords. Thecostcanquicklybecomeprohibitive asthenumberofrecordsthat\nsatisfytherangeselection increases. Asaruleofthumb,if10percentofdata\nrecords satisfy theselection condition, wearebetteroffretrieving allemployee\nrecords, sortingthem,andthenretaining thosethatsatisfytheselection.\nInsert: \"Vemustfirstinserttherecordintheemployee heapfile,atacostof\n2D+C.Inaddition, wemustinsertthecorresponding dataentryintheindex.\nFindingtherightleafpagecostsDl09pO.15B +Cl0926.7 R,andwritingitout\nafteraddingthenewdataentrycostsanotherD.\nDelete: Weneedtolocatethedatarecordintheemployee fileandthedata\nentryintheindex,andthissearchstepcostsDl09FO.15B +Cl0926.7R+D.\nNow,weneedtowriteoutthemodified pagesintheindexandthedatafile,\natacostof2D.\n8.4.6HeapFileWithUnclustered HashIndex\nAsforunclustered treeindexes, wea.'3sumethateachdataentryisonetenth\nthesizeofadatarecord. vVeconsider onlystatichashing inouranalysis, and\nforsimplicity wea.'3sumethattherearenooverflow chains.a\nInastaticha.shedfile,pagesarekeptataboutSOpercentoccupancy (toleave\nspaceforfutureinsertions andminimize overflows asthefileexpands). Thisis\nachieved byaddinganewpagetoabucketwheneachexistingpageisSOpercent\nfull,whenrecordsareinitiallyloadedintoahashedfilestructure. Thenumber\nofpagesrequired tostoredataentriesistherefore 1.2.5timesthenumber of\npageswhentheentriesaredensely packed,thatis,1.25(0.10B) =O.125B.\nThenumberofdataentriesthatfitonapageis1O(O.80R) =8R,takinginto\naccount therelativesizeandoccupancy.\n:JThedynamic variants ofhashing arelesssusceptible totheproblem ofoverflow chains,andhave\naslight.ly higheraverage costpersearch,butareotherwise similartothestaticversion.", "324": "290 CHAPTER 8\nScan:Asforanunclustered treeindex,alldataentriescanberetrieved in\u00ad\nexpensively, atacostofO.125B(D+8RC)I/Os.However, foreachentry,we\nincurtheadditional costofoneI/Otofetchthecorresponding datarecord;the\ncostofthisstepisBR(D+C).Thisisprohibitively expensive, andfurther,\nresultsareunordered. Sonooneeverscansahashindex.\nSearchwithEquality Selection: Thisoperation issupported veryefficiently\nformatching selections, thatis,equality conditions arespecified foreachfield\ninthecomposite searchkey(age,sal).Thecostofidentifying thepagethat\ncontains qualifying dataentriesisH.Assuming thatthisbucketconsists of\njustonepage(i.e.,nooverflow pages),retrieving itcostsD.Ifweassumethat\nwefindthedataentryafterscanning halftherecordsonthepage,thecostof\nscanning thepageisO.5(8R)C =4RC.Finally, wehavetofetchthedata\nrecordfromtheemployee file,whichisanother D.Thetotalcostistherefore\nH+2D+4RC,whichisevenlowerthanthecostforatreeindex.\nIfseveralrecordsqualify,theyarenotguaranteed tobeadjacent toeachother.\nThecostofretrieving allsuchrecordsisthecostoflocating thefirstqualifying\ndataentry(H+D+4RC)plusoneI/Operqualifying record.Thecostofusing\nanunclustered indextherefore depends heavilyonthenumber ofqualifying\nrecords.\nSearchwithRangeSelection: Thehashstructure offersnohelp,andthe\nentireheapfileofemployee recordsmustbescanned atacostofB(D+RC).\nInsert: Wemustfirstinserttherecordintheemployee heapfile,atacost\nof2D+C.Inaddition, theappropriate pageintheindexmustbelocated,\nmodified toinsertanewdataentry,andthenwrittenback.Theadditional\ncostisH+2D+C.\nDelete: Weneedtolocatethedatarecordintheemployee fileandthedata\nentryintheindex;thissearchstepcostsH+2D+4RC.Now,weneedto\nwriteoutthemodified pagesintheindexandthedatafile,atacostof2D.\n8.4.7Comparison ofI/OCosts\nFigure8.4compares I/Ocostsforthevariousfileorganizations thatwedis\u00ad\ncussed.Aheapfilehasgoodstorageefficiency andsupports fastscanning and\ninsertion ofrecords. However, itisslowforsearches anddeletions.\nAsortedfilealsooffersgoodstorageefficiency. butinsertion andddetion of\nrecordsisslow.Searches arefa.sterthaninheapfiles.Itisworthnotingthat,\ninarealDBMS,afileisalmostneverkeptfullysorted.", "325": "StorageandInde:r'lng 29)\nSearch+\nD\nSorted BD Dlog2BDlog2B+# Sear-ch+Sear-ch+\nmatching pages BD BD\nClustered 1.5BD DlogF1.5B Dlo9F1.5B+# Sear-ch+Search+\nmatching pages D D\nUnclustered BD(R+D(l+D(lo9FO.15B+# D(3+Sear-ch+\ntreeindex 0.15) logFO.15B) matching recor-ds) logFO.15B) 2D\nUnclustered BD(R+2D BD 4D Search+\nhashindex 0.125) 2D\nFigure8.4AComparison ofI/OCosts\nAclustered fileoffersalltheadvantages ofasortedfileandsupports inserts\nanddeletesefficiently. (Thereisaspaceoverhead forthesebenefits, relativeto\nasortedfile,butthetrade-off iswellworthit.)Searches areevenfasterthanin\nsortedfiles,although asortedfilecanbefasterwhenalargenumberofrecords\nareretrieved sequentially, because ofblockedI/Oefficiencies.\nUnclustered treeandhashindexesofferfastsearches, insertion, anddeletion,\nbutscansandrangesearches withmanymatches areslow.Hashindexesarea\nlittlefasteronequality searches, buttheydonotsupport rangesearches.\nInsummary, Figure8.4demonstrates thatnoonefileorganization isuniformly\nsuperior inallsituations.\n8.5INDEXES ANDPERFORMANCE TUNING\nInthissection,wepresentanoverview ofchoicesthatarisewhenusingindexes\ntoimprove performance inadatabase system. Thechoiceofindexes hasa\ntremendous impactonsystemperformance, andmustbemadeinthecontext\noftheexpected workload, ortypicalmixofqueriesandupdateoperations.\nAfulldiscussion ofindexesandperformance requires anunderstanding of\ndatabase queryevaluation andconcurrency control. Wetherefore returnto\nthistopicinChapter 20,wherewebuildonthediscussion inthissection. In\nparticular, wediscussexamples involving multiple tablesinChapter 20because\ntheyrequireanunderstanding ofjoinalgorithms andqueryevaluation plans.", "326": "292 CHAPTER. 8\n8.5.1ImpactoftheWorkload\nThefirstthingtoconsider istheexpected workload andthecommon opera\u00ad\ntions.Different fileorganizations andindexes, a:\"lwehaveseen,support different\noperations well.\nIngeneraL anindexsupports efficient retrieval ofdataentriesthatsatisfya\ngivenselection condition. Recallfromtheprevious sectionthattherearetwo\nimportant kindsofselections: equality selection andrangeselection. Hash\u00ad\nbasedindexing techniques areoptimized onlyforequality selections andfa.re\npoorlyonrangeselections. wheretheyaretypically worsethanscanning the\nentirefileofrecords. Tree-based indexing techniques support bothkindsof\nselection conditions efficiently, explaining theirwidespread use.\nBothtreeandhashindexes cansupport inserts,deletes, andupdates quite\nefficiently. Tree-based indexes, inparticular, offerasuperior alternative to\nmaintaining fullysortedfilesofrecords. Incontrast tosimplymaintaining the\ndataentriesinasortedfile,ourdiscussion of(B+tree)tree-structured indexes\ninSection8.3.2highlights twoimportant advantages oversortedfiles:\n1.vVocanhandleinsertsanddeletesofdataentriesefficiently.\n2.Finding thecorrectleafpagewhensearching forarecordbysearchkey\nvalueismuchfasterthanbinarysearchofthepagesinasortedfile.\nTheonerelativedisadvantage isthatthepagesinasortedfilecanbeallocated\ninphysical orderondisk,making itmuchfastertoretrieve severalpagesin\nsequential order.Ofcourse.insertsanddeletesonasortedfileareextremely\nexpensive. AvariantofB+trees,calledIndexed Sequential AccessMethod\n(ISAM), offersthebenefitofsequential allocation ofleafpages,plusthebenefit\noffastsearches. Insertsanddeletesarenothandled aswella'3inB+trees,but\narernuchbetterthaninasortedfile.\\Vewillstudytree-structured indexing\nindetailinCha,pter 10.\n8.5.2Clustered IndexOrganization\nAswesmvinSection8.2.1.aclustered indexisreallyafileorganization for\ntheunderlying datarecords. Datarecordscanbela.rge,andweshouldavoid\nreplicating them;sotherecanbeatmostoneclustered indexonagivencollec\u00ad\ntionofrecords. Ontheotherhanel.weUU1buildseveraluncIustered indexes\nonadatafile.Suppose thatemployee recordsaresortedbyage,orstoredina\nclustered filewithsearchkeyage. If.inaddition. wehaveanindexonthesal\nfield,thelatternlUstbeanllnclllstered index.\\:VecanalsobuildanuncIustered\nindexon.say,depaThnent, ifthereissuchafield.", "327": "Stomge andInde:rin,g 29,3\nClustered indexes, whilelessexpensive tomaintain thanafullysortedfile,are\nnonetJleless expensive tomaintain. Whenanewrecordh&'3tobeinserted into\nafullleafpage,anewleafpagemustbeallocated andsorneexisting records\nhavetobemovedtothenewpage.Ifrecordsareidentified byacombination of\npageidandslot,&'5istypically thecaseincurrentdatabase systems, allplaces\ninthedatab&\"ie thatpointtoamovedrecord(typically, entriesinotherindexes\nforthesamecollection ofrecords) mustalsobeupdated topointtothenew\nlocation. Locating allsuchplacesandmakingtheseadditional updates can\ninvolveseveraldiskI/Os.Clustering mustbeusedsparingly andonlywhen\njustified byfrequent queriesthatbenefitfromclustering. Inparticular, there\nisnogoodreasontobuildaclustered fileusinghashing, sincerangequeries\ncannotbeanswered usingh&c;h-indexcs.\nIndealingwiththelimitation thatatmostoneindexcanbeclustered, itis\noftenusefultoconsider whether theinformation inanindex'ssearchkeyis\nsufficient toanswerthequery.Ifso,modern database systems areintelligent\nenoughtoavoidfetching theactualdatarecords. Forexample, ifwehave\nanindexonage,andwewanttocompute theaverage ageofemployees, the\nDBMScandothisbysimplyexamining thedataentriesintheindex.Thisisan\nexample ofanindex-only evaluation. Inanindex-only evaluation ofaquery\nweneednotaccessthedatarecordsinthefilesthatcontaintherelations inthe\nquery;wecanevaluate thequerycompletely through indexesonthefiles.An\nimportant benefitofindex-only evaluation isthatitworksequallyefficiently\nwithonlyunclustered indexes, asonlythedataentriesoftheindexareusedin\nthequeries. Thus,unclustered indexescanbeusedtospeedupcertainqueries\nifwerecognize thattheDBMSwillexploitindex-only evaluation.\nDesignExamples Illustrating Clustered Indexes\nToillustrate theuseofaclustered index 011arangequery,consider thefollowing\nexample:\nSELECT\nFROM\nWHEREE.dno\nEmployees E\nE.age>40\nIfwehaveaH+treeindexonage,wecanuseittoretrieve onlytuplesthat\nsatisfytheselection E.age>40.\\iVhether suchanindexisworthwhile depends\nfirstofallontheselectivity ofthecondition. vVhatfraction oftheemployees are\nolderthan40'1Ifvirtually everyone isolderthan401wegainlittlebyusingan\nindex 011age;asequential scanoftherelationwoulddoalmostaswell.However,\nsuppose thatonly10percentoftheemployees areolderthan40.Now,isan\nindexuseful?Theanswerdepends onwhether theindexisclustered. Ifthe", "328": "294 CHAPTER~ 8\nindexisunclustered, wecouldhaveonepageI/Operqualifying employee, and\nthiscouldbemoreexpensive thanasequential scan,evenifonly10percent\noftheemployees qualify! Ontheotherhand,aclustered B+treeindexon\nagerequires only10percentofthel/Osforasequential scan(ignoring thefew\nl/Osneededtotraverse fromtheroottothefirstretrieved leafpageandthe\nl/Osfortherelevant indexleafpages).\nAsanother example, consider thefollowing refinement oftheprevious query:\nSELECT\nFROM\nWHERE\nGROUPBYKdno,COUNT(*)\nEmployees E\nE.age> 10\nE.dno\nIfaB+treeindexisavailable onage,wecouldretrieve tuplesusingit,sort\ntheretrieved tuplesondna,andsoanswerthequery.However, thismaynot\nbeagoodplanifvirtually allemployees aremorethan10yearsold.Thisplan\nisespecially badiftheindexisnotclustered.\nLetusconsider whether anindexondnamightsuitourpurposes better.We\ncouldusetheindextoretrieve alltuples,grouped bydna,andforeachdna\ncountthenumber oftupleswithage>10.(Thisstrategy canbeusedwith\nbothhashandB+treeindexes; weonlyrequirethetuplestobegrouped, not\nnecessarily sorted,bydna.)Again,theefficiency depends crucially onwhether\ntheindexisclustered.Ifitis,thisplanislikelytobethebestifthecondition\nonageisnotveryselective. (Evenifwehaveaclustered indexonage,ifthe\ncondition onageisnotselective, thecostofsortingqualifying tuplesondnais\nlikelytobehigh.)Iftheindexisnotclustered, wecouldperform onepageI/O\npertupleinEmployees, andthisplanwouldbeterrible. Indeed,iftheindex\nisnotclustered, theoptimizer willchoosethestraightforward planbasedon\nsortingondna.Therefore, thisquerysuggests thatwebuildaclustered index\nondnaifthecondition onageisnotveryselective. Ifthecondition isvery\nselective, weshouldconsider building anindex(notnecessarily clustered) on\nageinstead.\nClustering isalsoimportant foranindexonasearchkeythatdoesnotinclude\nacandidate key,thatis,anindexinwhichseveraldataentriescanhavethe\nsamekeyvalue.Toillustrate thispoint,wepresentthefollowing query:\nSELECT E.dno\nFROM Employees E\nWHEREE.hobby='Stamps'", "329": "StomgeandIndexing\nIfmanypeoplecollectstamps, retrieving tuplesthrough anunclustered index\nonhobbycanbeveryinefficient. Itmaybecheapertosimplyscantherelation\ntoretrievealltuplesandtoapplytheselection on-the-fly totheretrieved tuples.\nTherefore, ifsuchaqueryisimportant, weshouldconsider makingtheindex\nonhobbyaclustered index.Ontheotherhand,ifweassumethateidisakey\nforEmployees, andreplacethecondition E.hobby= 'Stamps' byE.eid=552, we\nknowthatatmostoneEmployees tuplewillsatisfythisselection condition. In\nthiscase,thereisnoadvantage tomakingtheindexclustered.\nThenextqueryshowshowaggregate operations caninfluence thechoiceof\nindexes:\nSELECT E.dno,COUNT(*)\nFROM Employees E\nGROUPBYE.dno\nAstraightforward planforthisqueryistosortEmployees ondnotocompute\nthecountofemployees foreachdno.However, ifanindex-hash orB+tree--\u00ad\nondnoisavailable, wecananswerthisquerybyscanning onlytheindex.For\neachdnovalue,wesimplycountthenumber ofdataentriesintheindexwith\nthisvalueforthesearchkey.Notethatitdoesnotmatterwhether theindex\nisclustered because weneverretrievetuplesofEmployees.\n8.5.3Composite SearchKeys\nThesearchkeyforanindexcancontainseveralfields;suchkeysarecalled\ncomposite searchkeysorconcatenated keys.Asanexample, consider a\ncollection ofemployee records, withfieldsname,age,andsal,storedinsorted\norderbyname.Figure8.5illustrates thedifference between acomposite index\nwithkey(age,sa0,acomposite indexwithkey(sal,age),anindexwithkey\nage,andanindexwithkeysal.AllindexesshowninthefigureuseAlternative\n(2)fordataentries.\nIfthesearchkeyiscomposite, anequality queryisoneinwhicheachfieldin\nthesearchkeyisboundtoaconstant. Forexample, wecanasktoretrieve all\ndataentrieswithage=20andsal=10.Thehashedfileorganization supports\nonlyequality queries, sinceaha\"ihfunction identifies thebucketcontaining\ndesiredrecordsonlyifavalueisspecified foreachfieldinthesearchkey.\nWithrespecttoacomposite keyindex,inarangequerynotallfieldsinthe\nsearchkeyareboundtoconstants. Forexample, wecanasktoretrievealldata\nentrieswithage :=0::20;thisqueryimpliesthatanyvalueisacceptable forthe\nsalfield.Asanother example ofarangequery,wecanasktoretrievealldata\nentrieswithage<30andsal>40.", "330": "296 CHAPTEI48\n~I\n8075nameagesal\n\"~-_.-\nbob1210\ncal1180-\njoe1220----\nsue1375\nData\nIndex75,13\n80,1110,12<age,sal>\n,~..._---!I11,80,,!Index\nR;:IO ~__:~i\n112,20~_.1\nU~:~,\n<sal,age> ../\nFigure8.5Composite KeyIndexes\nNatethattheindexcannothelponthequerysal>40,because, intuitively,\ntheindexorganizes recordsbyagefirstandthensal.Ifageisleftunspeci\u00ad\nfied,qualifying recordscouldbespreadacrosstheentireindex.Wesaythat\nanindexmatches aselection condition iftheindexcanbeusedtoretrieve\njustthetuplesthatsatisf:ythecondition. Forselections oftheformcondition\n1\\...1\\condition, wecandefinewhenanindexmatches theselection as1'01\u00ad\n10ws:4Forahashindex,aselection matches theindexifitincludes anequality\ncondition ('field=constant') oneveryfieldinthecomposite searchkeyforthe\nindex.Foratreeindex,aselection matches theindexifitincludes anequal\u00ad\nityorrangecondition onaprefi.Tofthecomposite searchkey.(Asexamples,\n(age)and(age,sal,department) areprefixesofkey(age,sal,depa7'tment) ,but\n(age,department) and(sal,department) arenot.)\nTrade-offs inChoosing Composite Keys\nAcomposite keyindexcansupport abroader rangeofqueriesbecause it\nmatches moreselection conditions. Further, sincedataentriesinacomposite\nindexcontain moreinformation aboutthedatarecord(i.e.,morefieldsthan\nasingle-attribute index),theopportunities forindex-only evaluation strategies\nareincreased. (RecallfromSection 8.5.2thatanindex-only evaluation does\nnotneedtoaccessdatarecords, butfindsallrequired fieldvaluesinthedata\nentriesofindexes.)\nOnthenegative side,acomposite indexmustbeupdated inresponse toany\noperation (insert,delete,orupdate) thatmodifies anyfieldinthesearchkey.\nAcomposite indexisHlsolikelytobelargerthanasingk'-attribute searchkey\n4Foramoregeneral discussion, seeSection 14.2.)", "331": "StoTageandInde.Ting\nindexbecausethesizeofentriesislarger.Foracomposite B+treeindex,this\nalsomeansapotential increase inthenumberoflevels,although keyCOlnpres\u00ad\nsioncanbeusedtoalleviate thisproblem (seeSection10.8.1).\nDesignExamples ofComposite Keys\nConsider thefollowing query,whichreturnsallemployees with20<age<30\nand3000<sal<5000:\nSELECT\nFROM\nWHEREE.eid\nEmployees E\nE.ageBETWEEN 20AND30\nANDE.salBETWEEN 3000AND5000\nAcomposite indexon(age,sal)couldhelpiftheconditions intheWHEREclause\narefairlyselective. Obviously, ahashindexwillnothelp;aB+tree(orISAM)\nindexisrequired.Itisalsoclearthataclustered indexislikelytobesuperior\ntoanunclustered index.Forthisquery,inwhichtheconditions onageandsal\nareequallyselective, acomposite, clustered B+treeindexon(age,sal)isas\neffective asacomposite, clustered B+treeindexon(sal,age).However, the\norderofsearchkeyattributes cansometimes makeabigdifference, asthenext\nqueryillustrates:\nSELECT\nFROM\nWHEREE.eidEmployees E\nE.age\n=25\nANDE.salBETWEEN 3000AND5000\nInthisqueryacomposite, clustered B+treeindexon(age,sal)willgivegood\nperformance because recordsaresortedbyagefirstandthen(iftworecords\nhavethesameagevalue)bysal.Thus,allrecordswithage=25areclustered\ntogether. Ontheotherhand,acomposite, clustered B+treeindexon(sal,age)\nwillnotperform aswell.Inthiscase,recordsaresortedbysalfirst,andthere\u00ad\nforetworecordswiththesameagevalue(inparticular, withage=25)maybe\nquitefarapart.Ineffect,thisindexallowsustousetherangeselection onsal,\nbutnottheequality selection onage,toretrieve tuples.(Goodperformance\nonbothvariants ofthequerycanbeachieved usingasinglespatialindex.\\:Ye\ndiscussspatialindexesinChapter 28.)\nComposite indexesarealsousefulindealingwithmanyaggregate queries. Con\u00ad\nsider:\nSELECT AVG(E.sal)", "332": "298\nFROM\nWHEREEmployees E\nE.age=25\nANDKsalBETWEEN 3000AND5000CHAPTERt 8\nAcomposite B+treeindexon(age,sal)allowsustoanswerthequerywith\nanindex-only scan.Acomposite B+treeindexon(sal,age)alsoallowsus\ntoanswerthequerywithanindex-only scan,although moreindexentriesare\nretrieved inthiscasethanwithanindexon(age,sal).\nHereisavariation ofanearlierexample:\nSELECT\nFROM\nWHERE\nGROUP BYKdno,COUNT(*)\nEmployees E\nE.sal=lO,OOO\nKdno\nAnindexondnaalonedoesnotallowustoevaluate thisquerywithanindex\u00ad\nonlyscan,because weneedtolookatthesalfieldofeachtupletoverifythat\nsal=10,000.However, wecanuseanindex-only planifwehaveacomposite\nB+treeindexon(sal,dna)or(dna,sal).Inanindexwithkey(sal,dno),all\ndataentrieswithsal=10,000arearranged contiguously (whether ornotthe\nindexisclustered). Further, theseentriesaresortedbydna,makingiteasyto\nobtainacountforeachdnagroup.Notethatweneedtoretrieve onlydata\nentrieswithsal=10,000.\nItisworthobserving thatthisstrategy doesnotworkiftheWHEREclauseis\nmodified tousesal>10,000.Although itsufficestoretrieveonlyindexdata\nentries-that is,anindex-only strategy stillapplies-these entriesmustnow\nbesortedbydnatoidentifythegroups(because, forexample, twoentrieswith\nthesamednabutdifferent salvaluesmaynotbecontiguous). Anindexwith\nkey(dna,sal)isbetterforthisquery:Dataentrieswithagivendnavalueare\nstoredtogether, andeachsuchgroupofentriesisitselfsortedbysal.Foreach\ndnagroup,wecaneliminate theentrieswithsalnotgreaterthan10,000and\ncounttherest.(Usingthisindexislessefficientthananindex-only scanwith\nkey(sal,dna)forthequerywithsal=10,000,because wemustreadalldata\nentries.Thus,thechoicebetween theseindexesisinfluenced bywhichqueryis\nmorecommon.)\nAsanother eXEunple, suppose wewanttofindtheminimum salforeachdna:\nSELECT Kdno,MIN(E.sal)\nFROM Employees E\nGROUP BYE.dno", "333": "StomgeandIndexing 2~9\nAnindexondnaalonedoesnotallowustoevaluate thisquerywithanindex\u00ad\nonlyscan.However, wecanuseanindex-only planifwehaveacomposite B+\ntreeindexon(dna,sal).Notethatalldataentriesintheindexwithagiven\ndnavaluearestoredtogether (whether ornottheindexisclustered). :B\\lrther,\nthisgroupofentriesisitselfsortedby8al.Anindexon(sal,dna)enablesus\ntoavoidretrieving datarecords,buttheindexdataentriesmustbesortedon\ndno.\n8.5.4IndexSpecification inSQL:1999\nAnaturalquestion toaskatthispointishowwecancreateindexes using\nSQL.TheSQL:1999 standard doesnotincludeanystatement forcreating or\ndropping indexstructures. Infact,th.estandard doesnotevenrequireSQL\nimplementations tosupport indexes! Inpractice, ofcourse,everycommercial\nrelational DBMSsupports oneormorekindsofindexes. Thefollowing com\u00ad\nmandtocreateaB+treeindex-we discussB+treeindexesinChapter 10----\u00b7-is\nillustrative:\nCREATE INDEXIndAgeRating ONStudents\nWITHSTRUCTURE =BTREE,\nKEY=(age,gpa)\nThisspecifies thataB+treeindexistobecreatedontheStudents tableusing\ntheconcatenation oftheageandgpacolumns asthekey.Thus,keyvaluesare\npairsoftheform(age,gpa),andthereisadistinct entryforeachsuchpair.\nOncecreated, theindexisautomatically maintained bytheDBMSaddingor\nremoving dataentriesinresponse toinsertsordeletesofrecordsontheStudents\nrelation.\n8.6REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIII'WheredoesaDBMSstorepersistent data?Howdoesitbringdatainto\nmainmemory forprocessing? WhatDBMScomponent readsandwrites\ndatafrommainmemory, andwhatistheunitofI/O?(Section 8.1)\n\u2022'Whatisafileorganization? vVhatisanindex?Whatistherelationship\nbetween filesandindexes? Canwehaveseveralindexesonasinglefile\nofrecords? Cananindexitselfstoredatarecords(i.e.,actasafile)?\n(Section 8.2)\nIIIWhatisthe8earchkeyforanindex?Whatisadataentryinanindex?\n(Section 8.2)", "334": "300 CHAPTER S\n\u2022vVhatisaclustered index?vVhatisaprinwry index?Howmanyclustered\nindexescanyoubuildonafile?Howmanyunclustered indexescanyou\nbuild?(Section 8.2.1)\n\u2022Hmvisdataorganized inahash-ba'lcd index? \\Vhenwouldyouusea\nhash-based index?(Section 8.3.1)\n\u2022Howisdataorganized inatree-based index?vVhenwouldyouuseatree\u00ad\nbasedindex?(Section 8.3.2)\n\u2022Consider thefollowing operations: scans,equality and'rangeselections,\ninserts, anddeletes,andthefollowing fileorganizations: heapfiles,sorted\nfiles,clustered files,heapfileswithanunclustered treeindexonthesearch\nkey,andheapfileswithanunclusteTed hashindex.Whichfileorganization\nisbestsuitedforeachoperation? (Section 8.4)\n\u2022Whatarethemaincontributors tothecostofdatabase operations? Discuss\nasimplecostmodelthatreflectsthis.(Section 8.4.1)\n\u2022Howdoestheexpected workload influence physical database designdeci\u00ad\nsiemssuchaswhatindexestobuild?vVhyisthechoiceofindexesacentral\naspectofphysical database design?(Section 8.5)\n\u2022Whatissuesareconsidered inusingclustered indexes? Whatisanindcl;\u00ad\nonlyevaluation method? \\\\Thatisitsprimary advantage? (Section 8.5.2)\n\u2022Whatisacomposite 8earchkey?Whataretheprosandconsofcomposite\nsearchkeys?(Section 8.5.3)\n\u2022WhatSQLcommands support indexcreation? (Section 8.5.4)\nEXERCISES\nExercise 8.1Answerthefollowing questions aboutdataonexternal storageinaDBMS:\n1.\\VhydoesaDBMSstoredataonexternal storage?\n2.WhyareI/Ocostsimportant inaDBMS?\n3.\\Vhatisarecordid?Givenarecord's id,howmanyI/Osareneededtofetchitinto\nmainmemory?\n4.\\Vhatistheroleofthebuffermanager inaDBMS? Whatistheroleofthediskspace\nmanager? Howdotheselayersinteract withthefileandaccessmethods layer?\nExercise 8.2Answerthefollowing questions aboutfilesandindexes:\n1.Whatoperations arcsupported bythefileofrecordsabstraction?\n2.\\Vhatisanindexonafileofrecords? \\Nhatisasearchkeyforanindex?Whydowe\nneedindexes?", "335": "Storage andInde:ring 301\nageIgpo,] narnc.- _.\n5:3831 r\\ladayan rnadayan(Q:!music h1.8\n53832 Gulclu guldu@music 122.0\n53666 Jones jones(Q;cs 183.4\n53688 Smith smith(@ee 193.2\n53650 Smith srnithtg]math 193.8\nFigure 8.6AnInstance oft.heSt.udents Relation. Sortedbyage\n3.Whatalternatives areavailable forthedataentriesinanindex?\n4.Whatisthedifference between aprimary indexandasecondary index? \\Vhatisa\nduplicate dataentryinanindex?Canaprimary indexcontainduplicates?\n5.Whatisthedifference between aclustered indexandanunclustered index?Ifanindex\ncontains datarecords as'dataentries,' canitbeunclustered?\n6.Howmanyclustered indexescanyoucreateonafile?Woule!youalwayscreateatleast\noneclustered indexforafile?\n7.Consider Alternatives (1),(2)and(3)for'dataentries' inanindex,asdiscussed in\nSection8.2.Areallofthemsuitable forsecondary indexes? Explain.\nExercise 8.3Consider arelation storedasarandomly ordered fileforwhichtheonlyindex\nisanunclustered indexonafieldcalledsal.Ifyouwanttoretrieve allrecordswithsal>20,\nisusingtheindexalwaysthebestalternative? Explain.\nExercise 8.4Consider theinstance oftheStudents relation showninFigure8.6,sortedby\nage:Forthepurposes ofthisquestion, assumethatthesetuplesarestoredinasortedfilein\ntheordershown;thefirsttupleisonpage1thesecondtupleisalsoonpage1;andsoon.\nEachpagecanstoreuptothreedatarecords; sothefourthtupleisonpage2.\nExplain whatthedataentriesineachofthefollowing indexescontain.Iftheorderofentries\nissignificant, saysoandexplain why.Ifsuchallindexcannotbeconstructeel, saysoand\nexplainwhy.\n1.Anunclustereel indexonageusingAlternative (1).\n2.Anunclusterecl indexonageusingAlternative (2).\n3.Anunclustered indexonageusingAlternative (:3).\n4.Aclustered indexonageusingAlternative (1).\n5.Aclustered indexonageusingAlt.ernative (2).\n6.Aclustered indexonageusingAlternative (:3).\n7.Anunc:lustered indexongpousingAlternative (1).\n8.Anunclustered indexongpausingAlternative (2).\n9.Anunclustered indexongpausingAlternative (3).\n10.Aclustered indexongpausingAlternative (1).\n11.Aclustered indexongpausingAlternative (2).\n12.Aclustered indexongpausingAlternative (:3).", "336": "302 CHAPTERf8\nSorted file\nClustered file\nUnclustered treeindex\nUnclustered hashindex\nFigure8.7I/OCostComparison\nExercise 8.5Explain thedifference between HashindexesandB+-tree indexes. Inpartic\u00ad\nular,discusshowequality andrangesearches work,usinganexample.\nExercise 8.6FillintheI/OcostsinFigure8.7.\nExercise 8.7Ifyouwereabouttocreateanindexonarelation, whatconsiderations would\nguideyourchoice? Discuss:\n1.Thechoiceofprimary index.\n2.Clustered versusunclustered indexes.\n3.Hashversustreeindexes.\n4.Theuseofasortedfileratherthanatree-based index.\n5,Choiceofsearchkeyfortheindex.Whatisacomposite searchkey,andwhatconsid\u00ad\nerations aremadeinchoosing composite searchkeys?Whatareindex-only plans,and\nwhatistheinfluence ofpotential index-only evaluation plansonthechoiceofsearchkey\nforanindex?\nExercise 8.8Consider adeletespecified usinganequality condition. Foreachofthefive\nfileorganizations, whatisthecostifnorecordqualifies? Whatisthecostifthecondition is\nnotonakey?\nExercise 8.9Whatmainconclusions canyoudrawfromthediscussion ofthefivebasicfile\norganizations discussed inSection8.4?Whichofthefiveorganizations wouldyouchoosefor\nafilewherethemostfrequent operations area<;follows?\n1.Searchforrecordsbasedonarangeoffieldvalues.\n2.Perform insertsandscans,wheretheorderofrecordsdocsnotmatter.\n3.Searchforarecordbasedonaparticular fieldvalue.\nExercise 8.10Consider thefollowing relation:\nEmp(eid:integer, sal:integer lage:real,did:integer)\nThereisaclustered indexoncidandanllnclustered indexonage.\n1.Howwouldyouusetheindexestoenforcetheconstraint thateidisakey?\n2.Giveanexample ofanupdatethatisdefinitely speeded 1lJibecause oftheavailable\nindexes. (English description issufficient.)", "337": "StorageandInde.7:ing 303\n~\n3.Giveanexample ofanupdatethatisdefinitely sloweddownbecause oftheindexes.\n(English description issufficient.)\n4.Canyougiveanexample ofanupdatethatisneitherspeeded upnorsloweddownby\ntheindexes?\nExercise 8.11Consider thefollowing relations:\nEmp(eid:integer, ename:varchar, sal:integer, age:integer, did:integer)\nDept(did: integer, budget:integer, floor:integer, mgr_eid: integer)\nSalaries rangefrom$10,000to$100,000, agesvaryfrom20to80,eachdepartment hasabout\nfiveemployees onaverage, thereare10floors,andbudgets varyfrom$10,000 to$1million.\nYoucanassumeuniform distributions ofvalues.\nForeachofthefollowing queries, whichofthelistedindexchoiceswouldyouchoosetospeed\nupthequery?Ifyourdatabase systemdoesnotconsider index-only plans(i.e.,datarecords\narealwaysretrieved evenifenoughinformation isavailable intheindexentry),howwould\nyouranswerchange? Explain briefly.\n1.Query:Printename,age,andsalforallemployees.\n(a)Clustered hashindexon(ename, age,sal)fieldsofEmp.\n(b)Unclustered hashindexon(ename, age,sal)fieldsofEmp.\n(c)Clustered B+treeindexon(ename, age,sal)fieldsofEmp.\n(d)Unclustered hashindexon(eid,did)fieldsofEmp.\n(e)Noindex.\n2.Query:Findthedidsofdepartments thatareonthe10thfloorandhaveabudgetofless\nthan$15,000.\n(a)Clustered hashindexonthefloorfieldofDept.\n(b)Unclustered hashindexonthefloor'fieldofDept.\n(c)Clustered B+treeindexon(floor,budget) fieldsofDept.\n(d)Clustered B+treeindexonthebudget:fieldofDept.\n(e)Noindex.\nPROJECT-BASED EXERCISES\nExercise 8.12Answerthefollowing questions:\n1.Whatindexing techniques aresupported inMinibase?\n2.\\;v'hatalternatives fordataentriesaresupported'?\n:3.Areclustered indexessupported?\nBIBLIOGRAPHIC NOTES\nSeveralbooksdiscussfileorganization indetail[29,:312,442,531,648, 695, 775].\nBibliographic: notesforhash-indexes andB+-trees areincluded inChapters 10and11.", "338": "9\nSTORING DATA:\nDISKSANDFILES\n..Whatarethedifferent kindsofmemory inacomputer system?\n..Whatarethephysical characteristics ofdisksandtapes,andhowdo\ntheyaffectthedesignofdatabase systems?\n...WhatareRAIDstoragesystems, andwhataretheiradvantages?\n..HowdoesaDBMSkeeptrackofspaceondisks?HowdoesaDBMS\naccessandmodifydataondisks?Whatisthesignificance ofpagesas\naunitofstorageandtransfer?\n,..HowdoesaDBMScreateandmaintain filesofrecords? Howare\nrecordsarranged onpages,andhowarepagesorganized withinafile?\n..Keyconcepts: memory hierarchy, persistent storage, random versus\nsequential devices; physical diskarchitecture, diskcharacteristics, seek\ntime,rotational delay,transfer time;RAID,striping, mirroring, RAID\nlevels;diskspacemanager; buffermanager, bufferpool,replacement\npolicy,prefetching, forcing; fileimplementation, pageorganization,\nrecordorganization\nAmemory iswhatisleftwhen:iomething happens anddoesnotcornpletely\nunhappen.\n.Edward DeBono\nThischapter initiates astudyoftheinternals ofanRDBivIS. Intermsofthe\nDBj\\JSarchitecture presented inSection1.8,itcoversthediskspacemanager,\n304", "339": "Bto'ringData:DisksandFiles\nthebuffermanager, andimplementation-oriented aspectsoftheJilesandaccess\nmethods layer.\nSection 9.1introduces disksandtapes.Section9.2describes RAIDdisksys\u00ad\ntems.Section9.3discusses howaDBMSmanages diskspace,andSection9.4\nexplains howaDBMSfetchesdatafromdiskintomainmemory. Section9.5\ndiscusses howacollection ofpagesisorganized intoafileandhowauxiliary\ndatastructures canbebuilttospeedupretrieval ofrecordsfromafile.Sec\u00ad\ntion9.6coversdifferent waystoarrange acollection ofrecordsonapage,and\nSection9.7coversalternative formats forstoringindividual records.\n9.1THEMEMORY HIERARCHY\nMemory inacomputer systemisarranged inahierarchy, a'SshowninFig\u00ad\nure9.1.Atthetop,wehaveprimary storage, whichconsists ofcacheand\nmainmemory andprovides veryfastaccesstodata.Thencomessecondary\nstorage, whichconsists ofslowerdevices, suchasmagnetic disks.Tertiary\nstorage istheslowestclassofstoragedevices; forexample, opticaldisksand\ntapes.Currently, thecostofagivenamountofmainmemory isabout100times\nRequestfordata\n----- .....\nDatasatisfying requestCPU\",/.,\nCACHE....\n,/Primary storage\nMAINMEMORYf.:....\n,/\nMAGNETIC DISK Secondary storage....\n,/\nTAPE Tertiarystorage\nFigure 9.1TheIvlemory Hierarchy\nthecostofthesameamount ofdiskspace,andtapesareevenlessexpensive\nthandisks.Slowerstoragedevicessuchastapesanddisksplayanimportant\nroleindatabase systems because theamount ofdataistypically verylarge.\nSincebuyinge110ughmainmemory tostorealldataisprohibitively expensive,\nwemuststoredataontapesanddisksandbuilddatabase systems thatcan\nretrievedatafromlowerlevelsofthememory hierarchy intomainmernory as\nneededforprocessing.", "340": "306\nTherearereasonsotherthancostforstoringdataonsecondary andtertiaJ:y\nstorage. Onsystems with32-bitaddressing, only232bytescanbedirectly ref\u00ad\nerencedinmainmemory; thenumberofdataobjectsmayexceedthisnumber!\nFurther, datamustbemaintained acrossprogram executions. Thisrequires\nstoragedevicesthatretaininformation whenthecomputer isrestarted (after\nashutdown oracrash);wecallsuchstoragenonvolatile. Primary storageis\nusuallyvolatile(although itispossible tomakeitnonvolatile byaddingabat\u00ad\nterybackupfeature), whereas secondary andtertiary storagearenonvolatile.\nTapesarerelatively inexpensive andcanstoreverylargeamounts ofdata.They\nareagoodchoiceforarchival storage,thatis,whenweneedtomaintain data\nforalongperiodbutdonotexpecttoaccessitveryoften.AQuantum DLT\n4000driveisatypicaltapedevice;itstores20GBofdataandcanstoreabout\ntwiceasmuchbycompressing thedata.Itrecordsdataon128tapetracks,\nwhichcanbethought ofasalinearsequence ofadjacent bytes,andsupports\nasustained transferrateof1.5MB/sec withuncompressed data(typically 3.0\nMB/sec withcompressed data).AsingleDLT4000tapedrivecanbeusedto\naccessuptoseventapesinastackedconfiguration, foramaximum compressed\ndatacapacity ofabout280GB.\nThemaindrawback oftapesisthattheyaresequential accessdevices. Wemust\nessentially stepthrough allthedatainorderandcannotdirectlyaccessagiven\nlocation ontape.Forexample, toaccessthelastbyteonatape,wewouldhave\ntowindthrough theentiretapefirst.Thismakestapesunsuitable forstoring\noperational data,ordatathatisfrequently accessed. Tapesaremostlyusedto\nbackupoperational dataperiodically.\n9.1.1Magnetic Disks\nMagnetic diskssupport directaccesstoadesiredlocation andarewidelyused\nfordatabase applications. ADBMSprovides seamless accesstodataondisk;\napplications neednotworryaboutwhether dataisinmainmemory ordisk.\nTounderstand howdiskswork,eonsider Figure9.2,whichshowsthestructure\nofadiskinsimplified form.\nDataisstoredondiskinunitscalleddiskblocks. Adiskblockisacontiguous\nsequence ofbytesandistheunitinwhichdataiswrittentoadiskandread\nfromadisk.Bloc:ksarearranged inconcentric ringscalledtracks, ononeor\nmoreplatters. Trackscanberecorded ononeorbothsurfaces ofaplatter;\nwerefertoplatters assingle-sided ordouble-sided, accordingly. Thesetofall\ntrackswiththeSaInediameter iscalledacylinder, becausethespaceoccupied\nbythesetracksisshapedlikeacylinder; acylinder contains onetrackper\nplattersurface. Eachtrackisdividedintoarcs,calledsectors, whosesizeisa", "341": "StoringData:DisksandFiles\nDiskann\nArmmovement\nFigure9.2Structure ofaDisk____Block\nSectors\nCylinder\n-Tracks\n,..Platter~07\ncharacteristic ofthediskandcannotbechanged. Thesizeofadiskblockcan\nbesetwhenthediskisinitialized asamultiple ofthesectorsize.\nAnarrayofdiskheads,oneperrecorded surface, ismovedasaunit;when\noneheadispositioned overablock,theotherheadsareinidentical positions\nwithrespecttotheirplatters. Toreadorwriteablock,adiskheadmustbe\npositioned ontopoftheblock.\nCurrent systems typically allowatmostonediskheadtoreadorwriteatany\nonetime.Allthediskheadscannotreadorwriteinparallel~-this technique\nwouldincrea.se datatransfer ratesbyafactorequaltothenumber ofdisk\nheadsandconsiderably speedupsequential scans.Therea.sontheycannotis\nthatitisverydifficult toensurethatalltheheadsareperfectly alignedonthe\ncorresponding tracks.Current approaches arebothexpensive andmoreprone\ntofaultsthandiskswithasingleactiveheacl.Inpractice, veryfewcommercial\nproducts support thiscapability andthenonlyinalimitedway;forexample,\ntwodiskheadsmaybeabletooperate inparallel.\nAdiskcontroller interfaces adiskdrivetothecomputer. Itimplements com\u00ad\nmandstoreadorwriteasectorbymovingthearmassembly andtransferring\ndatatoandfromthedisksurfaces. Achecksum iscomputed forwhendata\niswrittentoasectorandstoredwiththesector.Thechecksum iscomputed\nagainwhenthedataonthesectorisreadback.Ifthesectoriscorrupted orthe", "342": "308 CHAPTER 9\nAnExample ofaCurrent Disk:TheIBMDeskstar 14G~~~ Th~l\nIBMDeskstar 14GPXisa3.5inch\u00a7.J4.4 GBhfl,rddiskwithanaverage\nseektimeof9.1miUisecoudsTmsec) andanaverage rotational delayof\n4.17msec.However, thetimetoseekfromonetracktothenexUsjust2.2\nmsec,themaximum seektimeis15.5:rnsec.Thediskhasfivedouble-sided\nplattersthatspinat7200rotations perminute. Ea,chplatterholds3.35GB\nofdata,withadensityof2.6gigabitpersquareinch.Thedatatransfer\nrateisabout13MBpersecmld. Toputthesenumbers inperspective,\nobservethatadiskaccesstakesabout10msecs,whereas accessing amain\nmemory location typically takeslessthan60nanoseconds!\nreadisfaultyforsomereason,itisveryunlikelythatthechecksum computed\nwhenthesectorisreadmatches thechecksum computed whenthesectorwas\nwritten. Thecontroller computes checksums, andifitdetectsanerror,ittries\ntoreadthesectoragain.(Ofcourse,itsignalsafailureifthesectoriscorrupted\nandreadfailsrepeatedly.)\n~Whiledirectaccesstoanydesiredlocation inmainmemory takesapproxi\u00ad\nmatelythesametime,determining thetimetoaccessalocation ondiskis\nmorecomplicated. Thetimetoaccessadiskblockhasseveralcomponents.\nSeektimeisthetimetakentomovethediskheadstothetrackonwhich\nadesiredblockislocated. Asthesizeofaplatterdecreases, seektimesalso\ndecrease, sincewehavetomoveadiskheadashorterdistance. Typicalplatter\ndiameters are3.5inchesand5.25inches.Rotational delayisthewaiting\ntimeforthedesiredblocktorotateunderthediskhead;itisthetimerequired\nforhalfarotation allaverageandisusuallylessthanseektime.Transfer\ntimeisthetimetoactually readorwritethedataintheblockoncethehead\nispositioned, thatis,thetimeforthedisktorotateovertheblock.\n9.1.2Performance Implications ofDiskStructure\n1.Datamustbeinmernory fortheDBMStooperateonit.\n2.Theunitfordatatransfer between diskandmainmemory isablock;ifa\nsingleitemonablockisneeded,theentireblockistransferred. Reading\norwritingadiskblockiscalledanI/O(forinput/output) operation.\n3.Thetimetoreadorwriteablockvaries,depending onthelocation ofthe\ndata:\naccesstime=seektime+rotational delay+tmn8feT time\nTheseobservations implythatthetimetakenfordatabase operations isaffected\nsignificantly byhowdataisstored OIldisks.Thetimeformovingblocksto", "343": "StoringData:D'isksandFiles 309\norfromdiskusuallydOlninates thetimetakenfordatabase operations. To\nminimize thistime,itisnecessary tolocatedatarecordsstrategically ondisk\nbecause ofthegeometry andmechanics ofdisks.Inessence, iftworecordsare\nfrequently usedtogether, weshouldplacethemclosetogether. The'closest'\nthattworecordscanbeonadiskistobeonthesameblock.Indecrea<;ing\norderofcloseness, theycouldbeonthesametrack,thesamecylinder, oran\nadjacent cylinder.\nTworecords onthesameblockareobviously asclosetogether aspossible,\nbecause theyarereadorwritten aspartofthesameblock.Astheplatter\nspins,otherblocksonthetrackbeingreadorwrittenrotateundertheactive\nhead.Incurrentdiskdesigns, allthedataonatrackcanbereadorwritten\ninonerevolution. Afteratrackisreadorwritten, another diskheadbecomes\nactive,andanother trackinthesamecylinder isreadorwritten. Thisprocess\ncontinues untilalltracksinthecurrentcylinder arereadorwritten, andthen\nthearmassembly moves(inorout)toanadjacent cylinder. Thus,wehavea\nnaturalnotionof'closeness' forblocks,whichwecanextendtoanotionofnext\nandprevious blocks.\nExploiting thisnotionofnextbyarranging recordssotheyarereadorwritten\nsequentially isveryimportant inreducing thetimespentindiskl/Os.Sequen\u00ad\ntialaccessminimizes seektimeandrotational delayandismuchfasterthan\nrandom access.(Thisobservation isreinforced andelaborated inExercises 9.5\nand9.6,andthereaderisurgedtoworkthrough them.)\n9.2REDUNDANT ARRAYS OFINDEPENDENT DISKS\nDisksarepotential bottlenecks forsystemperformance andstoragesystem rfc'\u00ad\nliability. Eventhoughdiskperformance ha,sbeenimproving continuously, mi\u00ad\ncroprocessor performance ha.'sadvanced muchmorerapidly. Theperformance\nofmicroprocessors hasimproved atabout50percent ormoreperyear,but\ndiskaccesstimeshaveimproved atarateofabout10percent peryearand\ndisktransfer ratesatarateofabout20percent peryear.Inaddition, since\ndiskscontain mechanical elements, theyhavemuchhigherfailureratesthan\nelectronic partsofacomputer system.Ifadiskfails,allthedatastoredonit\nislost.\nAdiskarrayisanarrangement ofseveraldisks,organized toincrease per\u00ad\nformance andimprove reliability oftheresulting storagesystem. Performance\nisincreased through datastriping. Datastriping distributes dataoverseveral\ndiskstogivetheimpression ofhavingasinglelarge,veryfa'3tdisk.Reliabil\u00ad\nityisimproved through redundancy. Instead ofhavingasinglecopyofthe\ndata,redundant information ismaintained. Theredundant information iscarc-", "344": "310 CHAPTER. Q\nfullyorganized sothat,inC&'3eofadiskfailure,itcanbeusedtoreconstruct\nthecontents ofthefaileddisk.Diskarraysthatimplement acombination of\ndatastripingandredundancy arecalledredundant arraysofindependent\ndisks,orinshort,RAID.! SeveralRAIDorganizations, referredtoasRAID\nlevels,havebeenproposed. EachRAIDlevelrepresents adifferent trade-off\nbetween reliability andperformance.\nIntheremainder ofthissection,wefirstdiscussdatastripingandredundancy\nandthenintroduce theRAIDlevelsthathavebecomeindustry standards.\n9.2.1DataStriping\nAdiskarraygivestheusertheabstraction ofhavingasingle,verylargedisk.\nIftheuserissuesanI/Orequest, wefirstidentifythesetofphysical diskblocks\nthatstorethedatarequested. Thesediskblocksmayresideonasinglediskin\nthearrayormaybedistributed overseveraldisksinthearray.Thentheset\nofblocksisretrieved fromthedisk(s)involved. Thus,howwedistribute the\ndataoverthedisksinthearrayinfluences howmanydisksareinvolved when\nanI/Orequestisprocessed.\nIndatastriping, thedataissegmented intoequal-size partitions distributed\novermultiple disks.Thesizeofthepartition iscalledthestriping unit.The\npartitions areusuallydistributed usingaround-robin algorithm: Ifthedisk\narrayconsists ofDdisks,thenpartition iiswrittenontodiskimodD.\nAsanexample, consider astripingunitofonebit.SinceanyDsuccessive data\nbits are spreadoverallDdatadisksinthearray,allI/Orequests involvean\ndisksinthearray.Sincethesmallest unitoftransfer fromadiskisablock,\neachI/Orequestinvolves transferofatleastDblocks.SincewecanreadtheD\nblocksfromtheDdisksinparallel, thetransferrateofeachrequestisDtimes\nthetransfer rateofasingledisk;eachrequestusestheaggregated bandwidth\nofalldisksinthearray.Butthediskaccesstimeofthearrayisba.'3ically the\naccesstimeofasingledisk,sincealldiskheadshavetomovefor\"allrequests.\nTherefore, foradiskarraywithastriping unitofasinglebit,thenumber of\nrequests pertimeunitthatthearraycanprocessandtheaverageresponse time\nforeachindividual requestaresimilartothatofasingledisk.\nAsanotherexarhple, consider astriping unitofadiskblock.Inthiscase,I/O\nrequests ofthesizeofadiskblockareprocessed byonediskinthearray.If\nrnanyI/Orequests ofthesizeofadiskblockaremade,andtherequested\n1Historically, theJinRAIDstoodforinexpensive, asalargenumber ofsmalldiskswasmuchmore\neconornical thanasingleverylargedisk.Today,suchverylargedisksarenotevenmanufactured ..\u00b7\u00b7a\nsignoftheimpactofRAID.", "345": "StoringData:DisksandPiles\nRedundancy Schemes: Alternatives totheparityscheme include\nschemes basedonHamming codesandReed-Solomon codes.Inad\u00ad\nditiontorecovery fromsinglediskfailures, Hamming codescanidentify\u00ad\nwhichdiskfailed.Reed-Solomon codescanrecoverfromuptotwosimul\u00ad\ntaneous diskfailures. Adetailed discussion oftheseschemes isbeyond\nthescopeofourdiscussion here;thebibliography provides pointers forthe\ninterested reader.\nblocksresideondifferent disks,wecanprocessallrequests inparallelandthus\nreducetheaverageresponse timeofanI/Orequest. Sincewedistributed the\nstriping partitions round-robin, largerequests ofthesizeofmanycontiguous\nblocksinvolvealldisks.Wecanprocesstherequestbyalldisksinparalleland\nthusincrease thetransferratetotheaggregated bandwidth ofallDdisks.\n9.2.2Redundancy\nWhilehavingmoredisksincreases storagesystemperformance, italsolow\u00ad\nersoverallstoragesystemreliability. Assumethatthemean-time-to-failure\n(MTTF), ofasinglediskis50,000hours(about5.7years).Then,theMTTF\nofanarrayof100disksisonly50,000/100 =500hoursorabout21days,\nassuming thatfailuresoccurindependently andthefailureprobability ofadisk\ndoesnotchangeovertime.(Actually, diskshaveahigherfailureprobability\nearlyandlateintheirlifetimes. Earlyfailuresareoftenduetoundetected\nmanufacturing defects;latefailuresoccursincethediskwearsout.Failures do\nnotoccurindependently either:consider afireinthebuilding, anearthquake,\norpurchase ofasetofdisksthatcomefroma'bad'manufacturing batch.)\nReliability ofadiskarraycanbeincreased bystoringredundant information.\nIfadiskfails,theredundant information isusedtoreconstruct thedataonthe\nfaileddisk.Redundancy canimmensely increase theMTTFofadiskarray.\nWhenincorporating redundancy intoadiskarraydesign,wehavetomaketwo\nchoices. First,wehavetodecidewheretostoretheredundant information. We\ncaneitherstoretheredundant information onasmallnumberofcheckdisks\nordistribute theredundant information uniformly overalldisks.\nThesecondchoicewehavetomakeishowtocompute theredundant infor\u00ad\nmation. Mostdiskarraysstoreparityinformation: Intheparityscheme, an\nextracheckdiskcontains information thatcanbeusedtorecoverfromfailure\nofanyone diskinthearray.AssumethatwehaveadiskarraywithDdisks\nandconsider thefirstbitoneachdatadisk.Suppose thatioftheDdatabits\nare1.Thefirstbitonthecheckdiskissetto1ifiisodd;otherwise, itissetto", "346": "312 CHAPTER 9\nO.Thisbitonthecheckdiskiscalledtheparityofthedatabits.Thecheck\ndiskcontains parityinformation foreachsetofcorresponding Ddatabits.\nTorecoverthevalueofthefirstbitofafaileddiskwefirstcountthenumber\nofbitsthatare1ontheD - 1nonfailed disks;letthisnumberbej.Ifjisodd\nandtheparitybitis1,orifjisevenandtheparitybitis0,thenthevalue\nofthebitonthefaileddiskmusthavebeenO.Otherwise, thevalueofthebit\nonthefaileddiskmusthavebeen1.Thus,withparitywecanrecoverfrom\nfailureofanyonedisk.Reconstruction ofthelostinformation involves reading\nalldatadisksandthecheckdisk.\nForexample, withanadditional 10diskswithredundant information, the\nMTTFofourexample storagesystemwith100datadiskscanbeincreased\ntomorethan250years!\"Whatismoreimportant, alargeMTTFimpliesa\nsmallfailureprobability duringtheactualusagetimeofthestoragesystem,\nwhichisusuallymuchsmallerthanthereported lifetimeortheMTTF. (Who\nactually useslO-year-old disks?)\nInaRAIDsystem,thediskarrayispartitioned intoreliability groups, where\nareliability groupconsists ofasetofdatadisksandasetofcheckdisks.A\ncommon 7'cdundancy scheme(seebox)isappliedtoeachgroup.Thenumber\nofcheckdisksdepends ontheRAIDlevelchosen. Intheremainder ofthis\nsection, weassumeforeaseofexplanation thatthereisonlyonereliability\ngroup.ThereadershouldkeepinmindthatactualRAIDimplementations\nconsistofseveralreliability groups,andthenumber ofgroupsplaysarolein\ntheoverallreliability oftheresulting storagesystem.\n9.2.3LevelsofRedundancy\nThroughout thediscussion ofthedifferent RAIDlevels,weconsider sample\ndatathatwouldjustfitonfourdisks.Thatis,withnoRAIDtechnology our\nstoragesystemwouldconsistofexactlyfourdatadisks.Depending onthe\nRAIDlevelchosen,thenumberofadditional disbvariesfromzerotofour.\nLevel0:Nonredundant\nARAIDLevel0systemusesdatastripingtoincre,clse themaximum bandwidth\navailable. Noredundant information ismaintained. \\\\ThUebeingthesolution\nwiththelowestcost,reliability isaproblem, sincetheMTTFdecreases linearly\nwiththenumberofdiskdrivesinthearray.RAIDLevel0hasthebestwrite\nperformance ofallRAIDlevels,because absence ofredundant information im\u00ad\npliesthatnoredundant information needstobeupdated! Interestingly, RAID\nLevel0docsnothavethebestreadperfonnancc ofallRAIDlevels,sincesys-", "347": "StoTingData:Disks(1'lulPiles 313,\ntemswithredundancy haveachoiceofscheduling diskaccesses, asexplained\ninthenextsection.\nInourexample, theRAIDLevelasolution consists ofonlyfourdatadisks.\nIndependent ofthenumber ofdatadisks,theeffective spaceutilization fora\nRAIDLevelasystemisalways100percent.\nLevell:Mirrored\nARAIDLevel1systemisthemostexpensive solution. Instead ofhaving\nonecopyofthedata,twoidentical copiesofthedataontwodifferent disksare\nlnaintained. Thistypeofredundancy isoftencalledmirroring. Everywriteof\nadiskblockinvolves awriteonbothdisks.Thesewritesmaynotbeperformed\nsimultaneously, sinceaglobalsystemfailure(e.g.,duetoapoweroutage)could\noccurwhilewritingtheblocksandthenleavebothcopiesinaninconsistent\nstate.Therefore, wealwayswriteablockononediskfirstandthenwritethe\nothercopyonthemirrordisk.Sincetwocopiesofeachblockexistondifferent\ndisks,wecandistribute readsbetween thetwodisksandallowparallelreads\nofdifferent diskblocksthatconceptually resideonthesamedisk.Areadofa\nblockcanbescheduled tothediskthath&'3thesmallerexpected accesstime.\nRAIDLevel1doesnotstripethedataoverdifferent disks,sothetransfer rate\nforasinglerequestiscomparable tothetransfer rateofasingledisk.\nInourexample, weneedfourdataandfourcheckdiskswithmirrored datafor\naRAIDLevellimplementation. Theeffective spaceutilization is50percent,\nindependent ofthenumber ofdatadisks.\nLevel0+1:StripingandMirroring\nRAIDLevel0+l---sometimes alsoreferred toH..SRAIDLevel10--combines\nstriping andmirroring. AsinRAIDLevelLreadrequests ofthesizeofadisk\nblockcanbescheduled bothtoadiskanditsmirrorimage.Inaddition, read\nrequests ofthesizeofseveralcontiguous blocksbenefitfroIl1theaggregated\nbandwidth ofalldisks.Thccostforwritesisanalogous toRAIDLevelL\nAsinRAIDLevell, ourexa.Inple withfourdatadisksrequires fourcheckdisks\nandtheeffective spaceutilization isalways50percent.\nLevel2:Error-Correcting Codes\nInRAIDLevel2,thestriping unitisasinglebit.Theredundancy schemeused\nisHamming code.Inourexample withfourdatadisks,onlythreecheckdisks", "348": "314 CHAPTER 9\nareneeded. Ingeneral, thenumber ofcheckdisksgrowslogarithmically with\nthenumberofdatadisks.\nStriping atthebitlevelhastheimplication thatinadiskarraywithDdata\ndisks,thesmallest unitoftransfer forareadisasetofDblocks.Therefore,\nLevel2isgoodforworkloads withmanylargerequests, sinceforeachrequest,\ntheaggregated bandwidth ofalldatadisksisused.ButRAIDLevel2isbad\nforsmallrequests ofthesizeofanindividual blockforthesamereason. (See\ntheexample inSection9.2.1.)Awriteofablockinvolves reading Dblocks\nintomainmemory, modifying D+Cblocks,andwritingD+Cblocksto\ndisk,whereCisthenumberofcheckdisks.Thissequence ofstepsiscalleda\nread-modify-write cycle.\nForaRAIDLevel2implementation withfourdatadisks,threecheckdisks\nareneeded. Inourexample, theeffective spaceutilization isabout57percent.\nTheeffective spaceutilization increases withthenumber ofdatadisks.For\nexample, inasetupwith10datadisks,fourcheckdisksareneededandthe\neffective spaceutilization is71percent. Inasetupwith25datadisks,five\ncheckdisksarerequired andtheeffective spaceutilization growsto83percent.\nLevel3:Bit~Interieaved Parity\nWhiletheredundancy schemausedinRAIDLevel2improves intermsofcost\noverRAIDLevel1,itkeepsmoreredundant information thanisnecessary.\nHamming code,asusedinRAIDLevel2,hastheadvantage ofbeingableto\nidentify whichdiskhasfailed.Butdiskcontrollers caneasilydetectwhich\ndiskhasfailed.Therefore, thecheckdisksdonotneedtocontaininformation\ntoidentify thefaileddisk.Information torecoverthelostdataissufficient.\nInsteadofusingseveraldiskstostoreHamming code,RAIDLevel3hasa\nsinglecheckdiskwithparityinformation. Thus,thereliability overhead for\nRAIDLevel3isasingledisk,thelowestoverhead possible.\nTheperformance characteristics ofRAIDLevels2and3areverysimilar. RAID\nLevel3canalsoprocessonlyoneI/Oatatime,theminimum transfer unitis\nDblocks,andawriterequires aread-modify-write cycle.\nLevel4:Block~Interleaved Parity\nRAIDLevel4hEk\"iastriping unitofadiskblock,insteadofasinglebitasin\nRAIDLevel3.Block-level striping hastheadvantage thatreadrequests of\nthesizeofadiskblockcanbesen;edentirelybythediskwheretherequested\nblockresides. Largereadrequests ofseveraldiskblockscanstillutilizethe\naggregated bandwidth oftheDdisks.", "349": "Sto'ringData:D'isksandFiles 315\nThe\\vriteofasingleblockstillrequires aread-modify-write cycle,butonly\nonedatadiskandthecheckdiskareinvolved. Theparityonthecheckdisk\ncanbeupdated without readingallDdiskblocks,becausethenewparitycan\nbeobtained bynoticing thedifferences between theolddatablockandthenew\ndatablockandthenapplying thedifference totheparityblockonthecheck\ndisk:\nNewParity=(OldData XORNewData) XOROldParity\nTheread-modify-write cycleinvolves readingoftheolddatablockandtheold\nparityblock,modifying thetwoblocks,andwritingthembacktodisk,resulting\ninfourdiskaccesses perwrite.Sincethecheckdiskisinvolved ineachwrite,\nitcaneasilybecomethebottleneck.\nRAIDLevel3and4configurations withfourdatadisksrequirejustasingle\ncheckdisk.Inourexample, theeffective spaceutilization is80percent. The\neffective spaceutilization increases withthenumberofdatadisks,sincealways\nonlyonecheckdiskisnecessary.\nLevel5:Block-Interleaved Distributed Parity\nRAIDLevel5improves onLevel4bydistributing theparityblocksuniformly\noveralldisks,insteadofstoringthemonasinglecheckdisk.Thisdistribution\nhastwoadvantages. First,severalwriterequests couldbeprocessed inparallel,\nsincethebottleneck ofauniquecheckdiskhasbeeneliminated. Second, read\nrequests haveahigherlevelofparallelism. Sincethedataisdistributed over\nalldisks,readrequests involvealldisks,whereas insystems withadedicated\ncheckdiskthecheckdiskneverparticipates inreads.\nARAIDLevel5systemhasthebestperformance ofallRAIDlevelswith\nredundancy forsmallandlargereadancllarge writerequests. Smallwritesstill\nrequirearead-modify-write cycleandarethuslessefficientthaninRAIDLevel\n1.\nInourexample, thecorresponding RAIDLevel5systemhasfivedisksoverall\nandthustheeffective spa,ceutilization isthesameasinRAIDLevels3and4.\nLevel6:P+QRedundancy\nThemotivation forRAIDLevel6istheobservation thatrecovery fromfailure\nofasinglediskisnotsufficient inverylargediskarrays.First,inlargedisk\narrays,aseconddisklllightfailbeforereplacement ofanalready faileddisk", "350": "316 CHAPTER~ 9\ncouldtakeplace.Inaddition, theprobability ofadiskfailureduringrecovery\nofafaileddiskisnotnegligible.\nARAIDLevel6systemusesReed-Solomon codestobeabletorecoverfrom\nuptotwosimultaneous diskfailures. RAIDLevel6requires (conceptually)\ntwocheckdisks,butitalsouniformly distributes redundant information atthe\nblocklevelasinRAIDLevel5.Thus.theperformance characteristics forsmall\nandlargereadrequests andforlargewriterequests areanalogous toRAID\nLevel5.Forsmallwrites,theread-modify-write procedure involves sixinstead\noffourdisksascompared toRAIDLevel5,sincetwoblockswithredundant\ninformation needtobeupdated.\nForaRAIDLevel6systemwithstoragecapacity equaltofourdatadisks,six\ndisksarerequired. Inourexample, theeffective spaceutilization is66percent.\n9.2.4ChoiceofRAIDLevels\nIfdatalossisnotanissue,RAIDLevel0improves overallsystemperformance\natthelowestcost.RAIDLevel0+1issuperior toRAIDLevel1.Themain\napplication areasforRAIDLevel0+1systems aresmallstoragesubsystems\nwherethecostofmirroring ismoderate. Sometimes, RAIDLevel0+1isused\nforapplications thathaveahighpercentage ofwritesintheirworkload, since\nRAIDLevel0+1provides thebestwriteperformance. RAIDLevels2and\n4arealwaysinferiortoRAIDLevels3and5,respectively. RAIDLevel3is\nappropriate forworkloads consisting mainlyoflargetransferrequests ofseveral\ncontiguous blocks. Theperformance ofaRAIDLevel3systemisbadfor\nworkloads withmanysmallrequests ofasinglediskblock.RAIDLevel5isa\ngoodgeneral-purpose solution.Itprovides highperformance forlargeaswell\nassmallrequests. RAIDLevel6isappropriate ifahigherlevelofreliability is\nrequired.\n9.3DISKSPACEMANAGEMENT\nI\nThelowestlevelofsoftware intheDB.lVISarchitecture discussed inSection1.8,\ncalledthediskspacemanager, manages spaceondisk.Abstractly, thedisk\nspacemanager supports theconcept ofapageasaunitofdataandprovides\ncOlmnands toallocate ordeallocate apageandreadorwriteapage.Thesize\nofapageischosentobethesizeofadiskblockandpagesarestoredasdisk\nblockssothatreadingorwritingapagecanbedoneinonediskI/O.\nItisoftenusefultoallocate asequence ofpages (lSacontiguous sequence of\nblockstoholddatafrequently accessed insequential order.Thiscapability\nisessential forexploiting theadvantages ofsequentially accessing diskblocks,", "351": "StoTingData:DisksandFiles 317\nwhichwediscussed earlierinthischapter. Suchacapability, ifdesired, must\nbeprovided bythediskspacemanager tohighcr-levellayers oftheDBMS.\nThediskspacemanager hidesdetailsoftheunderlying hardware (andpossibly\ntheoperating system) andallowshigherlevelsofthesoftware tothinkofthe\ndata cLSacollection ofpages.\n9.3.1Keeping TrackofFreeBlocks\nAdatabase growsandshrinks <1.<;recordsareinserted anddeletedovertime.\nThediskspacemanager keepstrackofwhichdiskblocksareinusc,inaddition\ntokeepingtrackofwhichpagesareonwhichdiskblocks.Although itislikely\nthatblocksareinitially allocated sequentially ondisk,subsequent allocations\nanddeallocations couldingeneralcreate'holes.'\nOnewaytokeeptrackofblockusageistomaintain a.listoffreeblocks. As\nblocksaredeallocated (bythehigher-level software thatrequests andusesthese\nblocks), wecanaddthemtothefreelistforfutureuse.Apointertothefirst\nblockonthefreeblocklistisstoredinaknownlocation ondisk.\nAsecondwayistomaintain abitmapwithonebitforeachdiskblock,which\nindicates whether ablockisinuseornot.Abitmapalsoallowsveryfast\nidentification andallocation ofcontiguous areasondisk.Thisisdifficult to\naccomplish withalinkedlistapproach.\n9.3.2UsingOSFileSystemstoManageDiskSpace\nOperating systems alsomanage spaceondisk.Typically, anoperating system\nsupports theabstraction ofafileasasequence ofbytes.Theasmanages\nspaceonthediskandtranslates requests, suchas\"Readbyteioffilef,\"into\ncorresponding low-level instructions: \"Readblockmoftracktofcylinder c\nofdiskd.\"Adatabase diskspacemanager couldhebuiltusingOSfiles.J:;'or\nexample, theentiredatabase couldresideinoneormoreasfilesforwhich\nanumber ofblocksareallocated (bytheaS)andinitialized. Thediskspace\nmanager isthenresponsible formanaging thespaceintheseOSfiles.\nManydatabase systems donotrelyontheasfilesystemandinsteaddotheir\nowndiskmanagement, eitherfromscratchorbyextendingasfacilities. The\nreasonsarepractical <1.<;welleLe;technical Onepractical reasonisthataDB~1S\nvendorwho\\vishestosupport severalasplatfonns cannotassumefeatures\nspecifictoanyOS,forporta.bilit,'rr, andwouldtherefore trytomaketheDBMS\ncodeasself-contained aspossible. Atechnical reasonisthatona:32-bitsystern,\nthela.rgestfilesizeis4GD,whereas aDBMSmaywanttoaccessasinglefile", "352": "318 CHAPTER 9\nlargerthanthat.Arelatedproblem isthattypicalasfilescannotspandisk\ndevices, whichisoftendesirable orevennecessary inaDBMS. Additional\ntechnical reasonswhyaDBMSdoesnotrelyontheasfilesystemareoutlined\ninSection9.4.2.\n9.4BUFFER MANAGER\nTounderstand theroleofthebuffermanager, consider asimpleexample. Sup\u00ad\nposethatthedatabase contains 1millionpages,butonly1000pagesofmain\nmemory areavailable forholdingdata.Consider aquerythatrequires ascan\noftheentirefile.Because allthedatacannotbebrought intomainmemory at\nonetime,theDBMSmustbringpagesintomainmemory astheyareneeded\nand,intheprocess, decidewhatexisting pageinmainmemory toreplaceto\nmakespaceforthenewpage.Thepolicyusedtodecidewhichpagetoreplace\niscalledthereplacement policy.\nIntermsoftheDBMSarchitecture presented inSection1.8,thebufferman\u00ad\nageristhesoftware layerresponsible forbringing pagesfromdisktomain\nmemory asneeded. Thebuffermanager manages theavailable mainmemory\nbypartitioning itintoacollection ofpages,whichwecollectively refertoasthe\nbufferpool.Themainmemory pagesinthebufferpoolarecalledframes;\nitisconvenient tothinkofthemasslotsthatcanholdapage(whichusually\nresidesondiskorothersecondary storagemedia).\nHigherlevelsoftheDBMScodecanbewrittenwithoutworrying aboutwhether\ndatapagesareinmemory ornot;theyaskthebuffermanager forthepage,\nanditisbrought intoaframeinthebufferpoolifitisnotalready there.\nOfcourse,thehigher-level codethatrequests apagemustalsoreleasethe\npagewhenitisnolongerneeded, byinforming thebuffermanager, sothat\ntheframecontaining thepagecanbereused.Thehigher-level codemustalso\ninformthebuffermanager ifitmodifies therequested page;thebuffermanager\nthenmakessurethatthechangeispropagated tothecopyofthepageondisk.\nBuffermanagement isillustrated inFigure9.3.\nInaddition tothebufferpoolitself,thebuffermanager maintains somebook\u00ad\nkeeping information andtwovariables foreachframeinthepool:pirLcount\nanddirty.Thenumberoftimesthatthepagecurrently inagivenframehas\nbeenrequested butnotreleased-the number ofcurrentusersofthepage--is\nrecorded inthepin_count variable forthatframe.TheBoolean variable dirty\nindicates whether thepageha.<;beenmodified sinceitwasbrought intothe\nbufferpoolfromdisk.", "353": "Sio'ringData:D'isksandFiles\nPagerequests fromhigher-level code\nBUFFER POOL\nIfarequested pageisnotinthe\npoolandthepoolisfull,the\nbuffermanager's replacement\npolicycontrolswhichexisting\npageisreplaced.\nFigure9.3TheBufferPoolMAINMEMORY\nDISK319,\nInitially, thepin_count foreveryframeissetto0,andthedirtybitsareturned\noff.Whenapageisrequested thebuffermanager doesthefollowing:\n1.Checksthebufferpooltoseeifsomeframecontains therequested page\nand,ifso,increments thepin_count ofthatframe.Ifthepageisnotinthe\npool,thebuffermanager bringsitinasfollows:\n(a)Chooses aframeforreplacement, usingthereplacement policy,and\nincrements itspin_count.\n(b)Ifthedirtybitforthereplacement frameison,writesthepageit\ncontains todisk(thatis,thediskcopyofthepageisoverwritten with\nthecontents oftheframe).\n(c)Readstherequested pageintothereplacement frame.\n2.Returns the(mainmemory) addressoftheframecontaining therequested\npagetotherequestor.\nIncrementing pirLco'llnt isoftencalledpinning therequested pageinitsframe.\nWhenthecodethatcallsthebuffermanager andrequests thepagesubsequently\ncallsthebuffermanager andreleases thepage,thepin_count oftheframe\ncontaining therequested pageisdecremented. Thisiscalledunpinning the\npage.Iftherequestor hasmodified thepage,italsoinformsthebuffermanager\nofthisatthetimethatitunpinsthepage,andthedirtybitfortheframeisset.", "354": "320 CHAPTER ,,9\nThebuffermanager willnotreadanother pageintoaframeuntilitspi'll-count\nbecomes 0,thatis,untilallrequestors ofthepagehave unpilln~d it.\nIfarequested pageisnotinthebufferpoolandafreeframeisnotavailable\ninthebufferpool,aframewithpirl-count 0ischosenforreplacement. Ifthere\naremanysuchframes,aframeischosenaccording tothebuffermanager's\nreplacement policy.vVediscussvariousreplacement policies in Section9.4.1.\n\\-\\Thenapageiseventually chosenforreplacement, ifthedir'tybitisnotset,\nitmeansthatthepageh1-:1..<;notbeenmodified sincebeingbrought intomain\nmemory. Hence,thereisnoneedtowritethepagebacktodisk;thecopy\nondiskisidentical tothecopyintheframe,andtheframecansimplybe\noverwritten bythenewlyrequested page.Otherwise, themodifications tothe\npagemustbepropagated tothecopyondisk.(Thecrashrecovery protocol\nmayimposefurtherrestrictions, aswesawinSection1.7.Forexample, inthe\nWrite-Ahead Log(WAL)protocol, speciallogrecordsareusedtodescribe the\nchanges madetoapage.Thelogrecordspertaining tothepagetobereplaced\nmaywellbeinthebuffer;ifso,theprotocol requiresthattheybewrittento\ndiskbeforethepageiswrittentodisk.)\nIfnopageinthebufferpoolhaspin_count 0andapagethatisnotinthepool\nisrequested, thebuffermanager mustwaituntilsomepageisreleased before\nresponding tothepagerequest. Inpractice, thetransaction requesting thepage\nmaysimplybeaborted inthissituation! Sopagesshouldbereleased-by the\ncodethatcallsthebuffermanager torequestthepage-assoonaspossible.\nAgoodquestion toaskatthispointis,\"Whatifapageisrequested byseveral\ndifferent transactions?\" Thatis,whatifthepageisrequested byprograms\nexecuting independently onbehalfofdifferent users?Suchprograms could\nmakeconflicting changestothepage.Thelockingprotocol (enforced byhigher\u00ad\nlevelDBMScode,inparticular thetransaction manager) ensuresthateach\ntransaction obtainsasharedorexclusive lockbeforerequesting apagetoread\norrnodify. Twodifferent transactions cannotholdanexclusive lockonthe\nsamepageatthesametime;thisishowconflicting changes areprevented. The\nbufferrnanager simply ~1..'3surnes tha.ttheappropriate lockhasbeenobtained\nbeforeapageisrequested.\n9.4.1BufferReplacement Policies\nThepolicyusedtochooseanunpinned pageforreplacement canaffectthetime\ntakenfordatabase operations considerably. Oftheman,Yalternative policies,\neachissuitable indifferent situations.", "355": "Sto7~ingData:DisksandFiles 321\nThebest-known replacement policyisleastrecently used(LRU).Thiscan\nbeimplemented inthebuffermanager usingaqueueofpointers toframeswith\npin_count O.Aframeisaddedtotheendofthequeuewhenitbecomes a\ncandidate forreplacement (thatis,whenthep'irLco'unt goesto0).Thepage\nchosenforreplacement istheoneintheframeattheheadofthequeue.\nAvariantofLRU,calledclockreplacement, hassimilarbehavior butless\noverhead. Theideaistochooseapageforreplacement usingacurrentvariable\nthattakesonvalues1throughN,whereNisthenumber ofbufferframes,in\ncircular order.Viecanthinkoftheframesbeingarranged inacircle,likea\nclock'sface,andcurrentasaclockhandmovingacrosstheface.Toapproximate\nLRUbehavior, eachframealsohasanassociated referenced bit,whichisturned\nonwhenthepage p'in~count goestoO.\nThecurrentframeisconsidered forreplacement. Iftheframeisnotchosenfor\nreplacement, currentisincremented andthenextframeisconsidered; thispro\u00ad\ncessisrepeated untilsomeframeischosen.Ifthecurrentframehaspin_count\ngreaterthan0,thenitisnotacandidate forreplacement andcurrentisin\u00ad\ncremented. Ifthecurrentframehasthereferenced bitturnedon,theclock\nalgorithm turnsthereferenced bitoffandincrements cm'rent-this way,are\u00ad\ncentlyreferenced pageislesslikelytobereplaced.Ifthecurrentframehas\np'irLcount 0anditsreferenced bitisoff,thenthepageinitischosenforre\u00ad\nplacement. Ifallframesarepinnedinsomesweepoftheclockhand(thatis,\nthevalueofcurrentisincremented untilitrepeats), thismeansthatnopage\ninthebufferpoolisareplacement candidate.\nTheLRUandclockpoliciesarenotalwaysthebestreplacement strategies fora\ndatabase system,particularly ifmanyuserrequests requiresequential scansof\nthedata.Consider thefollowing illustrative situation. Suppose thebufferpool\nh<4'310frames,andthefiletobescanned has10orfewerpages.Assuming,\nforsimplicity, thattherearenocompeting requests forpages,onlythefirst\nscanofthefiledoesanyI/O.Pagerequests insubsequent scansalwaysfindthe\ndesiredpageinthebufferpool.Ontheotherhand,supposethatthefiletobe\nscanned has11pages(whichisonemorethanthenumber ofavailable pages\ninthebufferpool).UsingLRU,everyscanofthefilewillresultinreading\neverypageofthefile!Inthissituation, calledsequential flooding, LRUis\ntheworstpossible replacement strategy.\nOtherreplacement policiesincludefirstinfirstout(FIFO)andmostre\u00ad\ncentlyused(MRU),whichalsoentailoverhead similartoLRU,andrandom,\narnongothers.Thedetailsofthesepoliciesshouldbeevidentfromtheirnames\nandthepreceding discussion ofLRUandclock.", "356": "322\n,---------------- __.._._-_..----~~-------------\u00b7\u00b7-~~l\nBufferManagement inPractice: IBMDB2andSybaseASEallow!\nbufferstobepartitioned intonamedpools.Eachdatabase, table,orin-I\ndexcanbeboundtooneofthesepools.Eachpoolcanbeconfigured toI\nuseeitherLRUorclockreplacement inASE;DB2usesavariantofclock!\nreplacement, withtheinitialclockvaluebasedonthenatureofthepage!\n(e.g.,indexnon-leaves getahigherstarting clockvalue,whichdelaystheir\nreplacement). Interestingly, abufferpoolclientinDB2canexplicitly indi\u00ad\ncatethatithatesapage,makingthepagethenextchoiceforreplacement.\nAsaspecialcase,DB2appliesMRUforthepagesfetchedinsomeutility\noperations (e.g.,RUNSTATS), andDB2V6alsosupports FIFO.Informix\nandOracle7bothmaintain asingleglobalbufferpoolusingLRU;Mi\u00ad\ncrosoftSQLServerhasasinglepoolusingclockreplacement. InOracle\n8,tablescanbeboundtooneoftwopools;onehashighpriority, andthe\nsystemattempts tokeeppagesinthispoolinmemory.\nBeyondsettingamaximum number ofpinsforagiventransaction, there\naretypically nofeatures forcontrolling bufferpoolusageonaper\u00ad\ntransaction basis.Microsoft SQLServer,however, supports areservation of\nbufferpagesbyqueriesthatrequirelargeamounts ofmemory (e.g.,queries\ninvolving sortingorhashing).\n9.4.2BufferManagement inDBMSversusOS\nObvious similarities existbetween virtualmemory inoperating systems and\nbuffermanagement indatabase management systems. Inbothcases,thegoal\nistoprovideaccesstomoredatathanwillfitinmainmemory, andthebasic\nideaistobringinpagesfromdisktomainmemory a.<.;needed,replacing pages\nnolongerneededinmainmemory. Whycan'twebuildaDBMSusingthe\nvirtualmemory capability ofanOS?ADBMScanoftenpredicttheorder\ninwhichpageswillbeaccessed, orpagereference patterns, muchmore\naccurately thanistypicalinanasenvironment, anditisdesirable toutilize\nthisproperty. Further, aDBMSneedsmorecontroloverwhenapageiswritten\ntodiskthananastypically provides.\nADBMScanoftenpredictreference patterns because mostpagereferences\naregenerated byhigher-level operations (suchassequential scansorparticular\nimplementations ofvariousrelational algebraopera.tors) witha.knownpattern\nofpageaccesses. Thisabilitytopredictreference patterns allowsforabetter\nchoiceofpagestoreplaceandmakestheideaofspecialized bufferreplacmnent\npoliciesmoreattractive intheDBMSenvironment.\nEvenmoreimportant, beingabletopredictreference patterns enablestheusc\nofasimpleandveryeffective strategy calledprefetching ofpages. The", "357": "StoTing Data:DisksandFiles 323\n1\n~\"~--~--\"------------------------~\nPrefetching: IBMDB2supports bothsequential alldlistprefeteh\n(prefetching alistofpages).Ingeneral,theprefeteh sizeis324KB\u00b7pages,\nbutthiscanbesetbytheuser.\u00a3torsomesequential typedatahaseutilities\n(e.g.,COPY,RUNSTATS), DB2prefetches upto644KBpages,\u00b7!'cJr a\nsmallerbufferpool(i.e.,lessthan1000buffers), theprefetch quantity is\nadjusted downward to16or8pages.Theprefetch sizecanbeconfigured by\ntheuser;forcertainenvironments, itmaybebesttoprefetch 1000pagesat\natime!SybaseASEsupports asynchronous prefetching ofupto256pages,\nandusesthiscapability toreducelatencyduringindexed accesstoatable\ninarangescan.Oracle8usesprefetching forsequential scan,retrieving\nlargeobjects, andcertainindexscans.Microsoft SQLServersupports\nprefetching forsequential scanandforscarlSalongtheleaflevelofaB+\ntreeindex,andtheprefetch sizecanbeadjusted a<;ascanprogresses. SQL\nServeralsousesasynchronous prefetching extensively. Informix supports\nprefetching withauser-defined prefetch size.\nbuffermanager cananticipate thenextseveralpagerequests andfetchthe\ncorresponding pagesintomemory beforethepagesarerequested. Thisstrategy\nhastwobenefits. First,thepagesareavailable inthebufferpoolwhenthey\narerequested. Second, reading inacontiguous blockofpagesismuchfaster\nthanreadingthesamepagesatdifferent timesinresponse todistinctrequests.\n(Review thediscussion ofdiskgeometry toappreciate whythisisso.)Ifthe\npagestobeprcfetched arenotcontiguous, recognizing thatseveralpagesneed\ntobefetchedcannonetheless leadtofasterI/Obecause anorderofretrieval\ncanbechosenforthesepagesthatminimizes seektimesandrotational delays.\nIncidentally, notethattheI/Ocantypically bedoneconcurrently withCPU\ncomputation. Oncetheprefetch request isissuedtothedisk,thediskisre\u00ad\nsponsible forreadingtherequested pagesintomemory pagesandtheCPUcan\ncontinue todootherwork.\nADBMSalsorequires theabilitytoexplicitly forceapagetodisk,thatis,to\nensurethatthecopyofthepageondiskisupdated withthecopyinmemory.\nAsarelatedpoint,aDBMSmustbeabletoensurethatcertainpagesinthe\nbufferpoolarewrittentodiskbeforecertainotherpagestoimplement the';VAL\nprotocol forcra,<;hrecovery, aswesawinSection1.7.Virtualmemory imple\u00ad\nmentations inoperating systems cannotbereliedontoprovidesuchcontrol\noverwhenpagesarewrittentodisk;theOScommand towriteapagetodisk\nmaybeimplemented byessentially recording thewriterequestanddeferring\ntheactualmodification ofthediskcopy.Ifthesysterncrashesintheinterim,\ntheeffectscanbecatastrophic foraDBMS.(Crashrecovery isdiscllssed further\ninChapter 18.)", "358": "324 CHAPTER~9\nIndexes asFiles:InChapter 8,wepresented indexesasawayof6rga11i~~--\u00b7\u00b7w\u00b7l\ningdatarecordsforefficient search.Fromanimplementation standpoint, I\nIi\nindexesarejustanother kindoffile,containing recordsthatdil'ecttraffic\nonrequests fordatarecords. Forexample, atreeindexisacollection of\nrecordsorganized intoonepagepernodeinthetree.Itisconvenient to\nactually thinkofatreeindexastwofiles,because itcontains twokinds\nofrecords:(1)afileofindexentries,whicharerecordswithfieldsforthe\nindex'ssearchkey,andfieldspointing toachildnode,and(2)afileofdata\nentries,whosestructure depends onthechoiceofdataentryalternative.\n9.5FILESOFRECORDS\nWenowturnourattention fromthewaypagesarestoredondiskandbrought\nintomainmemory tothewaypagesareusedtostorerecordsandorganized\nintologicalcollections orfiles.HigherlevelsoftheDBMScodetreatapageas\neffectively beingacollection ofrecords, ignoring therepresentation andstorage\ndetails. Infact,theconcept ofacollection ofrecordsisnotlimitedtothe\ncontents ofasinglepage;afilecanspanseveralpages.Inthissection, we\nconsider howacollection ofpagescanbeorganized asafile.Wediscusshow\nthespaceonapagecanbeorganized tostoreacollection ofrecordsinSections\n9.6and9.7.\n9.5.1Implementing HeapFiles\nThedatainthepagesofaheapfileisnotordered inanyway,andtheonly\nguarantee isthatonecanretrieve allrecordsinthefilebyrepeated requests\nforthenextrecord.Everyrecordinthefilehasauniquerid,andeverypage\ninafileisofthesamesize.\nSupported operations onaheapfileinclude CTeatcanddestmyfiles,'inserta\nrecord,deletearecordwithagivenrid,getarecordwithagiven rid, andscan\nallrecordsinthefile.Togetordeletearecordwithagivenrid,notethatwe\nmustbeabletofindtheidofthepagecontaining therecord,giventheidof\ntherecord.\nvVemustkeeptrackofthepagesineachheapfiletosupportscans,andwemust\nkeeptrackofpagesthatcontainfreespacetoimplement insertion efficiently.\n\\Vediscusstwoalternative waystornaintain thisinformation. Ineachofthese\nalternatives, pagesmustholdtwopointers (whicharepageids)forfile-level\nbookkeeping inaddition tothedata.", "359": "StoringData:DisksaTulFile,s 32~\nLinkedListofPages\nOnepossibility istomaintain aheapfileasadoublylinkedlistofpages.The\nDBMScanremember wherethefirstpageislocatedbymaintaining atable\ncontaining pairsof(heap_file_name, page_Laddr) inaknownlocation ondisk.\nWecallthefirstpageofthefiletheheaderpage.\nAnimportant taskistomaintain information aboutemptyslotscreated by\ndeleting arecordfromtheheapfile.Thistaskhastwodistinct parts:howto\nkeeptrackoffreespacewithinapageandhowtokeeptrackofpagesthathave\nsomefreespace.Weconsider thefirstpartinSection9.6.Thesecondpartcan\nbeaddressed bymaintaining adoublylinkedlistofpageswithfreespaceand\nadoublylinkedlistoffullpages;together, theselistscontain allpagesinthe\nheapfile.Thisorganization isillustrated inFigure9.4;notethateachpointer\nisreallyapageid.\nData\npageData\npage\nLinkedlistof\nfullpagesLinkedlistofpages\nwithfreespace\npageDataData\npage\nFigure 9.4HeapFileOrganization withaLinkedList\nIfanewpageisrequired, itisobtained bymakingarequesttothediskspace\nmanager andthenaddedtothelistofpagesinthefile(probably asapage\nwithfreespace,because itisunlikely thatthenewrecordwilltakeupallthe\nspaceonthepage).Ifapageistobedeletedfromtheheapfile,itisremoved\nfromthelistandthediskspaceInanager istoldtodeallocate it.(Notethatthe\nschemecaneasilybegeneralized toallocate ordeallocate asequence ofseveral\npagesandmaintain adoublylinkedlistofthesepagesequences.)\nOnedisadvantage ofthisscheIueisthatvirtually allpagesinafilewillbeon\nthefreelistifrecordsareofvariable length,because itislikelythateverypage\nha\",,,atleastafewfreebytes.Toinsertatypicalrecord,wemustretrieve and\nexaInine severalpagesonthefreelistbeforewefindonewithenoughfreespace.\nThedirectory-based heapfileorganization thatwediscussnextaddresses this\nproblem.", "360": "326\nDirectory ofPagesCHAPTER,g\nAnalternative toalinkedlistofpagesistomaintain adirectory ofpages.\nTheDBMSmustremember wherethefirstdirectory pageofeachheapfileis\nlocated. Thedirectory isitselfacollection ofpagesandisshownasalinked\nlistinFigure9.5.(Otherorganizations arepossible forthedirectory itself,of\ncourse.)\nHeaderpage\nData\npage2\nData\npageN\nDIRECTORY\nFigure9.5HeapFileOrganization withaDirectory\nEachdirectory entryidentifies apage(orasequence ofpages)intheheapfile.\nAstheheapfilegrowsorshrinks, thenumber ofentriesinthedirectory-and\npossibly thenumber ofpagesinthedirectory itself--grows orshrinkscorre\u00ad\nspondingly. Notethatsinceeachdirectory entryisquitesmallincomparison to\natypicalpage,thesizeofthedirectory islikelytobeverysmallincomparison\ntothesizeoftheheapfile.\nFreespacecanbemanaged bymaintaining abitperentry,indicating whether\nthecorresponding pagehasanyfreespace,oracountperentry,indicating the\namount offreespaceonthepage.Ifthefilecontains variable-length records,\nwecanexamine thefreespacecountforanentrytodetermine iftherecord\nfitsonthepagepointedtobytheentry.Sinceseveralentriesfitonadirectory\npage,wecanefficiently searchforadatapagewithenoughspacetoholda\nrecordtobeinserted.\n9.6PAGEFORMATS\nThepageabstraction isappropriate whendealingwithI/Oissue-s,buthigher\nlevelsoftheDBMSseedataa..<;acollection ofrecords. Inthissection, we", "361": "StoTingData:D'i.5ksandFiles 327.\nRidsinCOInmercial Systems: IBMDB2lInformix, Microsoft SQL\nServer lOracle8,andSybaseASEallimplement recordidsasapageid\nandslotnumber. Syba..c;eASEusesthefollowing pageorganization, which\nistypical: Pagescontainaheaderfollowed bytherowsandaslotarray.\nTheheadercontains thepageidentity, itsallocation state,pagefreespace\nstate,andatimestamp. Theslotarrayissimplyamapping ofslotnumber\ntopageoffset.\nOracle8andSQLServeruselogicalrecordidsratherthanpageidandslot\nnumberinonespecialcase:Ifatablehasaclustered index,thenrecordsin\nthetableareidentified usingthekeyvaluefortheclustered index.Thishas\ntheadvantage thatsecondary indexesneednotbereorganized ifrecords\naremoved ac~osspages.\nconsider howacollection ofrecordscanbearranged onapage.Wecanthink\nofapageasacollection ofslots,eachofwhichcontains arecord.Arecordis\nidentified byusingthepair(pageid,slotnumber); thisistherecordid(rid).\n(Weremarkthatanalternative waytoidentifyrecordsistoassigneachrecord\nauniqueintegerasitsridandmaintain atablethatliststhepageandslotof\nthecorresponding recordforeachrid.Duetotheoverhead ofmaintaining this\ntable,theapproach ofusing(pageid,slotnumber) asanridismorecommon.)\nWenowconsider somealternative approaches tomanaging slotsonapage.\nThemainconsiderations arehowtheseapproaches support operations suchas\nsearching, inserting, ordeleting recordsonapage.\n9.6.1Fixed-Length Records\nIfallrecordsonthepageareguaranteed tobeofthesamelength,recordslots\narcuniform andcanbearranged consecutively withinapage.Atanyinstant,\nsomeslotsareoccupied byrecordsandothersareunoccupied. Whenarecord\nisinserted intothepage,wemustlocateanemptyslotandplacetherecord\nthere.Themainissuesarehowwekeeptrackofemptyslotsandhowwelocate\nallrecordsonapage.Thealternatives hingeonhowwehandlethedeletion of\narecord.\nThefirstalternative istostorerecordsinthefirstNslots(whereNisthe\nnumberofrecordsonthepage);whenever arecordisdeleted, wemovethelast\nrecordonthepageintothevacated slot.Thisformatallowsustolocatethe\nithrecordonapagebyasimpleoffsetcalculation, andallemptyslotsappear\ntogether attheendofthepage.However, thisapproach docsnotworkifthere", "362": "328 CHAPTER.9\nareexternal references totherecordthatismoved(because theridcontains\ntheslotnumber, whichisnowchanged).\nThesecondalternative istohandledeletions byusinganarrayofbits,oneper\nslot,tokeeptrackoffreeslotinformation. Locating recordsonthepagerequires\nscanning thebitarraytofindslotswhosebitison;whenarecordisdeleted,\nitsbitisturnedoff.Thetwoalternatives forstoringfixed-length recordsare\nillustrated inFigure9.6.Notethatinaddition totheinformation aboutrecords\nonthepage,apageusuallycontains additional file-level information (e.g.,the\nidofthenextpageinthefile).Thefiguredoesnotshowthisadditional\ninformation.\nPacked Unpacked, Bitmap\nM 3 2 1J\nNumberofslotsSlot1\nSlot2\nSlot3\no0 0\n~\nSlotM\n11\nII1011\\MFree~Space\nJ\n'-S\"Page~J Header\nNumberofrecordso0 0\n...\nINSlotNSlot1\nSlot2\nFigure9.6Alternative PageOrganizations forFixed-Length Recorcls\nTheslottedpageorganization described forvariable-length recordsinSection\n9.6.2canalsobeusedforfixed-length records.Itbecomes attractive ifweneed\ntomoverecordsaroundonapageforreasonsotherthankeepingtrackofspace\nfreedbydeletions. Atypicalexample isthatwewanttokeeptherecordsona\npagesorted(according tothevalueinsomefield).\n9.6.2Variable-Length Records\nIfrecordsareofvariable length,thenwecannotdividethepageintoafixed\ncollection ofslots.Theproblem isthat,whenanewrecordistobeinserted,\nwehavetofindanemptyslotofjusttherightlength----if weuseaslotthat\nistoobig,wewastespace,anclobviously wecannotuseaslotthatissmaller\nthantherecordlength.Therefore, whenarecordisinserted, wemustallocate\njusttherightamount ofspaceforit,andwhenarecordisdeleted, wemust\nmoverecordstofilltheholecreatedbythedeletion, toensurethatallthefree\nspaceonthepageiscontiguous. Therefore, theabilitytomoverecordsona\npagebecomes veryimportant.", "363": "St011ngData:Disks(l'ndFiles 3#29\nThemostflexibleorganization forvariable-length recordsistomaintain adi\u00ad\nrectory ofslotsforeachpage,witha(recordoffset,recOT'dlength)pairper\nslot.Thefirstcomponent (recordoffset)isa'pointer' totherecord,asshown\ninFigure9.7;itistheofl'setinbytesfromthestartofthedataareaonthe\npagetothestartoftherecord,Deletion isreadilyaccomplished bysettingthe\nrecordofl'setto-1.Records canbemovedaroundonthepagebecausetherid,\nwhichisthepagenumberandslotnumber(thatis,position inthedirectory),\ndoesnotchangewhentherecordismoved;onlytherecordofl'setstoredinthe\nslotchanges.\nDATAAREA\nrid=(i,N)PAGEi\n/offsetofrecordfrom\n/startofdataarea\nI\n\\\n\\Recordwithrid=(i,l)\\~__II\nlength=24\nFigure 9.7PageOrganization forVariable-Length R.ecords\nThespaceavailable fornewrecordsmustbemanaged carefully becausethepage\nisnotpreformatted intoslots.Onewaytomanage freespaceistomaintain a\npointer(thatis,ofl'setfromthestartofthedataareaonthepage)thatindicates\nthestartofthefreespacearea.vVhenanewrecordistoolargetofitintothe\nremaining freespace,wehavetomoverecordsonthepagetoreclairnthespace\nfreedbyrecordsdeletedearlier.Theideaistoensurethat,afterreorganization,\nallrecordsappearincontiguous order,followed bytheavailable freespace.\nAsubtlepointtobenotedisthattheslotforadeletedrecordcannotalways\nberemoved fromtheslotdirectory, because slotnumbers areusedtoidentify\nrecords-by deleting aslot,wechange(decrement) theslotnumber ofsubse\u00ad\nquentslotsintheslotdirectory, andthereby changetheridofrecordspointed\ntobysubsequent slots.Theonlywaytoremoveslotsfromtheslotdirectory is\ntoremovethelastslotiftherecordthatitpointstoisdeleted. However, when", "364": "330 CHAPTER .9\narecordisinserted, theslotdirectory shouldbescanned foranelement that\ncurrently doesnotpointtoanyrecord,andthisslotshouldbeusedforthenew\nrecord.Anewslotisaddedtotheslotdirectory onlyifallexisting slotspoint\ntorecords.Ifinsertsaremuchmorecommon thandeletes(asistypically the\ncase),thenumber ofentriesintheslotdirectory islikelytobeverycloseto\ntheactualnumber ofrecordsonthepage.\nThisorganization isalsousefulforfixed-length records ifweneedtomove\nthemaroundfrequently; forexample, whenwewanttomaintain theminsome\nsortedorder.Indeed,whenallrecordsarethesamelength,insteadofstoring\nthiscommon lengthinformation intheslotforeachrecord,wecanstoreitonce\ninthesystemcatalog.\nInsomespecialsituations (e.g.,theinternal pagesofaB+tree,whichwe\ndiscussinChapter 10),welIlaynotcareaboutchanging theridofarecord.In\nthiscase,theslotdirectory canbecompacted aftereveryrecorddeletion; this\nstrategy guarantees thatthenumberofentriesintheslotdirectory isthesame\nasthenumber ofrecordsonthepage.Ifwedonotcareaboutmodifying rids,\nwecanalsosortrecordsonapageinanefficient mannerbysimplymovingslot\nentriesratherthanactualrecords, whicharelikelytobemuchlargerthanslot\nentries.\nAsimplevariation ontheslottedorganization istomaintain onlyrecordoffsets\nintheslots.forvariable-length records, thelengthisthenstoredwiththe\nrecord(say,inthefirstbytes).Thisvariation makestheslotdirectory structure\nforpageswithfixed-length recordsthesalIlea..sforpageswith variab1e~length\nrecords.\n9.7RECORD FORMATS\nInthissection,wediscusshowtoorganize fieldswithinarecord.Whilechoosing\nawaytoorganize thefieldsofarecord,wemusttakeintoaccount whether the\nfieldsoftherecordareoffixedorvariable lengthandconsider thecostofvarious\noperations ontherecord,including retrieval andmodification offields.\nBeforediscussing recordfonnats, wenotethatinaddition tostoringindividual\nrecords, inforlI1(~tion conllnon toallrecordsofagivenrecordtype(sucha.'3the\nnumber offieldsandfieldtypes)isstoredinthesystem catalog, whichcan\nbethought ofasadescription ofthecontents ofadatabase, maintained bythe\nDBMS(Section 12.1).Thisavoidsrepeated storageofthesameinformation\nwitheachrecordofagiventype.", "365": "StoTingData:DisksandFiles :331,\nRecordFormats inCommercial Aystems: InIBMDB2,fixed-length\nfieldsareatfixedoffsetsfromthebeginning oftherecord.Variable-length\nfieldshaveofIsetandlengthinthefixedoffsetpartoftherecord,and\nthefieldsthemselves followthefixed-length partoftherecord.Informix,\nMicrosoft SQLServer,andSybaseASEusethesameorganization with\nminorvariations. InOracle8,recordsarestructured asifallfieldsare\npotentially ofvariable length;arecordisasequence oflength-data pairs,\nwithaspeciallengthvalueusedtodenoteanullvalue.\n9.7.1Fixed-Length Records\nInafixed-length record,eachfieldh&<;afixedlength(thatis,thevalueinthis\nfieldisofthesamelengthinallrecords), andthenumberoffieldsisalsofixed.\nThefieldsofsucharecordcanbestoredconsecutively, and,giventheaddressof\ntherecord,theaddressofaparticular fieldcanbecalculated usinginformation\naboutthelengthsofpreceding fields,whichisavailable inthesystemcatalog.\nThisrecordorganization isillustrated inFigure9.8.\nBaseaddress(B) Address=B+L1+L2Fi=Fieldi\nLi=Lengthof\nfieldi\nFigure 9.8Organi'lation ofRecords withFixed-Length Fields\n9.7.2Variable-Length Records\nIntherelational model,everyrecordinarelation contains thesamenumber\noffields.Ifthenumber offieldsisfixed,arecordisofvariable lengthonly\nbecause someofitsfieldsareofvariable length.\nOnepossible orga,nizatioll istostorefieldsconsecutively, separated bydelim\u00ad\niters(whicharespecialcharacters thatdonotappearinthedataitself).This\norganization requires ascanoftherecordtolocateadesiredfield.\nAnalternative istoreservesomespaceatthebeginning ofarecordforuse1:LS\nanarrayofintegeroffsets-the ithintegerinthisarrayisthestarting address\noftheithfieldvaluerelativetothestartoftherecord.Notethatwealsostore\nanoffsettotheendoftherecord;thisoffsetisneededtorecognize wherethe\nlastheldends.Bothalternatives areillustrated inFigure9.9.", "366": "332 CHAPTERr9\nFieldsdelimitedbyspecialsymbol$\nArrayoffieldoffsets\nFigure9.9Alternative RecordOrganizations forVariable-Length Fields\nThesecondapproach istypically superior. Fortheoverhead oftheoffsetarray,\nwegetdirectaccesstoanyfield.Wealsogetacleanwaytodealwithnull\nvalues.Amdlvalueisaspecialvalueusedtodenotethatthevalueforafield\nisunavailable orinapplicable. Ifafieldcontains anullvalue,thepointertothe\nendofthefieldissettobethesameasthepointertothebeginning ofthefield.\nThatis,nospaceisusedforrepresenting thenullvalue,andacomparison of\nthepointers tothebeginning andtheendofthefieldisusedtodetermine that\nthevalueinthefieldisnull.\nVariable~length recordformats canobviously beusedtostorefixed-length\nrecordsaswell;sometimes, theextraoverhead isjustified bytheaddedflexibil\u00ad\nity,because issuessuchassupporting n'ullvaluesandaddingfieldstoarecorcl\ntypearisewithfixed-length recordsaswell.\nI-lavingvariable-length fieldsinarecordcanraisesomesubtleissues,especially\nwhenarecordismodified.\nIIIModifying afieldmaycauseittogrow,whiehrequires ustoshiftallsubse\u00ad\nquentfieldstomakespaceforthemodification inallthreerecordformats\njustpresentcel.\nIIIAmodified recordmaynolongerfitintothespaceremaining onitspage.\nIfso,itmayhavetobemovedtoanother page.Ifriels,whichareused\nto'point'toarecord,includethepagenumber (seeSection9.6),moving\narecordto'another pagecausesaproblem. Wemayhavetoleavea'for\u00ad\nwarding address' onthispageidentifying thene\"vlocation oftherecord.\nAndtoensurethatspaceisahvaysavailable forthisforwarding address,\nwewouldhavetoallocate someminimum spaceforeachrecord,regardless\nofitslength.", "367": "Storing Data:DisksandFiles\nLargeRecords inRealSystems: InSybc1seASE,arecordcanbeat\nmost1962bytes.Thislimitissetbythe2KBlogpagesize,sincerecords\narenotallowedtobelargerthanapage.Theexceptions tothisrule.an~\nBLOBsandCLOBs, whichconsistof1:1setofbidirectionally linkedpages.\nIBlvlDB2andMicrosoft SqLServeralsodonotallowrecordstospan\npages,although largeobjectsareallowedtospanpagesandarehandled\nseparately fromotherdatatypes.InDB2,recordsizeislimitedonlyby\nthepagesize;inSQLServer,arecordcanbeatmost8KB,excluding\nLOBs.Informix andOracle8allowrecordstospanpages.Informix allows\nrecordstobeatmost32KB,whileOraclehasnomaximum recordsize;\nlargerecordsareorganized asasinglydirected list.\nIIIArecordmaygrowsolargethatitnolongerfitsonanyonepage.Wehave\ntodealwiththiscondition bybreaking arecordintosmallerrecords. The\nsmallerrecordscouldbechainedtogether-part ofeachsmallerrecordis\napointertothenextrecordinthechain---to enableretrieval oftheentire\noriginalrecord.\n9.8REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIIExplain thetermmemory hierarchy. Whatarethedifferences between\nprimary, secondary, andtertiary storage? Giveexamples ofeach.Which\noftheseisvolatile, andwhicharepCf'sistenf? Whyispersistent storage\nmoreimportant foraDBMSthan,say,aprogram thatgenerates prime\nnumbers? (Section 9.1)\nIIIWhyaredisksusedsowidelyinaDBMS? Whataretheiradvantages\novermainmemory andtapes? ':Vhataretheirrelative disadvantages?\n(Section 9.1.1)\nIIIWhatisadiskblockorpage?Howareblocksarranged inadisk?How\ndoesthisaffectthetimetoaccessablock?Discuss seektiTne,rotational\ndday,andtransfer time.(Section 9.1.1)\nIIIExplain howcarefulplacement ofpagesonthedisktoexploitthegeometry\nofadiskcanminimize theseektimeandrotational delaywhenpagesare\nreadsequentially. (Section 9.1.2)\nIIIExplain whataRAIDsystenlisandhowitimproves performance and\nreliability. Discuss str-ipinganditsimpactonperformance andnxlundancy\nanditsirnpactonreliability. vVhatarethetrade-offs between reliability", "368": "334 CHAPTER.\u00a3)\nandperformance inthedifferent RAIDorganizations calledRAIDlevels'?\n(Section 9.2)\n..WnatistheroleoftheDBMS d'iskspacemanager'? vVhydodatabase\nsystems notrelyontheoperating systeminstead? (Section 9.3)\n..WhydoeseverypagerequestinaDBMSgothrough thebuffermanager?\nWhatisthebufferpoor?'\\Thatisthedifference between aframeinabuffer\npool,apageinafile,andablockonadisk?(Section 9.4)\n..Whatinformation doesthebuffermanager maintain foreachpageinthe\nbufferpool?\u00b7Whatinformation ismaintained foreachframe?Whatis\nthesignificance ofp'in_count andthed'irtyflagforapage?Underwhat\nconditions canapageinthepoolbereplaced? Underwhatconditions\nmustareplaced pagebewrittenbacktodisk?(Section 9.4)\n..Whydoesthebuffermanager havetoreplacepagesinthebufferpool?\nHowisapagechosenforreplacement? vVhatissequent'ial flood'ing, and\nwhatreplacement policycausesit?(Section 9.4.1)\n..ADBMSbuffermanager canoftenpredicttheaccesspatternfordiskpages.\nHowdoesitutilizethisabilitytominimize I/Ocosts?Discuss prefetch\u00ad\n'ing.\\iVhatisforc'ing,andwhyisitrequired tosupport thewrite-ahead\nlogprotocol inaDBMS? Inlightofthesepoints,explainwhydatabase\nsystems reimplement manyservicesprovided byoperating systems. (Sec\u00ad\ntion9.4.2)\n..Whyistheabstraction ofafileofrecordsimportant? Howisthesoftware\ninaDBMSlayeredtotakeadvantage ofthis?(Section 9.5)\n..Whatisaheapfile?Howarepagesorganized inaheapfile?Discusslist\nversusdirectory organizations. (Section 9.5.1)\nIIIDescribe howrecordsarearranged onapage.\\i\\Thatisaslot,andhow\nareslotsusedtoidentifyrecords? Howdoslotsena.bleustomoverecords\nonapagewithont altering therecord's identifier? \u00b7Whatarcthediffer\u00ad\nencesinpageorganizations forfixed-length andvariable-length records?\n(Section 9.6)\niii\u00b7Whatarethedifferences inhowfieldsarearranged withinfixed-length and\nvariable-length records? Forvariable-length records, explainhowthearray\nofoffsetsorganization provides directaccesstoaspecificfieldandsupports\nnullvalues.(Section 9.7)", "369": "StoringData:DisksandFiles\nEXERCISES\nExercise 9.1\\-Vhatisthemostimportant difference behveen adiskandatape?\nExercise 9.2Explain thetermsseektime,mtat'ional delay,andtransfer t'ime.33:)\nExercise 9.3Bothdisksandmainmemory support directaccesstoanydesiredlocation\n(page).Onaverage, mainmemory accesses arefaster,ofcourse.\\\\Thatistheotherimportant\ndifference (fromtheperspective ofthetimerequired toaccessadesiredpage)?\nExercise 9.4Ifyouhavealargefilethatisfrequently scanned sequentially, explainhowyou\nwouldstorethepagesinthefileonadisk.\nExercise 9.5Consider adiskwithasectorsizeof512bytes,2000trackspersurface, 50\nsectorspertrack,fivedouble-sided platters, andaverage seektimeof10msec.\n1.Whatisthecapacity ofatrackinbytes?Whatisthecapacity ofeachsurface? Whatis\nthecapacity ofthedisk?\n2.Howmanycylinders doesthediskhave?\n:~.Giveexamples ofvalidblocksizes.Is256bytesavalidblocksize?2048?51,200?\n4.Ifthediskplatters rotateat5400rpm(revolutions perminute), whatisthemaximum\nrotational delay?\n5.Ifonetrackofdatacanbetransferred perrevolution, whatisthetransfer rate?\nExercise 9.6Consider againthediskspecifications fromExercise 9.5andsuppose thata\nblocksizeof1024bytesischosen.Suppose thatafilecontaining 100,000 recordsof100bytes\neachistobestoredonsuchadiskandthatnorecordisallowedtospantwoblocks.\nLHowmanyrecordsfitontoablock?\n2.Howmanyblocksarerequired tostoretheentirefile?Ifthefileisarranged sequentially\nondisk,howlllallYsurfaces areneeded?\n:3.Howmanyrecordsof100byteseachcanbestoredusingthisdisk?\n4.Ifpagesarestoredsequentially ondisk,withpage1onblock1oftrack1,whatpageis\nstoredonblock1oftrack1onthenextdisksurface? Howwouldyouranswerchangeif\nthediskwerecapable ofreadingandwritingfromallheadsinparallel?\n5.VVhattitneisrequired toreadafilecontaining 100,000 recordsof100byteseachsequen\u00ad\ntially?Again,how\\vouldyouranswerchangeifthediskwerecapable ofreading/writing\nfromallheadsinparallel (andthedatawasarranged optimally)?\n6.\\\\Thatisthetimerequired toreadafilecontaining 100,000 recordsof100byteseachina\nrandom order?Toreadarecord,theblockcontaining therecOl'dhastobefetchedfrom\ndisk.Assumethateachblockrequestincurstheaverage seektimeandrotational delay.\nExercise 9.7Explain what.thebuffermanager JIms!dotoprocessareadrequestforapage.\n\\Vhathappens iftherequested pageisinthepoolbutnotpinned?\nExercise 9.8Whendoesabuffermanager writeapagetodisk?\nExercise 9.9What.doesitmeantosaythatapageisp'innedinthebufferpool?Whois\nresponsible forpinning pages?\\Vhoisresponsible forunpinning pages?", "370": "CHAPTERJ9\nExercise 9.10'WhenapageinthebulTerpoolismodified, howdoestheDBMSensurethat\nthischangeispropagated todisk?(Explain theroleofthebuffermanager aswellasthe\nmodifier ofthepage.)\nExercise 9.11\\Vhathappens ifapageisrequested whenallpagesinthebufferpoolare\ndirty?\nExercise 9.12\\Vhatissequential flooding ofthebufferpool?\nExercise 9.13Nameanimportant capability ofaDBIVISbuffermanager thatisnotsup\u00ad\nportedbyatypicaloperating system's buffermanager.\nExercise 9.14Explain thetermprefetching. \\Vhyisitimportant?\nExercise 9.15Modern disksoftenhavetheirownmainmemory caches, typically about\n1MB,andusethistoprefetch pages.Therationale forthistechnique istheempirical\nobservation that,ifadiskpageisrequested bysome(notnecessarily database!) application,\n80%ofthetimethenextpageisrequested aswell.Sothediskgambles byreading ahead.\n1.Giveanontechnical reasonthataDBMSmaynotwanttorelyonprefetching controlled\nbythedisk.\n2.Explain theimpactonthedisk'scacheofseveralqueriesrunning concurrently, each\nscanning adifferent file.\n3.Isthisproblem addressed bytheDBMSbuffermanager prefetching pages?Explain.\n4.Modern diskssupport segmented caches,withaboutfourtosixsegments, eachofwhich\nisusedtocachepagesfromadifferent file.Doesthistechnique help,withrespectto\nthepreceding problem? Giventhistechnique, doesitmatterwhether theDBMSbuffer\nmanager alsodoesprefetching?\nExercise 9.16Describe twopossible recordformats. Whatarethetrade-offs between them?\nExercise 9.17Describe twopossible pageformats. Whatarethetrade-offs between them?\nExercise 9.18Consider thepageformatforvariable-length recordsthatusesaslotdirectory.\n1.Oneapproach tomanaging theslotdirectory istouseamaximum size(i.e.,amaximum\nnumber ofslots)andallocate thedirectory arraywhenthepageiscreated. Discussthe\nprosandconsofthisapproach withrespecttotheapproach discussed inthetext.\n2.Suggest amodification tothispageformatthatwouldallowustosortrecords(according\ntothevalueinsomefield)without movingrecordsandwithout changing therecordids.\nExercise 9.19Consider thetwointernal organizations forheapfiles(usinglistsofpagesand\nadirectory ofpages)discussed inthetext.\n1.Describe thembrieflyandexplainthetrade-offs. \\Vhichorganization wouldyouchoose\nifrecordsarevariable inlength?\n2.Canyousuggest asinglepageformattoimplement bothinternal fileorganizations'?\nExercise 9.20Consider alist-based organizat.ion ofthepagesinaheapfileinwhichtwo\nlistsaremaintained: alistofallpagesinthefileandalistofallpageswithfreespace.In\ncontrast, thelist-based organizatioll discussed inthetextmaintains alistoffullpagesanda\nlistofpageswithfreespace.", "371": "StoringData:DisksandFiles 3&7\n1.VVhatarethetrade-offs, ifany'?Isoneofthemclearlysuperior?\n2.Foreachoftheseorganizations, describe asuitable pageformat.\nExercise 9.21Modern diskdrivesstoremoresectorsontheoutertracksthantheinner\ntracks.Sincetherotation speedisconstant, thesequential datatransfer rateisalsohigheron\ntheoutertracks.Theseektimeandrotational delayareunchanged. Giventhisinformation,\nexplaingoodstrategies forplacingfileswiththefollowing kindsofaccesspatterns:\n1.rrequent, random accesses toasmallfile(e.g.,catalogrelations).\n2.Sequential scansofalargefile(e.g.,selection fromarelation withnoindex).\n3.Random accesses toalargefileviaanindex(e.g.,selection fromarelation viatheindex).\n4.Sequential scansofasmallfile.\nExercise 9.22Whydoframesinthebufferpoolhaveapincountinsteadofapinflag?\nPROJECT-BASED EXERCISES\nExercise 9.23Studythepublicinterfaces forthediskspacemanager, thebuffermanager,\nandtheheapfilelayerinMinibase.\n1.Areheapfileswithvariable-length recordssupported?\n2.WhatpageformatisusedinMinibase heapfiles?\n3.Whathappens ifyouinsertarecordwhoselengthisgreaterthanthepagesize?\n4.Howisfreespacehandled inMinibase?\nBIBLIOGRAPHIC NOTES\nSalzberg [648]andWiederhold [776]discusssecondary storagedevicesandfileorganizations\nindetail.\nRAIDwa.soriginally proposed byPatterson, Gibson, andKatz[587].ThearticlebyChen\netal.provides anexcellent surveyofRAID[171].BooksaboutRAIDinclude Gibson's\ndissertation [.317]andthepublications fromtheRAIDAdvisory Board[605].\nThedesignandimplementation ofstoragemanagers isdiscussed in[65,1:33,219,477,718].\nWiththeexception of[219],thesesystems emphasize el:tensibili.ty, anelthepaperscontain\nmuchofinterest fromthatstanelpoint aswell.Otherpapersthatcoverstoragemanagement\nissuesinthecontext ofsignificant implemented prototype systems are[480]and[588].The\nDalistorage Inanager, whichisoptimized formainmemory databases, isdescribed in[406].\nThreetechniques forilnplementing longfieldsarecompared in[96].Theimpactofprocessor\ncachemisses 011DBMSperformallce ha.'ireceived attention lately,ascomplex querieshave\nbecomeincreasingly CPU-intensive. [:33]studiesthisissue,andshowsthatperformance canbe\nsignificantly improved byusinganewarrangement ofrecordswithinapage,inwhichrecords\nonapagearestoredinacolumn~oriented format(allfieldvaluesforthefirstattribute followed\nbyvaluesforthesecondattribute, etc.).\nStonebraker discusses operating systems issuesinthecontext ofdatabases in[715].Several\nbuffermanagement policies fordataba.se systems arecompared in[181].Buffermanagement\nisalsostudied in[119,169,2G1,2:35].", "372": "10\nTREE-STRUCTURED\nINDEXING\n...Whatistheintuition behindtree-structured indexes? Whyarethey\ngoodforrangeselections?\n...HowdoesanISAMindexhandlesearch,insert,anddelete?\ni\"-HowdoesaB+treeindexhandlesearch,insert,anddelete?\n...Whatistheimpactofduplicate keyvaluesonindeximplementation'?\n...Whatiskeycompression, andwhyisitimportant?\n...Whatisbulk-loading, andwhyisitimportant?\n...Whathappens torecordidentifiers whendynamic indexes areup\u00ad\ndated?Howdoesthisaffectclustered indexes?\nIttKeyconcepts: ISAM,staticindexes, overflow pages,lockingissues;\nB+trees,dynamic indexes, balance, sequence sets,nodeformat;B+\ntreeinsertoperation, nodesplits,deleteoperation, mergeversusredis\u00ad\ntribution, minimum occupancy; duplicates, overflow pages,including\nridsinsearchkeys;keycompression; bulk-loading; effectsofsplitson\nridsinclustered indexes.\nOnethatwouldhavethefruitmustclimbthetree.\nI'homas Fuller\nVVenowconsider twoindexdatastructures, calledISAMandB+trees,b<:h':led\nontreeorganizations. Thesestructures provide efficient support forrange\nsearches, including sortedfilescansasaspecial c<h'3e.Unlikesortedfiles,these", "373": "Tree-StTuctuTed Indel:ing\nindexstructures support efficient insertion anddeletion. Theyalsoprovide\nsupport forequality selections, although theyarenot&'3efficient inthiscaseas\nhash-b::l.'3ed indexes, whicharediscussed inChapter 11.\nAnISAJVI1treeisastaticindexstructure thatiseffective whenthefileis\nnotfrequently updated, butitisunsuitable forfilesthatgrowandshrinka\nlot.\\VediscussISAMinSection 10.2.TheB+treeisadynamic structure\nthatadjuststochanges inthefilegracefully. Itisthemostwidelyusedindex\nstructure because itadjustswelltochanges andsupports bothequality and\nrangequeries. Weintroduce B+treesinSection 10.3.WecoverB+treesin\ndetailintheremaining sections. Section10.3.1describes theformatofatree\nnode.SectionlOAconsiders howtosearchforrecordsbyusingaB+tree\nindex.Section10.5presents thealgorithm forinserting recordsintoaB+tree,\nandSection 10.6presents thedeletion algorithm. Section10.7discusses how\nduplicates arehandled. \\Veconclude withadiscussion ofsomepractical issues\nconcerning B+treesinSection10.8.\nNotation: IntheISAMandB+treestructures, leafpagescontaindataentries,\naccording totheterminology introduced inChapter 8.Forconvenience, we\ndenoteadataentrywithsearchkeyvaluekask*.Non-leaf pagesconta.in\ninde:centriesoftheform(searchkey'Value.,pageid)andareusedtodirectthe\nsea.rchforadesireddataentry(whichisstoredinsomeleaf).Weoftensimply\nuseentr'Ywherethecontextmakesthenatureoftheentry(indexordata)clear.\n10.1INTUITION FORTREEINDEXES\nConsider afileofStudents recorclssortedbygpa.Toanswerarangeselection\nsuchas\"Findallstudents withagpahigherthan3.0,\"wemustidentify the\nfirstsuchstudent bydoingabinarysearchofthefileandthenscanthefile\nfromthatpointon.Ifthefileislarge,theinitialbinarysearchcanbequite\nexpensive, sincecostisproportional tothenumber ofpagesfetched; canwe\nimprove uponthismethod'?\nOIleideaistocreateasecondfilewithOIlerecordperpageintheoriginal\n(data)file,oftheform(firstkeyonpage,pointertopage),againsorteclbythe\nkeyattribute (whichisgpainourexample). Theformatofapageinthesecond\ninde:cfileisillustrated inFigure10.1.\nWerefertopairsoftheform(key,pointer) ~l.Sindc:J:entriesorjustentries\\'\\'hen\nthecontextisdear.Notethateachindexpagecontains OIlepointermorethan\nIISAMstandsforIndexed Sequential AccessMethod.", "374": "340\nindexentryr\u00b7..\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\nFigUl'e 10.1Format ofanIndexPageCHAPTER 10,\nthenumberofkeys---each keyservesasaseparator- forthecontents ofthepages\npointedtobythepointers toitsleftandright.\nThesimpleindexfiledatastructure isillustrated inFigure10.2.\nIPafJe1\u00b711Page2.\u00b7IIPage31Indexfile\nDatafile\nFigure10.2One-Level IndexStructure\nWecandoabinarysearchoftheindexfiletoidentifythepagecontaining the\nfirstkey(gpo.)valuethatsatisfiestherangeselection (inourexample, thefirst\nstudentwithgpo.over3.0)andfollowthepointertothepagecontaining thefirst\ndata.recordwiththatkeyvalue.Wecanthenscanthedatafilesequentially\nfromthatpointontoretrieveotherqualifying records. Thisexample usesthe\nindextofindthefirstdatapagecontaining aStudents recordwithgpo.greater\nthan3.0,andthedatafileisscanned fromthatpointontoretrieveothersuch\nStudents records.\nBecause thesizeofanentryintheindexfile(keyvalueandpageicl)islikely\ntobemuchsmallerthanthesizeofapage,andonlyonesuchentryexistsper\npageofthedatafile,theindexfileislikelytobemuchsmallerthanthedata\nfile;therefore, abinarysearchoftheindexfileismuchfasterthanabinary\nsearchofthedatafile.However, abinarysearchoftheindexfilecouldstill\nbefairlyexpensive, andtheindexfileistypically stilllargeenoughtomake\ninsertsand clelett~sexpensive.\nThepotential largesizeoftheindexfilemotivates thetreeindexing idea:Why\nnotapplytheprevious stepofbuilding anauxiliar:v structure allthecollection\nofinde:l:recordsandsoonrecursively untilthesmallest auxiliary structure fits\nOIlonepage?Thisrepeated construction ofaone-level indexleadstoatree\nstructure withseverallevelsofnon-leaf pages.", "375": "Trce-Stn.lduTed Inde:ring 341\nJ\nAsweobserved inSection8.3.2,thepoweroftheapproach comesfromthefact\nthatlocating arecord(givenasearchkeyvalue)involves atraversal fromthe\nroottoaleaf,withoneI/O(atmost;SCHnepages,e.g.)theroot,arelikelytobe\ninthebufferpool)perlevel.Giventhetypicalfan-outvalue(over100),trees\nrarelyhavemorethan3-4levels.\nThenextissuetoconsider ishowthetreestructure canhandleinsertsand\ndeletesofdataentries.Twodistinctapproaches havebeenused,leadingtothe\nISAMandB+treedatastructures, whichwediscussinsubsequent sections.\n10.2INDEXED SEQUENTIAL ACCESS METHOD (ISAM)\nTheISAMdatastructure isillustrated inFigure10.3.Thedataentriesofthe\nISAMindexareintheleafpagesofthetreeandadditional overflow pages\nchained tosomeleafpage.Database systems carefully organize thelayoutof\npagessothatpageboundaries correspond closelytothephysical characteristics\noftheunderlying storagedevice. TheISAMstructure iscompletely static\n(exceptfortheoverflow pages,ofwhichitishoped,therewillbefew)and\nfacilitates suchlow-level optimizations.\nNon-leaf\npages\nLeaf\npages\nOverjlowP{~c::::J1~ ~\nPrimary pages\nFigure10.3ISAMIndexStructure\nEachtreenodeisadiskpage,andallthedataresidesintheleafpages.This\ncorresponds toanindexthatusesAlternative (1)fordataentries,intermsof\nthealternatives described inChapter 8;wecancreateanindexwithAlternative\n(2)bystoringt.hedatarecordsinaseparate fileandstoring(key,rid)pairsin\ntheleafpagesoftheISAMindex.Whenthefileiscreated, allleafpagesare\nallocated sequentially andsortedonthesearchkeyvalue.(IfAlternative (2)\nor(3)isused,thedatarecordsarecreatedandsortedbeforeallocating theleaf\npagesoftheISAMindex.)Thenon-leaf levelpagesarethenallocated. Ifthere\nareseveralinsertstothefilesubsequently, sothatmoreentriesareinserted into\naleafthanwillfitontoasinglepage,additional pagesareneededbecause the", "376": "342 CHAPTER lO\nindexstructure isstatic.Theseadditional pagesareallocated fromanoverflow\narea.Theallocation ofpagesisillustrated inFigure10.4.\nDataPages\nIndexPages\nOverflow Pages\nFigure10.4PageAllocation inISAM\nThebasicoperations ofinsertion, deletion, andsearchareallquitestraightfor\u00ad\nward.J;\"'oranequality selection search,westartattherootnodeanddetermine\nwhichsubtreetosearchbycomparing thevalueinthesearchfieldofthegiven\nrecordwiththekeyvaluesinthenode.(Thesearchalgorithm isidentical to\nthatforaB+tree;wepresentthisalgorithm inmoredetaillater.)Forarange\nquery,thestarting pointinthedata(orleaf)levelisdetermined similarly, and\ndatapagesarethenretrieved sequentially. Forinsertsanddeletes,theappro\u00ad\npriatepageisdetermined asforasearch,andtherecordisinserted ordeleted\nwithoverflow pagesaddedifnecessary.\nThefollowing example illustrates theISAMindexstructure. Consider thetree\nshowninFigure10.5.Allsearches beginattheroot.Forexample, tolocatea\nrecordwiththekeyvalue27,westartattherootandfollowtheleftpointer,\nsince27<40.Wethenfollowthemiddlepointer, since20<=27<33.Fora\nrangesea,rch,wefindthefirstqualifying dataentryasforanequality selection\nandthenretrieveprimary leafpagessequentially (alsoretrieving overflow pages\nasneededbyfollowing pointers fromtheprimary pages). Theprimary leaf\npagesarecL..ssumed tobeallocated sequentially thisa..ssumption isreasonable\nbecause thenumber ofsuchpagesisknownwhenthetreeiscreatedanddoes\nnotchangesubsequently underinsertsanddeletes-and sono'nextleafpage'\npointers areneeded.\nvVeassumethateachleafpagecancontain twoentries.Ifwenowinserta\nrecordwithkeyvalue23,theentry23*belongsintheseconddatapage,which\nalreadycontains 20*and27*andhasnomorespace.Wedealwiththissituation\nbyaddinganoverflow pageandputting 23*in.theoverflow page.Chainsof\noverflow pagescaneasilydevelop. F'orinstance, inserting 48*,41*,and42*\nleadstoanoverflow chainoftwopages.ThetreeofFigure10.5withallthese\ninsertions isshownillFigure10.6.", "377": "Tree~StrLLctuTed Inde:ri:ng 343\n110*115*IEElB3140*146*1151*l55*1163*197*I\nFigure10.5Sa.mpleISAMTree\nNon-leaf\npages\nPrimary\nleaf\npages\nOverflow\npages\nFigure10.6ISAMTreea.fterInserts", "378": "344 CHAPTER Ii)\nThedeletion ofanentryhishandled bysimplyremoving theentry.Ifthis\nentryisonanoverflow pageandtheoverflow pagebecomes empty,thepagecan\nberemoved.Iftheentryisonaprimary pageanddeletion makestheprimary\npageempty,thesimplest approach istosimplyleavetheemptyprimary page\n~sitis;itservesasaplaceholder forfutureinsertions (andpossibly lloll-empty\noverflow pages,because wedonotmoverecordsfromtheoverflow pagestothe\nprimary pagewhendeletions ontheprimary pagecreatespace). Thus,the\nnumber ofprimary leafpagesisfixedatfilecreation time.\n10.2.1Overflow Pages,Locking Considerations\nNotethat,oncetheISAMfileiscreated, insertsanddeletesaffectonlythe\ncontents ofleafpages.Aconsequence ofthisdesignisthatlongoverflow chains\ncoulddevelopifanumber ofinsertsaremadetothesameleaf.Thesechains\ncansignificantly affectthetimetoretrieve arecordbecausetheoverflow chain\nhastobesearched aswellwhenthesearchgetstothisleaf.(Although datain\ntheoverflow chaincanbekeptsorted,itusuallyisnot,tomakeinsertsfast.)To\nalleviate thisproblem, thetreeisinitially createdsothatabout20percentof\neachpageisfree.However, oncethefreespaceisfilledinwithinserted records,\nunlessspaceisfreedagainthrough deletes, overflow chainscanbeeliminated\nonlybyacomplete reorganization ofthefile.\nThefactthatonlyleafpagesaremodified alsohasanimportant advantage with\nrespecttoconcurrent access.Whenapageisaccessed, itistypically 'locked'\nbytherequestor toensurethatitisnotconcurrently modified byotherusers\nofthepage.Tomodifyapage,itmustbelockedin'exclusive' mode,whichis\npermitted onlywhennooneelseholdsalockonthepage.Locking canlead\ntoqueuesofusers(transactions, tobemoreprecise) waitingtogetaccesstoa\npage.Queuescanbeasignificant performance bottleneck, especially forheavily\naccessed pagesneartherootofanindexstructure. IntheISAMstructure,\nsinceweknowthatindex-level pagesarenevermodified, wecansafelyomit\nthelockingstep.Notlockingindex-level pagesisanimportant advantage of\nISAMoveradynamic structure likeaB+tree.Ifthedatadistribution and\nsizearerelatively static,whichmeansoverflow chainsarerare,ISAMmightbe\npreferable toB+treesduetothisadvantage.\n10.3B+TREES: ADYNAMIC INDEXSTRUCTURE\nAstaticstructure suchastheISAI\\ilindexsuffersfromtheproblem thatlong\noverflow chainscandevelop a\"sthefilegrows,leadingtopoorperformance. This\nproblem motivated thedevelopment ofmoreflexible, dynamic structures that\nadjustgracefully toinsertsanddeletes.TheB+treesearchstructure, which\niswidelyllsed,isabalanced treeinwhichtheinternal nodesdirectthesearch", "379": "Tree~StT7lChtTed IndeTing 345\nandtheleafnodescontainthedataentries.Sincethetreestructure growsand\nshrinksdynamically, itisnotfeasibletoallocatetheleafpagessequentially asin\nISAM,wherethesetofprimary leafpageswasstatic.Toretrieveallleafpages\nefficiently, wehavetolinkthemusingpagepointers. Byorganizing themintoa\ndoublylinkedlist,wecaneasilytraverse thesequence ofleafpages(sometimes\ncalledthesequence set)ineitherdirection. Thisstructure isillustrated in\nFigure10.7.2\nIndexentries\n(Todirectsearch)\nIndex\nfile\nDataentries\n(\"Sequence set\")\nFigure10.7Structure ofaB+'n'ee\nThefollowing aresomeofthemaincharacteristics ofaB+tree:\n\u2022Operations (insert,delete)onthetreekeepitbalanced.\n\u2022 Aminimum occupancy of50percent isguaranteed foreachnodeexcept\ntherootifthedeletion algorithm discussed inSection10.6isimplemented.\nHowever, deletion isoftenimplemented bysimplylocating thedataentry\nandremoving it,without adjusting thetree&'3neededtoguarantee the50\npercentoccupancy, because filestypically growratherthanshrink.\nl1liSearching forarecordrequiresjustatraversal fromtheroottotheappro\u00ad\npriateleaf.Vierefertothelengthofapathfromtheroottoaleafany\nleaf,because thetreeisbalanced astheheightofthetree.Forexample,\natreewithonlyaleaflevelandasingleindexlevel,suchasthetreeshown\ninFigure10.9,hasheight1,andatreethath&'3onlytherootnodehas\nheightO.Because ofhighfan-out, theheightofaB+treeisrarelymore\nthan3or4.\n\\VewillstudyB+treesinwhicheverynodecontains Tnentries,whered:::;\nnJ,:::;2d.Thevaluedisaparameter oftheB+tree,calledtheorderofthe\n.._-\n2Ifthetreeiscreated byIYll.lk..looding (seeSection 10.8.2)anexisting dataset,thesequence set.\ncanbenHldephysically sequential, butthisphysical ordering isgradually destroyed asnewdatais\naddedanddelet.ed overtime.", "380": "346 CHAPTER \\0\ntree,andisameasure ofthecapacity ofatreenode.Therootnodeisthe\nonlyexception tothisrequirement onthenumber ofentries;fortheroot,itis\nsimplyrequired that1::;m::;2d.\nIfafileofrecordsisupdated frequently andsortedaccessisimportant, main\u00ad\ntainingaB+treeindexwithdatarecordsstoredasdataentriesisalmost\nalwayssuperior tomaintaining asortedfile.Forthespaceoverhead ofstoring\ntheindexentries,weobtainalltheadvantages ofasortedfileplusefficient in\u00ad\nsertionanddeletion algorithms. B+treestypically maintain 67percentspace\noccupancy. B+treesareusuallyalsopreferable toISAMindexing because in\u00ad\nsertsarehandled gracefully without overflow chains. However, ifthedataset\nsizeanddistribution remainfairlystatic,overflow chainsmaynotbeamajor\nproblem. Inthiscase,twofactorsfavorISAM:theleafpagesareallocated in\nsequence (making scansoveralargerangemoreefficientthaninaB+tree,in\nwhichpagesarelikelytogetoutofsequence ondiskovertime,eveniftheywere\ninsequence afterbulk-loading), andthelockingoverhead ofISAM islowerthan\nthatforB+trees.Asageneralrule,however, B+treesarelikelytoperform\nbetterthanISAM.\n10.3.1FormatofaNode\nTheformatofanodeisthesameasforISAMandisshowninFigure10.1.\nNon-leaf nodeswithm'indexentr'iescontainm+1pointers tochildren. Pointer\nPipointstoasubtreeinwhichallkeyva.luesKaresuchthatKi::;K<Ki+1.\nAsspecialca\"Jes,PopointstoatreeinwhichallkeyvaluesarelessthanKl'\nandPmpointstoatreeinwhichallkeyvaluesaregreaterthanorequalto\nKm.Forleafnodes,entriesarcdenoted a\"Jk*,asusual.JustasinISAM,leaf\nnodes(andonlyleafnodes!) contain dataentries. Inthecommon ca.'sethat\nAlternative (2)or(:3)isused,leafentriesare(K,I(K))pairs,justlikenon-leaf\nentries. Regardless ofthealternative chosenforleafentries,theleafpagesare\nchained together inadoublylinkedlist.Thus,theleavesformasequence,\nwhichcanbeusedtoanswerrangequeriesefficiently.\nThereadershouldcarefully consider howsuchanodeorganization canbe\nachieved usingtherecordformats presented inSection9.7;afterall,eachkey\npointerpaircanbethought ofasarecord.Ifthefieldbeingindexed isof\nfixedlength,theseindexentrieswillbeoffixedlength;otherwise, wehave\nvariable-length records. IneithercasetheB+treecanitselfbeviewedasafile\nofrecords.Iftheleafpagesdonotcontaintheactualdatarecords, thenthe\n13+treeisindeedafileofrecordsthatisdistinct fromthefilethatcontains the\ndata.Iftheleafpagescontaindata.records, thenafilecontains the13+treea...s\nwellasthedata.", "381": "TTee-St'r~uct'uTed Jude.ring\n10.4SEARCH347\nThealgorithm forsean:hfindstheleafnodeinwhichagivendataentrybelongs.\nApseudocode sketchofthealgorithm isgiveninFigure10.8.\"\\Teusethe\nnotation *ptTtodenotethevaluepointed tobyapointervariable ptTand&\n(value)todenotetheaddressofval'nc.NotethatfindingiintTcc_seaTch requires\nustosearchwithinthenode,whichcanbedonewitheitheralinearsearchor\nabinarysearch(e.g.,depending onthenumber ofentriesinthenode).\nIndiscussing thesearch,insertion, anddeletion algorithms forB+trees,we\nassumethattherearenoduplicates. Thatis,notwodataentriesareallowed\ntohavethesamekeyvalue.Ofcourse,duplicates arisewhenever thesearch\nkeydoesnotcontainacandidate keyandmustbedealtwithinpractice. We\nconsider howduplicates canbehandled inSection10.7.\nfunefind(searchkeyvalueK)returns nodepointer\n/ /GivenaseaTchkeyvalue,findsitsleafnode\nreturntree_search(root, K); //searches fromroot\nendfune\nfunetTee-seaTch (nodepointer, searchkeyvalueK)returns nodepointer\n/ /Searches treeforentry\nif*nodepointer isaleaf,returnnodepointer;\nelse,\nifK<K1thenreturntree_search(P o,K);\nelse,\nifK2:Kmthenreturntree_search(P m,K);/ /171=#entries\nelse,\nfindisuchthatKi:::;K<Ki+1;\nreturntree_search(P i,K)\nendfune\nFigure10.8Algorithm forSearch\nConsider thesampleB+treeshowninFigure10.9.ThisB+treeisoforder\nd=2.Thatis,eachnodecontains between 2and4entries.Eachnon--leaf entry\nisa(keyvaluc.'nodepointcT) pair;attheleaflevel,theentriesaredatarecords\nthatwedenotebyk*.Tosearchforentry5*,wefollowtheleft-most child\npointer, since5<13.Tosearchfortheentries14*or15*,wefollowthesecond\npointer, since1:3:::;14<17,and1:3:::;15<17.(vVedonotfind15*onthe\nappropriate leafandcanconclude thatitisnotpresentinthetree.)Tofind\n24*,wefollowthefourthchildpointer, since24:::;24<:30.", "382": "348 CHAPTER 10\nFigure10.9Example ofaB+Tree,Orderd=2\n10.5INSERT\nThealgorithm forinsertion takesanentry,findstheleafnodewhereitbelongs,\nandinsertsitthere.Pseudocode fortheB+treeinsertion algorithm isgiven\ninFigureHUG.Thebasicideabehindthealgorithm isthatwerecursively\ninserttheentrybycallingtheinsertalgorithm ontheappropriate childnode.\nUsually, thisprocedure resultsingoingdowntotheleafnodewheretheentry\nbelongs, placingtheentrythere,andreturning allthewaybacktotheroot\nnode.Occasionally anodeisfullanditmustbesplit.Whenthenodeissplit,\nanentrypointing tothenodecreatedbythesplitmustbeinserted intoits\nparent;thisentryispointedtobythepointervariable newchildentry. Ifthe\n(old)rootissplit,anewrootnodeiscreatedandtheheightofthetreeincrea..<;es\nby1.\nToillustrate insertion, letuscontinue withthesampletreeshowninFigure\n10.9.Ifweinsertentry8*,itbelongs intheleft-most leaf,whichisalready\nfull.Thisinsertion causesasplitoftheleafpage;thesplitpagesareshownin\nFigure10.11.Thetreemustnowbeadjusted totakethenewleafpageinto\naccount, soweinsertanentryconsisting ofthepair(5,pointertonewpage)\nintotheparentnode.Notehowthekey5,whichdiscriminates between the\nsplitleafpageanditsnewlycreatedsibling,is'copiedup.'\\\\Tecannotjust\n'pushup'5,because everydataentrymustappearinaleafpage.\nSincetheparentnodeisalsofull,another splitoccurs.Ingeneralwehaveto\nsplitanon-leaf nodewhenitisfull,containing 2dkeysand2d+1pointers, and\nwehavetoaddanother indexentrytoaccount forachildsplit.Wenowhave\n2d+1keysand2d+2pointers, yielding twominimally fullnon-leaf nodes,each\ncontaining dkeysandd+1pointers, andanextrakey,whichwechoosetobe\nthe'middle' key.Thiskeyandapointertothesecondnon-leaf nodeconstitute\nanindexentrythatmustbeinserted intotheparentofthesplitnon-leaf node.\nThemiddlekeyisthus'pushedup'thetree,incontrast tothecaseforasplit\nofaleafpage.", "383": "Tree~Structured Inde.1:ing 349\nprocinseTt(nodepointel', entry,newchildentry)\n/ /InseTtsentryintosubtreewithTOot'*nodepointer'; degreeisd;\n//'newchildentTy' nullinitially, andnullonretUTnunlesschildissplit\nif*nodepointer isanon-leaf node,sayN,\nfind'isuchthatJ(iSentry'skeyvalue<J(i+l; / /choosesubtree\ninsert(.R;, entry,newchildentry); //recurs'ively, insertentry\nifnewchildentry isnull,return; //usualcase;didn'tsplitchild\nelse, / /wesplitchild,mustinsert*newchildentry inN\nifNhasspace, //usualcase\nput*newchildentry onit,setnewchildentry tonull,return;\nelse, / /notedifference wrtsplitting ofleafpage!\nsplitN: //2d+1keyvaluesand2d+2nodepointers\nfirstdkeyvaluesandd+1nodepointers stay,\nlastdkeysandd+1pointers movetonewnode,N2;\n//*newchildentry settoguidesearches betweenNandN2\nnewchildentry =&((smallest keyvalueonN2,\npointertoN2));\nifNistheroot, //rootnodewasjustsplit\ncreatenewnodewith(pointer toN,*newchildentry);\nmakethetree'sroot-node pointerpointtothenewnode;\nreturn;\nif*nodepointer isaleafnode,sayL,\nifLhasspace, //usualcase\nputentryonit,setnewchildentry tonull,andreturn;\nelse, / /onceinawhile,theleafisfull\nsplitL:firstdentriesstay,restmovetobrandnewnodeL2;\nnewchildentry =&((smallest keyvalueonL2,pointertoL2));\nsetsiblingpointers inLandL2;\nreturn;\nendproc\nFigure 10.1.0 Algorithrn forInsertion intoB+TreeofOrderd", "384": "350 CHAPTER jO\n/,_--Entrytobeinsertedinparent 11(.)de.[i]1 <<----(Notethat5is'copiedup'and\n_-.......\"---\\ ,ontin.\", to,ppcM;n thelenf.)\nEEf-rJ-~r\nFigure10.11 SplitLeafPagesduringInsertofEntry8*\nThesplitpagesinourexample areshowninFigure10.12.Theindexentry\npointing tothenewnon-leaf nodeisthepair(17,pointertonewindex-level\npage);notethatthekeyvalue17is'pushed up'thetree,incontrast tothe\nsplitting keyvalue5intheleafsplit,whichwas'copiedup.'\n/Entrytobeinsertedinparentnode.\n~7..\u00a3~_:'--(Notethat17is'pushedup'and\nandappearsonceIntheindex.Contrast\nthISwithaleafspILt.)\n)EffJD\nHPJ\nFigure10.12 SplitIndexPagesduringInsertofEntry8*\nThedifference inhandling leaf-level andindex-level splitsarisesfromtheB+\ntreerequirement thatalldataentrieshmustresideintheleaves.Thisre\u00ad\nquirement prevents usfrom'pushing up'5andleadstotheslightredundancy\nofhavingsomekeyvaluesappearing intheleaflevelaswellasinsomeindex\nleveLHowever, rangequeriescanbeefficiently answered byjustretrieving the\nsequence ofleafpages;theredundancy isasmallpricetopayforefficiency. In\ndealingwiththeindexlevels,wehavemoreflexibility, andwe'pushup'17to\navoidhavingtwocopiesof17intheindexlevels.\nNow,sincethesplitnodewastheoldroot,weneedtocreateanewrootnode\ntoholdtheentrythatdistinguishes thetwosplitindexpages.Thetreeafter\ncompleting theinsertion oftheentry8*isshowninFigure10.13.\nOnevariation oftheinsertalgorithm triestoredistribute entriesofanodeN\nwithasiblingbeforesplitting thenode;thisimproves averageoccupancy. The\nsiblingofanodeN,inthiscontext, isanodethatisimmediately totheleft\norrightofNandhasthesamepare'ntasN.", "385": "Tree-Structured Index'ing 351\nFigure10.13B+TreeafterInserting Entry8*\nToillustrate redistribution, reconsider insertion ofentry8*intothetreeshown\ninFigure10.9.Theentrybelongsintheleft-most leaf,whichisfull.However,\nthe(only)siblingofthisleafnodecontains onlytwoentriesandcanthus\naccommodate moreentries.Wecantherefore handletheinsertion of8*witha\nredistribution. Notehowtheentryintheparentnodethatpointstothesecond\nleafhasanewkeyvalue;we'copyup'thenewlowkeyvalueonthesecond\nleaf.Thisprocessisillustrated inFigure10.14.\nFigure10.14B+TreeafterInserting Entry8*UsingRedistribution\nTodetermine whether redistribution ispossible, wehavetoretrievethesibling.\nIfthesiblinghappens tobefull,wehavetosplitthenodeanyway. Onaverage,\nchecking whether redistribution ispossible increases I/Oforindexnodesplits,\nespecially ifwecheckbothsiblings. (Checking whether redistribution ispossible\nmayreduceI/Oiftheredistribution succeeds whereas asplitpropagates upthe\ntree,butthiscaseisveryinfrequent.) Ifthefileisgrowing, averageoccupancy\nwillprobably notbeaffectedmuchevenifwedonotredistribute. Takingthese\nconsiderations ,intoaccount, notredistributing entriesatnon-leaf levelsusually\npaysoff.\nIfasplitoccursattheleaflevel,however, wehavetoretrieve aneighbor\ntoadjusttheprevious andnext-neighbor pointers withrespecttothenewly\ncreatedleafnode.Therefore, alimitedformofredistribution makessense:Ifa\nleafnodeisfull,fetchaneighbor node;ifitha.'3spaceandhasthesameparent,", "386": "352 CHAPTER :40\nredistribute theentries.Othenvise (theneighbor hasdiflerent parent,Le.,itis\nnotasibling,oritisalsofull)splittheleafnodeanda,djusttheprevious and\nnext-neighbor pointers inthesplitnode,thenewlycreatedneighbor, andthe\noldneighbor.\n10.6DELETE\nThealgorithm fordeletion takesanentry,findstheleafnodewhereitbelongs,\nanddeletesit.Pseudocode fortheB+treedeletion algorithm isgivenin\nFigure10.15.Thebasicideabehindthealgorithm isthatwerecursively delete\ntheentrybycallingthedeletealgorithm ontheappropriate childnode.We\nusuallygodowntotheleafnodewheretheentrybelongs, removetheentry\nfromthere,andreturnallthewaybacktotherootnode.Occasionally a\nnodeisatminimum occupancy beforethedeletion, andthedeletion causes\nittogobelowtheoccupancy threshold. Whenthishappens, wemusteither\nredistribute entriesfromanadjacent siblingormergethenodewithasiblingto\nmaintain minimum occupancy. Ifentriesareredistributed between twonodes,\ntheirparentnodemustbeupdated toreflectthis;thekeyvalueintheindex\nentrypointing tothesecondnodemustbechanged tobethelowestsearchkey\ninthesecondnode.Iftwonodesaremerged, theirparentmustbeupdated to\nreflectthisbydeleting theindexentryforthesecondnode;thisindexentryis\npointedtobythepointervariable oldchildentry whenthedeletecallreturnsto\ntheparentnode.Ifthelastentryintherootnodeisdeletedinthismanner\nbecause oneofitschildren wasdeleted, theheightofthetreedecreases by1.\nToillustrate deletion, letusconsider thesampletreeshowninFigure10.13.To\ndeleteentry19*,wesimplyremoveitfromtheleafpageonwhichitappears,\nandwearedonebecause theleafstillcontains twoentries.Ifwesubsequently\ndelete20*,however, theleafcontains onlyoneentryafterthedeletion. The\n(only)siblingoftheleafnodethatcontained 20*hasthreeentries,andwecan\ntherefore deal withthesituation byredistribution; wemoveentry24*tothe\nleafpagethatcontained 20*andcopyupthenewsplitting key(27,whichis\nthenewlowkeyvalueoftheleaffromwhichweborrowed 24*)intotheparent.\nThisprocessisillustrated inFigure10.16.\nSuppose thatwenowdeleteentry24*.Theaffectedleafcontains onlyoneentry\n(22*)afterthedeletion, andthe(only)siblingcontains justtwoentries(27*\nand29*).Therefore, wecannotredistribute entries. However, thesetwoleaf\nnodestogether containonlythreeentriesandcanbemerged. \\Vhilemerging,\nwecan'tos::;'theentry((27,pointer'tosecondleafpage))intheparent,which\npointedtothesecondleafpage,becausethesecondleafpageiselnptyafterthe\nmergeandcanbediscarded. TherightsubtreeofFigure10.16afterthi::;step\ninthedeletion ofentry2!1*isshowninFigure10.17.", "387": "Tree-Structured Inde:l:ing 353,\nprocdelete(parentpointer, nodepointer, entry,oldchiIdentry)\n/ /Deletesentryfroms'ubtreew'ithTOot'*nodepointer ';degreeisd;\n/ /'oldchildentry' nullinitially, andnulluponret1lrnunlesschilddeleted\nif*nodepointer isanon-leaf node,sayN,\nfindisuchthatKi::;entry'skeyvalue<Ki+l;//choosesubtree\ndelete(nodepointer, Pi,entry,oldchildentry); //recursive delete\nifoldchildentry isnull,return; //usualcase:childnotdeleted\nelse, //wediscarded childnode(seediscussion)\nremove*oldchildentry fromN,/ /next,checkforunderflow\nifNhasentriestospare, //usualcase\nsetoldchildentry tonull,return;//deletedoesn'tgofurther\nelse, //notedifference wrtmerging ofleafpages!\ngetasiblingSofN://parentpointer argusedtofindS\nifShasextraentries,\nredistribute evenlybetweenNandSthroughparent;\nsetoldchildentry tonull,return;\nelse,mergeNandS / /callnodeonrhs111\noldchildentry =&(current entryinparentforM);\npullsplitting keyfromparentdownintonodeonleft;\nmoveallentriesfrom1\\11tonodeonleft;\ndiscardemptynodeM,return;\nif*nodepointer isaleafnode,sayL,\nifLh&<;entriestospare, //usualcase\nremoveentry,setoldchildentry tonull,andreturn;\nelse, //onceinawhile,theleafbecomes underfull\ngetasiblingSofL; //parentpointer usedtofindS\nifShasextraentries,\nredistribute evenlybetweenLandS;\nfindentryinparentfornodeonright; //callitA;J\nreplacekeyvalueinparententrybynewlow-keyvaluein1\\11;\nsetoldchildentry tonull,return;\nelse,mergeLandS / /callnodeonrhs1\\11\noldchildentry =&(current entryinparentforM);\nmoveallentriesfrom1\\11tonodeonleft;\ndiscardemptynodeAI,adjustsiblingpointers, return;\nendproc\nFigure10.15 Algorithm forDeletion fromB+TreeofOrder r1", "388": "354 CHAPTER 1-0\nFigure10.16B+TreeafterDeleting Entries19*and20*\nFigure10.17PartialB+TreeduringDeletion ofEntry24*\nDeleting theentry(27,pointertosecondleafpage)hascreatedanon-Ieaf-Ievel\npagewithjustoneentry,whichisbelowtheminimum ofd=2.Tofixthis\nproblem, wemusteitherredistribute ormerge.Ineithercase,wemustfetcha\nsibling.Theonlysiblingofthisnodecontains justtwoentries(withkeyvalues\n5and13),andsoredistribution isnotpossible; wemusttherefore merge.\nThesituation whenwehavetomergetwonon-leaf nodesisexactlytheopposite\nofthesituation whenwehavetosplitanon-leaf node.Wehavetosplitanon\u00ad\nleafnodewhenitcontains 2dkeysand2d+1pointers, andwehavetoadd\nanother key--pointer pair.Sinceweresorttomerging twonon-leaf nodesonly\nwhenwecannotredistribute entriesbetween them,thetwonodesmustbe\nminimally full;thatis,eachmustcontaindkeysandd+1pointers priorto\nthedeletion. Aftermerging thetwonodesandremoving thekey--pointer pair\ntobedeleted, wehave2d-1keysand2d+1pointers: Intuitively, theleft\u00ad\nmostpointeronthesecondmergednodelacksakeyvalue.Toseewhatkey\nvaluemustbecombined withthispointertocreateacomplete indexentry,\nconsider theparentofthetwonodesbeingmerged. Theindexentrypointing\ntooneofthemergednodesmustbedeletedfromtheparentbecause thenode\nisabouttobediscarded. Thekeyvalueinthisindexentryisprecisely thekey\nvalueweneedtocomplete thenewmergednode:Theentriesinthefirstnode\nbeingmerged, followed bythesplitting keyvaluethatis'pulleddown'fromthe\nparent,followed bytheentriesinthesecondnon-leaf nodegivesusatotalof2d\nkeysand2d+1pointers, whichisafullnon-leaf node.Notehowthesplitting", "389": "Tree-Structured Indexing 355\nkeyvalueintheparentispulleddown,incontrast tothecaseofmerging two\nleafnodes.\nConsider themerging oftwonon-leaf nodesinourexample. Together, thenon\u00ad\nleafnodeandthesiblingtobemergedcontainonlythreeentries,andtheyhave\natotaloffivepointers toleafnodes.Tomergethetwonodes,wealsoneedto\npulldowntheindexentryintheirparentthatcurrently discriminates between\nthesenodes.Thisindexentryhaskeyvalue17,andsowecreateanewentry\n(17,left-most childpointerinsibling). Nowwehaveatotaloffourentriesand\nfivechildpointers, whichcanfitononepageinatreeoforderd=2.Notethat\npullingdownthesplitting key17meansthatitwillnolongerappearinthe\nparentnodefollowing themerge.Afterwemergetheaffected non-leaf node\nanditssiblingbyputtingalltheentriesononepageanddiscarding theempty\nsiblingpage,thenewnodeistheonlychildoftheoldroot,whichcantherefore\nbediscarded. Thetreeafter completing allthesestepsinthedeletion ofentry\n24*isshowninFigure10.18.\nFigure10.18B+TreeafterDeleting Entry24*\nTheprevious examples illustrated redistribution ofentriesacrossleavesand\nmerging ofbothleaf-level andnon-leaf-level pages.Theremaining caseisthat\nofredistribution ofentriesbetween non-leaf-level pages.Tounderstand this\ncase,consider theintermediate rightsubtreeshowninFigure10.17.Wewould\narriveatthesameintermediate rightsubtreeifwetrytodelete24*froma\ntreesimilartotheoneshowninFigure10.16butwiththeleftsubtreeand\nrootkeyvalueasshowninFigure10.19.ThetreeinFigure10.19illustrates\nanintermediate stageduringthedeletion of24*.(Trytoconstruct theinitial\ntree.)\nIncontrast tothecaf.;ewhenwedeleted24*fromthetreeofFigureHUG,the\nnon-leaf levelnodecontaining keyvalue:30nowha..sasiblingthatcanspare\nentries(theentrieswithkeyvalues17and20).vVemovetheseentries3over\nfromthesibling.Notethat,indoingso,weessentially pushthemthrough the\n:11tissufficient tomoveoverjusttheentrywithkeyvalue20,hutwearemoving overtwoentries\n\u00b00illustrate whathappens whenseveralentriesareredistributed.", "390": "356 CHAPTER ;'0\nFigure10.19 AB+TreeduringaDeletion\nsplitting entryintheirparentnode(theroot),whichtakescareofthefactthat\n17becomes thenewlowkeyvalueontherightandtherefore mustreplacethe\noldsplitting keyintheroot(thekeyvalue22).Thetreewithallthesechanges\nisshowninFigure10.20.\nFigure10.20B+TreeafterDeletion\nInconcluding ourdiscussion ofdeletion, wenotethatweretrieve onlyone\nsiblingofanode.Ifthisnodehasspareentries,weuseredistribution; otherwise,\nwemerge.Ifthenodehasasecondsibling,itmaybeworthretrieving that\nsiblingaswelltocheckforthepossibility ofredistribution. Chances arehigh\nthatredistribution ispossible, andunlikemerging, redistribution isguaranteed\ntopropagate nofurtherthantheparentnode.Also,thepageshavemore\nspaceonthem,whichreducesthelikelihood ofasplitonsubsequent insertions.\n(Remember, filestypically grow,notshrink!) However, thenumber oftimes\nthatthiscasearises(thenodebecomes lessthanhalf-full andthefirstsibling\ncannotspareanentry)isnotveryhigh,soitisnotessential toimplement this\nrefinement ofthebct.'3icalgorithm thatwepresented.\n10.7DUPLICATES\nThesearch,insertion, anddeletion algorithms thatwepresented ignorethe\nissueofduplicate keys,thatis,severaldataentrieswiththesamekeyvalue.\nvVenowdiscusshowduplica.tes canbehandled.", "391": "Tree-StT'llct'uTed Inde:ring 35~\nDuplicate Handling inCOlllmercial Systems: Inaclustered indexin\nSybaseASE,thedatarowsaremaintained insortedorderonthepageand\nintheeollection ofdatapages.Thedatapagesarebidireetionally linked\ninsortorder.Rowswithduplicate keysareinserted into(ordeletedfrom}\ntheordered setofrows.Thismayresultinoverflow pagesofrowswith\nduplieate keysbeinginserted intothepagechainoremptyoverflow pages\nremoved fromthepagechain.Insertion ordeletion ofaduplicate keydoes\nnotaffectthehigherindexlevel'>unlessasplitor.lIlergyofa.non.-overflow\npageoccurs.InIBMDB2,Oracle8,andMiero\u00a7oft'SQL'Server; dupliclltes\narehandled byaddingarowidifnecessary toeliminate duplicate key\nvalues.\n.\nThebasicsearchalgorithm assumesthatallentrieswithagivenkeyvaluereside\nonasingleleafpage.Onewaytosatisfythisassumption istouseoverflow\npagestodealwithduplicates. (InISAM,ofcourse,wehaveoverflow pagesin\nanycase,andduplicates areeasilyhandled.)\nTypically, however, weuseanalternative approach forduplicates. Wehandle\nthemjustlikeanyotherentriesandseveralleafpagesmaycontainentrieswith\nagivenkeyvalue.Toretrievealldataentrieswithagivenkeyvalue,wemust\nsearchfortheleft-most dataentrywiththegivenkeyvalueandthenpossibly\nretrievemorethanoneleafpage(usingtheleafsequence pointers). Modifying\nthesearchalgorithm tofindtheleft-most dataentryinanindexwithduplicates\nisaninteresting exercise (infact,itisExercise 10.11).\nOneproblem withthisapproach isthat,whenarecordisdeleted, ifweuse\nAlternative (2)fordataentries,findingthecorresponding dataentrytodelete\nintheB+treeindexcouldbeinefficient because wemayhavetocheckseveral\nduplicate entries(key,rid)withthesamekeyvalue.Thisproblem canbe\naddressed byconsidering theridvalueinthedataentrytobepartofthe\nsearchkey,forpurposes ofpositioning thedataentryinthetree.Thissolution\neffectively turnstheindexintoauniq71,eindex(i.e\"noduplicates), Remember\nthatasearchkeycanbeanysequence offieldsinthisvariant,theridofthe\ndatarecordisessentially treatedasanother fieldwhileconstructing thesearch\nkey.\nAlternative (3)f'ordataentriesleadstoanaturalsolution forduplicates, butif\nwehavealargenumberofduplicates, asingledataentrycouldspanmultiple\npages.Andofcourse,whenadatarecordisdeleted, findingtheridtodelete\nfromthecorresponding dataentrycanbeinefficient, Thesolution tothis\nproblem issimilartotheonediscussed previously forAlternative (2):vVecan", "392": "358 CHAPTER 10\nmaintain thelistofridswithineachdataentryinsortedorder(say,bypage\nnumberandthenslotnumberifaridconsists ofapageidandaslotid).\n10.8B+TREESINPRACTICE\nInthissectionwediscussseveralimportant pragmatic issues.\n10.8.1KeyCompression\nTheheightofaB+treedepends onthenumberofdataentriesandthesizeof\nindexentries.Thesizeofindexentriesdetermines thenumberofindexentries\nthatwillfitonapageand,therefore, thefan-outofthetree.Sincetheheight\nofthetreeisproportional tologfan-oud# ofdataentries), andthenumberof\ndiskl/Ostoretrieveadataentryisequaltotheheight(unlesssomepagesare\nfoundinthebufferpool),itisclearlyimportant tomaximize thefan-outto\nminimize theheight.\nAnindexentrycontains asearchkeyvalueandapagepointer. Hencethe\nsizedepends primarily onthesizeofthesearchkeyvalue.Ifsearchkey\nvaluesareverylong(forinstance, thenameDevarakonda Venkataramana\nSathyanarayana Seshasayee Yellamanchali Murthy, orDonaudampfschifffahrts\u00ad\nkapitansanwiirtersmiitze), notmanyindexentrieswillfitonapage:Fan-out is\nlow,andtheheightofthetreeislarge.\nOntheotherhand,searchkeyvaluesinindexentriesareusedonlytodirect\ntraffictotheappropriate leaf.Whenwewanttolocatedataentrieswitha\ngivensearchkeyvalue,wecompare thissearchkeyvaluewiththesearchkey\nvaluesofindexentries(onapathfromtheroottothedesiredleaf).During\nthecomparison atanindex-level node,wewanttoidentify twoindexentries\nwithsearchkeyvaluesklandk2suchthatthedesiredsearchkeyvaluekfalls\nbetween k1andk2.Toaccomplish this,weneednotstoresearchkeyvaluesin\ntheirentirety inindexentries.\nForexample, suppose wehavetwoadjacent indexentriesinanode,withsearch\nkeyvalues'DavidSmith'and'Devarakonda ...'Todiscriminate between these\ntwovalues,itissufficient tostoretheabbreviated forms'Da'and'De.'More\ngenerally, thelneaning oftheentry'DavidSmith'intheB+treeisthatevery\nvalueinthesubtreepointedtobythepointertotheleftof'DavidSmith'isless\nthan'DavidSmith,'andevery value inthesubtreepointedtobythepointer\ntotherightof'DavidSmith'is(greater thanorequalto'DavidSmith'and)\nlessthan'Devarakonda ...'", "393": "Tree-Struct'ured Indexing 359\nB+TreesinRealSystems: IBMDB2,Infol:mLx, Microsoft SQLServer,\nOracle8,andSybaseASEallsupport clustered ~dunclustered B+tree\nindexes, withsomedifferences inhowtheyhandledeletions andduplicate\nkeyvalues.InSybaseASE,depending ontheconcurrency controlschelne\nbeingusedfor\u00b7theindex,thedeletedrowisremoved (withmerging if\nthepageoccupancy goesbelowthreshold) orsimply111arkedas deleted; a\ngarbage collection schemeisusedtorecoverspace ..inth~lattercase,In\nOracle8,deletions arehandled bymarking therowasdeleted.1'0reclaim\nthespaceoccupied bydeletedrecords,wecanrebuildtheindexonline(i.e.,\nwhileuserscontinue tousetheindex)orcoalesce underfull pages(which\ndoesnotreducetreeheight). Coalesce isin-place, rebuildcreatesacopy.\nInformix handlesdeletions bysimplymarking recordsasdeleted. DB2and\nSQLServerremovedeletedrecordsandmergepageswhenoccupancy goes\nbelowthreshold.\nOracle8alsoallowsrecordsfrommultiple relations tobeco-clustered on\nthesamepage.Theco-clustering canbebasedonaB+treesearchkeyor\nstatichashingandupto32relations canbestoredtogether.\nToensuresuchsemantics foranentryispreserved, whilecompressing theentry\nwithkey'DavidSmith,'wemustexamine thelargestkeyvalueinthesubtreeto\ntheleftof'DavidSmith'andthesmallest keyvalueinthesubtreetotheright\nof'DavidSmith,'notjusttheindexentries('Daniel Lee'and'Devarakonda\n...')thatareitsneighbors. Thispointisillustrated inFigure10.21;thevalue\n'DaveyJones'isgreaterthan'Dav,'andthus,'DavidSmith'canbeabbreviated\nonlyto'Davi,'notto'Dav.'\n000 Devarakonda ... 000\no0 0\nFigure 10.21 Example Illustrating PrefixKeyCompression000\nThistechnique. calledprefixkeycompression orsimplykeycompres\u00ad\nsion,issupported inmanycommercial implementations ofB+trees.Itcan\nsubstantially increCL')e thefan-outofatree.Wedonotdiscussthedetailsof\ntheinsertion anddeletion algorithms inthepresence ofkeycompression.", "394": "360 CHAPTER 10\n10.8.2Bulk-Loading aB+Tree\nEntriesareaddedtoaB+treeintwoways.First,wemayhaveanexisting\ncollection ofdatarecordswithaB+treeindexonit;whenever arecordis\naddedtothecollection, acorresponding entrymustbeaddedtotheB+tree\naswell.(Ofcourse,asimilarcomment appliestodeletions.) Second, wemay\nhaveacollection ofdatarecordsforwhichwewanttocreateaB+treeindex\nonsomekeyfield(s). Inthissituation, wecanstartwithanemptytreeand\ninsertanentryforeachdatarecord,oneatatime,usingthestandard insertion\nalgorithm. However, thisapproach islikelytobequiteexpensive because each\nentryrequires ustostartfromtherootandgodowntotheappropriate leaf\npage.Eventhoughtheindex-level pagesarelikelytostayinthebufferpool\nbetween successive requests, theoverhead isstillconsiderable.\nForthisreasonmanysystems provideabulk-loading utilityforcreating aB+\ntreeindexonanexisting collection ofdatarecords. Thefirststepistosort\nthedataentriesk*tobeinserted intothe(tobecreated)B+treeaccording to\nthesearchkeyk.(Iftheentriesarekey-pointer pairs,sortingthemdoesnot\nmeansortingthedatarecordsthatarepointedto,ofcourse.) Weusearunning\nexample toillustrate thebulk-loading algorithm. Weassumethateachdata\npagecanholdonlytwoentries,andthateachindexpagecanholdtwoentries\nandanadditional pointer(i.e.,theB+treeisassumed tobeoforderd=1).\nAfterthedataentrieshavebeensorted,weallocateanemptypagetoserveas\ntherootandinsertapointertothefirstpageof(sorted) entriesintoit.We\nillustrate thisprocessinFigure10.22,usingasamplesetofninesortedpages\nofdataentries.\n~!--==_~~~~\"\",L:-=o-s_c_,:_.te_d_p~a~g_e_s\n _()f_(_la_t_a_e_nt_rie_s~n~ot_Y_\"_il_l\n _B_+_t_re_e~~_----,\nffiEEJ 110*~~ 112j~ 120*[221\nFigure 10.22 InitialStepinB+TreeBulk-Loading\nvVethenaddoneentrytotherootpageforeachpageofthesorteddataentries.\nThenewentryconsistsof\\lowkeyvalueonpage,pointer'topage).vVeproceed\nuntiltherootpageisfull;seeFigure10.23.\nToinserttheentryforthenextpageofdataentries,wemustsplittherootand\ncreateanewrootpage.vVeshowthisstepinFigure10.2/1.", "395": "Tr'ee-8iruci'ured Index'ing\nDataentrypagesnotyetinB+tree\nFigure 10.23 RootPageFillsupinB+TreeBulk-Loading\nDataentrypagesIlotyetillB+tree\nFigure10.24 PageSplitduringB+'fi'eeBulk-Loading361", "396": "362 CHAPTER :FO\n\"Wehaveredistributed theentriesevenlybetween thetwochildren oftheroot,\ninanticipation ofthefactthattheB+treeislikelytogrow.Although itis\ndifficult(!)toillustrate theseoptionswhenatmosttwoentriesfitonapage,\nwecouldalsohavejustleftalltheentriesontheoldpageorfilledupsome\ndesiredfraction ofthatpage(say,80percent). Thesealternatives aresimple\nvariants ofthebasicidea.\nTocontinue withthebulk-loading example, entriesfortheleafpagesarealways\ninserted intotheright-most indexpagejustabovetheleaflevel.'Whentheright\u00ad\nmostindexpageabovetheleaflevelfillsup,itissplit.Thisactionmaycause\nasplitoftheright-most indexpageonestepclosertotheroot,asillustrated\ninFigures10.25and10.26.\nDataentrypages\nnotyetinB+tree\nFigure 10.25 BeforeAddingEntryforLeafPageContaining 38*\nDataentrypages\nnotyetinB+tree\nI\nI\nI\nIT\nIf\nIT,\nfT?'\nr---.----'i12113{j2\n'122:J123*EJ~5*136*~'141*1!f'*1]\nFigure10.26 AfterAddingEntryforLeafPageContaining :38*", "397": "Tiee-Structured Inde:ring 36,3\nNotethatsplitsoccuronlyontheright-most pathfromtheroottotheleaf\nlevel.\\Veleavethecompletion ofthebulk-loading example asasimpleexercise.\nLetusconsider thecostofcreating anindexonanexistingcollection ofrecords.\nThisoperation consists ofthreesteps:(1)creating thedataentriestoinsert\nintheindex,(2)sortingthedataentries,and(3)building theindexfromthe\nsortedentries.Thefirststepinvolves scanning therecordsandwritingoutthe\ncorresponding dataentries;thecostis(R+E)I/Os,whereRisthenumberof\npagescontaining recordsandEisthenumberofpagescontaining dataentries.\nSortingisdiscussed inChapter 13;youwillseethattheindexentriescanbe\ngenerated insortedorderatacostofabout3EI/Os.Theseentriescanthenbe\ninserted intotheindexastheyaregenerated, usingthebulk-loading algorithm\ndiscussed inthissection.Thecostofthethirdstep,thatis,inserting theentries\nintotheindex,isthenjustthecostofwritingoutallindexpages.\n10.8.3TheOrderConcept\nWepresented B+treesusingtheparameter dtodenoteminimum occupancy. It\nisworthnotingthattheconceptoforder(i.e.,theparameter d),whileusefulfor\nteaching B+treeconcepts, mustusuallyberelaxedinpractice andreplaced\nbyaphysical spacecriterion; forexample, thatnodesmustbekeptatlea..c;t\nhalf-full.\nOnereasonforthisisthatleafnodesandnon-leaf nodescanusuallyhold\ndifferent numbers ofentries. RecallthatB+treenodesarediskpagesand\nnon-leaf nodescontainonlysearchkeysandnodepointers, whileleafnodescan\ncontaintheactualdatarecords. Obviously, thesizeofadatarecordislikely\ntobequiteabitlargerthanthesizeofasearchentry,somanymoresearch\nentriesthanrecordsfitonadiskpage.\nAsecondreasonforrelaxing theorderconcept isthatthesearchkeymay\ncontain acharacter stringfield(e.g.,thenamefieldofStudents) whosesize\nvariesfromrecordtorecord;suchasearchkeyleadstovariable-size dataentries\nandindexentries,andthenumberofentriesthatwillfitonadiskpagebecomes\nvariable.\nFinally,eveni{theindexisbuiltonafixed-size field,severalrecordsmaystill\nhavethesamesearchkeyvalue(e.g.,severalStudents recordsmayhavethe\nsamegpaornamevalue).Thissituation canalsoleadtovariable-size leafentries\n(ifweuseAlternative (3)fordataentries). Because ofallthesecomplications,\ntheconcept oforderistypically replaced byasimplephysical criterion (e.g.,\nmergeifpossiblewhenmorethanhalfofthespaceinthenodeisunused).", "398": "364 CHAPTER 1()\n10.8.4TheEffectofInsertsandDeletesonRids\nIftheleafpagescontaindatarecords-that is,theB+treeisaclustered index\u00ad\nthenoperations suchassplits,merges, andredistributions canchangerids.\nRecallthatatypicalrepresentation foraridissomecombination of(physical)\npagenumberandslotnumber. Thisschemeallowsustomoverecordswithin\napageifanappropriate pageformatischosenbutnotacrosspages,asisthe\ncasewithoperations suchassplits.Sounlessridsarechosentobeindependent\nofpagenumbers, anoperation suchassplitormergeinaclustered B+tree\nmayrequirecompensating updates tootherindexesonthesamedata.\nAsimilarcomment holdsforanydynamic clustered index,regardless ofwhether\nitistree-based orhash-based. Ofcourse,theproblem doesnotarisewith\nnonclustered indexes, because onlyindexentriesaremovedaround.\n10.9REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Whyaretree-structured indexesgoodforsearches, especially rangeselec\u00ad\ntions?(Section 10.1)\n\u2022Describe howsearch,insert,anddeleteoperations workinISAMindexes.\nDiscusstheneedforoverflow pages,andtheirpotential impactonperfor\u00ad\nmance.Whatkindsofupdateworkloads areISAMindexesmostvulnerable\nto,andwhatkindsofworkloads dotheyhandlewell?(Section 10.2)\n\u2022Onlyleafpagesareaffected inupdates inISAMindexes. Discuss the\nimplications forlockingandconcurrent access.Compare ISAMandB+\ntreesinthisregard.(Section 10.2.1)\n\u2022Whatarethemaindifferences between ISAMandB+treeindexes? (Sec\u00ad\ntion10.3)\n\u2022WhatistheorderofaB+tree?Describe theformatofnodesinaB+\ntree.Whyarenodesattheleaflevellinked?(Section 10.3)\n\u2022Howrnanynodesmustbeexamined forequality searchinaB+tree?How\nmanyforarangeselection? Compare thiswithISAM.(Section 10.4)\n\u2022Describe theB+treeinsertion algorithm, andexplainhowiteliminates\noverflow pages.Underwhatconditions cananinsertincrease theheightof\nthetree?(Section 10.5)\n\u2022Duringdeletion, anodemightgobelowtheminimum occupancy threshold.\nHowisthishandled? Underwhatconditions couldadeletion decrease the\nheightofthetree?(Section 10.6)", "399": "Tree-Str\"l.tct1lTcd Indccing\nFigure10.27 TreeforExercise 10.1\n\u2022Whydoduplicate searchkeysrequiremodifications totheimplementation\nofthebasicB+treeoperations? (Section 10.7)\n\u2022\\Vhatiskeycompression, andwhyisitimportant? (Section 10.8.1)\n\u2022HowcananewB+treeindexbeefficiently constructed forasetofrecords?\nDescribe thebulk-loading algorithm. (Section 10.8.2)\n\u2022Discusstheimpactofsplitsinclustered B+treeindexes. (Section 10.8.4)\nEXERCISES\nExercise 10.1Consider theB+treeindexoforderd=2showninFigure10.27.\n1.Showthetreethatwouldresultfrominserting adataentrywithkey9intothistree.\n2.ShowtheB+treethatwouldresultfrominserting adataentrywithkey3intothe\noriginal tree.Howmanypagereadsandpagewritesdoestheinsertion require?\n:3.ShowtheB+treethatwouldresultfromdeleting thedataentrywithkey8fromthe\noriginal tree,assuming thattheleftsiblingischecked forpossible redistribution.\n4.ShowtheB+treethatwouldresultfromdeleting thedataentrywithkey8fromthe\noriginal tree,assuming thattherightsiblingischecked forpossible redistribution.\n5.ShowtheB+treethatwouldresultfromstarting withtheoriginal tree,inserting adata\nentrywithkey46andthendeleting thedataentrywithkey52.\n6.ShowtheB+treethatwouldresultfromdeleting thedataentrywithkey91fromthe\noriginal tree.\n7.ShowtheB+treethatwouldresultfromstarting withtheoriginal tree,inserting adata\nentrywithkey59,andthendeleting thedataentrywithkey91.\n8.ShowtheB+treethat\\vouldresultfromsuccessively deleting thedataentrieswithkeys\n32, 39,41, 45,and73fromtheoriginal tree.\nExercise 10.2Consider theB+treeindexshowninFigure10.28,whichusesAlternative\n(1)fordataentries. Eachintermediate nodecanholduptofivepointers andfourkeyvalues.\nEachleafcanholduptofourrecords, andleafnodesaredoublylinkedasusual,although\ntheselinksarenotshowninthefigure.Answerthefollowing questions.\n1.Nameallthetreenodesthatmllstbefetchedtoanswerthefollowing query:\"Getall\nrecordswithsearchkeygreaterthan:38.\"", "400": "366 CHAPTER 10\nL3 L6\nFigure10.28TreeforExercise 10.2\n2.Insertarecordwithsearchkey109intothetree.\n3.Deletetherecordwithsearchkey81fromthe(original) tree.\n4.Nameasearchkeyvaluesuchthatinserting itintothe(original) treewouldcausean\nincrease intheheightofthetree.\n5.Notethatsubtrees A,B,andCarenotfullyspecified. Nonetheless, whatcanyouinfer\naboutthecontents andtheshapeofthesetrees?\n6.Howwouldyouranswers tothepreceding questions changeifthiswereanISAMindex?\n7.Suppose thatthisisanISAMindex.Whatistheminimum numberofinsertions needed\ntocreateachainofthreeoverflow pages?\nExercise 10.3Answerthefollowing questions:\n1.Whatistheminimum spaceutilization foraB+treeindex?\n2.Whatistheminimum spaceutilization foranISAMindex?\n3.Ifyourdatabase systemsupported bothastaticandadynamic treeindex(say,ISAMand\nB+trees),wouldyoueverconsider usingthestaticindexinpreference tothedynamic\nindex?\nExercise 10.4Suppose thatapagecancontainatmostfourdatavaluesandthataUdata\nvaluesareintegers. UsingonlyB+treesoforder2,giveexamples ofeachofthefollowing:\n1.AB+treewhoseheightchanges from2to3whenthevalue25isinserted. Showyour\nstructure beforeandaftertheinsertion.\n2.AB+treeinwhichthedeletion ofthevalue25leadstoaredistribution. Showyour\nstructure beforeandaft.erthedeletion.\n3.AB+treeinwhicht.hedelet.ion ofthevalue25causesamergeoftwonodesbutwithout.\naltering theheightofthetree.\n4.AnISAMstructure withfourbuckets, noneofwhichhasanoverflow page.Further,\neverybuckethasspaceforexactlyonemoreentry.Showyourstructure beforeandaft.er\ninserting t.woadditional values,chosensothat.anoverflow pageiscreated.", "401": "Tree-Structured Index'ing 367\nFigure10.29 TreeforExercise 10.5\nExercise 10.5Consider theB+treeshowninFigure10.29.\n1.Identify alistoffivedataentriessuchthat:\n(a)Inserting theentriesintheordershownandthendeleting themintheopposite\norder(e.g.,inserta,insertb,deleteb,deletea)resultsintheoriginal tree.\n(b)Inserting theentriesintheordershownandthendeleting themintheopposite\norder(e.g.,inserta,insertb,deleteb,deletea)resultsinadifferent tree.\n2.Whatistheminimum number ofinsertions ofdataentrieswithdistinct keysthatwill\ncausetheheightofthe(original) treetochangefromitscurrentvalue(of1)to3?\n3.Wouldtheminimum number ofinsertions thatwillcausetheoriginaltreetoincrease to\nheight3changeifyouwereallowedtoinsertduplicates (multiple dataentrieswiththe\nsamekey),assuming thatoverflow pagesarenotusedforhandling duplicates?\nExercise 10.6Answer Exercise 10.5assuming thatthetreeisanISAMtree!(Someofthe\nexamples askedformaynotexist-if so,explainbriefly.)\nExercise 10.7Suppose thatyouhaveasortedfileandwanttoconstruct adenseprimary\nB+treeindexonthisfile.\n1.Onewaytoaccomplish thistaskistoscanthefile,recordbyrecord,inserting each\noneusingtheB+treeinsertion procedure. Whatperformance andstorage utilization\nproblems aretherewiththisapproach?\n2.Explain howthebulk-loading algorithm described inthetextimproves uponthisscheme.\nExercise 10.8AssumethatyouhavejustbuiltadenseB+treeindexusingAlternative (2)\nonaheapfilecontaining 20,000records. ThekeyfieldforthisB+treeindexisa40-byte\nstring,anditisacandidate key.Pointers (Le.,recordidsandpageids)are(atmost)10\u00ad\nbytevalues.Thesizeofonediskpageis1000bytes.Theindexwa9builtinabottom-up\nfashionusingthebulk-loading algorithm, andthenodesateachlevelwerefilledupa..9much\naspossible.\n1.Ho\\vmanylevelsdoestheresulting treehave?\n2.Foreachlevelofthetrec,howmanynodesareatthatlevel?\n3.Howmanylevelswouldtheresulting treehaveifkeycompression isllsedanditreduces\ntheaverage sizeofeachkeyinanentryto10bytes?", "402": "368\nsidname login agegpaCHAPTER to\n53831 Maclayall maclayan@music 111.8\n53832Guldu guldu@music 123.8\n53666Jones jones(gcs 183.4\n53901 Jones jones({'!Jtoy 183A\n53902 Jones jones@physics 183.4\n53903Jones jones(Q)english 183.4\n53904Jones jones(ggenetics 183.4\n53905Jones jones@astro 183.4\n53906Jones jones@chem 183.4\n53902Jones jones(Qlsanitation 183.8\n53688Smith smith@ee 193.2\n53650Smith smith@math 193.8\n54001Smith smith@ee 193.5\n54005Smith smith@cs 193.8\n54009Smith smith@a.'3tro 192.2\nFigure10.30 AnInstance oftheStudents Relation\n4.Howmanylevelswouldtheresulting treehavewithout keycompression butwithall\npages70percent full?\nExercise 10.9Thealgorithms forinsertion anddeletion intoaB+treearepresented as\nrecursive algorithms. InthecodeforinseTt,forinstance, acallismadeattheparentofa\nnodeNtoinsertinto(thesubtreerootedat)nodeN,andwhenthiscallreturns, thecurrent\nnodeistheparentofN.Thus,wedonotmaintain any'parentpointers' innodesofB+\ntree.Suchpointers arenotpartoftheB+treestructure foragoodreason,asthisexercise\ndemonstrates. Analternative approach thatusesparentpointers--again, remember thatsuch\npointers arenotpartofthestandard B+treestructure!-in eachnodeappears tobesimpler:\nSearchtotheappropriate leafusingthesearchalgorithm; theninserttheentryand\nsplitifnecessary, withsplitspropagated toparents ifnecessary (usingtheparent\npointers tofindtheparents).\nConsider this(unsatisfactory) <dternative approach:\nI.Suppose thataninternal nodeNissplitintonodesNandN2.Whatcanyousayabout\ntheparentpointers inthechildren oftheoriginal nodeN?\n2.Suggest two\\\\raysofdealingwiththeinconsistent parentpointers inthechildren ofnode\nN.\n3.Foreachofthesesuggestions, identify apotential (major) disadvantage.\n4.\\Vhatconclusions canyoudrawfromthisexercise?\nExercise 10.10Consider theinstance oftheStudents relation showninFigure10.30.Show\naB+treeoforder2ineachofthesecases,assuming thatduplicates arehandled usingoverflow\npages.Clearlyindicate whatthedataentriesare(i.e.,donotusethek*convention).", "403": "Tree-StIlJ,ct7.1red Indexing 369\n1.AB+treeindexonageusingAlternative (1)fordataentries.\n2.AdenseB+treeindexongpausingAlternative (2)fordataentries. Forthisquestion,\nassumethatthesetuplesarestoredinasortedfileintheordershowninthefigure:The\nfirsttupleisinpage1,slot1;thesecondtupleisinpage1,slot2;andsoon.Eachpage\ncanstoreuptothreedatarecords. Youcanuse(page-id, slot)toidentify atuple.\nExercise 10.11Suppose thatduplicates arehandled usingtheapproach without overflow\npagesdiscussed inSection 10.7.Describe analgorithm tosearchfortheleft-most occurrence\nofadataentrywithsearchkeyvalueK.\nExercise 10.12Answer Exercise 10.10assuming thatduplicates arehandled without using\noverflow pages,usingthealternative approach suggested inSection9.7.\nPROJECT-BASED EXERCISES\nExercise 10.13Compare thepublicinterfaces forheapfiles,B+treeindexes, andlinear\nhashedindexes. Whatarethesimilarities anddifferences? Explain whythesesimilarities and\ndifferences exist.\nExercise 10.14Thisexercise involves usingMinibase toexploretheearlier(non-project)\nexercises further.\n1.Createthetreesshowninearlierexercises andvisualize themusingtheB+treevisualizer\ninMinibase.\n2.Verifyyouranswers toexercises thatrequireinsertion anddeletion ofdataentriesby\ndoingtheinsertions anddeletions inMinibase andlookingattheresulting treesusing\nthevisualizer.\nExercise 10.15(Notetoinstructors: Additional detailsmustbepT'Ovided ifthiscxer'Cise is\nassigned; seeAppendix 30.)Implement B+treesontopofthelower-level codeinMinibase.\nBIBLIOGRAPHIC NOTES\nTheoriginal versionoftheB+treewaspresented byBayerandMcCreight [69].TheB+\ntreeisdescribed in[442]and[194].Btreeindexes forskeweddatadistributions arestudied\nin[260].TheVSAMindexing structure isdescribed in[764].Various treestructures for\nsupporting rangequeriesaresurveyed in[79].Anearlypaperonmultiattribute searchkeys\nis[498].\nReferences forconcurrent accesstoB+treesareinthebibliography forChapter 17.", "404": "11\nHASH-BASED INDEXING\n...Whatistheintuition behindhash-structured indexes? Whyarethey\nespecially goodforequality searches butuselessforrangeselections?\n...WhatisExtendible Hashing? Howdoesithandlesearch,insert,and\ndelete?\n...WhatisLinearHashing? Howdoesithandlesearch,insert,and\ndelete?\n...Whatarethesimilarities anddifferences between Extendible andLin\u00ad\nearHashing?\nIttKeyconcepts: hashfunction, bucket,primary andoverflow pages,\nstaticversusdynamic hashindexes; Extendible Hashing, directory of\nbuckets, splitting abucket,globalandlocaldepth,directory doubling,\ncollisions andoverflow pages;LinearHashing, roundsofsplitting, fam\u00ad\nilyofhashfunctions, overflow pages,choiceofbuckettosplitandtime\ntosplit;relationship between Extendible Hashing's directory andLin\u00ad\nearHashing's familyofhashfunctiolis, needforoverflow pagesinboth\nschemes inpractice, useofadirectory forLinearHashing.\nL.~~_~__\nNotchaos-like, together crushed andbruised,\nBut,asthewo~ldharmoniously confused:\nWhereorderinvarietywesee.___J\nAlexander Pope,Windsor Forest\nInthischapter weconsider fileorganizations thatareexcellent forequality\nselections. Thebasicideaistouseahashing function, whichmapsvalues\n370", "405": "Hash-Based Indexing 371\ninasearchfieldintoarangeofb'ucketnumbers tofindthepageonwhicha\ndesireddataentrybelongs. \\VeuseasimpleschemecalledStaticHashing to\nintroduce theidea.Thisscheme, likeISAM,suffersfromtheproblem oflong\noverflow chains,whichcanaffectperformance. Twosolutions totheproblem\narepresented. TheExtendible Hashing schemeusesadirectory tosupport\ninsertsanddeletesefficiently withnooverflow pages.TheLinearHashing\nschemeusesacleverpolicyforcreating newbucketsandsupports insertsand\ndeletesefficiently without theuseofadirectory. Although overflow pagesare\nused,thelengthofoverflow chainsisrarelymorethantwo.\nHash-based indexing techniques cannotsupport rangesearches, unfortunately.\nn'ee-based indexing techniques, discussed inChapter 10,cansupport range\nsearches efficiently andarealmostasgoodasha...,h-based indexing forequality\nselections. Thus,manycommercial systems choosetosupport onlytree-based\nindexes. Nonetheless, hashing techniques provetobeveryusefulinimple\u00ad\nmenting relational operations suchasjoins,aswewillseeinChapter 14.In\nparticular, theIndexNestedLoopsjoinmethod generates manyequality se\u00ad\nlectionqueries, andthedifference incostbetween ahash-based indexanda\ntree-based indexcanbecomesignificant inthiscontext.\nTherestofthischapterisorganized asfollows. Section11.1presents Static\nHashing. LikeISAM,itsdrawback isthatperformance degrades asthedata\ngrowsandshrinks. Wediscussadynamic hashing technique, calledExtendible\nHashing, inSection11.2andanotherdynamic technique, calledLinearHashing,\ninSection11.3.vVecompare Extendible andLinearHashing inSection11.4.\n11.1STATIC HASHING\nTheStaticHashing schemeisillustrated inFigure11.1.Thepagescontaining\nthedatacanbeviewedasacollection ofbuckets, withoneprimary page\nandpossibly additional overflow pagesperbucket. Afileconsists ofbuckets\nathroughN-1,withoneprimary pageperbucketinitially. Buckets contain\ndataentTies,whichcanbeanyofthethreealternatives discussed inChapter\n8.\nTosearchforadataentry,weapplyahashfunction htoidentifythebucket\ntowhichitbelongsandthensearchthisbucket. Tospeedthesearchofa\nbucket,wecanmaintain dataentriesinsortedorderbysearchkeyvalue;in\nthischapter, wedonotsortentries,andtheorderofentrieswithinabucket\nhasnosignificance. Toinsertadataentry,weusethehashfunction toidentify\nthecorrectbucketandthenputthedataentrythere.Ifthereisnospacefor\nthisdataentry,weallocate anewoverflow page,putthedataentryonthis\npage,andaddthepagetotheoverflow chainofthebucket.Todeleteadata", "406": "372\nh(key)modN /\n~-~-\u00a7=l~//__ ~L~--.-J~\u00b7 . -\n~G\\---I...\n,INd-\nPrimarybucketpages Overflow pages\nFigure 11.1StaticHashingCHAPTER 11$\nentry,weusethehashing function toidentify thecorrectbucket,locatethe\ndataentrybysearching thebucket,andthenremoveit.Ifthisdataentryis\nthelastinanoverflow page,theoverflow pageisremoved fromtheoverflow\nchainofthebucketandaddedtoalistoffreepages.\nThehashfunction isanimportant component ofthehashingapproach. Itmust\ndistribute valuesinthedomainofthesearchfielduniformly overthecollection\nofbuckets.IfwehaveNbuckets, numberedathroughN~1,ahashfunction\nhoftheformh(value) =(a*value+b)workswellinpractice. (Thebucket\nidentified ish(value) modN.)Theconstants aandbcanbechosento'tune'\nthehashfunction.\nSincethenumber ofbuckets inaStaticHashing fileisknownwhenthefile\niscreated, theprimary pagescanbestoredonsuccessive diskpages.Hence,\nasearchideallyrequires justonediskI/O,andinsertanddeleteoperations\nrequiretwoI/Os(readandwritethepage),although thecostcouldbehigher\ninthepresence ofoverflow pages.Asthefilegrows,longoverflow chainscan\ndevelop. Sincesearching abucketrequires ustosearch(ingeneral) allpages\ninitsoverflow chain,itiseasytoseehowperformance candeteriorate. By\ninitially keeping pages80percentfull,wecanavoidoverflow pagesifthefile\ndoesnotgrowtooIIluch,butingeneraltheonlywaytogetridofoverflow\nchainsistocreateanewfilewithmorebuckets.\nThemainproblem withStaticHashing isthatthenumberofbucketsisfixed.\nIfafileshrinksgreatly,alotofspaceiswasted;moreimportant, ifafilegrows\nalot,longoverflow chainsdevelop, resulting inpoorperformance. Therefore,\nStaticHashing can becompared totheISAMstructure (Section 10.2),which\ncanalsodevelop longoverflow chainsincaseofinsertions tothesameleaf.\nStaticHashing alsohasthesameadvantages asISAMwithrespecttoconcur\u00ad\nrentaccess(seeSection10.2.1).", "407": "Hash-Based Inrle:ring 373\nOnesimplealternative toStaticHashing istoperiodically 'rehash' thefileto\nrestoretheidealsituation (nooverflow chains,about80percentoccupancy).\nHowever, rehashing takestimeandtheindexcannotbeusedwhilerehashing\nisinprogress. Another alternative istousedynamic hashing techniques\nsuchasExtendible andLinearHashing, whichdealwithinsertsanddeletes\ngracefully. vVeconsider thesetechniques intherestofthischapter.\n11.1.1Notation andConventions\nIntherestofthischapter, weusethefollowing conventions. Asintheprevious\nchapter, recordwithsearchkeyk,wedenotetheindexdataentrybyk*.For\nhash-based indexes, thefirststepinsearching for,inserting, ordeleting adata\nentrywithsearchkeykistoapplyahashfunction htok;wedenotethis\noperation byh(k),andthevalueh(k)identifies thebucketforthedataentry\nh.Notethattwodifferent searchkeyscanhavethesamehashvalue.\n11.2EXTENDIBLE HASHING\nTounderstand Extendible Hashing, letusbeginbyconsidering aStaticHashing\nfile.Ifwehavetoinsertanewdataentryintoafullbucket,weneedtoadd\nanoverflow page.Ifwedonotwanttoaddoverflow pages,onesolution is\ntoreorganize thefileatthispointbydoubling thenumber ofbuckets and\nredistributing theentriesacrossthenewsetofbuckets. Thissolution suffers\nfromonemajordefect--the entirefilehastoberead,andtwice (h')manypages\nhavetobewrittentoachievethereorganization. Thisproblem, however, can\nbeovercome byasimpleidea:Useadirectory ofpointers tobucket.s, and\ndoublet.hesizeofthenumber ofbuckets bydoubling justthedirectory and\nsplitting onlythebucketthatoverflowed.\nTounderstand theidea,consider thesamplefileshowninFigure11.2.The\ndirectory consists ofanarrayofsize4,witheachelement beingapoint.erto\nabucket.. (Theglobaldepthandlocaldepthfieldsarediscussed shortly,ignore\nthemfornow.)Tolocat.eadataentry,weapplyahashfunct.ion tothesearch\nfieldandtakethelast.2bit.sofitsbinaryrepresent.ation t.oget.anumber\nbetween 0and ~~.Thepointerinthisarrayposition givesust.hedesiredbucket.;\nweassumethateachbucketcanholdfourdataent.ries. Therefore, t.olocatea\ndataentrywithhashvalue5(binary101),welookatdirectory element 01and\nfollowthepointertothedatapage(bucketBinthefigure).\nToinsert.adat.aentry,wesearchtofindtheappropriate bucket..Forexample,\ntoinsertadataentrywithhashvalue13(denoted as13*),weexamine directory\nelement 01andgotothepagecontaining dataent.ries1*,5*,and21*.Since", "408": "374 CHAPTER 11\nBucketCBucketBBucketA\n1fL~--L----i----4.,J.--'~Dataentryr\nwithh(r)=32\n00\n01\n10\n11LOCALDEPTH~\nGLOBAL DEPTH\nDIRECTORY\nBucketD\nDATAPAGES\nFigure11.2Example ofanExtendible Ha.~hed File\nthepagehasspaceforanadditional dataentry,wearedoneafterweinsertthe\nentry(Figure11.3).\nLOCALDEPTH~\nGLOBAL DEPTH\n00\n01\n10\n11\nDIRECTORYBucketA\nBucketB\nBucketC\nBucketD\nDATAPAGES\nFigure11.3AfterInserting EntryTwithh(T)=1:3\nNext,letusconsider insertion ofadataentryintoafullbucket.Theessence\noftheExtcndible Hashing idealiesinhowwedealwiththiscase.Consider the\ninsertion ofdataentry20*(binary10100). Looking atdirectory clement 00,\nwearcledtobucketA,whichisalreadyfull.We111Ustfirstsplitthebucket", "409": "Hash-Based Indexing 375\nbyallocating anewbucketlandredistributing thecontents (including thenew\nentrytobeinserted) acrosstheoldbucketandits'splitimage.'Toredistribute\nentriesacrosstheoldbucketanditssplitimage,weconsider thelastthreebits\nofh(T);thelasttwobitsare00,indicating adataentrythatbelongstooneof\nthesetwobuckets, andthethirdbitdiscriminates between thesebuckets. The\nredistribution ofentriesisillustrated inFigure11.4.\nLOCALDEPTH~:>\nGLOBAL DEPTH\n00\n01\n10\n11\nDIRECTORYBucketD\nBucketA2(splitimageofbucketA)\nFigure 11.4WhileInserting Entryrwithh(r}=20\nNoteaproblem thatwemustnowresolve\"\"\" \"\"weneedthreebitstodiscriminate\nbetween twoofourdatapages(AandA2),butthedirectory hasonlyenough\nslotstostorealltwo-bitpatterns. Thesolution istodoublethedirectory. El\u00ad\nementsthatdifferonlyinthethirdbitfromtheendaresaidto'correspond':\nCOT-r'esponding elements ofthedirectory pointtothesamebucketwiththe\nexception oftheelements corresponding tothesplitbucket.Inourexample,\nbucketawassplit;so,newdirectory element 000pointstooneofthesplitver\u00ad\nsionsandnewelement 100pointstotheother.Thesamplefileaftercompleting\nallstepsintheinsertion of20*isshowninFigure11.5.\nTherefore, doubling thefilerequires allocating anewbucketpage,writingboth\nthispageandtheoldbucketpagethatisbeingsplit,anddoubling thedirectory\narray.Thedirectory islikelytobemuchsmallerthanthefileitselfbecause\neachelement isjustapage-id, andcanbedoubled bysimplycopying itover\nlSincethereare'nooverflow pagesinExtendible Hashing, abucketcanbethought ofa.~asingle\npage.", "410": "376\nLOCALDEPTH~\nGLOBAL DEPTH\n000\n001\n010\n011\n100\n101\n110\n111CHAPTER 11\nBucketA\nBucketB\nBucketC\nBucket0\nDIRECTORY BucketA2(splitimageofbucketA)\nFigure 11.5AfterInserting Entryrwithh(r)=20\n(andadjusting theelements forthesplitbuckets). Thecostofdoubling isnow\nquiteacceptable.\nWeobservethatthebasictechnique usedinExtendible Hashing istotreatthe\nresultofapplying ahashfunction ha\"abinarynumberandinterpret thelastd\nbits,whereddepends onthesizeofthedirectory, asanoffsetintothedirectory.\nInourexample, disoriginally 2because weonlyhavefourbuckets; afterthe\nsplit,dbecomes 3because wenowhaveeightbuckets. Acorollary isthat,\nwhendistributing entriesacrossabucketanditssplitimage,weshoulddoso\nonthebasisofthedthbit.(Notehowentriesareredistributed inourexample;\nseeFigure11.5.)Thenumberd,calledtheglobaldepthofthehashedfile,is\nkeptaspartoftheheaderofthefile.Itisusedeverytimeweneedtolocatea\ndataentry.\nAnimportant pointthatarisesiswhether splitting abucketnecessitates a\ndirectory doubling. Consider ourexample, asshowninFigure11.5.Ifwenow\ninsert9*,itbelongsinbucketB;thisbucketisalreadyfull.\\Vecandealwith\nthissituation bysplitting thebucketandusingdirectory elements 001and10]\ntopointtothebucketanditssplitimage,asshowninFigure11.6.\nHence,abucketsplitdoesnotnecessarily requireadirectory doubling. How\u00ad\never,ifeitherbucketAorA2growsfullandaninsertthenforces abucketsplit,\nweareforcedtodoublethedirectory again.", "411": "Hash-Based Inde:ring\nLOCALDEPTH---L..-->\nGLOBAL DEPTH\n000\n001\n010\n011\n100\n101\n110\n111\nDIRECTORYBucketA\nBucketB\nBucketC\nBucket0\nBucketA2(splitimageofbucketA)\nBucketB2(splitimageofbucketB)377\nFigure 11.6AfterInserting Entryl'withh(r)=9\nTodifferentiate between thesecasesanddetermine whether adirectory doubling\nisneeded,wemaintain alocaldepthforeachbucket.Ifabucketwhoselocal\ndepthisequaltotheglobaldepthissplit,thedirectory mustbedoubled. Going\nbacktotheexample, whenweinserted 9*intotheindexshowninFigure11.5,\nitbelonged tobucketBwithlocaldepth2,whereas theglobaldepthwas3.\nEventhoughthebucketwassplit,thedirectory didnothavetobedoubled.\nBuckets AandA2,ontheotherhand,havelocaldepthequaltotheglobal\ndepth,and,iftheygrowfullandaresplit,thedirectory mustthenbedoubled.\nInitially, alllocaldepthsareequaltotheglobaldepth(whichisthenumberof\nbitsneededtoexpressthetotalnumberofbuckets). vVeincrement theglobal\ndepthby1eachtimethedirectory doubles, ofcourse.Also,whenever abucket\nissplit(whether ornotthesplitleadstoadirectory doubling), weincrement\nby1thelocaldepthofthesplitbucketandassignthissame(incremented)\nlocaldepthtoits(newlycreated) splitimage.Intuitively, ifabuckethaslocal\ndepthl,thehashvaluesofdataentriesinitagreeonthela.stlbits;further,no\ndataentryinanyotherbucketofthefilehasahashvaluewiththesamelastI\nbits.Atotalof2dldirectory elernents pointtoabucketwithlocaldepthI;if\nd=l,exactlyonedirectory element pointstothebucketandsplitting sucha\nbucketrequires directory doubling.", "412": "378 CHAPTER hI\nAfinalpointtonoteisthatwecanalsousethefirstdbits(themostsignificant\nbits)insteadofthelastd(leasts'ignificant bits),butinpractice thelastdbits\nareused.Thereasonisthatadirectory canthenbedoubled simplybycopying\nit.\nInsummary, adataentrycanbelocatedbycomputing itshashvalue,taking\nthelastdbits,andlookinginthebucketpointedtobythisdirectory element.\nForinserts,thedataentryisplacedinthebuckettowhichitbelongsandthe\nbucketissplitifnecessary tomakespace.Abucketsplitleadstoanincrease in\nthelocaldepthand,ifthelocaldepthbecomes greaterthantheglobaldepth\nasaresult,toadirectory doubling (andanincrease intheglobaldepth)as\nwell.\nFordeletes,thedataentryislocatedandremoved. Ifthedeleteleavesthe\nbucketempty,itcanbemergedwithitssplitimage,although thisstepis\noftenomitted inpractice. Merging bucketsdecreases thelocaldepth.Ifeach\ndirectory element pointstothesamebucketasitssplitimage(i.e.,0and2d-1\npointtothesamebucket,namely, A;1and2d-1+1pointtothesamebucket,\nnamely, B,whichmayormaynotbeidentical toA;etc.),wecanhalvethe\ndirectory andreducetheglobaldepth,although thisstepisnotnecessary for\ncorrectness.\nTheinsertion examples canbeworkedoutbackwards asexamples ofdeletion.\n(Startwiththestructure shownafteraninsertion anddeletetheinserted ele\u00ad\nment.Ineachcasetheoriginalstructure shouldbetheresult.)\nIfthedirectory fitsinmemory, anequality selection canbeanswered ina\nsinglediskaccess,asforStaticHashing (intheabsenceofoverflow pages),but\notherwise, twodiskI/Osareneeded. Asatypicalexample, a100MBfilewith\n100bytesperdataentryandapagesizeof4KBcontains 1milliondataentries\nandonlyabout25,000elements inthedirectory. (Eachpage/bucket contains\nroughly40dataentries,andwehaveonedirectory elementperbucket.) Thus,\nalthough equality selections canbetwiceasslowasforStaticHashing files,\nchances arehighthatthedirectory willfitinmemory andperformance isthe\nsameasforStaticHa.<;hing files.\nOntheotherhand,thedirectory growsinspurtsandcanbecome largefor\nskeweddatadistTibutions (whereourassumption thatdatapagescontainroughly\nequalnumbers ofdataentriesisnotvalid).Inthecontext of hashedfiles,ina\nskeweddatadistribution thedistribution ofhashvaluesofseaTchfieldvalues\n(ratherthanthedistribution ofsearchfieldvaluesthemselves) isskewed(very\n'bursty'ornonuniform). Evenifthedistribution ofsearchvaluesisskewed,the\nchoiceofagoodhashing function typically yieldsafairlyuniform distribution\noflw\"shva.lues;skewistherefore notaproblem inpractice.", "413": "Hash~Based Inde:cing 379\nF\\lrther, collisions, ordataentrieswiththesamehashvalue,causeaproblem\nandmustbehandled specially: \\Vhenmoredataentriesth311\\villfitonapage\nhavethesamehashvalue,weneedoverflow pages.\n11.3LINEAR HASHING\nLinearHashing isadynamic hashing technique, likeExtendible Hashing, ad\u00ad\njustinggracefully toinsertsanddeletes. Incontrast toExtendible Hashing,\nitdoesnotrequireadirectory, dealsnaturally withcollisions, andoffersalot\nofflexibility withrespecttothetimingofbucketsplits(allowing ustotrade\noffslightlygreateroverflow chainsforhigheraveragespaceutilization). Ifthe\ndatadistribution isveryskewed, however, overflow chainscouldcauseLinear\nHashing performance tobeworsethanthatofExtendible Hashing.\nTheschemeutilizesafamilyofhashfunctions ha,hI,h2,...,withtheproperty\nthateachfunction's rangeistwicethatofitspredecessor. Thatis,ifhimaps\nadataentryintooneofMbuckets, hi+Imapsadataentryintooneof2lv!\nbuckets. Suchafamilyistypically obtained bychoosing ahashfunction hand\naninitialnumber Nofbuckets,2 anddefininghi(value) \"'=h(value) mod(2iN).\nIfNischosentobeapowerof2,thenweapplyhandlookatthelastdibits;\ndoisthenumber ofbitsneededtorepresent N,anddi=da+i.Typically we\nchoosehtobeafunction thatmapsadataentrytosomeinteger. Suppose\nthatwesettheinitialnumberNofbucketstobe32.Inthiscasedois5,and\nhaistherefore hmod32,thatis,anumber intherange0to31.Thevalueof\ndlisdo+1=6,andhIishmod(2*32),thatis,anumber intherange0to\n63.Thenh2yieldsanumber intherange0to127,andsoOIl.\nTheideaisbestunderstood intermsofrounds ofsplitting. Duringround\nnumberLevel,onlyhashfunctions hLeudandhLevel+1 areinuse.Thebuckets\ninthefileatthebeginning oftheroundaresplit,onebyonefromthefirstto\nthelastbucket,thereby doubling thenumber ofbuckets. Atanygivenpoint\nwithinaround,therefore, wehavebucketsthathavebeensplit,bucketsthat\nareyettobesplit,andbucketscreatedbysplitsinthisround,asillustrated in\nFigure11.7.\nConsider howwesearchforadataentrywithagivensearchkeyvalue.\\Ve\napplyha..:shfunction hLevel,andifthisleadsustooneoftheunsplitbuckets,\nwesimplylookthere.Ifitleadsustooneofthesplitbuckets, theentrymay\nbethereoritmayhavebeenmovedtothenewbucketcreatedearlierinthis\nroundbysplitting thisbucket;todetermine whichofthetwobucketscontains\ntheentry,weapplyhLevel+I'\n2Notethat0toIV- 1isnottherangeoffl.!", "414": "380\nBuckettobesplitNext\nBucketsthatexistedatthe\nbeginning ofthisround:\nthisistherangeofhLevel\n- 1\nr\nI\nI-<-CHAPTER \\1\nBucketssplitinthisround:\nIfhLe~'el(searchkeymil,e\nisinthisrange,mustuse\nhLevel+1(searchkeyvallie\ntodecideifentryisin\nsplitimagebucket.\n'splitimage'buckets:\ncreated(tlrrough splitting\nofotherbuckets) inthisround\nFigure 11.7Buckets duringaRoundinLinearHashing\nUnlikeExtendible Hashing, whenaninserttriggers asplit,thebucketinto\nwhichthedataentryisinserted isnotnecessarily thebucketthatissplit.An\noverflow pageisaddedtostorethenewlyinserted dataentry(whichtriggered\nthesplit),asinStaticHashing. However, sincethebuckettosplitischosen\ninround-robin fashion, eventually allbucketsaresplit,therebyredistributing\nthedataentriesinoverflow chainsbeforethechainsgettobemorethanone\nortwopageslong.\nWenowdescribe LinearHashing inmoredetail.Acounter Levelisusedto\nindicate thecurrentroundnumber andisinitialized toO.Thebuckettosplit\nisdenoted byNextandisinitially bucket\u00b0(thefirstbucket). Wedenotethe\nnumber ofbuckets inthefileatthebeginning ofroundLevelbyNLevel.We\ncaneasilyverifythatNLevel=N*2Level.Letthenumber ofbucketsatthe\nbeginning ofround0,denoted byNo,beN.Weshowasmalllinearhashed\nfileinFigure11.8.Eachbucketcanholdfourdataentries,andthefileinitially\ncontains fourbuckets, asshowninthefigure.\nWehaveconsiderable flexibility inhowtotriggerasplit,thankstotheuseof\noverflow pages.Wecansplit whenever anewoverflow pageisadded,orwecan\nimposeadditional conditions basedallconditions suchasspaceutilization. For\nourexamples, asplitis'triggered' wheninserting anewdataentrycausesthe\ncreation ofanQverftow page.\n\\Vhenever asplitistriggered theNextbucketissplit,andhashfunction hLevel+l\nredistributes entriesbetween thisbucket(saybucketnumberb)anditssplit\nimage;thesplitimageistherefore bucketnumber b+NLeve/.Aftersplitting a\nbucket,thevalueofNextisincremented by1.Intheexample file,insertion of", "415": "Hash-Based Indexing 38J\nLevel=O. N=4\nPRIMARY\nPAGES\n000 00Next=O\n\"'132'144'136'11\n001\n01001\n10I9\"12S\"iS'f~~\n_Dataentry r\nwithh{r)mS~4:18\"10\"30\" .,PrJ.mary\n_bucket page\n11 011~\nThisinformation is TheactualcontelJts\nforillustratiolJ only ofthelinearhashedjile\nFigure11.8Example ofaLinearHashed File\ndataentry43*triggersasplit.Thefileaftercompleting theinsertion isshown\ninFigure11.9.\nLevel=O\nPRIMARY OVERFLOW\nh1hO PAGES PAGES\n000 00~Next=1 -\n001 01\"'~\n010 10~\n011 11\n10000\nFigure 11.9AfterInserting RecordTwithh(T)=43\nAtanytimein.themiddleofaroundLevel,allbucketsabovebucketNe:rthave\nbeensplit,andthefilecontains bucketsthataretheirsplitimages,asillustrated\ninFigure11.7.Buckets Nextthrough NLevclhavenotyetbeensplit.Ifweuse\nhLevelonadataentryandobtainanumber bintherangeNextthrough NLevel,\nthedataentrybelongstobucketb.Forexample, ho(18)is2(binary10);since\nthisvalueisbetween thecurrentvaluesofNe:r:t(=1)andN1(=,-:':4),thisbucket\nhasnotbeensplit.However, ifweobtainanumber bintherange0through", "416": "382 CHAPTER 11\nNext,thedataentrymaybeinthisbucketorinitssplitimage(whichisbucket\nnumber b+NLevet}; wehavetousehLevel+1 todetermine towhichofthesetwo\nbucketsthedataentrybelongs. Inotherwords,wehavetolookatonemore\nbitofthedataentry'shashvalue.Forexample, ho(32)andho(44)arebotha\n(binary00).SinceNextiscurrently equalto1,whichindicates abucketthat\nhasbeensplit,wehavetoapplyhI'WehavehI(32)=0(binary000)and\nh1(44)=4(binary100).Therefore, 32belongsinbucketAand44belongsin\nitssplitimage,bucketA2.\nNotallinsertions triggerasplit,ofcourse.Ifweinsert37*intothefileshown\ninFigure11.9,theappropriate buckethasspaceforthenewdataentry.The\nfileaftertheinsertion isshowninFigure11.10.\nLevel=O\nPRIMARY OVERFLOW\nh1ho PAGES PAGES\n000 00~Next=1 -\n001 01~~\n010 10~\n011 11\n100 00EEITl\nFigure11.10 AfterInserting Recordrwithh(r)=37\nSometimes thebucketpointedtobyNext(thecurrentcandidate forsplitting)\nisfull,andanewdataentryshouldbeinserted inthisbucket.Inthiscase,a\nsplitistriggered, ofcourse,butwedonotneedanewoverflow bucket. This\nsituation isillustrated byinserting 29*intothefileshowninFigure11.10.The\nresultisshowninFigure11.11.\nWhenNextisequaltoNLevel -1andasplitistriggered, wesplitthelastof\nthebuckets presentinthefileatthebeginning ofroundLevel.Thenumber\nofbuckets afterthesplitistwicethenumberatthebeginning oftheround,\nandwestartanewroundwithLevelincremented by1andNextresettoO.\nIncrementing Levelamounts todoubling theeffective rangeintowhichkeysare\nhashed. Consider theexample fileinFigure11.12,whichwasobtained fromthe\nfileofFigure11.11byinserting 22*,66*,and34*.(Thereaderisencouraged to\ntrytoworkoutthedetailsoftheseinsertions.) Inserting 50*causesasplitthat", "417": "Hash-Based l'ndex'ing\nLevel=O\nPRIMARY OVERFLOW\nh1ho PAGES PAGES\n000 00132'11\n001 01025'\\1 Next\",2\n010 10\"'114'\\18'110'13\u00b01\n011 11\n~EITQ\n100 00E8Il\n101 01~\nFigure11.11 AfterInserting Recordrwithh(r\")=29383\nleadstoincrementing Level,asdiscussed previously; thefileafterthisinsertion\nisshowninFigure11.13.\nLevel=O\nPRIMARY\nh1hO PAGES\n000 00~C[l\n001 01~[J=l\n010 10~Next=3\n011 11~17'll1'1\n100 00~J.:~lI{\n101 01EL~1i?I=]\n~\n110 10~\n~OVERFLOW\nPAGES\nFigure11.12 AfterInserting Records withh(r)=22,66,and34\nInsummary, anequality selection costsjustonediskI/Ounlessthebuckethas\noverflow pages;inpractice, thecostonaverage isabout1.2diskaccesses for", "418": "384\nLevel:1\nPRIMARY OVERFLOW\nh1ho PAGES PAGES\nNext=O\n000 00\n001 01Ld~I~]~\n010 10~~8]2or;~! .~l~j\n011 11 ~5J11I-1\n'---=--L_~_i\n100 00[44'!3sTT-l\n101 111..~13~J2::L~l\n110 10 r-i4I30:@I1\n111 11\nFigure11.13 AfterInserting Recordrwithh(r)=50\nreasonably uniform datadistributions. (Thecostcanbeconsiderably worse-\u00ad\nlinearinthenumberofdataentriesinthefile----ifthedistribution isveryskewed.\nThespaceutilization isalsoverypoorwithskeweddatadistributions.) Inserts\nrequirereadingandwritingasinglepage,unlessasplitistriggered.\n'Wenotdiscussdeletion indetail,butitisessentially theinverseofinsertion.\nIfthelastbucketinthefileisempty,itcanberemoved andNextcanbe\ndecremented. (IfNextis0andthelastbucketbecomes empty,Nextismadeto\npointtobucket(AI/2)~1,where!vIisthecurrentnumber ofbuckets, Levelis\ndecremented, andtheemptybucketisremoved.) Ifwewish,wecancombine the\nlastbucketwithitssplitimageevenwhenitisnotempty,usingsomecriterion\ntotriggerthismerging inessentially thesameway.Thecriterion istypically\nbasedontheoccupancy ofthefile,andmerging canbedonetoimprove space\nutilization.\n11.4EXTENDIBLE VS.LINEAR HASHING\nTounderstand therelationship between LinearHashing andExtendible Hash\u00ad\ning,imagine thatwealsohaveadirectory inLinearHashing withelements 0\ntoN-1.Thefirstsplitisatbucket0,andsoweadddirectory elementN.In\nprinciple, wemayimagine thattheentiredirectory hasbeendoubled atthis\npoint;however, because element 1isthesameaselementN+1,elernent 2is", "419": "Hash~Based Indexing 385\n!\nthesamea.'3elementN+2,andsoon,wecanavoidtheactualcopying for\ntherestofthedirectory. Thesecondsplitoccursatbucket1;nowdirectory\nelementN+1becomes significant andisadded.Attheendoftheround,all\ntheoriginalNbucketsaresplit,andthedirectory isdoubled insize(because\nallelements pointtodistinctbuckets).\n\\Veobservethatthechoiceofhashing functions isactually verysimilarto\nwhatgoesoninExtendible Hashing---in effect,moving fromhitohi+1in\nLinearHashing corresponds todoubling thedirectory inExtendible Hashing.\nBothoperations doubletheeffective rangeintowhichkeyvaluesarehashed;\nbutwhereas thedirectory isdoubled inasinglestepofExtendible Hashing,\nmovingfromhitohi+l,alongwithacorresponding doubling inthenumber\nofbuckets, occursgradually overthecourseofaroundinLinearHa.'3hing.\nThenewideabehindLinearHa.'3hing isthatadirectory canbeavoided bya\ncleverchoiceofthebuckettosplit.Ontheotherhand,byalwayssplitting the\nappropriate bucket,Extendible Hashing mayleadtoareducednumberofsplits\nandhigherbucketoccupancy.\nThedirectory analogy isusefulforunderstanding theideasbehindExtendible\nandLinearHashing. However, thedirectory structure canbeavoidedforLinear\nHashing (butnotforExtendible Hashing) byallocating primary bucketpages\nconsecutively, whichwouldallowustolocatethepageforbucketibyasimple\noffsetcalculation. Foruniform distributions, thisimplementation ofLinear\nHashing hasaloweraveragecostforequality selections (because thedirectory\nleveliseliminated). Forskeweddistributions, thisimplementation couldresult\ninanyemptyornearlyemptybuckets, eachofwhichisallocated atleastone\npage,leadingtopoorperformance relative toExtendible Hashing, whichis\nlikelytohavehigherbucketoccupancy.\nAdifferent implementation ofLinearHashing, inwhichadirectory isactually\nmaintained, offerstheflexibility ofnotallocating onepageperbucket;null\ndirectory elements canbeusedasinExtendible Hashing. However, thisimple\u00ad\nmentation introduces theoverhead ofadirectory levelandcouldprovecostly\nforlarge,uniformly distributed files.(Also,although thisimplementation alle\u00ad\nviatesthepotential problem oflowbucketoccupancy bynotallocating pages\nforemptybuckets, itisnotacomplete solution because wecanstillhavemany\npageswithveryfewentries.)\n11.5REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.", "420": "386 CHAPTER).l\n\u2022Howdoesahash-ba..sed indexhandleanequality query?Discusstheuseof\nthehashfunction inidentifying abuckettosearch.Givenabucketnumber,\nexplainhowtherecordislocatedondisk.\n\u2022Explainhowinsertanddeleteoperations arehandled inastatichashindex.\nDiscusshowoverflow pagesareused,andtheirimpactonperformance.\nHowmanydiskl/Osdoesanequality searchrequire, intheabsence of\noverflow chains?Whatkindsofworkload doesastatichashindexhandle\nwell,andwhenitisespecially poor?(Section 11.1)\n\u2022HowdoesExtendible Hashing useadirectory ofbuckets? HowdoesEx\u00ad\ntendible Hashing handleanequality query?Howdoesithandleinsertand\ndeleteoperations? Discusstheglobaldepthoftheindexandlocaldepthof\nabucketinyouranswer. Underwhatconditions canthedirectory canget\nlarge?(Section 11.2)\n\u2022Whatarecollisions? Whydoweneedoverflow pagestohandlethem?\n(Section 11.2)\n\u2022HowdoesLinearHashing avoidadirectory? Discusstheround-robin split\u00ad\ntingofbuckets. Explain howthesplitbucketischosen,andwhattriggers\nasplit.Explain theroleofthefamilyofhashfunctions, andtheroleof\ntheLevelandNextcounters. Whendoesaroundofsplitting end?(Sec\u00ad\ntion11.3)\n\u2022Discusstherelationship between Extendible andLinearHashing. Whatare\ntheirrelativemerits? Consider spaceutilization forskeweddistributions,\ntheuseofoverflow pagestohandlecollisions inExtendible Hashing, and\ntheuseofadirectory inLinearHashing. (Section 11.4)\nEXERCISES\nExercise 11.1Consider theExtendible Hashing indexshowninFigure1l.14.Answerthe\nfollowing questions aboutthisindex:\n1.Whatcanyousayaboutthelastentrythatwasinserted intotheindex?\n2.Whatcanyousayaboutthelastentrythatwasinserted intotheindexifyouknowthat\ntherehavebeennodeletions fromthisindexsofar?\n3.Suppose youaretoldthattherehavebeennodeletions fromthisindexsofar.Whatcan\nyousayaboutthelastentrywhoseinsertion intotheindexcausedasplit?\n4.Showtheindexafterinserting anentrywithhashvalue68.\n5.Showtheoriginal indexafterinserting entrieswithha.shvalues17and69.\n6.Showtheoriginal indexafterdeleting theentrywithhashvalue21.(Assume thatthe\nfulldeletion algorithm isused.)\n7.Showtheoriginal indexafterdeleting theentrywithha,,;hvalue10.Isamergetriggered\nbythisdeletion?Ifnot,explainwhy.(Assume thatthefulldeletion algorithm isused.)", "421": "Hash-Based Indexing 387\n000\n001\n010\n011\n100\n101\n110\n111\nDIRECTORYBucketA\nBucketB\nBucketC\nBucket0\nBucketA2\nFigure11.14 FigureforExercise 11.1\nLevel=O\nPRIMARY OVERFLOWh(l)h(O)PAGES PAGES\n000 00~Next=l -\n001 01\"~\n01010~\n011 11I~3517[11\\\n1-\n10000EFrq\nFigure11.15 FigureforExercise 11.2\nExercise 11.2Consider theLinearHashing indexshowninFigure11.15.Assumethatwe\nsplitwhenever anoverflow pageiscreated. Answerthefollowing questions aboutthisindex:\n1.Whatcanyousayaboutthelastentrythatwasinserted intotheindex?\n2.Whatcanyousayaboutthelastentrythatwasinserted intotheindexifyouknowthat\ntherellavebeennodeletions fromthisindexsofar?\n:tSuppose youknowthattherehavebeennodeletions fromthisindexsofar.Whatcan\nyousayaboutthelastentrywhoseinsertion intotheindexcausedasplit?\n4.Showtheindexafterinserting anentrywithhashvalue4.", "422": "388 CHAPTER 11\n5,Showtheoriginal indexafterinserting anentrywithhashvalue15.\n6.Showtheoriginal indexafterdeleting theentrieswithhashvalues36and44.(Assume\nthatthefulldeletion algorithm isused.)\n7.Findalistofentrieswhoseinsertion intotheoriginal indexwouldleadtoabucketwith\ntwooverflow pages.Useasfewentriesaspossible t.oaccomplish this.\"Vhatisthe\nmaximum number ofentriesthatcanbeinserted intothisbucketbeforeasplitoccurs\nthatreducesthelengthofthisoverflow chain?\nExercise 11.3Answerthefollowing questions aboutExtendible Hashing:\n1.Explain whylocaldepthandglobaldepthareneeded.\n2.Afteraninsertion thatcausesthedirectory sizetodouble, howmanybuckets have\nexactlyonedirectory entrypointing tothem?Ifanentryisthendeleted fromoneof\nthesebuckets, whathappens tothedirectory size?Explain youranswers briefly.\n3.DoesExtendible I-lashing guarantee atmostonediskaccesstoretrieve arecordwitha\ngivenkeyvalue?\n4.Ifthehashfunction distributes dataentriesoverthespaceofbucketnumbers inavery\nskewed(non-uniform) way,whatcanyousayaboutthesizeofthedirectory? Whatcan\nyousayaboutthespaceutilization indatapages(i.e.,non-directory pages)?\n5.Doesdoubling thedirectory requireustoexamine allbuckets withlocaldepthequalto\nglobaldepth?\n6.Whyishandling duplicate keyvaluesinExtendible Hashing harderthaninISAM?\nExercise 11.4Answerthefollowing questions aboutLinearHashing:\n1.HowdoesLinearHashing provideanaverage-case searchcostofonlyslightlymorethan\nonediskI/O,giventhatoverflow buckets arepartofitsdatastructure?\n2.DoesLinearHashing guarantee atmostonediskaccesstoretrieve arecordwithagiven\nkeyvalue?\n3.IfaLinearHashing indexusingAlternative (1)fordataentriescontains Nrecords, with\nPrecordsperpageandanaverage storageutilization of80percent, whatistheworst\u00ad\ncasecostforanequality search? Underwhatconditions wouldthiscostbetheactual\nsearchcost?\n4.Ifthehashfunction distributes dataentriesoverthespaceofbucketnumbers inavery\nskew(,d(non-uniform) way,whatcanyousayaboutthcspaceutilization indatapages?\nExercise 11.5Giveanexample ofwhenyouwoulduseeachelement (AorB)foreachof\nthefollowing 'AversusB'pairs:\n1.AhashedindexusingAlternative (1)versusheapfileorganization.\n2.Extendible Hashing versusLinearHashing.\n3.StaticHashing versusLinearHashing.\n4.StaticHashing versusISAIVI.\n5.LinearHashing versusB+trees.\nExercise 11.6Giveexamples ofthefollowing:\n1.ALinearHashing indexandanExtendible Hashing indexwiththesamedataentries,\nsuchthattheLinearHashing indexhasmorepages.", "423": "Hash-Based Indf1;ing\nLevel=O, N=4\nh1hoPRIMARY\nPAGES\nNext=O\n000 00\"I6414411\n001 01liliEI~\n010 10GIQ\n011 11~\nFigure 11.16 FigureforExercise 11.9389\n2.ALinearH&shing indexandanExtendible Hashing indexwiththesamedataentries,\nsuchthattheExtendible Hashing indexhasmorepages.\nExercise 11.7Consider arelationR([L,b,c,rf)containing 1millionrecords, whereeachpage\noftherelation holds10records. Risorganized asaheapfilewithunclustered indexes, and\ntherecordsinRarerandomly ordered. Assumethatattribute aisacandidate keyforR,with\nvalueslyingintherange0to999,999. Foreachofthefollowing queries, nametheapproach\nthatwouldmostlikelyrequirethefewestl/Osforprocessing thequery.Theapproaches to\nconsider follow:\n\u2022Scanning through thewholeheapfileforR.\n\u2022UsingaB+treeindexonattribute R.a.\n\u2022Usingahashindexonattribute R.a.\nThequeriesare:\n1.FindallRtuples.\n2.FindallRtuplessuchthata<50.\n3.FindallRtuplessuchthata=50.\n4.FindallRtuplessuchthata>50anda<100.\nExercise 11.8Howwouldyouranswers toExercise 11.7changeifaisnotacandidate key\nforR?HowwouldthcychangeifweassumethatrecordsinRaresortedona?\nExercise 11.9Consider thesnapshot oftheLinearHashing indexshowninFigure11.16.\nAssume thatabucketsplitoccurswhcnever anoverflow pageiscreated.\n1.vVhatisthemll1:imwn numberofdataentriesthatcallbeinserted (giventhebestpossible\ndistribution ofkeys)beforeyouhavetosplitabucket? Explain verybriefly.\n2.Showthefileafterinserting asinglcrecordwhoseinsertion causesabucketsplit.", "424": "390 CHAPTER 11\n3.(a)Whatistheminimum numberofrecordinsertions thatwillcauseasplitofallfour\nbuckets? Explain verybriefly.\n(b)WhatisthevalueofNextaftermakingtheseinsertions?\n(c)Whatcanyousayaboutthenumber ofpagesinthefourthbucketshownafterthis\nseriesofrecordinsertions?\nExercise 11.10Consider thedataentriesintheLinearHashing indexforExercise 11.9.\n1.ShowanExtendible Hashing indexwiththesamedataentries.\n2.Answerthequestions inExercise 11.9withrespecttothisindex.\nExercise 11.11Inanswering thefollowing questions, assumethatthefulldeletion algorithm\nisused.Assumethatmerging isdonewhenabucketbecomes empty.\n1.Giveanexample ofExtendible Hashing wheredeleting anentryreducesglobaldepth.\n2.Giveanexample ofLinearHashing inwhichdeleting anentrydecrements Nextbutleaves\nLevelunchanged. Showthefilebeforeandafterthedeletion.\n3.Giveanexample ofLinearHashing inwhichdeleting anentrydecrements Level.Show\nthefilebeforeandafterthedeletion.\n4.Giveanexample ofExtendible Hashing andalistofentriesel,e2,e3suchthatinserting\ntheentriesinorderleadstothreesplitsanddeleting theminthereverseorderyieldsthe\noriginal index.Ifsuchanexample doesnotexist,explain.\n5.Giveanexample ofaLinearHashing indexandalistofentriesel,e2,e3suchthat\ninserting theentriesinorderleadstothreesplitsanddeleting theminthereverseorder\nyieldstheoriginal index.Ifsuchanexample doesnotexist,explain.\nPROJECT-BASED EXERCISES\nExercise 11.12(Notetoinst1'7u:toTS: Additional detailsmustbeprovided ifthisquestion is\nassigned. SeeAppendi:c 30.)Implement LinearHashing orExtendible Hashing inMinibase.\nBIBLIOGRAPHIC NOTES\nHashing isdiscussed indetailin[442].Extendible Hashing isproposed in[256].Litwin\nproposed LinearHashing in[483].Ageneralization ofLinearHashing fordistributed envi~\nronments isdescribed in[487].Therehasbeenextensive research intohash-based indexing\ntechniques. Larsondescribes twovariations ofLinearHashing in[469]and[470].Ramakr\u00ad\nishnapresents ananalysis ofhashing techniques in[607].Hashfunctions thatdonotproduce\nbucketoverflows arestudiedin[608].Order-preserving hashing techniques arediscussed in\n[484]and[308].Partitioned-hashing, inwhicheachfieldishashedtoobtainsomebitsof\nthebucketaddress, extends hashing forthecaseofqueriesinwhichequality conditions are\nspecified onlyforsomeofthekeyfields.Thisapproach wasproposed byRivest[628]andis\ndiscussed in[747];afurtherdevelopment isdescribed in[616].", "425": "PARTN\nQUERY EVALUATION", "426": "", "427": "12\nOVERVIEW OFQUERY\nEVALUATION\n....Whatdescriptive information doesaDBMSstoreinitscatalog?\n....Whatalternatives areconsidered forretrieving rowsfromatable?\n....~WhydoesaDBMSimplement severalalgorithms foreachalgebra\noperation? Whatfactorsaffecttherelative performance ofdifferent\nalgorithms?\n....Whatarequeryevaluation plansandhowaretheyrepresented?\n....Whyisitimportant tofindagoodevaluation planforaquery?How\nisthisdoneinarelational DBMS?\n..Keyconcepts: catalog, systemstatistics; fundamental techniques,\nindexing, iteration, andpartitioning; accesspaths,matching indexes\nandselection conditions; selection operator, indexesversusscans,im\u00ad\npactofclustering; projection operator, duplicate elimination; joinop\u00ad\nerator,indexnested-loops join,sort-merge join;queryevaluation plan;\nmaterialization vs.pipelinining; iterator interface; queryoptimiza\u00ad\ntion,algebraequivalences, planenumeration; costestimation\nThisveryremarkable man,commends amostpractical plan:\nYoucandowhatyouwant,ifyoudon'tthinkyoucan't,\nSoc1on'tthinkyoucan'tifyoucan.\n~~~--~Charles Inge\nInthischapter, wepresentanoverview ofhowqueriesareevaluated inarela\u00ad\ntionalDBMS. Vvebeginwithadiscussion ofhowaDBMSdescribes thedata\n393", "428": "394 CHAPTER 12\nthatitmanages, including tablesandindexes, inSection12.1.Thisdescriptive\ndata,ormetadata, storedinspecialtablescalledthesystem catalogs, is\nusedtofindthebestwaytoevaluate aquery.\nSQLqueriesaretranslated intoanextended formofrelational algebra, and\nqueryevaluation plansarerepresented astreesofrelational operators, along\nwithlabelsthatidentifythealgorithm touseateachnode.Thus,relational op\u00ad\neratorsserveasbuilding blocksforevaluating queries,andtheimplementation\noftheseoperators iscarefully optimized forgoodperformance. Weintroduce\noperator evaluation inSection12.2anddescribe evaluation algorithms forvar\u00ad\niousoperators inSection12.3.\nIngeneral, queriesarecomposed ofseveraloperators, andthealgorithms for\nindividual operators canbecombined inmanywaystoevaluate aquery.The\nprocessoffindingagoodevaluation planiscalledqueryoptimization. Weintro\u00ad\nducequeryoptimization inSection12.4.Thebasictaskinqueryoptimization,\nwhichistoconsider severalalternative evaluation plansforaquery,ismoti\u00ad\nvatedthrough examples inSection12.5.InSection12.6,wedescribe thespace\nofplansconsidered byatypicalrelational optimizer.\nTheideasarepresented insufficient detailtoallowreaderstounderstand\nhowcurrentdatabase systems evaluate typicalqueries. Thischapterprovides\nthenecessary background inqueryevaluation forthediscussion ofphysical\ndatabase designandtuninginChapter 20.Relational operator implementa\u00ad\ntionandqueryoptimization arediscussed furtherinChapters 13,14,and15;\nthisin-depth coverage describes howcurrentsystems areimplemented.\nWeconsider anumber ofexample queriesusingthefollowing schema:\nSailors(sid: integer, .mame:string, rating:integer, age:real)\nReserves(sid: integer, bid:integer, day:dates,marne:string)\nWeaSSUlnethateachtupleofReserves is40byteslong,thatapagecanhold\n100Reserves tuples,andthatwehave1000pagesofsuchtuples.Similarly,\nweassumethateachtupleofSailorsis50byteslong,thatapagecanhold80\nSailorstuples,andthatwehave500pagesofsuchtuples.\n12.1THESYSTEM CATALOG\n\\Vecanstoreatableusingoneofseveralalternative filestructures, andwecan\ncreateoneormoreindexes -eachstoredasafile011everytal)le.Conversely,\ninarelational DBMS, everyfilecontains eitherthetuplesinatableorthe", "429": "Overview ofQueryEvaluation 395\nentriesinanindex.Thecollection offilE'-scorresponding tousers'tablesand\nindexesrepresents thedatainthedataba.<;e.\nArelational DBMSmaintains information abouteverytableandindexthatit\ncontains. Thedescriptive information isitselfstoredinacollection ofspecial\ntablescalledthecatalog tables. Anexample ofacatalogtableisshown\ninFigure12.1.Thecatalogtablesarealsocalledthedatadictionary, the\nsystem catalog, orsimplythecatalog.\n12.1.1Information intheCatalog\nLetusconsider whatisstoredinthesystemcatalog. Ataminimum, we\"have\nsystem-wide information, suchasthesizeofthebufferpoolandthepagesize,\nandthefollowing information aboutindividual tables,indexes, andviews:\n\u2022Foreachtable:\n-Itstablename,thefilename(orsomeidentifier), andthefilestructure\n(e.g.,heapfile)ofthefileinwhichitisstored.\n-Theattribute nameandtypeofeachofitsattributes.\n-Theindexnameofeachindexonthetable.\n-Theintegrity constmints (e.g.,primary keyandforeignkeyconstraints)\nonthetable.\n\u2022Foreachindex:\n-Theinde:I:nameandthestructure (e.g.,B+tree)oftheindex.\n-Thesearchkeyattributes.\n\u2022Foreachview:\n-Itsviewnameanddefinition.\nInaddition, statistics abouttablesandindexesarestoredinthesystemcatalogs\nandupdated periodically (noteverytimetheunderlying tablesaremodified).\nThefollowing information iscommonly stored:\n\u2022Cardinality: ThenumberoftuplesNTaplcs(R) foreachtableR.\n\u2022Size:ThenumberofpagesNPages(R) foreachtableR.\n\u2022IndexCardinality: ThenumberofdistinctkeyvaluesNKeys(I) foreach\nindexI.\n\u2022IndexSize:ThenUluberofpagesINPages(I) foreachindexI.(ForaB+\ntreeindexI,wetakeINPagcs tobethenumber ofleafpages.)", "430": "396 CHAPTER 12\n\u2022IndexHeight: ThenumberofnonleaflevelsIHe'ight(I)foreachtreeindex\nI.\n\u2022IndexRange: Theminimum presentkeyvalueILow(I)andthemaximum\npresentkeyvalueINigh(I) foreachindexI.\nvVeassumethatthedatabase architecture presented inChapter 1isused.\n.Further, weassumethateachfileofrecordsisimplemented asaseparate fileof\npages.Otherfileorganizations arepossible, ofcourse.Forexample, apagefile\ncancontainpagesthatstorerecordsfrommorethanonerecordfile.Ifsucha\nfileorganization isused,additional statistics mustbemaintained, suchasthe\nfraction ofpagesinafilethatcontainrecordsfromagivencollection ofrecords.\nThecatalogs alsocontaininformation aboutusers,suchasaccounting infor\u00ad\nmationandauthorization information (e.g.,JoeUsercanmodifytheReserves\ntablebutonlyreadtheSailorstable).\nHowCatalogs areStored\nAnelegantaspectofarelational DBMSisthatthesystemcatalog isitself\nacollection oftables. Forexample, wemightstoreinformation aboutthe\nattributes oftablesinacatalogtablecalledAttribute_Cat:\nAttribute_Cat( attLnatne: string, reLname: string,\ntype:string, position: integer)\nSuppose thatthedatabase contains thetwotablesthatweintroduced atthe\nbegining ofthischapter:\nSailors(sid: integer, sname:string, rating:integer, age:real)\nReserves(sid: integer, bid:integer, day:dates,mame:string)\nFigure12.1showsthetuplesintheAttribute_Cat tablethatdescribe theat-\u00ad\ntributes ofthesetwotables.Notethatinaddition tothetuplesdescribing\nSailorsandReserves, othertuples(thefirstfourlisted)describe thefourat\u00ad\ntributes oftheAttribute_Cat tableitself[Theseothertuplesillustrate anim\u00ad\nportantPoint:thecatalogtablesdescribe allthetablesinthedatabase, includ\u00ad\ningthecatalogtablesthemselves. Wheninformation aboutatableisneeded,\nitisobtained fromthesystemcatalog. Ofcourse,attheimplementation level,\nwhenever theDBMSneedstofindtheschema ofacatalogtable,thecode\nthatretrieves thisinformation mustbehandled specially. (Otherwise, thecode\nha\",>toretrieve thisinformation fromthecatalogtableswithout, presumably,\nknowing theschemaofthecatalogtables.)", "431": "Overview ofQ'lLC'l~1jE1Jaluotion\nattT_narne rei \u00b7.>./...\u00b7.i.\u00b7>ttJTJe:<>\nattr_name Attribute_Cat string 1\nreLname Attribute_Cat string 2-_.-\ntype Attribute_Cat string 3\nposition Attribute_Cat integer 4\nsid Sailors integer 1\nsname Sailors string 2\nrating Sailors integer 3\nage Sailors real 4\nsid Reserves integer 1\nbid Reserves integer 2\nday Reserves dates 3\nrname Reserves string 4\nFigure 12.1AnInstance oftheAttribute_Cat Relation~397\nThefactthatthesystemcatalogisalsoacollection oftablesisveryuseful.For\nexample, catalogtablescanbequeriedjustlikeanyothertable,usingthequery\nlanguage oftheDBMS!Further, allthetechniques available forimplementing\nandmanaging tablesapplydirectly tocatalogtables.Thechoiceofcatalog\ntablesandtheirschema..., isnotuniqueandismadebytheimplementor ofthe\nDBMS. Realsystems varyintheircatalogschemadesign,butthecatalogis\nalwaysimplemented asacollection oftables,anditessentially describes allthe\ndatastoredinthedatabase.1\n12.2INTRODUCTION TOOPERATOR EVALUATION\nSeveralalternative algorithms areavailable forimplementing eachrelational\noperator, andformostoperators noalgorithm isuniversally superior. Several\nfactorsinfluence whichalgorithm performs best,including thesizesofthetables\ninvolved, existing indexesandsortorders,thesizeoftheavailable bufferpool,\nandthebufferreplacement policy.\nInthissection, wedescribe somecommon techniques usedindeveloping eval\u00ad\nuationalgorithms forrelational operators, andintroduce theconcept ofaccess\npaths,whicharethedifferent waysinwhichrowsofatablecanberetrieved.\nISomesystems maystoreadditional information inanon-relational form.Forexample, asystem\nwithasophisticated queryoptimizer maymaintain histograms orotherstatistical information about\nthedistribution ofvaluesincertainattributes ofatable.\\Vecanthinkofsuchinformation, whenit.\nismaintained, asasupplement tothecatalogtables.", "432": "398 CHAPTER 12\n12.2.1ThreeCommon Techniques\nThealgorithms forvariousrelational operators actually havealotincommon.\nAfewsimpletechniques areusedtodevelop algorithms foreachoperator:\nIIIIndexing: Ifaselection orjoincondition isspecified, useanindexto\nexamine justthetuplesthatsatisfythecondition.\nIIIIteration: Examine alltuplesinaninputtable,oneaftertheother.If\nweneedonlyafewfieldsfromeachtupleandthereisanindexwhosekey\ncontains allthesefields,insteadofexamining datatuples,wecanscanall\nindexdataentries. (Scanning alldataentriessequentially makesnouse\noftheindex'sha.8h-ortree-based searchstructure; inatreeindex,for\nexample, wewouldsimplyexamine allleafpagesinsequence.)\nIIIPartitioning: Bypartitioning tuplesonasortkey,wecanoftendecom\u00ad\nposeanoperation intoalessexpensive collection ofoperations onparti\u00ad\ntions.Sortingandhashingaretwocommonly usedpartitioning techniques.\nWediscusstheroleofindexing inSection12.2.2.Theiteration andpartitioning\ntechniques areseeninSection12.3.\n12.2.2AccessPaths\nAnaccesspathisawayofretrieving tuplesfromatableandconsists of\neither(1)afilescanor(2)anindexplusamatching selection condition. Every\nrelational operator acceptsoneormoretablesasinput,andtheaccessmethods\nusedtoretrieve tuplescontribute significantly tothecostoftheoperator.\nConsider asimpleselection thatisaconjunction ofconditions oftheform\nattTop'ualue,whereopisoneofthecomparison operators<,::;,=,=f.,~,\nor>.Suchselections aresaidtobeinconjunctive normal form(CNF),\nandeachcondition iscalledaconjunct.2Intuitively, anindexmatches a\nselection condition iftheindexcanbeusedtoretrievejustthetuplesthat\nsatis(ythecondition.\nIIIAhashindexmatches aCNFselection ifthereisatermoftheform\nattribute=1wJue intheselection foreachattribute intheindex'ssearchkey.\nIIIAtreeindexmatches aCNFselection ifthereisatermoftheform\nattTibute opvalueforeachattribute inaprefLroftheindex'ssearchkey.\n((eL;and(a,b;areprefixes ofkey(a,b,e),but(a,e)and(b,e)arenot.)\n2Weconsider morecomplex selection conditions inSection 14.2.", "433": "Overview ofQue7'.I!Evaluation 399\nNotethatopcanbeanycomparison; itisnotn:Btricted toheequality as\nitisformatching selections onah&\"hindex.\nAnindexcanmatchsomesubsetoftheconjuncts inaselection condition (in\nCNP),eventhoughitdoesnotmatchtheentirecondition. \\Verefertothe\nconjuncts thattheindexmatches astheprimary conjuncts intheselection.\nThefollowing examples illustrate accesspaths.\n\u2022IfwehaveahashindexHonthesearchkeyCmarne,bid,sirf),wecan\nusetheindextoretrievejusttheSailorstuplesthatsatisfythecondition\nrnarne='Joe'l\\ bid=51\\sid=3.Theindexmatches theentirecondition\n77wme= 'Joe'1\\bid=51\\sid=3.Ontheotherhand,iftheselection con\u00ad\nditionisrname= 'Joe'1\\bid=5,orsomecondition ondate,thisindexdoes\nnotmatch.Thatis,itcannotbeusedtoretrievejustthetuplesthatsatisfy\ntheseconditions.\nIncontrast, iftheindexwereaB+tree,itwouldmatchbothrname= 'Joe'\n1\\bid=51\\ 8id=3andmame='Joe' 1\\bid=5.However, itwouldnotmatch\nbid=51\\sid=8(sincetuplesaresortedprimarily byrnarne).\n\u2022Ifwehaveanindex(hashortree)onthesearchkey(bid,sid'; andthese\u00ad\nlectioncondition 'rname= 'Joe'1\\bid=51\\sid=3,wecanusetheindexto\nretrievetuplesthatsatisfybid=51\\ sid=3;thesearetheprimary conjuncts.\nThefraction oftuplesthatsatisfytheseconjuncts (andwhether theindex\nisclustered) determines thenumber ofpagesthatareretrieved. Thead\u00ad\nditional condition onTna7nemustthenbeappliedtoeachretrieved tuple\nandwilleliminate someoftheretrieved tuplesfromtheresult.\n1iIIfwehaveanindexonthesearchkey(bid, si(~andwealsohaveaB+tree\nindexonday,theselection condition day<8/9/2002 1\\bid=51\\sid=3\noffersusachoice.Bothindexesmatch(partof)theselection condition,\nandwecanuseeithertoretrieveReserves tuples.\\Vhichever indexweuse,\ntheconjuncts intheselection condition thatarenotmatched bytheindex\n(e.g.,bid=51\\ sid=3ifweusetheB+treeindexonday)mustbechecked\nforeachretrieved tuple.\nSelectivity ofAccessPaths\nTheselectivity ofanaccesspathisthenumberofpagesretrieved (indexpages\nplusdatapages)ifweuscthisaccesspathtoretrieve alldesiredtuples.Ifa\ntablecontains anindexthatmatches agivenselection, thereareatlea.sttwo\naccesspaths:theindexandascanofthedatafile.Sometimes, ofcourse,we\ncanscantheindexitself(ratherthanscanning thedatafileorusingtheindex\ntoprobethefile),givingusathird,'lccesspath.", "434": "400 CHAPTER l2\nThemostselective accesspathistheonethatretrieves thefewestpages;\nusingthemostselective accesspathminimizes thecostofdataretrieval. The\nselectivity ofanl:lCCeSSpathdepends ontheprimary conjuncts intheselection\ncondition (withrespecttotheindexinvolved). Eachconjunct actsasafilter\nonthetable.Thefractionoftuplesinthetablethatsatisfyagivenconjunct is\ncalledthereduction factor. 'Whenthereareseveralprimary conjuncts, the\nfraction oftuplesthatsatisfyallofthemcanbeapproximated bytheproduct\noftheirreduction factors; thiseffectively treatsthemasindependent filters,\nandwhiletheymaynotactually beindependent, theapproximation iswidely\nusedinpractice.\nSuposewehaveahashindexHonSailorswithsearchkey(rname,bid,sid:), and\nwearegiventheselection condition rname='Joe' 1\\bid=51\\sid=3.Wecan\nusetheindextoretrieve tuplesthatsatisfyallthreeconjuncts. Thecatalog\ncontains thenumber ofdistinctkeyvalues,NKeys(H), inthehashindex,as\nwellasthenumber ofpages,NPages,intheSailorstable.Thefraction of\npagessatisfying theprimary conjuncts isNpages(Sailors) .NI<e;s(H)'\nIftheindexhassearchkey(bid,sid:),theprimary conjuncts arebid=51\\ sid=3.\nIfweknowthenumber ofdistinct valuesinthebidcolumn, wecanestimate\nthereduction factorforthefirstconjunct. Thisinformation isavailable in\nthecatalogifthereisanindexwithbidasthesearchkey;ifnot,optimizers\ntypically useadefaultvaluesuchas1/10.Multiplying thereduction factors\nforbid=5andsid=3givesus(underthesimplifying independence assumption)\nthefraction oftuplesretrieved; iftheindexisclustered, thisisalsothefraction\nofpagesretrieved. Iftheindexisnotclustered, eachretrieved tuplecouldbe\nonadifferent page.(Review Section8.4atthistime.)\nvVeestimate thereduction factorforarangecondition sucha.sday>8/9/2002\nbyassuming thatvaluesinthecolumn cLreuniformly distributed. Ifthereisa\nBtT'thkdtldt'ft' High(T) ~value +ree WIeyay,1ereucIOnacorISH'!(T)L\u00b7(T)'tg1.-AJW\n12.3ALGORITHMS FORRELATIONAL OPERATIONS\nvVenowbrieflydiscussevaluation algorithms forthemainrelational operators.\n~'hiletheimportant idea.sareintroduced here,amorein-depth treatment is\ndeferred toChapter 14.AsinChapter 8,weconsider onlyI/Ocostsand\nmea.'mre I/Ocostsintermsofthenumber ofpageI/Os.Inthischapter, we\nusedetailed examples toillustrate howtocompute thecostofanalgorithm.\nAlthough wedonotpresentrigorous costformulas inthischapter, thereader\nshouldbeabletoapplytheunderlying icleastodocostcalculations onother\nsimilarexamples.", "435": "Overview ofQueryEvaluation\n12.3.1Selection40)\nTheselection operation isasimpleretrieval oftuplesfromatable,andits\nimplementation isessentially covered inourdiscussion ofaccesspaths.To\nsummarize, givenaselection oftheformerRattropvalue(R), ifthereisnoindex\nonR.attr,wehavetoscanR.\nIfoneormoreindexesonRmatchtheselection, wecanusetheindextore\u00ad\ntrievematching tuples,andapplyanyremaining selection conditions tofurther\nrestricttheresultset.Asanexample, consider aselection oftheformrname\n<'C%'ontheReserves table.Assuming thatnamesareuniformly distributed\nwithrespecttotheinitialletter,forsimplicity, weestimate thatroughly 10%\nofReserves tuplesareintheresult.Thisisatotalof10,000tuples,or100\npages.Ifwehaveaclustered B+treeindexonthernamefieldofReserves, we\ncanretrievethequalifying tupleswith100l/Os(plusafewl/Ostotraverse\nfromtheroottotheappropriate leafpagetostartthescan).However, ifthe\nindexisunclustered ,wecouldhaveupto10,000l/Osintheworstcase,since\neachtuplecouldcauseustoreadapage.\nAsaruleofthumb,itisprobably cheaper tosimplyscantheentiretable\n(instead ofusinganunclustered index)ifover5%ofthetuplesaretobe\nretrieved.\nSecSection14.1formoredetailsonimplementation ofselections.\n12.3.2Projection\nTheprojection operation requires ustodropcertainfieldsoftheinput,which\niseasytodo.Theexpensive aspectoftheoperation istoensurethatno\nduplicates appearintheresult.Forexample, ifweonlywantthesidandbid\nfieldsfromReserves, wecouldhaveduplicates ifasailorhasreserved agiven\nboatonseveraldays.\nIfduplicates neednotbeeliminated (e.g.,theDISTINCT keyword isnotin\u00ad\ncludedintheSELECT clause),projection consists ofsimplyretrieving asubset\noffieldsfromeachtupleoftheinputtable.Thiscanbeaccomplished bysimple\niteration oneitherthetableoranindexwhosekeycontains allnecessary fields.\n(Notethatwedonotcarewhether theindexisclustered, sincethevalueswe\nwantareinthedataentriesoftheindexitself!)\nIfwehavetoeliminate duplicates, wetypically havetousepartitioning. Sup\u00ad\nposewewanttoobtain(sid,bid')byprojecting fromReserves. \\Vecanpartition\nby(1)scanning H.eserves toobtain(sid,b'id';pairsand(2)sortingthesepairs", "436": "402 CHAPTER 12\nusing(s'id,bid)asthesortkey.\"\"Vecanthenscanthesortedpairsandeasily\ndiscardduplicates, whicharenowadjacent.\nSortinglargedisk-resident datasets isaveryimportant operation indatabase\nsystems, andisdiscussed inChapter 13.Sortingatabletypically requires two\northreepasses,eachofwhichreadsandwritestheentiretable.\nTheprojection operation canbeoptimized bycombining theinitialscanof\nReserves withthescaninthefirstpassofsorting. Similarly, thescanning\nofsortedpairscanbecombined withthelastpassofsorting. Withsuchan\noptimized implemention, projection withduplicate elimination requires (1)a\nfirstpassinwhichtheentiretableisscanned, andonlypairs(s'id,bid)are\nwrittenout,and(2)afinalpassinwhichallpairsarescanned, butonlyone\ncopyofeachpairiswrittenout.Inaddition, theremightbeanintermediate\npassinwhichallpairsarereadfromandwrittentodisk.\nTheavailability ofappropriate indexescanleadtolessexpensive plansthan\nsortingforduplicate elimination. Ifwehaveanindexwhosesearchkeycontains\nallthefieldsretained bytheprojection, wecansortthedataentriesinthe\nindex,ratherthanthedatarecordsthemselves. Ifalltheretained attributes\nappearinaprefixofthesearchkeyforaclustered index,wecandoeven\nbetter;wecansimplyretrievedataentriesusingtheindex,andduplicates are\neasilydetected sincetheyareadjacent. Theseplansarefurtherexamples of~\n'index-only evaluation strategies, whichwediscussed inSection8.5.2.\nSeeSection14.3formoredetailsonimplementation ofprojections.\n12.3.3Join\nJoinsareexpensive operations andverycommon. Therefore, theyhavebeen\nwidelystudied, andsystems typically support severalalgorithms tocarryout\njoins.\nConsider thejoinofReserves andSailors,withthejoinconclition Reserves.sid =\nSa'ilors.sid. Suppose thatoneofthetables,saySailors,hasanindexonthe\nsidcolumn. \"\"VecanscanReserves and,foreachtuple,usetheindextopTObe\nSailorsformatGhing tuples.Thisapproach iscalledindexnestedloopsjoin.\nSuppose thatwehaveaha.'3h-based indexusingAlternative (2)onthesid\nattribute ofSailorsandthatittakesabout1.21/0sonaverage:Jtoretrieve\ntheappropriate pageoftheindex.Sinces'idisakeyforSailors,wehaveat\n:IThisisatypicalcostforhash-based indexes.", "437": "Ovenl'iew ofQueryE1.1aluat'ion 403\nmostonematching tuple,Indeed,sidinReserves isaforeignkeyreferring\ntoSailors,andtherefore wehaveexactlyonematching Sailorstupleforeach\nReserves tuple,Letusconsider thecostofscanning Reserves andusingthe\nindextoretrievethematching SailorstupleforeachReserves tuple,Thecostof\nscanning Reserves is1000.Thereare100*1000tuplesinReserves. Foreachof\nthesetuples,retrieving theindexpagecontaining theridofthematching Sailors\ntuplecosts1.2I/Os(onaverage); inaddition, wehavetoretrievetheSailors\npagecontaining thequalifying tuple,Therefore, wehave100,000*(1+1.2)\nI/Ostoretrievematching Sailorstuples.Thetotalcostis221,000I/Os.4\nIfwedonothaveanindexthatmatches thejoincondition oneithertable,we\ncannotuseindexnestedloops,Inthiscase,wecansortbothtablesonthejoin\ncolumn, andthenscanthemtofindmatches. Thisiscalledsort-merge join..\nAssuming thatwecansortReserves intwopasses,andSailorsintwopasses\naswell,letusconsider thecostofsort-merge join.Consider thejoinofthe\ntablesReserves andSailors.Because wereadandwriteReserves ineachpass,\nthesortingcostis2*2*1000=4000I/Os.Similarly, wecansortSailorsata\ncostof2*2*500=2000I/Os.Inaddition, thesecondphaseofthesort-merge\njoinalgorithm requires anadditional scanofbothtables.Thusthetotalcost\nis4000+2000+1000+500=7500I/Os.\nObserve thatthecostofsort-merge join,whichdoesnotrequireapre-existing\nindex,islowerthanthecostofindexnestedloopsjoin,Inaddition, theresult\nofthesort-merge joinissortedonthejoincolumn(s). Otherjoinalgorithms\nthatdonotrelyonanexisting indexandareoftencheaperthanindexnested\nloopsjoinarealsoknown(blocknestedloopsandhashjoins;seeChapter 14).\nGiventhis,whyconsider indexnestedloopsatall?\nIndexnestedloopshastheniceproperty thatitisincremental. Thecostofour\nexample joinisincremental inthenumber ofReserves tuplesthatweprocess.\nTherefore, ifsomeadditional selection inthequeryallowsustoconsider only\nasmallsubsetofReserves tuples,wecanavoidcomputing thejoinofReserves\nandSailorsinitsentirety. Forinstance, supposethatweonlywanttheresult\nofthejoinforboat101,andthereareveryfewsuchreservations. foreach\nsuchReserves tuple,weprobeSailors,andweareclone.Ifweusesort-merge\njoin,ontheotherhand,wehavetoscantheentireSailorstableatleastonce,\nandthecostofthisstepaloneislikelytobemuchhigherthantheentirecost\nofindexnestedloopsjoin.\nObserve thatthechoiceofindexnestedloopsjoinisbasedonconsidering the\nqueryasawhole,including theextraselection allReserves, ratherthanjust\n-~~~~-~---~---\n4Asanexercise, thereadershouldwriteformulas forthecostestimates inthisexample interms\noftheproperties e.g.\u2022NPages-of thetablesandindexes involved.", "438": "404 CHAPTER i2\nthejoinoperation byitself.Thisleadsustoournexttopic,queryoptimization,\nwhichistheprocessoffindingagoodplanforanentirequery.\nSeeSection14.4formoredetails.\n12.3.4OtherOperations\nASQLquerycontains group-by andaggregation inaddition tothebasicre\u00ad\nlational operations. Different queryblockscanbecombined withunion,set\u00ad\ndifference, andset-intersection.\nTheexpensive aspectofsetoperations suchasunionandintersection isdu\u00ad\nplicateelimination, justlikeforprojection. Theapproach usedtoimplement\nprojection iseasilyadapted fortheseoperations a..swell.SeeSection14.5for\nmoredetails.\nGroup-by istypically implemented through sorting. Sometimes, theinputtable\nhasatreeindexwithasearchkeythatmatches thegrouping attributes. Inthis\ncase,wecanretrieve tuplesusingtheindexintheappropriate orderwithout\nanexplicitsortingstep.Aggregate operations arecarriedoutusingtemporary\ncounters inmainmemory astuplesareretrieved. SeeSection 14.6formore\ndetails.\n12.4INTRODUCTION TOQUERY OPTIMIZATION\nQueryoptimization isoneofthemostimportant tasksofarelational DBMS.\nOneofthestrengths ofrelational querylanguages isthewidevarietyofwaysin\nwhichausercanexpressandthusthesystemcanevaluate aquery.Although\nthisflexibility makesiteasytowritequeries, goodperformance reliesgreatly\nonthequalityofthequeryoptimizer\u00b7\u00b7\u00b7a givenquerycanbeevaluated inmany\nways,andthedifference incostbetween thebestandworstplansmaybe\nseveralordersofmagnitude. Realistically, wecannotexpedtoalwaysfindthe\nbestplan,butweexpecttoconsistently findaplanthatisquitegood.\nAmoredetailed viewofthequeryoptimization andexecution layerinthe\nDBMSarchitecture fromSection 1.8isshowninFigure12.2.Queries are\nparsedandthenpresented toaqueryoptimizer, whichisresponsible for\nidentifying anefficient execution plan.Theoptimizer generates alternative\nplansandchoosestheplanwit.htheleastestimated cost.\nThespaceofplansconsidered byatypicalrelational queryoptimizer can be\nunderstood byrecognizing thataqueryisessentially treatedasaa-Ii-CXJ\nalgebra c;r;prc88'lon, withtheremaining operations (ifany,inagivenquery)", "439": "Overview ofQucryEvaJuat'lon 4115\n\u2022QUet}'\nI'--\"'---'-'~'-\"'-'--'-I QueryParser\nI~__._.\u2022.\u2022_~~ __tParsedquery\nEvaluation plan---1\nr\nPlanCost ICatalog\nEstimatorIManagerQueryOptimizer\nPlan\nQueryPlanEvaluator\nFigure12.2QueryParsing, Optimization, andExecution\nCommercialOptimizers: Current relational DBMSoptimizers arevery\ncomplex piecesofsoftware withmanycloselyguarded details,andthey\ntypically represent 40to50man-years ofdevelopment effort!\ncarriedoutontheresultofthe (J\"-7f-[Xlexpression. Optimizing sucha\nrelational algebraexpression involves twobasicsteps:\n\u2022Enumerating alternative plansforevaluating theexpression. Typically, an\noptimizer considers asubsetofallpossible plansbecause thenumber of\npossible plansisverylarge.\n\u2022Estimating thecostofeachenumerated planandchoosing theplanwith\nthelowestestimated cost.\nInthissectionwelaythefoundation forourdiscussion ofqueryoptimization\nbyintroducing evaluation plans.\n12.4.1QueryEvaluation Plans\nAqueryevaluation plan(orsimplyplan)consists ofanextended relational\nalgebra tree,withadditional annotations ateachnodeindicating theaccess\nmethods touseforeachtableandtheimplementation methodtouseforeach\nrelational operator.\nConsider thefollowing SQLquery:", "440": "406\nSELECT\nFROM\nWHERES.sname\nReserves R,SailorsS\nR.sid=S.sid\nANDR.bid=100ANDS.rating>5CHAPTERi2\nThisquerycanbeexpressed inrelational algebraasfollows:\n7fsname(O'bid=100/\\mting>5 (ReservesMsid=sidSailor s))\nThisexpression isshownintheformofatreeinFigure12.3.Thealgebra\nexpression partially specifies howtoevaluate thequery-owe firstcompute the\nnaturaljoinofReserves andSailors,thenperform theselections, andfinally\nprojectthesnarnefield.\nITsname\nI\n0-bid=100Arating>5\nI\nReserves Sailors\nFigure12.3QueryExpressed asaRelational Algebra Tree\nToobtainafullyspecified evaluation plan,wemustdecideonanimplemen\u00ad\ntationforeachofthealgebraoperations involved. }orexample, wecanuse\napage-oriented simplenestedloopsjoinwithReserves astheoutertableand\napplyselections andprojections toeachtupleintheresultofthejoinasitis\nproduced; theresultofthejoinbeforetheselections andprojections isnever\nstoredinitsentirety. Thisqueryevaluation planisshowninFigure12.4.\nITsname (Orl-/he-}7y)\nI\nI\nO'bid=100Arating>5(Oll-Ihe-fly)\n[><.::J (Simple IIcslcdloops)\nsid=sid\n//~/\n(FileSCOII) Reserves Sailors (File,,'um)\nFigure12.4QueryEvaluation PlanforSampleQuery", "441": "Overview ofQueryEval'uation 407\nJ\nIndrawing thequeryevaluation plan,wehaveusedtheconvention thatthe\noutertableistheleftchildofthejoinoperator. vVeadoptthisconvention\nhenceforth.\n12.4.2Multi-operator Queries: Pipelined Evaluation\nWhenaqueryiscomposed ofseveraloperators, theresultofoneoperator is\nsometimes pipelined toanotheroperator without creating atemporary table\ntoholdtheintermediate result.TheplaninFigure12.4pipelines theoutputof\nthejoinofSailorsandReserves intotheselections andprojections thatfollow.\nPipelining theoutputofanoperator intothenextoperator savesthecostof\nwritingouttheintermediate resultandreadingitbackin,andthecostsav\u00ad\ningscanbesignificant. Iftheoutputofanoperator issavedinatemporary\ntableforprocessing bythenextoperator, wesaythatthetuplesarematerial\u00ad\nized.Pipelined evaluation hasloweroverhead coststhanmaterialization and\nischosenwhenever thealgorithm fortheoperator evaluation permits it.\nTherearemanyopportunities forpipelining intypicalqueryplans,evensimple\nplansthatinvolveonlyselections.. Consider aselection queryinwhichonly\npartoftheselection condition matches anindex.Wecanthinkofsuchaquery\nascontaining twoinstances oftheselection operator: Thefirstcontains the\nprimary, ormatching, partoftheoriginal selection condition, andthesecond\ncontains therestoftheselection condition. Wecanevaluate suchaquery\nbyapplying theprimary selection andwritingtheresulttoatemporary table\nandthenapplying thesecondselection tothetemporary table.Incontrast,\napipelined evaluation consists ofapplying thesecondselection toeachtuple\nintheresultoftheprimary selection asitisproduced andaddingtuplesthat\nqualifytothefinalresult.Whentheinputtabletoaunaryoperator (e.g.,\nselection orprojection) ispipelined intoit,wesometimes saythattheoperator\nisappliedon-the-fly.\nAsasecondandmoregeneralexample, consider ajoinoftheform(ACXJB)1><1\nC,showninFigure12.5&'3atreeofjoinoperations.\nResulttuples\noffirstjoin\npipelinedinto\njoinwithC\nFigure12.5AQueryTreeIllustrating Pipelilling", "442": "408 CHAPTER ~2\nBothjoinscanbeevaluated inpipelined fa.<;hionusingsomeversionofanested\nloopsjoin.Conceptually, theevaluation isinitiated fromtheroot,andthenode\njoiningAandBproduces tuplesasandwhentheyarerequested byitsparent\nnode.'Whentherootnodegetsapageoftuplesfromitsleftchild(theouter\ntable),allthematching innertuplesareretrieved (usingeitheranindexora\nscan)andjoinedwithmatching outertuples;thecurrentpageofoutertuples\nisthendiscarded. Arequestisthenmadetotheleftchildforthenextpage\noftuples,andtheprocessisrepeated. Pipelined evaluation isthusacontrol\nstrategygoverning therateatwhichdifferent joinsintheplanproceed. Ithas\nthegreatvirtueofnotwritingtheresultofintermediate joinstoatemporary\nfilebecause theresultsareproduced, consumed, anddiscarded onepageata\ntime.\n12.4.3TheIteratorInterface\nAqueryevaluation planisatreeofrelational operators andisexecuted by\ncallingtheoperators insome(possibly interleaved) order.Eachoperator has\noneormoreinputsandanoutput,whicharealsonodesintheplan,andtuples\nmustbepa.<;sedbetween operators according totheplan'streestructure.\nTosimplify thecoderesponsible forcoordinating theexecution ofaplan,the\nrelational operators thatformthenodesofaplantree(whichistobeevaluated\nusingpipelining) typically support auniform iterator interface, hidingthe\ninternal implementation detailsofeachoperator. Theiterator interface for\nanoperator includes thefunctions open,geLnext, andclose.Theopen\nfunction initializes thestateoftheiterator byallocating buffersforitsinputs\nandoutput,andisalsousedtopa..\"sinarguments suchac;selection conditions\nthatmodifythebehavior oftheoperator. Thecodefortheget-next function\ncallstheget-next function oneachinputnodeandcallsoperator-specific code\ntoprocesstheinputtuples.Theoutputtuplesgenerated bytheprocessing\nareplacedintheoutputbufferoftheoperator, andthestateoftheiteratoris\nupdated tokeeptrackofhowmuchinputhac;beenconsumed. \\i\\1henalloutput\ntupleshavebeenproduced through repeated callstoget-ne:rt, theclosefunction\niscalled(bythecodethatinitiated execution ofthisoperator) todeallocate\nstateinformation.\nTheiteratorinterface supports pipelining ofresultsnaturally: thedecision to\npipeline ormat(~rialize inputtuplesisencapsulated intheoperator-specific code\nthatprocesses inputtuples.Ifthealgorithm implemented fortheoperator\nallowsinputtuplestobeprocessed completely whentheyarereceived, input\ntuplesarenotInaterialized andtheevaluation ispipelined. Ifthealgorithm\nexamines thesameinputtuplesseveraltimes,theyarematerialized. This", "443": "Ov(;;'rvieu,) ofqueryEval'uaiion 409\n~\ndecision, likeotherdetailsoftheoperator's implementation, ishiddenbythe\niterator interface fortheoperator.\nTheiterator interface isalsousedtoencapsulate accessmethods suchasB+\ntreesandhash-ba.\"ied indexes. Externally, accessmethods canbeviewedsimply\nasoperators thatproduce astreamofoutputtuples.Inthiscase,theopen\nfunction canbeusedtopasstheselection conditions thatmatchtheaccess\npath.\n12.5ALTERNATIVE PLANS: AMOTIVATING EXAMPLE\nConsider theexample queryfromSection 12.4.Letusconsider thecostof\nevaluating theplanshowninFigure12.4.Weignorethecostofwritingout\nthefinalresultsincethisiscommon toallalgorithms, anddoesnotaffect\ntheirrelativecosts.Thecostofthejoinis1000+1000*500=501,000 page\nl/Os.Theselections andtheprojection aredoneon-the-fly anddonotincur\nadditional l/Os.Thetotalcostofthisplanistherefore 501,000 pagel/Os.\nThisplanisadmittedly naive;however, itispossible tobeevenmorenaiveby\ntreating thejoinasacross-product followed byaselection.\nvVenowconsider severalalternative plansforevaluating thisquery.Eachal\u00ad\nternative improves ontheoriginalplaninadifferent wayandintroduces some\noptimization idea.<;thatareexamined inmoredetailintherestofthischapter.\n12.5.1Pushing Selections\nAjoinisarelatively expensive operation, andagoodheuristic istoreduce\nthesizesofthetablestobejoinedasmuchaspossible. Oneapproach isto\napplyselections early;ifaselection operator appears afterajoinoperator, itis\nworthexamining whether theselection canbe'pushed' aheadofthejoin.As\nanexample, theselection bid=1()(}involves onlytheattributes ofReserves and\ncanbeappliedtoReserves befoTethejoin.Similarly, theselection mting>5\ninvolves onlyattributes ofSailorsandcanbeappliedtoSailorsbeforethejoin.\nLetussupposethattheselections areperformed usingasimplefilescan,that\ntheresultofeachselection iswrittentoatemporary tableondisk,andthat\nthetemporary tablesarethenjoinedusingasort-merge join.Theresulting\nqueryevaluation planisshowninFigure12.6.\nLetusassumethatfivebufferpagesareavailable andestimate thecostof\nthisqueryevaluation plan.(Itislikelythatmorebufferpagesareavailable\ninpractice. vVechoseasmallnumber simplyforillustration inthisexample.)\nThecostofapplying bid=100toReserves isthecostofscanning Reserves\n(1000pages)plusthecostofwritingtheresulttoatemporary table,sayTl.", "444": "410\nTTsname(On-the-fly)\nC><J(Sort-merge join)\nsid=sid\n(Scan;\nUbid=100 Urating >5(Scan;\nwriteto writeto\ntempTl)\nI Itemp12)\nFilescanReserves Sailors Filescan\nFigure12.6ASecondQueryEvaluation PlanCHAPTER J2\n(Notethatthecostofwritingthetemporary tablecannotbeignored-we can\nignoreonlythecostofwritingoutthefinalresultofthequery,whichisthe\nonlycomponent ofthecostthatisthesamefor\u00b7allplans.) Toestimate the\nsizeofTl,werequireadditional information. Forexample, ifweassumethat\nthemaximum number ofreservations ofagivenboatisone,justonetuple\nappears intheresult.Alternatively, ifweknowthatthereare100boats,we\ncanassumethatreservations arespreadoutuniformly acrossallboatsand\nestimate thenumber ofpagesinTltobe10.Forconcreteness, assumethat\nthenumberofpagesinTlisindeed10.\nThecostofapplying rating>5toSailorsisthecostofscanning Sailors(500\npages)plusthecostofwritingouttheresulttoatemporary table,say,T2.If\nweassumethatratingsareuniformly distributed overtherange1to10,we\ncanapproximately estimate thesizeofT2as250pages.\nTodoasort-merge joinofTlandT2,letusassumethatastraightforward\nimplementation isusedinwhichthetwotablesarefirstcompletely sortedand\nthenmerged. Sincefivebufferpagesareavailable, weC8JlsortTl(whichha..s\n10pages)intwopa..'3ses.Tworunsoffivepageseachareproduced inthefirst\npassandthesearemergedinthesecondpass.Ineachpass,wereadandwrite\n10pages;thus,thecostofsortingTlis2*2*10=40pagel/Os.Weneed\nfourpa..'3sestosortT2,whichha..s250pages.Thecostis2*4*250=2000\npagel/Os.To,mergethesortedversions ofTlandT2,weneedtoscanthese\ntables,andthecostofthisstepis10+250=260.Thefinalprojection isdone\non-the-fly, andbyconvention weignorethecostofwritingthefinalresult.\nThetotalcostoftheplanshowninFigure12.6isthesumofthecostofthe\nselection (1000+10+500+250 =1760)andthecostofthejoin(40+2000+260 =\n23(0),thatis,4060pagel/Os.", "445": "Overview ofqueryEvaluation 411\nSort-merge joinisoneofseveraljoinmethods. \\Vemaybeabletoreducethe\ncostofthisplanbychoosing adifferent joinmethod. Asanalternative, suppose\nthat\\veusedblocknestedloopsjoininsteadofsort-merge join..UsingT1as\ntheoutertable,foreverythree-page blockofT1,wescanallofT2;thus,we\nscanT2fourtimes.Thecostofthejoinistherefore thecostofscanning T1\n(10)plusthecostofscanning T2(4*250=1000).Thecostoftheplanisnow\n1760+1010=2770pageI/Os.\nAfurtherrefinement istopushtheprojection, justlikewepushedtheselec\u00ad\ntionspastthejoin.Observe thatonlythesidattribute ofT1andthesidand\nsnameattributes ofT2arereallyrequired. AswescanReserves andSailorsto\ndotheselections, wecouldalsoeliminate unwanted columns. Thison-the-fly\nprojection reducesthesizesofthetemporary tablesT1andT2.Thereduction\ninthesizeofT1issubstantial because onlyanintegerfieldisretained. Infact,\nT1nowfitswithinthreebufferpages,andwecanperform ablocknestedloops\njoinwithasinglescanofT2.Thecostofthejoinstepdropstounder250page\nI/Os,andthetotalcostoftheplandropstoabout2000I/Os.\n12.5.2UsingIndexes\nIfindexesareavailable ontheReserves andSailorstables,evenbetterquery\nevaluation plansmaybeavailable. Forexample, suppose thatwehaveaclus\u00ad\nteredstatichashindexonthebidfieldofReserves andanotherhashindexon\nthesidfieldofSailors. Wecanthenusethequeryevaluation planshownin\nFigure12.7.\n(Usehash\nindex;do\nnotwrite\nresult10\nTemp)\nHashindexonbidITsname\n(Jrating>5\nsid=sid\nI\nReserves(Oil-the-fly)\n(OIl-the-f1y)\n(IlldexIlestedloops.\nwithpipelilling )\nSailors Hashilldexallsid\nFigure12.7AQueryEvaluation PlanUsingIndexes\nTheselection bid.=100 isperformed onReserves byusingthehashindexon\nbidtoretrieveonlymatching tuples.Asbefore,ifweknowthat100boatsare\navailable andassumethatreservations arespreadoutuniformly acrossallboats,", "446": "412 CHAPTER 12\n\\vecanestimate thenumberofselected tuplestobe100,000/100 =lOOO.Since\ntheindexonb'idisclustered, these1000tuplesappearconsecutively withinthe\nsamebucket;therefore, thecostis10pagel/Os.\n:Foreachselectedtuple,weretrievematching Sailorstuplesusingthehashindex\nonthesidfield;selected Reserves tuplesarenotmaterialized andthejoinis\npipelined. Foreachtupleintheresultofthejoin,weperform theselection\nmting>5 andtheprojection ofsnameon-the-fly. Thereareseveralimportant\npointstonotehere:\n1.Sincetheresultoftheselection onReserves isnotmaterialized, theopti\u00ad\nmization ofprojecting outfieldsthatarenotneededsubsequently isun\u00ad\nnecessary (andisnotusedintheplanshowninFigure12.7).\n2.ThejoinfieldsidisakeyforSailors.Therefore, atmostoneSailorstuple\nmatches agivenReserves tuple.Thecostofretrieving thismatching tuple\ndepends onwhether thedirectory ofthehashindexonthesidcolumnof\nSailorsfitsinmemory andonthepresence ofoverflow pages(ifany).How\u00ad\never,thecostdoesnotdependonwhether thisindexisclustered because\nthereisatmostonematching Sailorstupleandrequests forSailorstuples\naremadeinrandomorderbysid(because Reserves tuplesareretrieved by\nbidandaretherefore considered inrandomorderbysid).Forahashindex,\n1.2pagel/Os(onaverage) isagoodestimate ofthecostforretrieving a\ndataentry.Assuming thatthesidhashindexonSailorsusesAlternative\n(1)fordataentries,1.2l/Osisthecosttoretrieveamatching Sailorstu\u00ad\nple(andifoneoftheothertwoalternatives isused,thecostwouldbe2,2\nl/Os).\n3.vVehavechosennottopushtheselection mt'ing>5 aheadofthejoin,and\nthereisanimportant reasonforthisdecision.Ifweperformed theselection\nbeforethejoin,theselection wouldinvolvescanning Sailors,assuming that\nnoindexisavailable onthemt'ingfieldofSailors. Further, whether or\nnotsuchanindexisavailable, onceweapplysuchaselection, wehave\nnoindexonthesidfieldoftheresultoftheselection (unlesswechoose\ntobuildsuchanindexsolelyforthesakeofthesubsequent join).Thus,\npushing selections aheadofjoinsisagoodheuristic, butnotalwaysthe\nbeststrategy. Typically, asinthisexample, theexistence ofusefulindexes\nisthereasonaselection isnotpushed. (Otherwise, selections arepushed.)\nLetusestimate thecostoftheplanshowninFigure12.7.Theselection of\nReserves tuplescosts10l/Os,aswesawearlier.Thereare1000suchtuples,\nandforeach,thecostoffindingthematching Sailorstupleis1.2l/Os,on\naverage. Thecostofthisstep(thejoin)istherefore 1200l/Os.Allremaining\nselections andprojections areperformed on~the-fly. Thetotalcostoftheplan\nis1210l/Os.", "447": "Overview ofquer7!Evaluation 413\nAsnotedearlier,thisplandoesnotutilizeclustering oftheSailorsindex.The\nplancanbefurtherrefinediftheindexonthesidfieldofSailorsisclustered.\nSuppose wematerialize theresultofperforming theselection bid=100onRe\u00ad\nservesandsortthistemporary table.Thistablecontains 10pages.Selecting\nthetuplescosts10pagel/Os(asbefore),writingouttheresulttoatemporary\ntablecostsanother 10l/Os,andwithfivebufferpages,sortingthistemporary\ncosts2*2*10=40l/Os.(Thecostofthisstepisreduced ifwepushthe\nprojection onsid.Thesidcolumnofmaterialized Reserves tuplesrequires only\nthreepagesandcanbesortedinmemory withfivebufferpages.)Theselected\nReserves tuplescannowberetrieved inorderby8'id.\nIfasailorhasreserved thesameboatmanytimes,allcorresponding Reserves\ntuplesarenowretrieved consecutively; thematching Sailorstuplewillbefound\ninthebufFerpoolonallbutthefirstrequestforit.Thisimproved planalso\ndemonstrates thatpipelining isnotalwaysthebeststrategy.\nThecombination ofpushing selections andusingindexes illustrated bythis\nplanisverypowerful. Iftheselected tuplesfromtheoutertablejoinwitha\nsingleinnertuple,thejoinoperation maybecometrivial,andtheperformance\ngainswithrespecttothenaiveplaninFigure12.6areevenmoredramatic.\nThefollowing variantofourexample queryillustrates thissituation:\nSELECT\nFROM\nWHERES.sname\nReserves R,SailorsS\nRsid=S.sid\nANDR.bid=100ANDS.rating>G\nANDRday='8/9/2002'\nAslightvariantoftheplanshowninFigure12.7,designed toanswerthisquery,\nisshowninFigure12.8.Theselection day='8/9/2002' isappliedon-the-fly to\ntheresultoftheselection bid=100ontheReserves table.\nSuppose thatbidanddayformakeyforReserves. (Notethatthisassumption\ndiffersfromtheschemapresented earlierinthischapter.) Letusestimate the\ncostoftheplanshowninFigure12.8.Theselection bid=100costs10page\nl/Os,asbefore,andtheadditional selection day='8j.9/2002' isappliedon-the\u00ad\nfly,eliminating allbut(atmost)oneReserves tuple.Thereisatmostone\nrnatching Sailorstuple,andthisisretrieved in1.2l/Os(anaverage value).\nTheselection onrrdingandtheprojection onsnamearethenappliedon-the\u00ad\nflyatnoadditional cost.ThetotalcostoftheplaninFigure12.8isthusabout\n11I/Os.Incontrast, ifwemodifythenaiveplaninFigure12.6toperform\ntheadditional selection ondaytogether withtheselection bid=100, thecost\nremainsat501,000l/Os.", "448": "414\nTTsname\n1><1IO\"-the-jly)\nIOn-lhe-jlyj\nIIlIde.'lIested[oops,\nwilhl'il'eli\"i\"g)CHAPTER J2\n(On\u00b7the-fly)\n(Usehash\nindex;do\nf10twrite\nresultto\ntemp)aday='819194'\nI\nabid=100Sailors Hashi\"dex0\"sid\nHashilldex011bidReserves\nFigure12.8AQueryEvaluation PlanfortheSecondExample\n12.6WHATATYPICAL OPTIMIZER DOES\nArelational queryoptimizer usesrelational algebraequivalences toidentify\nmanyequivalent expressions foragivenquery.Foreachsuchequivalent ver\u00ad\nsionofthequery,allavailable implementation techniques areconsidered forthe\nrelational operators involved, therebygenerating severalalternative queryeval\u00ad\nuationplans.Theoptimizer estimates thecostofeachsuchplanandchooses\ntheonewiththelowestestimated cost.\n12.6.1Alternative PlansConsidered\nTworelational algebraexpressions overthesamesetofinputtablesaresaid\ntobeequivalent iftheyproduce thesameresultonallinstances ofthein\u00ad\nputtables.Relational algebraequivalences playacentralroleinidentifying\nalternative plans.\nConsider abasicSQLqueryconsisting ofaSELECT clause,aFROMclause,and\naWHEREclause,Thisiseasilyrepresented asanalgebraexpression; thefields\nmentioned intheSELECT areprojected fromthecross-product oftablesin\ntheFROMclause,afterapplying theselections intheWHEREclause.Theuse\nofequivalences enableustoconvertthisinitialrepresentation intoequivalent\nexpressions. Inparticular:\n\u2022Selections andcross-products canbecombined intojoins.\n\u2022Joinscanbeextensively reordered.", "449": "Overview ofquer7JEvalnation\n\u2022Selections andprojections, whichreducethesizeoftheinput,canbe\n\"pushed\" aheadofjoins.\nThequerydiscussed inSection12.5illustrates thesepoints;pushing theselec\u00ad\ntioninthatqueryaheadofthejoinyieldedadramatically betterevaluation\nplan.\\Vediscussrelational algebraequivalences indetailinSection15.3.\nLeft-DeepPlans\nConsider aqueryoftheformA[XlB[XlC[XlD;thatis,thenaturaljoinof\nfourtables.Threerelational algebraoperator treesthatareequivalent tothis\nquery(basedonalgebraequivalences) areshowninFigure12.9.Byconvention,\ntheleftchildofajoinnodeistheoutertableandtherightchildistheinner\ntable.Byaddingdetailssuchasthejoinmethod foreachjoinnode,itis\nstraightforward toobtainseveralqueryevaluation plansfromthesetrees.\nC><J\n/~\nC><J D\n/~\nC><J c\n/~\nA BC><J/~\nI><J I><J\n/~/~ABC D\nFigure 12.9ThreeJoinTrees\nThefirsttwotreesinFigure12.9areexamples oflineartrees.Inalineartree,\natleastonechildofajoinnodeisabasetable.Thefirsttreeisanexample of\naleft-deep tree-the rightchildofeachjoinnodeisabasetable.Thethird\ntreeisanexample ofanon-linear orbushytree.\nOptimizers typically useadynamic-programming approach (seeSection15.4.2)\ntoefficiently searchtheclassofaUleft-deep plans.Thesecondandthirdkinds\noftreesaretherefore neverconsidered. Intuitively, thefirsttreerepresents a\nplaninwhichwejoinAandBfirst,thenjointheresultwithC,thenjoin\ntheresultwithD.Thereare2~35otherleft-deep plansthatdifferonlyinthe\norderthattablesarejoined.Ifanyoftheseplanshasselection andprojection\nconditions otherthanthejoinsthemselves, theseconditions areappliedasearly\naspossible (consitent withalgebraequivalences) giventhechoiceofajoinorder\nforthetables.\nOfcourse,thisdecision rulesoutmanyalternative plansthatmaycostless\nthanthebestplanusingaleft-deep tree;wehavetolivewiththefactthat\n\"Thereadershouldthinkthrough thenumber 2:3inthisexample.", "450": "416 CHAPTER ,12\ntheoptimizer willneverfindsuchplans.Therearetwomainreasonsforthis\ndecision toconcentrate onleft-deep plans,orplansba.<;edonleft-deep trees:\n1.Asthenumber ofjoinsincreases, thenumber ofalternative plansincrea..:.;es\nrapidlyanditbecomes necessary toprunethespaceofalternat.ive plans.\n2.Left-deep treesallowustogenerate allfullypipelined plans;thatis,\nplansinwhichalljoinsareevaluated usingpipelining. (Innertablesmust\nalwaysbematerialized because wemustexamine theentireinnertablefor\neachtupleoftheoutertable.So,aplaninwhichaninnertableisthe\nresultofajoinforcesustomaterialize theresultofthatjoin.)\n12.6.2Estimating theCostofaPlan\nThecostofaplanisthesumofcostsfortheoperators itcontains. Thecost\nofindividual relational operators intheplanisestimated usinginformation,\nobtained fromthesystemcatalog, aboutproperties (e.g.,size,sortorder)of\ntheirinputtables.Weillustrated howtoestimate thecostofsingle-operator\nplansinSections 12.2and12.3,andhowtoestimate thecostofmulti-operator\nplansinSection12.5.\nIfwefocusonthemetricofI/Ocosts,thecostofaplancanbebrokendown\nintothreeparts:(1)readingtheinputtables(possibly rnultiple timesinthe\ncaseofsomejoinandsortingalgorithms), (2)writingintermediate tables,and\n(possibly) (3)sortingthefinalresult(ifthequeryspecifies duplicate elimination\noranoutputorder).Thethirdpartiscommon toallplans(unlessoneofthe\nplanshappens toproduce outputintherequired order),and,inthecommon\ncasethatafully-pipelined planischosen,nointermediate tablesarewritten.\nThus,thecostforafully-pipelined planisdominated bypart(1).Thiscost\ndepends greatlyontheaccesspathsusedtoreadinputtables;ofcourse,access\npathsthatareusedrepeatedly toretrieve matching tuplesinajoinalgorithm\nareespecially important.\nForplansthatarenotfullypipelined, thecostofrnaterializing temporary tables\ncanbesignificant. Thecostofmaterializing anintermediate resultdepends\nonitssize,andthesizealsoinfiuences thecostoftheoperator forwhichthe\ntemporary ishninputtable.Thenumberoftuplesintheresultofaselection is\nestimated bymultiplying theinputsizebythereduction factorfortheselection\nconditions. Thenumber oftuplesintheresultofaprojection isthesameas\ntheinput,a.ssuming thatduplicates arenoteliminated; ofcourse,eachresult\ntupleissmallersinceitcontains fewerfields.", "451": "Overview ofq1leryEval'llat'ion 417\nTheresultsizeforajoincanbeestimated bymultiplying themaximum result\nsize,whichistheproduct oftheinputtablesizes,bythereduction factorofthe\njoincondition. Thereduction factorforjoincondition columni =column2 can\nbeapproximated bytheformula\n ~(NJ{eY,~(~1),NKeys(I2)) ifthereareindexes\n11and12oncolumni andcolwnn2, respectively. Thisformula assumes that\neachkeyvalueinthesmallerindex,say11,hasamatching valueintheother\nindex.Givenavalueforcolumni, weassumethateachoftheNKeys(I2)\nvaluesforcolumn2 isequallylikely.Thus,thenumber oftuplesthathavethe\nsamevalueincolumn2 asagivenvalueincolumni isNKe~s(I2).\n12.7REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIWhatismetadata? Whatmetadata isstoredinthesystemcatalog? De\u00ad\nscribetheinformation storedperrelation, andperindex.(Section 12.1)\nIIThecatalogisitselfstoredasacollection ofrelations. Explain why.(Sec\u00ad\ntion12.1)\nIIWhatthreetechniques arecommonly usedinalgorithms toevaluate rela\u00ad\ntionaloperators? (Section 12.2)\nIIWhatisanaccesspath?Whendoesanindexmatchasearchcondition?\n(Section 12.2.2)\nIIWhatarethemainapproaches toevaluating selections? Discusstheuseof\nindexes, inparticular. (Section 12.3.1)\nIIWhatarethemainapproaches toevaluating projections? Whatmakes\nprojections potentially expensive? (Section 12.3.2)\nIIWhatarethemainapproaches toevaluating joins?Whyarejoinsexpen\u00ad\nsive?(Section 12.3.3)\nIIWhatisthegoalofqueryoptimization? Isittofindthebestplan?(Sec\u00ad\ntion12.4)\nIIHowdoesaDBMSrepresent arelational queryevaluation plan?(Sec\u00ad\ntion12.4.1)\nIIWhatispipelined evaluation? Whatisitsbenefit? (Section 12.4.2)\nIIDescribe theiteratorinterface foroperators andaccessmethods. 'Whatis\nitspurpose? (Section 12.4.3)", "452": "418 CHAPTER 12\n\u2022Discusswhythedifference incostbetween alternative plansforaquery CI:Ul\nbeverylarge.Givespecificexamples toillustrate theimpactofpushing\nselections, thechoiceofjoinmethods, andtheavailability ofappropriate\nindexes. (Section 12.5)\n\u2022Whatistheroleofrelational algebraequivalences inqueryoptimization?\n(Section 12.6)\n\u2022Whatisthespaceofplansconsidered byatypicalrelational queryopti\u00ad\nmizer?Justifythechoiceofthisspaceofplans.(Section 12.6.1)\n\u2022Howisthecostofaplanestimated? Whatistheroleofthesystemcatalog?\nWhatistheselectivity ofanaccesspath,andhowdoesitinfluence thecost\nofaplan?Whyisitimportant tobeabletoestimate thesizeoftheresult\nofaplan?(Section 12.6.2)\nEXERCISES\nExercise 12.1Brieflyanswerthefollowing questions:\n1.Describe threetechniques commonly usedwhendeveloping algorithms forrelational op\u00ad\nerators. Explain howthesetechniques canbeusedtodesignalgorithms fortheselection,\nprojection, andjoinoperators.\n2.Whatisanaccesspath?Whendoesanindexmatchanaccesspath?Whatisaprimar1J\nconj1Lnct, andwhyisitimportant?\n3.Whatinformation isstoredinthesystemcatalogs?\n4.Whatarethebenefits ofmakingthesystemcatalogs berelations?\n5.Whatisthegoalofqueryoptimization? Whyisoptimization important?\n6.Describe pipelining anditsadvantages.\n7.Giveanexample queryandplaninwhichpipelining cannotbeused.\n8.Describe theitemto1' interface andexplainitsadvantages.\n9.Whatroledostatistics gathered fromthedatabase playinqueryoptimization?\n10.Whatweretheimportant designdecisions madeintheSystemRoptimizer?\n11.Whydoqueryoptimizers consider onlyleft-deep jointrees?Giveanexample ofaquery\nandaplanthatwouldnotbeconsidered because ofthisrestriction.\nExercise 12.2Consider arelationR(a,b,e,.d,e) containing 5,000,000 records, whereeachdata\npageoftherelation holds10records. Risorganized asasortedfilewithsecondary indexes.\nAssume thatR.aisacandidate keyforR,withvalueslyingintherange0to4,999,999, and\nthatRisstoredinR.o,order.Foreachofthefollowing relational algebraqueries,statewhich\nofthefollowing threeapproaches ismostlikelytobethecheapest:\n\u2022AccessthesortedfileforRdirectly.\n\u2022Usea(clustered) B+treeindexonattribute R.o,.\n\u2022Uscalinearhashedindexonattribute R.a..", "453": "Overview ofQueryEvaluation\n1.(7a<50,000(R)\n2.(Ta=50,OOO(R)\n3.(Ta>50,000Ao<50,OlO (R)\n4.(Ta;>'50,000(R)419\nExercise 12.3Foreachofthefollowing SQLqueries, foreachrelation involved, listthe\nattributes thatmustbeexamined tocompute theanswer. Allqueriesrefertothefollowing\nrelations:\nEmp(eid: integer, did:integer, sal:integer, hobby:char(20))\nDept(did: integer, dname:char(20), floor:integer, budget:real)\n1.SELECT*FROMEmp\n2.SELECT*FROMEmp,Dept\n3,SELECT*FROMEmpE,DeptDWHEREE.did=D.did\n4.SELECT E.eid,D,dname FROMEmpE,DeptDWHEREE.did=D.did\nExercise 12.4Consider thefollowing schemawiththeSailorsrelation:\nSailors(sid: integer, sname:string, rating:integer, age:real)\nForeachofthefollowing indexes, listwhether theindexmatches thegivenselection conditions.\nIfthereisamatch,listtheprimary conjuncts.\n1.AB+-treeindexonthesearchkey(Sailors.sid ).\n(a)(7Sailors.sid<50,OOO (Sailors)\n(b)(7Sailor.uid=f,o,ooo(Sailors)\n2.Ahashindexonthesearchkey(Sailors.sid ).\n(a)O'Sailo'\u00b7s.sid<50,OOO (Sailors)\n(b)(7Sailon.S1d=5o,ooo(Sailors)\n3.AB+-tree indexonthesearchkey(Sailors.sid, Sailors.age ).\n(a)O'Sallors.8icl<50,OOOASai.loT's.ag,,=21 (Sailors)\n(b)O'Sailor.5.si.d=.SO,OOOASallors.age>21 (Sailors)\n(c)(7Sai/oTS.sid=5o,ooo(Sailors)\n(d)0'!3ai/o\u00b7rs.ag('=21(Sailors)\n4.Aha.'lh-tree hidexonthesearchkey(Sailors.sid,Sailors.age).\n(a)O'S\"Il\",\u00b7s.sid=50,OOOASo.ilors.ag,,=21 (Sailors)\n(b)O'S\",i/01\u00b7s ..,i.d=50,O(JOAS,,\u00b7i!or.,.age>21 (Sailors)\n(c)O's'd{ors,,\"d=5o,ooo(Sailors)\n(d)O'S'''/01's.<l.()''=21 (Sa'ilors)\nExercise 12.5Consider againtheschemawiththeSailorsrelation:", "454": "420\nSailors(sid: integer, sname:string, mUng:integer, age:real)CHAPTERfi12\nAssumethateachtupleofSailorsis50byteslong,thatapagecanhold80Sailorstuples,and\nthatwehave500pagesofsuchtuples.Foreachofthefollowing selection conditions, estimate\nthenumber ofpagesretrieved, giventhecataloginformation inthequestion.\n1.AssumethatwehaveaB+-tree index7'onthesearchkey(Sailors.sid ),andassume\nthatIHeight(T) =4,INPages(T) =50,Low(7') =1,andHigh(T) =100,000.\n(a)aSailors.'id<5o,ooo(S'a'ilors)\n(b)aSailorssid=50,OOO(Sa'ilors)\n2.Assumethatwehaveahashindex7'onthesearchkey(Sailors.sid ),andassumethat\nIHeight(7') =2,INPages(7') =50,Low(7')=1,andHigh(T) =100,000.\n(a)aSa'lor's.sid<50,OOo(Sailors)\n(b)aSailor\u00b7s.sid=5o,ooo(5ailors)\nExercise 12.6Consider thetwojoinmethods described inSection12.3.3.Assumethatwe\njointworelations Rand5,andthatthesystems catalogcontains appropriate statistics about\nRandS.Writeformulas forthecostestimates oftheindexnestedloopsjoinandsort-merge\njoinusingtheappropriate variables fromthesystems cataloginSection12.1.Forindexnested\nloopsjoin,consider bothaB+treeindexandahashindex.(Forthehashindex,youcan\nassumethatyoucanretrieve theindexpagecontaining theridofthematching tuplewith\n1.2l/Osonaverage.)\nNote.'Additional exercises onthematerial coveredinthischaptercanbefoundintheexercises\nforChapters 14and15.\nBIBLIOGRAPHIC NOTES\nSeethebibliograpic notesforChapters 14and15.", "455": "13\nEXTERNAL SORTING\n...Whyissortingimportant inaDBMS?\n...Whyissortingdataondiskdifferent fromsortingin-memory data?\n...Howdoesexternal merge-sort work?\n...Howdotechniques likeblockeclI/Oandoverlapped I/Oaffectthe\ndesignofexternal sortingalgorithms?\n...WhencanweuseaB+treetoretrieve recordsinsortedorder?\n..Keyconcepts: motivation, bulk-loading, duplicate elimination, sort\u00ad\nmergejoins;external mergesort,sortedruns,merging runs;replace\u00ad\nmentsorting, increasing runlength;I/Ocostversusnumber ofI/Os,\nblockedI/Os,doublebuffering; B+treesforsorting, impactofclus\u00ad\ntering.\nGoodorderisthefoundation ofallthings.\nEdmund Burke\nInthischapter, weconsider awidelyusedandrelatively expensive operation,\nsortingrecords according toasearchkey.vVebeginbyconsidering thelnany\nusesofsortingInadatabase systeminSection13.1.\\;Yeintroduce theideaof\nexternal sortingbyconsidering averysimplealgorithm inSection 1:3.2;using\nrepeated passesoverthedata,evenverylargedatasets canbesortedwitha\nsmallamount ofrnemory. Thisalgol'ithrn isgeneralized todevelop arealistic\nexternal sortingalgorithrn inSection 1:3.3.Threeimportant refinements are\n421", "456": "422 CHAPTER 1~~\ndiscussed. Thefirst,discussed inSection13.3.1,enablesustoreducethenum\u00ad\nberofpasses.Thenexttworefinements, covered inSection13.4,requireus\ntoconsider amoredetailed modelofI/OcoststhanthenumberofpageI/Os.\nSection13.4.1discusses theeffectofblockedI/O,thatis,readingandwriting\nseveralpagesatatime;andSection13.4.2considers howtouseatechnique\ncalleddoublebuffering tominimize thetimespentwaitingforanI/Ooperation\ntocomplete. Section13.5discusses theuseofB+treesforsorting.\nWiththeexception ofSection13.4,weconsider onlyI/Ocosts,whichweap\u00ad\nproximate bycounting thenumber ofpagesreadorwritten, asperthecost\nmodeldiscussed inChapter 8.Ourgoalistouseasimplecostmodeltoconvey\nthemainideas,ratherthantoprovideadetailed analysis.\n13.1WHENDOESADBMSSORTDATA?\nSortingacollection ofrecordsonsome(search) keyisaveryusefuloperation.\nThekeycanbeasingleattribute oranordered listofattributes, ofcourse.\nSortingisrequired inavarietyofsituations, including thefollowing important\nones:\nIIUsersmay'wantanswers insomeorder;forexample, byincrea..\"iing age\n(Section 5.2).\nIISortingrecordsisthefirststepinbulkloadingatreeindex(Section 10.8.2).\nIISortingisusefulforeliminating duplicate copiesinacollection ofrecords\n(Section 14.3).", "457": "External Sorting\n\u2022 Awidelyusedalgorithm forperforming averyimportant relational algebra\noperation, calledjo'in,requires asortingstep(Section 14.4.2).\nAlthough mainmemory sizesaregrowing rapidlytheubiquity ofdatabase\nsystems hasleadtoincreasingly largerdatasets aswell.'\\Thenthedatato\nbesortedistoolargetofitintoavailable mainmemory, weneedanexternal\nsortingalgorithm. Suchalgorithms seektominimize thecostofdiskaccesses.\n13.2ASIMPLE TWO-WAY MERGE SORT\nWebeginbypresenting asimplealgorithm toillustrate theideabehindexternal\nsorting. Thisalgorithm utilizesonlythreepagesofmainmemory, anditis\npresented onlyforpedagogical purposes. Inpractice, manymorepagesof\nmemory areavailable, andwewantoursortingalgorithm tousetheadditional\nmemory effectively; suchanalgorithm ispresented inSection 13.3.When\nsortingafile,severalsortedsubfiles aretypically generated inintermediate\nsteps.Inthischapter, werefertoeachsortedsubfileasarun.\nEveniftheentirefiledoesnotfitintotheavailable mainmemory, wecansort\nitbybreaking itintosmallersubfiles, sortingthesesubfiles, andthenmerging\nthemusingaminimal amount ofmainmemory atanygiventime.Inthefirst\npass,thepagesinthefilearereadinoneatatime.Afterapageisreadin,\ntherecordsonitaresortedandthesortedpage(asortedrunonepagelong)is\nwrittenout.Quicksort oranyotherin-memory sortingtechnique canbeused\ntosorttherecordsonapage.Insubsequent passes,pairsofrunsfromthe\noutputoftheprevious passarereadinandmergedtoproduce runsthatare\ntwiceaslong.Thisalgorithm isshowninFigure13.1.\nIfthenumber ofpagesintheinputfileis2k,forsomek,then:\nPass0produces 2ksortedrunsofonepageeach,\nPass1produces 2k~1sorteclrunsoftwopageseach,\nPass2produces 2k-2sorteclrunsoffourpageseach,\nandsoon,until\nPasskproduces onesortedrunof2k:pages.\nIneachpass,wereadeverypageinthefile,process it,andwriteitout.\nTherefore wehavetwodiskI/Osperpage,perpass.Thenumber ofpasses\nisflog2Nl -+-1,whereNisthenumber ofpagesinthefile.Theoverallcostis\n2N(ilog2Nl+1)l/Os.\nThealgorithm isillustrated onallexample inputfilecontaining sevenpages\ninFigure13.2.Thesorttakesfourpasses,andineachpass,wereadand", "458": "424 CHAPTER l~\nproc2-'ulay_cxtsort (file)\n/ /Oivenafileondisk)sortsit'usingthreebuffeT'pages\n//Produce runsthatareonepagelong:Pass0\nReadeachpageintomemory, sortit,writeitout.\n//Mergepairsofrunstoproduce longerrunsuntilonly\n//onerun(containing allrecordsofinputfile)isleft\n\\Vhilethenumber ofrunsatendofprevious passis>1:\n//Passi=1,2,...\nWhiletherearerunstobemergedfromprevious pass:\nChoosenexttworuns(fromprevious pass).\nReadeachrunintoaninputbuffer;pageatatime.\nMergetherunsandwritetotheoutputbuffer;\nforceoutputbuffertodiskonepageatatime.\nendproc\nFigure13.1Two-Way MergeSort\nwritesevenpages,foratotalof56l/Os.Thisresultagreeswiththepreceding\nanalysis because 2\u00b77(llo9271+1)=56.Thedarkpagesinthefigureillustrate\nwhatwouldhappenonafileofeightpages;thenumber ofpassesremains at\nfour(llo9281+1=4),butwereadandwriteanadditional pageineachpass\nforatotalof64l/Os.(Trytoworkoutwhatwouldhappenonafilewith,say,\nfivepages.)\nThisalgorithm requiresjustthreebufferpagesinlnainmemory, Cl\"SFigure13.3\nillustrates. Thisobservation raisesanimportant point:Evenifwehavemore\nbufferspaceavailable, thissimplealgorithm doesnotutilizeiteffectively. The\nexternal mergesortalgorithm thatwediscussnextaddresses thisproblem.\n13.3EXTERNAL MERGE SORT\nSuppose that13bufferpagesareavailable inmemory andthatweneedtosort\nalargefilewithNpages.Howcanweimprove onthet\\vo-way mergesort\npresented intheprevious section? Theintuition behindthegeneralized algo\u00ad\nrithmthatwenowpresentistoretainthebasicstructure ofmakingmultiple\npasseswhiletryingtominimize thenumberofpasses.Therearetwoimportant\nmodifications tothetwo-way mergesortalgorithm:\n1.InPass0,readin13pagesatatimeandsortinternally toproduceIN/131\nrunsof13pageseach(exceptforthelastrun,whichlnaycontain fewer", "459": "RTtemal Sorting\nIInputfile\nPASS0\nI-pageruns\n~-, PASS\n2-pageruns\n-----C~--~,.._L----------\"'>....,__---__O>\"L.---~PASS 2\n4-pageruns\n---------\"\"'----=::-------=-~-------PASS 3\n1,2\n2,3425\n;~\n3,4\n4,5\n6,6\n7,88-pageruns\nFigure13.2Two-Way MergeSortofaSeven-Page File\nc ~ r:=:- -------\n[iNPUT 1\nI~IOUTPUT )..\n[!NPUT21/\nDiskMainmemory buffers Disk\nFigure 13.3Two-'Way MergeSortwithThreeBufferPages", "460": "426 CHAPTER~3\npages).Thismodification isillustrated inFigure13.4,usingtheinputfile\nfromFigure13.2andabufferpoolwithfourpages.\n2.Inpassesi=1,2,...useB-1bufferpagesforinputandusetheremaining\npageforoutput; hence,youdoa(B-I)-waymergeineachpass.The\nutilization ofbufferpagesinthemerging passesisillustrated inFigure\n13.5.\n2,3\n8,9\n2ndoutputrun4,4\n6,71stoutputrun\n!'2\n3,5\n6\nBufferpoolwithB:::4pagesInputfile\nFigure 13.4External MergeSortwithBBufferPages:Pass0\n\u00a2\u00a2\u00a2\nDisk!~UTl\n~\nIINPUT2I>I~IOUTPUT\nBmainmemory buffers\u00a2\u00a2\u00a2\nDisk\nFigure 13.5External IVlergeSortwithBBufferPages:Pass'i>0\nThefirstrefinement reducesthenumberofrunsproduced byPass0toNIrN/Bl,versusNforthetwo-way merge.lThesecondrefinement isevenmore\nimportant. Bydoinga(B~I)-waymerge,thenumber ofpassesisreduced\ndramatically including theinitialpass,itbecomes rZ0.9B- 1NIl+1versus\n[loY2Nl+1forthetwo-way mergealgorithm presented earlier.Because Bis\n1Notethatthetechnique usedforsortingdatainbufferpagesisorthogonal toexternal sorting.\nYoucoulduse,say,Quicksort forsortingdatainbufferpages.", "461": "External Sorting 427\ntypically quitelarge,thesavingscanbesubstantial. Theexternal mergesort\nalgorithm isshownisFigure13.6.\nprocextsort(file)\n/ /Givenafileondisk,sortsitusingthreebufferpages\n/ /Produce runsthatareBpageslong:Pass0\nReadBpagesintomemory, sortthem,writeoutarun.\n//MergeB-1runsatatimetoproduce longerrunsuntilonly\n/ /onerun(containing allrecordsofinputfile)isleft\nWhilethenumber ofrunsatendofprevious passis>1:\n//Passi=1,2,...\nWhiletherearerunstobemergedfromprevious pass:\nChoosenextB~1runs(fromprevious pass).\nReadeachrUllintoaninputbuffer;pageatatime.\nMergetherUllSandwritetotheoutputbuffer;\nforceoutputbuffertodiskonepageatatime.\nendproc\nFigure 13.6External MergeSort\nAsanexample, suppose thatwehavefivebufferpagesavailable andwantto\nsortafilewithlOSpages.\nPac'Ss0producesPOS/51 =22sortedrunsoffivepageseach,except\nforthelastrun,whichisonlythreepageslong.\nPass1doesafour-way mergetoproduce122/41 =sixsortedrunsof\n20pageseach,exceptfortheiastrun,whichisonlyeightpageslong.\nPass2produces 16/41=twosortedruns;onewithSOpagesandone\nwith28pages.\nPass3mergesthetworunsproduced inPass2toproduce thesorted\nfile.\nIneachpasswereadandwrite108pages;thusthetotalcostis2*108*4=864\nl/Os.Applying ourformula, wehaveNl1108/51 22andcost\n2*N*(llogB~lNll +1)=2*108*(llog4221+1)=864,&'3expected.\nToemphasize thepotential gainsinusingallavailable buffers,inFigure13.7,\nweshowthenumber ofpasses,computed usingourformula., forseveralvalues\nofNandB.Toobtainthecost,thenumber ofpassesshouldbemultiplied\nby2N.Inpractice, onewouldexpecttohavemorethan257buffers,butthis\ntableillustrates theimportance ofahighfan-induringmerging.", "462": "428 CHAPTER+3\n\"......;:;.-,., .... B+F \u2022\u20229i.n .,,.. n..\n\u00b7.\u00b7\\~.:tt.:\u00b7 \u2022\u2022\u2022\u2022&Q'i\"\u2022\u2022il J. J]2'i'i'u \u00b7.\u00a3\">;;;0;;;,[1 LJTfif\",a\n100 7 4 3 2 1 1\n1000 10 5 4 3 2 2\n10,000 13 7 5 4 2 2\n100,000 179 6 5 3 3\n1,000,000 2010 7 5 3 3\n10,000,000 23 12 8 6 4 3\n100,000,000 26 14 9 7 4 4\n1,000,000,000 30 15 10 8 5 4\nFigure13.7Number ofPassesofExternal MergeSort\nOfcourse,theCPUcostofamultiway mergecanbegreaterthanthatfor\natwo-way merge,butingeneraltheI/Ocoststendtodominate. Indoing\na(B-I)-waymerge,wehavetorepeatedly pickthe'lowest'recordinthe\nB-1runsbeingmergedandwriteittotheoutputbuffer.Thisoperation can\nbeimplemented simplybyexamining thefirst(remaining) element ineachof\ntheB-1inputbuffers.Inpractice, forlargevaluesofB,moresophisticated\ntechniques canbeused,although wedonotdiscussthemhere.Further, aswe\nwillseeshortly,thereareotherwaystoutilizebufferpagestoreduceI/0costs;\nthesetechniques involveallocating additional pagestoeachinput(andoutput)\nrun,thereby makingthenumber ofrunsme,rged ineachpassconsiderably\nsmallerthanthenumberofbufferpagesB.\n13.3.1Minimizing theNumber ofRuns\nInPass0wereadinBpagesatatimeandsorttheminternally toproduce\nIN/BlrunsofBpageseach(exceptforthela..'3trun,whichmaycontainfewer\npages).Withamoreaggressive implementation, calledreplacement sort,we\ncanwriteoutrunsofapproximately 2 .Binternally sortedpagesonaverage.\nThisimprovement isachieved asfollows. Webeginbyreadinginpagesofthe\nfileoftuplestobesorted,sayR,untilthebufferisfull,reserving (say)one\npageforusea..'3aninputbufferandonepageforusea.sanoutputbuffer.vVe\nrefertotheB~2pagesofRtuplesthatarenotintheinputoroutputbuffer\nastheCUT'TCnt set.Suppose thatthefileistobesortedinascending orderon\nsomesearchkeyk.Tuplesareappended totheoutputinctscending orderbyk\nvalue.\nTheideaistorepeatedly pickthetupleinthecurrentsetwiththesmallest\nkvaluethatisstillgreaterthanthelargestkvalueintheoutputbufferand\nappendittotheoutputbuffer. l:<cxtheoutputbuffertoremainsorted,the\nchosentuplemustsatisfythecondition thatitskvaluebegreaterthanor", "463": "El:teT'nal Sorting 4f9\nequaltothelargestkvaluecurrently intheoutputbuffer;ofalltuplesin\nthecurrentsetthatsatisfythiscondition, wepicktheonewiththesmallest\nkvalueandappendittotheoutputbuffer.Movingthistupletotheoutput\nbuffercreatessomespaceinthecurrentset,which'veusetoaddthenextinput\ntupletothecurrentset.(\\Veassumeforsimplicity thatalltuplesarethesame\nsize.)Thisprocessisillustrated inFigure13.8.Thetupleinthecurrentset\nthatisgoingtobeappended totheoutputnextishighlighted, asisthemost\nrecently appended outputtuple.\n11\u00b1-\nL ...\u2022......\nINPUTCURRENT SET~\nL~_II\nOUTPUT\nFigure13.8Generating LongerRuns\nWhenalltuplesintheinputbufferhavebeenconsumed inthismanner, the\nnextpageofthefileisreadin.Ofcourse,theoutputbufferiswrittenout\nwhenitisfull,therebyextending thecurrentrun(whichisgradually builtup\nondisk).\nTheimportant question isthis:Whendowehavetoterminate thecurrentrun\nandstartanewrun?Aslongassometupletinthecurrentsethasabigger k:\nvaluethanthemostrecently appended outputtuple,wecanappendttothe\noutputbufferandthecurrentruncanbeextended.2InFigure13.8,although\natuple(k=2)inthecurrentsethasasmallerkvaluethanthelargestoutput\ntuple(k=5),thecurrentruncanbeextended becausethecurrentsetalsohas\natuple(k=8)thatislargerthanthelargestoutputtuple.\nWheneverytupleinthecurrentsetissmallerthanthelargesttupleinthe\noutputbuffer,theoutputbufferiswrittenoutandbecomes thelastpagein\nthecurrentrun.\\Vethenstartanewl'lmandcontinue thecycleofwriting\ntuplesfromtheinputbuffertothecurrentsettotheoutputbuffer.Itisknown\nthatthisalgorithm produces runsthatareabout2\u00b7Bpageslong,onaverage.\nThisrefinement hasnotbeenimplemented incommercial database systenls\nbecausemanaging themainmemory ava.ilable forsortingbecOlnes difficultwith\n2IfBislarge,theCPUcostoffindingsuchatupletcanbesignificant unlessappropriate in\u00b7\nmemory datastructures areusedtoorganize thetuplesinthebufferpool.\\lVewillnotdiscussthis\nissuefurther.", "464": "430 CHAPTER 13\nreplacement sort,especially inthepresence ofvariable lengthrecords. Recent\nworkonthisissue,however, showspromise anditcouldleadtotheuseof\nreplacement sortincommercial systems.\n13.4MINIMIZING I/OCOSTVERSUS NUMBER OFI/OS\nWehavethusfarusedthenumberofpage1/Osasacostmetric.Thismetricis\nonlyanapproximation oftrueI/Ocostsbecause itignorestheeffectofblocked\nI/O--issuing asinglerequesttoread(orwrite)severalconsecutive pagescan\nbemuchcheaperthanreading (orwriting) thesamenumber ofpagesthrough\nindependent I/Orequests, asdiscussed inChapter 8.Thisdifference turnsout\ntohavesomeveryimportant consequences forourexternal sortingalgorithm.\nFurther, thetimetakentoperformI/Oisonlypartofthetimetakenbythe\nalgorithm; wemustconsider CPUcostsaswell.Evenifthetimetakentodo\nI/Oaccounts formostofthetotaltime,thetimetakenforprocessing recordsis\nnontrivial anddefinitely worthreducing. Inparticular, wecanuseatechnique\ncalleddoublebuffeTing tokeeptheCPUbusywhileanI/Ooperation isin\nprogress.\nInthissection, weconsider howtheexternal sortingalgorithm canberefined\nusingblockedI/Oanddoublebuffering. Themotivation fortheseoptimiza\u00ad\ntionsrequires ustolookbeyondthenumber ofI/Osasacostmetric. These\noptimizations canalsobeappliedtootherI/Ointensive operations suchas\njoins,whichwestudyinChapter 14.\n13.4.1Blocked I/O\nIfthenumber ofpageI/Osistakentobethecostmetric,thegoalisclearlyto\nminimize thenumber ofpassesinthesortingalgorithm because eachpagein\nthefileisreadandwrittenineachpa..ss.Ittherefore makessensetomaximize\nthefan-induringmerging byallocating justonebufferpoolpageperrun(which\nistobemerged) andonebufferpagefortheoutputofthemerge.Thus,we\ncanmergeB-1runs,whereBisthenumberofpagesinthebufferpool.Ifwe\ntakeintoaccount theeffectofblocked access,whichreducestheaverage cost\ntoreadorwritea.singlepage,weareledtoconsider whether itmightbebetter\ntoreadandwriteinunitsofmorethanonepage.\nSuppose wedecidetoreadandwriteinunits,whichwecallbufferblocks,\nofbpages.Wemustnowsetasideonebufferblockperinputrunandone\nbuflerblockfortheoutputofthemerge,whichmeansthatwecanmergeat\nmostlB;)-bJrunsineachpass.}-<orexample, ifwehave10bufferpages,we\ncaneithermergeninerunsatatimewithone-page inputandoutputbuffer", "465": "Krtcrnal SoTting 431\nblocks,orwecanmergefourrunsatatimewithtwo-page inputandoutput\nbufferblocks.Ifwechooselargerbufferblocks,however, thenumberofpasses\nincreases, whilewecontinue toreadandwriteeverypageinthefileineach\npass!Intheexample, eachmerging passreducesthenumberofrunsbyafactor\nof4,ratherthanafactorof9.Therefore, thenumber ofpageI/Osincrea.'3es.\nThisisthepricewepayfordecreasing theper-page I/Ocostandisatrade-off\nwemusttakeintoaccount whendesigning anexternal sortingalgorithm.\nInpractice, however, currentmainmemory sizesarelargeenoughthatall\nbutthelargestfilescanbesortedinjusttwopasses,evenusingblockedI/O.\nSuppose wehaveBbufferpagesandchoosetouseablocking factorofbpages.\nThatis,wereadandwritebpagesatatime,andallourinputandoutput\nbufferblocksarebpageslong.Thefirstpassproduces aboutN2=IN/2Bl\nsortedruns,eachoflength2Bpages,ifweusetheoptimization described in\nSection13.3.1,andaboutN1=IN/Blsortedruns,eachoflengthBpages,\notherwise. Forthepurposes ofthissection, weassumethattheoptimization is\nused.\nInsubsequent pa.'3seswecanmergeF=LB/bJ-1runsatatime.The\nnumberofpa.'3sesistherefore 1+lZo9pN21, andineachpasswereadandwrite\nallpagesinthefile.Figure13.9showsthenumberofpassesneededtosortfiles\nofvarioussizesN,givenBbufferpages,usingablocking factorbof32pages.\nItisquitereasonable toexpect5000pagestobeavailable forsortingpurposes;\nwith4KBpages,5000pagesisonly20MB.(With50,000bufferpages,wecan\ndo1561-way merges;with10,000bufferpages,wecando311-way merges;with\n5000bufferpages,wecando155-way merges;andwith1000bufferpages,we\ncando30-waymerges.)\nIN IB=10001.8=50001 E\u00b110,000 >1B=50,0001\n100 1 1 1 1\n1000 1 1 1 1\n10,000 2 2 1 1\n100,000 3 2 2 2\n1,000,000 ~) 2 2 2\n10,000,000 4 3 ~3 2\n100,000,000 5 3 3 2\n1,000,000,000 5 4 3 3\nFigure13.9Number ofPassesofExternal MergeSortwithBlockSizeb=32\nTocompute theI/Ocost,weneedtocalculate thenumber of32-page blocks\nreadorwrittenandmultiply thisnumber bythecostofdoinga32-page block\nI/O.Tofindthenumber ofblockI/Os,wecanfindthetotalnumber ofpage", "466": "432 CHAPTER 13\nl/Os(number ofpassesrnultiplied bythenumber ofpagesinthefile)and\ndividebytheblocksize,32.Thecostofa32-page blockI/Oistheseektime\nandrotational delayforthefirstpage,plustransfer timeforall~~2pages,as\ndiscussed inChapter 8.Thereaderisinvitedtocalculate thetotalI/Ocost\nofsortingfilesofthesizesmentioned inFigure13.9with5000bufferpagesfor\ndifferent blocksizes(say,b=1,32,and64)togetafeelforthebenefits of\nusingblockedI/O.\n13.4.2DoubleBuffering\nConsider whathappens intheexternal sortingalgorithm whenallthetuples\ninaninputblockhavebeenconsumed: AnI/Orequestisissuedforthenext\nblockoftuplesinthecorresponding inputrun,andtheexecution isforcedto\nsuspend untiltheI/Oiscomplete. Thatis,fortheduration ofthetimetaken\nforreadinginoneblock,theCPUremains idle(assuming thatnootherjobsare\nrunning). Theoveralltimetakenbyanalgorithm canbeincreased considerably\nbecausetheCPUisrepeatedly forcedtowaitforanI/Ooperation tocomplete.\nThiseffectbecomes moreandmoreimportant asCPUspeedsincrease relative\ntoI/Ospeeds,whichisalong-standing trendinrelativespeeds.Itistherefore\ndesirable tokeeptheCPUbusywhileanI/Orequest isbeingcarriedout;\nthatis,tooverlapCPUandI/Oprocessing. Current hardware supports such\noverlapped computation, anditistherefore desirable todesignalgorithms to\ntakeadvantage ofthiscapability.\nInthecontextofexternal sorting, wecanachievethisoverlapbyallocating\nextrapagestoeachinputbuffer.Suppose ablocksizeofb=32ischosen.The\nideaistoallocateanadditional 32-page blocktoeveryinput(andtheoutput)\nbuffer.Now,whenallthetuplesina32-page blockhavebeen consumed, the\nCPUcanprocessthenext32pagesoftherunbyswitching tothesecond,\n'double,' blockforthisrun.Meanwhile, anI/Orequestisissuedtofillthe\nemptyblock.Thus,assmning thatthetirnetoconsume ablockisgreater\nthanthetimetoreadinablock,theCPUisneveridle!Ontheotherhand,\nthenumber ofpagesallocated toabufferisdoubled (foragivenblocksize,\nwhichmeansthetotalI/Ocoststaysthesame).Thistechnique, ca.lleddouble\nbuffering, ca.nconsiderably reducethetotaltimetakentosortafile.Theuse\nofbufferpagesisillustrated inFigure1:3.10.\nNotethatalthough doublebuffering canconsiderably reducetheresponse tiule\nforagivenquery,itmaynothaveasignificant impactonthroughput, because\ntheCPUcanbekeptbusybyworking onotherquerieswhilewaitingforone\nquery'sI/Ooperation tocomplete.", "467": "E:rteTnal Sorting\nFigure13.10 DoubleBuffering\n13.5USINGB+TREESFORSORTING433\nSuppose thatwehaveaB+treeindexonthe(search) keytobeusedforsorting\nafileofrecords. Insteadofusinganexternal sortingalgorithm, wecoulduse\ntheB+treeindextoretrievetherecordsinsearchkeyorderbytraversing the\nsequence set(i.e.,thesequence ofleafpages).Whether thisisagoodstrategy\ndepends onthenatureoftheindex.\n13.5.1Clustered Index\nIftheB+treeindexisclustered, thenthetraversal ofthesequence setis\nveryefficient. Thesearchkeyordercorresponds totheorderinwhichthe\ndatarecordsarestored,andforeachpageofdatarecordsweretrieve, wecan\nreadalltherecordsonitinsequence. Thiscorrespondence between search\nkeyordering anddatarecordordering isillustrated inFigure13.11,withthe\na.ssumption thatdataentriesare(key,ric!;pairs(i.e.,Alternative (2)isused\nfordataentries).\nThecostofusingtheclustered B+treeindextoretrievethedatarecordsin\nsearchkeyorderisthecosttotraverse thetreefromroottotheleft-most leaf\n(whichisusuallylessthanfourIIOs)plusthecostofretrieving thepagesin\nthesequence set,plusthecostofretrieving the(say,N)pagescontaining the\ndatarecords. Notethatnodatapageisretrieved twice,thankstotheordering\nofdataentriesbeingthesame 1:18theordering ofdatarecords. Thenumber of\npagesinthesequence setislikelytobemuchsmallerthanthenumber ofdata\npagesbecausedataentriesarelikelytobesmallerthantypicaldatarecords.\nThus,thestrategy ofusingadusterecl B+treeinclextoretrievetherecords\ninsortedorderisagood one andshouldbeusedwhenever suchanindexis\n'::lilable.", "468": "434\nIndexentries\n(Directsearchfor\ndataentries)CHAPTER 13\nData\nrecordsIndexfile\n] D...\"\"\nFigure13.11 Clustered B+TreeforSorting\nWhatifAlternative (1)isusedfordataentries? Then,theleafpageswould\ncontaintheactualdatarecords, andretrieving thepagesinthesequence set\n(atotalofNpages)wouldbetheonlycost.(Notethatthespaceutilization is\nabout67%inaB+tree;thenumber ofleafpagesisgreaterthanthenumber\nofpagesneededtoholdthedatarecordsinasortedfile,where,inprinciple,\n100%spaceutilization canbeachieved.) Inthiscase,thechoiceoftheB+tree\nforsortingisexcellent!\n13.5.2Unclustered Index\nWhatiftheB+treeindexonthekeytobeusedforsortingisunclustered?\nThisisillustrated inFigure13.12,withtheassumption thatdataentriesare\n(key,rid).\nInthiscaseeachridinaleafpagecouldpointtoadifferent datapage.Should\nthishappen, thecost(indiskl/Os)ofretrieving alldatarecordscouldequal\nthenumberofdatarecords.Thatis,theworst~case costisequaltothenumber\nofdatarecords, because fetching eachrecordcouldrequireadiskI/O.This\ncostisinaddition tothecostofretrieving leafpagesoftheB+treetogetthe\ndataentries(whichpointtothedatarecords).\nIfpistheaveragenumberofrecordsperdatapageandthereareNdatapages,\nthenumberofdatarecordsisp.N.Ifwetakeftobetheratioofthesizeofa\ndataentrytothesizeofadatarecord,wecanapproximate thenumber ofleaf\npagesinthetreebyf.N.Thetotalcostofretrieving recordsinsortedorder", "469": "E:c:temal So-rt'ing 435\n/Indexentries\n(Directsearchfor\ndataentries)\nIndexfile\nData\nrecordsJD.....,\nFigure13.12 Unclustered B+TreeforSorting\nusinganunclustered B+treeistherefore (J+p).N.Sincefisusually0.1or\nsmallerandpistypically muchlargerthan10,p.Nisagoodapproximation.\nInpractice, thecostmaybesomewhat lessbecause someridsinaleafpage\nleadtothesamedatapage,andfurther, somepagesarefoundinthebuffer\npool,thereby avoiding anI/O.Nonetheless, theusefulness ofanunclustered\nB+treeindexforsortedretrieval highlydepends ontheextenttowhichthe\norderofdataentriescorresponds and-\u00b7~this isjustamatterofchance-to the\nphysical ordering ofdatarecords.\nWeillustrate thecostofsortingafileofrecordsusingexternal sortingandun\u00ad\nclustered B+treeindexesinFigure13.13.Thecostsshownfortheunclustered\nindexareworst-case numbers, basedontheapproximate formula p.N.For\ncomparison, notethatthecostforaclustered indexisapproximately equalto\nN,thenumberofpagesofdatarecords.\nISortingIp=lIp=10 rp=foo\n100 200 100 1000 10,000\n1000 2000 1000 10,000 100,000\n10,000 40,000 10,000 100,000 1,000,000\n100,000 600,000 100,000 1,000,000 10,000,000\n1,000,000 8,000,000 1,000,000 10,000,000 100,000,000\n10,000,000 80,000,000 10,000,000 100,000,000 1,000,000,000\nFigure13.13 CostofExternal Sorting (13=1000,b=:32)versusUnclustered Index", "470": "436 CHAPTER 13\nKeepinmindthatpislikelytobedoserto100andBislikelytobehigher\nthan1,000inpractice. Theratioofthecostofsortingversusthecostofusing\nanunclustered indexislikelytobeeven10\\verthanindicated byFigure13.13\nbecausetheI/Oforsortingisin32-page bufferblocks,whereas theI/Oforthe\nundustered indexesisonepageatatime.Thevalueofpisdetermined bythe\npagesizeandthesizeofadatarecord;forptobe10,with4KBpages,the\naveragedatarecordsizemustbeabout400bytes.Inpractice, pislikelytobe\ngreaterthan10.\nForevenmodestfilesizes,therefore, sortingbyusinganunclustered indexis\nclearlyinferiortoexternal sorting. Indeed, evenifwewanttoretrieve only\nabout10--20% ofthedatarecords, forexample, inresponse toarangequery\nsuchas\"Findallsailorswhoseratingisgreaterthan7,\"sortingthefilemay\nprovetobemoreefficientthanusinganunclustered index!\n13.6REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIWhatdatabase operations utilizesorting? (Section 13.1)\nIIDescribe howthetwo-way mergesortalgorithm cansortafileofarbitrary\nlengthusingonlythreemain-memory pagesatanytime.Explain what\narunisandhowrunsarecreatedandmerged. Discussthecostofthe\nalgorithm intermsofthenumber ofpassesandtheI/Ocostperpass.\n(Section 13.2)\nIIHowdoesthegeneralexternal merge SOT,talgorithm improve uponthetwo\u00ad\nwaymergesort?Discussthelengthofinitialruns,andhowmemory is\nutilizedinsubsequent merging passes.Discussthecostofthealgorithm in\ntermsofthenumberofpa.'3sesandtheI/Ocostperpa.ss.(Section 13.3)\nIIDiscusstheuseofr'cplacement sorttoincreasetheaveragelengthofinitial\nrunsandtherebyreducethenumber ofrunstobemerged. Howdoesthis\naffectthecostofexternal sorting? (Section 13.3.1)\nIII\\\\ThatisblockedI/O?Whyisitcheaper toreadasequence ofpagesusing\nblockedI/Othantoreadthemthrough severalindependent requests? How\ndoestheuseofblocking affecttheexternal sortingalgorithm, andhowdoes\nitchangethecostformula'? (Section 13.4.1)\n..Whatisdoublebuffering? \\\\Thatisthemotivation forusingit?(Sec\u00ad\ntion13.4.2)\nIIIfwewanttosortafileandthereisaB-1-treewiththesamesearchkey,we\nhavetheoptionofretrieving recordsinorderthrough theindex.Compa.re", "471": "E:r:tcmal SOTt'ing 437\nthecostofthisapproach toretrieving therecordsinrandomorderandthen\nsortingthem.Consider bothclustered andunclustered B+trees. ~What\nconclusions canyoudrawfromyourcomparison? (Section 13.5)\nEXERCISES\nExercise 13.1Suppose youhaveafilewith10,000pagesandyouhavethreebufferpages.\nAnswer thefollowing questions foreachofthesescenarios, assuming thatourmostgeneral\nexternal sortingalgorithm isused:\n(a)Afilewith10,000pagesandthreeavailable bufferpages.\n(b)Afilewith20,000pagesandfiveavailable bufferpages.\n(c)Afilewith2,000,000 pagesand17available bufferpages.\n1.Howmanyrunswillyouproduce inthefirstpass?\n2.Howmanypasseswillittaketosortthefilecompletely?\n3.WhatisthetotalI/Ocostofsortingthefile?\n4.Howmanybufferpagesdoyouneedtosortthefilecompletely injusttwopasses?\nExercise 13.2Answer Exercise 13.1assuming thatatwo-way external sortisused.\nExercise 13.3Suppose thatyoujustfinished inserting severalrecordsintoaheapfileand\nnowwanttosortthoserecords. AssumethattheDBMSusesexternal sortandmakesefficient\nuseoftheavailable bufferspacewhenitsortsafile.Hereissomepotentially usefulinformation\naboutthenewlyloadedfileandtheDBMSsoftware available tooperate onit:\nThenumber ofrecordsinthefileis4500.Thesortkeyforthefileis4byteslong.\nYoucanassumethatridsare8byteslongandpageidsare4byteslong.Each\nrecordisatotalof48byteslong.Thepagesizeis512bytes.Eachpagehas12\nbytesofcontrolinformation onit.Fourbufferpagesareavailable.\n1.Howmanysortedsubfiles willtherebeaftertheinitialpassofthesort,andhowlong\nwilleachsubtilebe?\n2.Howmanypasses(including theinitialpassjustconsidered) arerequired tosortthis\nfile?\n:3.WhatisthetotalI/Ocostforsortingthisfile?\n4.Whatisthelargestfile,intermsofthenumber ofrecords, youcansortwithjustfour\nbufferpagesintwopasses? Howwouldyouranswerchangeifyouhad257bufferpages?\n5.Suppose thatyouhaveaB+treeindexwiththesearchkeybeingthesameasthedesired\nsortkey.FindthecostofUSiIlgtheindextoretrieve therecordsinsortedorderforeach\nofthefollowing cases:\nlllITheindexusesAlternative (1)fordataentries.\nlllITheindexusesAlternative (2)andisunclustered. (Youcancompute theworst-case\ncostinthiscase.)", "472": "438\n\u2022CHAPTER 1\\3\nHowwouldthecostsofusingtheindexchangeifthefileisthelargestthatyou\ncansortintwopassesofexternal sortwith257bufferpages?Giveyouranswerfor\nbothclustered andunclustered indexes.\nExercise 13.4Consider adiskwithanaverageseektimeoflOms,averagerotational delay\nof5ms,andatransfer timeof1msfora41<page.Assumethatthecostofreading/writing\napageisthesumofthesevalues(i.e.,16ms)unlessasequence ofpagesisread/written. In\nthiscase,thecostistheaverageseektimeplustheaveragerotational delay(tofindthefirst\npageinthesequence) plus1msperpage(totransfer data).Youaregiven320bufferpages\nandaskedtosortafilewith10,000,000 pages.\n1.Whyisitabadideatousethe320pagestosupport virtualmemory, thatis,to'new'\n10,000,000 41<bytesofmemory, andtouseanin-memory sortingalgorithm suchas\nQuicksort?\n2.Assume thatyoubeginbycreating sortedrunsof320pageseachinthefirstpass.\nEvaluate thecostofthefollowing approaches forthesubsequent merging passes:\n(a)Do31g-way merges.\n(b)Create256'input'buffersof1pageeach,createan'output' bufferof64pages,and\ndo256-way merges.\n(c)Create16'input'buffersof16pageseach,createan'output' bufferof64pages,\nanddo16-waymerges.\n(d)Createeight'input'buffersof32pageseach,createan'output' bufferof64pages,\nanddoeight-way merges.\n(e)Createfour'input'buffersof64pageseach,createan'output' bufferof64pages,\nanddofour-way merges.\nExercise 13.5Consider therefinement totheexternal sortalgorithm thatproduces runsof\nlength2Bonaverage, whereBisthenumber ofbufferpages.Thisrefinement wasdescribed\ninSection 11.2.1undertheassumption thatallrecordsarethesamesize.Explain whythis\nassumption isrequired andextendtheideatocoverthecaseofvariable-length records.\nPROJECT-BASED EXERCISES\nExercise 13.6(Notetoi,nstnu:t01'S: Add~t'ional deta'ilsmustbepmvided ifthisexercise is\nassigned; seeAppendi:r: SO.)Implement external sortinginMinibase.\nBIBLIOGRAPHIC NOTES\nKnuth's text[442]istheclassicreference forsortingalgorithms. I\\Jemory management for\nreplacement sortisdiscussed in[471].Anumber ofpapersdiscussparallelexternal sorting\nalgorithms, including [66,71,223,494, 566,647].", "473": "14\nEVALUATING RELATIONAL\nOPERATORS\n...Whatarethealternative algorithms forselection? Whichalterna\u00ad\ntivesarebestunderdifferent conditions? Howarecomplex selection\nconditions handled?\n...Howcanweeliminate duplicates inprojection? Howdosortingand\nhashingapproaches -compare?\n...Whatarethealternative joinevaluation algorithms? Whichalterna\u00ad\ntivesarebestunderdifferent conditions?\n...Howarethesetoperations (union,inter;section, set-difference, cross\u00ad\nproduct)implemented?\n...Howareaggregate operations andgrouping handled?\n...Howdoesthesizeofthebufferpoolandthebufferreplacement policy\naffectalgorithms forevaluating relational operators?\n..Keyconcepts: selections, CNF;projections, sortingversushash\u00ad\ning;joins,blocknestedloops,indexnestedloops,sort-merge, hash;\nunion,set-difference, duplicate elimination; aggregate operations, run\u00ad\nninginformation, partitioning intogroups,usingindexes; bufferman\u00ad\nagement, concurrent execution, repeated accesspatterns\nNow,'here,yousee,ittakesalltherunning youcando,tokeepinthesame\nplace.Ifyouwanttogetsomewhere else,youmustrunatleasttwice 3..<;fastas\nthat!\n-----Lewis Carroll, Throngh theLooking Glass\n439", "474": "440 CHAPTER 14\nInthischapter, weconsider theimplementation ofindividual relational op\u00ad\neratorsinsufficient detailtounderstand howDBMSs areimplemented. The\ndiscussion buildsonthefoundation laidinChapter 12.vVepresentimplemen\u00ad\ntationalternatives fortheselection operator inSections 14.1and14.2.Itis\ninstructive toseethevarietyofalternatives andthewidevariation inper'for\u00ad\nmaneeofthesealternatives, forevensuchasimpleoperator. InSection 14.:3,\nweconsider theotherunaryoperator inrelational algebra, projection.\n\\iVethendiscusstheimplementation ofbinaryoperators, beginning withjoins\ninSection 14.4.Joinsareamongthemostexpensive operators inarelational\ndatabase system,andtheirimplementation hasabigimpactonperformance.\nAfterdiscussing thejoinoperator, weconsider implementation ofthebinary\noperators cross-product, intersection, union,andset-difference inSection 14.5.\nWediscusstheimplementation ofgrouping andaggregate operators, whichare\nextensions ofrelational algebra, inSection14.6.Weconclude withadiscussion\nofhowbuffermanagement affectsoperator evaluation costsinSection 14.7.\nThediscussion ofeachoperator islargelyindependent ofthediscussion ofother\noperators. Severalalternative implementation techniques arepresented foreach\noperator; thereaderwhowishestocoverthismaterial illlessdepthcanskip\nsomeofthesealternatives without lossofcontinuity.\nPreliminaries: Examples andCostCalculations\nWepresentanumber ofexample queriesusingthesameschemaasinChapter\n12:\nSailors(sid: integer, sname:string, rating:integer, age:real)\nReservesC'iid: ~_nteger, bid:integer, day:dates,rname:string)\nThisschema isavariantoftheonethatweusedinChapter 5;weaddeda\nstringfieldrnametoReserves. Intuitively, thisfieldisthenameoftheperson\nwhomadethereservation (andmaybedifferent fromthenameofthesailor.sid\nforwhomthereservation wa.\"made;areservation maybemadebyaperson\nwhoisnotasailoronbehalfofasailor).Theaddition ofthisfieldgivesus\nmoreflexibility inchoosing illustrative examples. Weassumethateachtuple\nofReserves is40byteslOllg,thatapagecanhold100Reserves tuples,alld\nthatwehave1000pagesofsuchtuples.Similarly, weassumethateachtuple\nofSailorsis50byteslong,thatapagecanhold80Sailorstuples,andthatwe\nhave500pagesofsuchtuples.\nTwopointsmustbekeptinInindtounderstancl ourdiscussion ofcosts:", "475": "Eval1wting Relational Operator\" 441\n\u2022Asdiscussed inChapter 8,weconsider onlyI/Ocostsandmeasure I/O\ncostintermsofthenumber ofpagel/Os.vVealsousebig-Onotation to\nexpressthecomplexity ofanalgorithm intermsofaninputparameter mId\nassumethatthereaderisfamiliar withthisnotation. Forexample, the\ncostofafilescanisO(Jlv1),whereAiisthesizeofthefile.\n\u2022vVediscussseveralalternate algorithms foreachoperation. Sinceeach\nalternative incursthesamecostinwritingouttheresult,shouldthisbe\nnecessary, weuniformly ignorethiscostincomparing alternatives.\n14.1THESELECTION OPERATION\nInthissection,wedescribe variousalgorithms toevaluate theselection opera\u00ad\ntor.Tomotivate thediscussion, consider theselection queryshowninFigure\n14.1,whichhastheselection condition rno:me='Joe'.\nSELECT*\nFROM Reserves R\nWHERER.rname='Joe'\nFigure14.1SimpleSelection Query\nWecanevaluate thisquerybyscanning theentirerelation, checking thecondi\u00ad\ntiononeachtuple,andaddingthetupletotheresultifthecondition issatisfied.\nThecostofthisapproach is1000l/Os,sinceReserves contains 1000pages.If\nonlyafewtupleshavernarne='Joe',thisapproach isexpensive becauseitdoes\nnotutilizetheselection toreducethenumber oftuplesretrieved inanyway.\nHowcanweimprove onthis approach? Thekeyistoutilizeinformation inthe\nselection condition anduseanindexifasuitable indexisavailable. Forexam\u00ad\nple,aB+treeindexon'marnecouldbeusedtoanswerthisqueryconsiderably\nfaster,butanindexonbidwouldnotbeuseful.\nIntherestofthissection.weconsider varioussituations withrespecttothefile\norganization usedfortherelation andtheavailability ofindexesanddiscuss\nappropriate algorithms fortheselection operation. Wediscussonlysimple\nselection operations oftheformeJR.attroplw!ue(R) untilSection14.2,where\nweconsider generalselections. Intermsofthegeneraltechniques listedin\nSection 12.2~thealgorithms forselection useeitheriteration orindexing.\n14.1.1NoIndex,Unsorted Data\nGivenaselection oftheformeJRattTopvalue(R),ifthereisnoindexonR.attT\nandRisnotsortedonR.aUT,wehavetoscantheentirerelation. Therefore,", "476": "442 CHAPTER 14,\nthemostselective accesspathisafilescan.Foreachtuple,wemusttestthe\ncondition R.attropvaz'ueandaddthetupletotheresultifthecondition is\nsatisfied.\n14.1.2NoIndex,SortedData\nGivenaselection oftheformO'R.attropvalue(R), ifthereisnoindexonR.attr,\nbutRisphysically sortedonR.attr,wecanutilizethesortorderbydoing\nabinarysearchtolocatethefirsttuplethatsatisfies theselection condition.\nFurther, wecanthenretrieve alltuplesthatsatisfytheselection condition\nbystarting atthislocation andscanning Runtiltheselection condition is\nnolongersatisfied. Theaccessmethod inthiscaseisasorted-file scanwith\nselection condition O'R.attropvalue(R).\nForexample, supposethattheselection condition isR.aUr!>5,andthatRis\nsortedonattr1inascending order.Afterabinarysearchtolocatetheposition\ninRcorresponding to5,wesimplyscanallremaining records.\nThecostofthebinarysearchisO(l092M). Inaddition, wehavethecostofthe\nscantoretrievequalifying tuples.Thecostofthescandepends onthenumber\nofsuchtuplesandcanvaryfromzerotoM.Inourselection fromReserves\n(Figure14.1),thecostofthebinarysearchis[0921000 ~10I/Os.\nInpractice, itisunlikelythatarelation willbekeptsortediftheDBMSsup\u00ad\nportsAlternative (1)forindexdataentries;thatis,allowsdatarecordstobe\nstoredasindexdataentries.Iftheordering ofdatarecordsisimportant, a\nbetterwaytomaintain itisthrough aB+treeindexthatusesAlternative (1).\n14.1.3B+TreeIndex\nIfaclustereel B+treeindexisavailable onR.attr,thebeststrategy forselection\nconditions O'R.attropvalue(R) inwhichopisnotequality istousetheindex.\nThisstrategy isalsoagoodaccesspathforequality selections, although ahash\nindexonR.attrwouldbealittlebetter.IftheB+treeindexisnotclustered,\nthecostofusingtheindexdepends onthenumber oftuplesthatsatisfythe\nselection, asdiscussed later.\nWecanusetheindexasfollows: Wesearchthetreetofindthefirstindex\nentrythatpointstoaqualifying tupleofR.Thenwescantheleafpagesofthe\nindextoretrieveallentriesinwhichthekeyvaluesatisfiestheselection condi\u00ad\ntion.Foreachoftheseentries,weretrievethecorresponding tupleofR.(for\nconcreteness inthisdiscussion, wea.<;sumethatdataentriesuseAlternatives\n(2)or(3);ifAlternative (1)isused,thedataentrycontains theactualtuple", "477": "Evaluating Relational OpemtoTs 443\nandthereisnoadditional cost~beyond thecostofretrieving dataentries-cfor\nretrieving tuples.)\nThecostofidentifying thestarting leafpageforthescanistypically twoor\nthreeI/Os.Thecostofscanning theleaflevelpageforqualifying dataentries\ndepends onthenumberofsuchentries.Thecostofretrieving qualifying tuples\nfromRdepends ontwofactors:\n\u2022Thenumberofqualifying tuples.\n\u2022Whether theindexisclustered. (Clustered andunclustered B+treeindexes\nareillustrated inFigures 13.11and13.12.Thefiguresshouldgivethe\nreaderafeelfortheimpactofclustering, regardless ofthetypeofindex\ninvolved.)\nIftheindexisclustered, thecostofretrieving qualifying tuplesisprobably\njustonepageI/O(sinceitislikelythatallsuchtuplesarecontained ina\nsinglepage).Iftheindexisnotclustered, eachindexentrycouldpointtoa\nqualifying tupleonadifferent page,andthecostofretrieving qualifying tuples\ninastraightforward waycouldbeonepageI/Operqualifying tuple(unlesswe\ngetluckywithbuffering). Wecansignificantly reducethenumber ofI/Osto\nretrieve qualifying tuplesfromRbyfirstsortingtherids(intheindex'sdata\nentries)bytheirpage-idcomponent. Thissortensuresthat,whenwebringin\napageofR,allqualifying tuplesonthispageareretrieved oneaftertheother.\nThecostofretrieving qualifying tuplesisnowthenumber ofpagesofRthat\ncontainqualifying tuples.\nConsider aselection oftheformrnarne<'C%'ontheReserves relation. As\u00ad\nsumingthatnamesareuniformly distributed withrespecttotheinitialletter,\nforsimplicity, weestimate thatroughly10%ofReserves tuplesareintheresult.\nThisisatotalof10,000tuples,or100pages.Ifwehaveaclustered B+tree\nindexonthemarnefieldofReserves, wecanretrievethequalifying tupleswith\n100I/Os(plusafewI/Ostotraverse fromtheroottotheappropriate leafpage\ntostartthescan).However, iftheindexisunclustered, wecouldhaveupto\n10,000I/Osintheworstcase,sinceeachtuplecouldcauseustoreadapage.If\nwesorttheridsofReserves tuplesbythepagenumberandthenretrievepages\nofReserves, weavoidretrieving thesamepagemultiple times;nonetheless, the\ntuplestoberetrieved arelikelytobescattered acrossmanymorethan100\npages.Therefc)re, theuseofanunclusterecl indexforarangeselection could\nbeexpensive; itmightbecheapertosimplyscantheentirerelation (whichis\nlOOnpagesinourexample).", "478": "444 CHAPTER 14\n14.1.4HashIndex,Equality Selection\nIfahashindexisavailable onR.attrandopisequality, thebestwaytoimple\u00ad\nmenttheselection CTR.attropualue(R) isobviously tousetheindextoretrieve\nqualifying tuples.\nThecostincludes afew(typically oneortwo)l/Ostoretrievetheappropriate\nbucketpageintheindex,plusthecostofretrieving qualifying tuplesfrom\nR.Thecostofretrieving qualifying tuplesfromRdepends onthenumber of\nsuchtuplesandonwhether theindexisclustered. Sinceopisequality, there\nisexactlyonequalifying tupleifR.attrisa(candidate) keyfortherelation.\nOtherwise, wecouldhaveseveraltupleswiththesamevalueinthisattribute.\nConsider theselection inFigure14.1.Suppose thatthereisanunclustered\nhashindexonthemarneattribute, thatwehave10bufferpages,andthat\n100reservations weremadebypeoplenamedJoe.Thecostofretrieving the\nindexpagecontaining theridsofsuchreservations isoneortwol/Os.Thecost\nofretrieving the100Reserves tuplescanvarybetween 1and100,depending\nonhowtheserecordsaredistributed acrosspagesofReserves andtheorder\ninwhichweretrieve theserecords.Ifthese100recordsarecontained in,say,\nsomefivepagesofReserves, wehavejustfiveadditional l/Osifwesortthe\nridsbytheirpagecomponent. Otherwise, itispossiblethatwebringinoneof\nthesefivepages,thenlookatsomeoftheotherpages,andfindthatthefirst\npagehasbeenpagedoutwhenweneeditagain.(Remember thatseveralusers\nandDBMSoperations sharethebufferpool.)Thissituation couldcauseusto\nretrievethesamepageseveraltimes.\n14.2GENERAL SELECTION CONDITIONS\nInourdiscussion oftheselection operation thusfar,wehaveconsidered selec\u00ad\ntionconditions oftheform CTR.attropvall1e(R).Ingeneral, aselection condition\nisaBoolean combination (Le.,anexpression usingthelogicalconnectives 1\\\nandV)oftermsthathavetheformattribute opconstant orattributel op\nattrilmte2. Forexample, iftheWHEREclauseinthequeryshowninFigure14.1\ncontained thecondition R.rnarne='Joe' ANDR.bid=r, theequivalent algebra\nexpression wouldbeCTR.rname='Joe'l\\R.bid=r(R).\nInSection 14.2.1,weprovide amorerigorous definition ofCNF,whichwe\nintroduced inSection 12.2.2.Weconsider algorithms forapplying selection\nconditions without disjunction inSection14.2.2andthendiscussconditions\nwithdisjunction inSection14.2.3.", "479": "Evaluating Relaf'ional OpemtoT8\n14.2.1CNFandIndexMatching445\nToprocessaselection operation withageneralselection condition, wefirst\nexpressthecondition inconjunctive normal form(CNF), thatis,&9a\ncollection ofconjunets thatareconnected through theuseofthe1\\operator.\nEachconjunct consistsofoneormoreterms(oftheformdescribed previously)\nconnected byV.1Conjuncts thatcontain Varesaidtobedisjunctive orto\ncontain disjunction.\nAsanexample, supposethatwehaveaselection onReserves withthecondition\n(day<8/9/02 1\\r-rwme='Joe')Vbid=5Vsid=3. \",recanrewritethisin\nconjunctive normalformas(day<8/9/02 Vbid=5Vs'id=3) 1\\(marne=\n'Joe'Vbid=5Vsid=3).\nVvediscussed whenanindexmatches aCNFselection inSection12.2.2andin\u00ad\ntroduced selectivity ofaccesspaths.Thereaderisurgedtoreviewthat mate~ial\nnow.\n14.2.2Evaluating Selections withoutDisjunction\nWhentheselection doesnotcontaindisjunction, thatis,itisaconjunction of\nterms,wehavetwoevaluation optionstoconsider:\n11II\\iVecanretrieve tuplesusingafilescanorasingleindexthatmatches\nsomeconjuncts (andwhichweestimate tobethemostselective access\npath)andapplyallnonprimary conjuncts intheselection toeachretrieved\ntuple.Thisapproach isverysimilartohowweuseindexes forsimple\nselection conditions, andwedonotdiscussitfurther. (Weemphasize that\nthenumber oftuplesretrieved depends ontheselectivity oftheprimary\nconjuncts intheselection, andtheremaining conjuncts onlyreducethe\ncardinality oftheresultoftheselection.)\nIIWecantrytoutilizeseveralindexes. vVeexamine thisapproach intherest\nofthissection.\nIfseveralindexescontaining dataentrieswithrids(i.e.,Alternatives (2)or(3))\nmatchconjuncts intheselection, wecanusetheseindexestocompute setsof\nridsofcandidate tuples.\"1ecanthenintersect thesesetsofrids,typically by\nfirstsortingthem,thenretrieving thoserecordswhoseridsareintheintersec\u00ad\ntion.Ifadditional conjuncts arepresentintheselection, wecanapplythese\nconjuncts todiscardsomeofthecandidate tuplesfromtheresult.\n1Everyselection conditioll Olflbeexpressed inCNF.V\u00b7/ereferthereadertoanystandard texton\nmathematical logicforthedetails.", "480": "446 CHAPTER 14\n~\nI--~-\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"'-\"-\"'- \u2022\u2022\u2022\u2022\u2022-\u2022\u2022~~~ ..-.\u2022........\u2022...\u2022..\u2022 _....---_ .\u2022--S-.-,.....\u00b7\u00b7\u00b7\u00b7\u00b7T\u00b7-:-.\u00b7I---__._---\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7.\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7.\u00b7.- ..\u00b7\u00b7.\u00b7\u00b7\u00b7--\"'---T-\nIIntersecting ridSets:Oracle8usesseveraltechniques todoridsetin\u00ad\ntersection forselections with.AND.OneistoANDbitIl1aps.Another isto\ndoahashjoinof.indexes. For example, gi,,811sal<5/\\If'ice>30and\nindexesonsalandprice,wecanjointheindexesontheri(1column 1con\u00ad\nsidering onlyentriesthatsatisfythegivenselection conditions. Microsoft\nSQLServerimPlements ridsetintersection through indexjoins. IBN!.~p2\nimplements intersection ofridsetsusingBloomfilters(\\I,'hjcharedisy~\u00a7\u00a7~d\ninSection22.10.2). SybaseASEdoesnotdoridsetintersection forAND\nselections; SybaseASIQdoesitusingbitmapoperations. Informix also\ndoesridsetintersection.\nAsanexample, giventhecondition day<8/9/02 Abid=5Asid=,'J,wecan\nretrievetheridsofrecordsthatmeetthecondition day<8/9/02byusinga\nB+treeindexonday,retrievetheridsofrecordsthatmeetthecondition sid=,'J\nbyusingahashindexonsid,andintersect thesetwosetsofrids.(Ifwesort\nthesesetsbythepageidcomponent todotheintersection, asidebenefitis\nthattheridsintheintersection areobtained insortedorderbythepagesthat\ncontainthecorresponding tuples,whichensuresthatwedonotfetchthesame\npagetwicewhileretrieving tuplesusingtheirrids.)Wecannowretrievethe\nnecessary pages ofReserves toretrievetuplesandcheckbid=5toobtaintuples\nthatmeetthecondition day<8/9/02Abid=5/\\ sid=,'J.\n14.2.3Selections withDisjunction\nNowletusconsider thatoneoftheconjuncts intheselection condition isa\ndisjunction ofterms.Ifevenoneofthesetermsrequires afilescanbecause\nsuitable indexesorsortordersareunavailable, testingthisconjunct byitself\n(I.e.,without takingadvantage ofotherconjuncts) requires afilescan.For\nexample, suppose thattheonlyavailable indexesareahashindexonmarne\nandahashindexonsid,andthattheselection condition contains justthe\n(disjunctive) conjunct (day<8/9/02Vrnarne='Joe'). Wecanretrievetuples\nsatisfying thecondition marne='Joe'byusingtheindexonrnarne.However,\nday<8/9/02requires afilescan.Sowemightaswelldoafilescanand\ncheckthecondition marne= 'Joe'foreachretrieved tuple.Therefore, themost\nselective accesspathinthisexample isafilescan.\nOntheotherhand,iftheselection condition is(day<8/9/02 Vmame='Joe')\nAsid=,'J,theindexonsidmatches theconjunct sid=S.Wecanusethisindex\ntofindqualifying tuplesandapplyday<8/9/02Vmarne='Joe' tojustthese\ntuples. Thebestaccesspathinthisexample istheindexonsidwiththe\nprimary conjunct sid=S.", "481": "Evaluating Relational Operators\nDisjunctions: Microsoft SQLServerconsiders theuseofunionsand\nbitmaps fordealingwithdisjunctive conditions. Oracle.8 considers four\nwaystohandledisjunctive conditions: (1)Convertthequeryintoaunion\nofquerieswithout OR.(2)IfthecOllditions involvethesameattribute, such\nassal<5Vsal>30,useanestedquerywithanINlistandanindexon\ntheattribute toretrievetuplesmatching avalUeinthelist.(3)Usebitmap\noperations, e.g.,evaluate sal<5Vsal>30bygenerating bitmaps forthe\nvalues5.and30andORthebitmapstofindthetuplesthatsatisfyoneof\ntheconditions. (Wediscussbitmaps inChapter 25.)(4)Simplyapplythe\ndisjunctive condition asafilteronthesetofretrieved tuples.Syba.'3eASE\nconsiders theuseofunionsfordealingwithdisjunctive queriesandSybase\nASIQusesbitmapoperations.\nFinally,ifeveryterminadisjunction hasamatching index,wecanretrieve\ncandidate tuplesusingtheindexesandthentaketheunion.Forexample, ifthe\nselection condition istheconjunct (day<8/9/02 Vrname='Joe') andwehave\nB+treeindexesondayandrname,wecanretrievealltuplessuchthatday<\n8/9/02usingtheindexonday,retrievealltuplessuchthatrname='Joe'using\ntheindexonrname,andthentaketheunionoftheretrieved tuples.Ifallthe\nmatching indexesuseAlternative (2)or(3)fordataentries,abetterapproach\nistotaketheunionofridsandsortthembeforeretrieving thequalifying data\nrecords. Thus,intheexample, wecanfindridsoftuplessuchthatday<\n8/9/02usingtheindexonday,findridsoftuplessuchthatrname='Joe'using\ntheindexonrname,taketheunionofthesesetsofridsandsortthembypage\nnumber, andthenretrievetheactualtuplesfromReserves. Thisstrategy can\nbethought ofasa(complex) accesspaththatmatches theselection condition\n(day<8/9/02Vrname='Joe').\nMostcurrentsystems donothandleselection conditions withdisjunction effi\u00ad\ncientlyandconcentrate onoptimizing selections without disjunction.\n14.3THEPROJECTION OPERATION\nConsider thequeryshowninFigure14.2.Theoptimizer translates thisquery\nintotherelational algebraexpression 7rsid,bidReserves. Ingeneraltheprojection\noperator isoftheform7rattTl,attr2, ...,attrm(R).Toimplement projection, wehave\nSELECT DISTINCT R.sid,R.bid\nFROMReserves R\nFigure14.2SimpleProjection Query", "482": "448\ntodothefollowing:CHAPTER l4\n1.Remove unwanted attributes (i.e.,thosenotspecified intheprojection).\n2.Eliminate anyduplicate tuplesproduced.\nThesecondstepisthedifficult one.Therearetwobasicalgorithms, onebased\nonsortingandonebasedonhashing. Intermsofthegeneraltechniques listedin\nSection12.2,bothalgorithms areinstances ofpartitioning. Whilethetechnique\nofusinganindextoidentify asubsetofusefultuplesisnotapplicable for\nprojection, thesortingorhashing algorithms canbeappliedtodataentries\ninanindex,insteadoftodatarecords, undercertainconditions described in\nSection14.3.4.\n14.3.1Projection Based onSorting\nThealgorithm basedonsortinghasthefollowing steps(atleastconceptually):\n1.ScanRandproduce asetoftuplesthatcontainonlythedesiredattributes.\n2.Sortthissetoftuplesusingthecombination ofallitsattributes asthekey\nforsorting.\n3.Scanthesortedresult,comparing adjacent tuples,anddiscardduplicates.\nIfweusetemporary relations ateachstep,thefirststepcostsIvIl/Ostoscan\nR,where111isthenumber ofpagesofR,andTl/Ostowritethetemporary\nrelation, whereTisthenumber ofpagesofthetemporary; Tisa(J'v1).(The\nexactvalueofTdepends onthenumberoffieldsretained andthesizesofthese\nfields.)ThesecondstepcostsO(TlogT) (whichisalso0(MlogA1), ofcourse).\nThefinalstepcostsT.ThetotalcostisO(II;flogIvI). Thefirstandthirdsteps\narestraightforward andrelatively inexpensive. (Asnotedinthechapter on\nsorting, thecostofsortinggrowslinearly withdata..<;etsizeinpractice, given\ntypicaldata\"ietsizesandmainmemory sizes.)\nConsider theprojection onReserves showninFigure14.2.\\iVecanscallRe\u00ad\nservesatacos,tof1000I/Os.Ifweassumethateachtupleinthetemporary\nrelation createdinthefirststepis10byteslong,thecostofwritingthistem\u00ad\nporaryrelation is250l/Os.Suppose wehave20bufferpages.\\Veumsortthe\ntemporary relation intwopa\"isesatacostof2 . 2 .250=1000l/Os.Thescan\nrequired inthethirdstepcostsanadditional 250I/Os.Thetotalcostis2500\nl/Os.", "483": "Evaluat'ing Relational Operator's 449\nThisapproach canbeimproved onbymodifying thesortingalgorithm todo\nprojection withduplicate elimination. Recallthestructure oftheexternal sort\u00ad\ningalgorithm presented inChapter 13.Theveryfirstpass(Pass0)involves\nascanoftherecordsthataretobesortedtoproduce theinitialsetof(in\u00ad\nternally) sortedruns.Subsequently, oneormorepassesmergeruns.Two\nimportant modifications tothesortingalgorithm adaptitforprojection:\n\u2022'Wecanprojectoutunwanted attributes duringthefirstpass(Pass0)of\nsorting.IfBbufferpagesareavailable, wecanreadinBpagesofRand\nwriteout(T/!vI).Binternally sortedpagesofthetemporary relation. In\nfact,withamoreaggressive implementation, wecanwriteoutapproxi\u00ad\nmately2 .Binternally sortedpagesofthetemporary relation onaverage.\n(Theideaissimilartotherefinement ofexternal sortingdiscussed inSec\u00ad\ntion13.3.1.)\n\u2022Wecaneliminate duplicates duringthemerging passes.Infact,thismodifi\u00ad\ncationreducesthecostofthemerging passessincefewertuplesarewritten\noutineachpa.'3S.(Mostoftheduplicates areeliminated intheveryfirst\nmerging pass.)\nLetusconsider ourexample again.InthefirstpasswescanReserves, atacost\nof1000I/Osandwriteout250pages.With20bufferpages,the250pages\narewrittenoutasseveninternally sortedruns,each(exceptthelast)about40\npageslong.Inthesecondpasswereadtheruns,atacostof250I/Os,and\nmergethem.Thetotalcostis1,500I/Os,whichismuchlowerthanthecost\nofthefirstapproach usedtoimplement projection.\n14.3.2Projection BasedonHashing\nIfwehaveafairlylargenumber (say,B)ofbufferpagesrelativetothenumber\nofpagesofR,ahash-based approach isworthconsidering. Therearetwo\nphases:partitioning andduplicate elimination.\nInthepartitioning phase,wehaveoneinputbufferpageandB-1outputbuffer\npages.TherelationRisreadintotheinputbufferpage,onepageatatime.\nTheinputpageisprocessed a.'3follows: Foreachtuple,weprojectoutthe\nunwanted attributes andthenapplyahashfunction htothecombination of\nallremaining.attributes. Thefunction hischosensothattuplesaredistributed\nuniformly tooneofB-1partitions; thereisoneoutputpageperpartition.\nAftertheprojection thetupleiswrittentotheoutputbufferpagethatitis\nhashedtobyh.\nAttheendofthepartitioning phase,wehaveB-1partitions, eachofwhich\ncontains acollection oftuplesthatshareacommon hashvalue(computed by", "484": "450 CHAPTER 14,\napplying htoallfields),andhaveonlythedesiredfields.Thepartitioning\nphaseisillustrated inFigure14.3.\nOriginal relation\nDisk BmainmemorybuffersPartitions\nDisk2\nB-1\nFigure 14.3Partitioning PhaseofHash-Based Projection\nTwotuplesthatbelongtodifferent partitions areguaranteed nottobedupli\u00ad\ncatesbecausetheyhavedifferent hashvalues.Thus,iftwotuplesareduplicates,\ntheyareinthesamepartition. Intheduplicate elimination phase,wereadin\ntheB-1partitions oneatatimetoeliminate duplicates. Thebasicidea\nistobuildanin-memory hashtableasweprocesstuplesinordertodetect\nduplicates.\nForeachpartition produced inthefirstphase:\n1.Readinthepartition onepageatatime.Hasheachtuplebyapplying\nhashfunction h2(1=h)tothecombination ofallfieldsandtheninsertit\nintoanin-memory hashtable.Ifanewtuplehashestothesamevalueas\nsomeexisting tuple,compare thetwotocheckwhether thenewtupleisa\nduplicate. Discard duplicates astheyaredetected.\n2.Aftertheentirepartition hasbeenreadin,writethetuplesinthehashtable\n(whichisfreeofduplicates) totheresultfile.Thenclearthein-memory\nhashtabletoprepare forthenextpartition.\nNotethath2isintended todistribute thetuplesinapartition acrossmany\nbuckets tominimize collisions (twotupleshavingthesameh2values). Since\nalltuplesinagivenpartition havethesamehvalue,h2cannotbethesameas\nh!\nThisha.'3h-based projection strategy willnotworkwellifthesizeoftheha.'3h\ntableforapartition (produced inthepartitioning phase)isgreaterthanthe\nnumber ofavailable bufferpagesB.OnewaytohandlethispaTtit'ion oveT\u00ad\nflowproblem istorecursively applythehash-based projection technique to\neliminate theduplicates ineachpartition thatoverflows. Thatis,wedivide", "485": "Evaluating Relational Operators 451\nanoverflowing partition intosubpartitions, thenreadeachsubpartition into\nmemory toeliminate duplicates.\nIfweassumethathdistributes thetupleswithperfectuniformity andthatthe\nnumberofpagesoftuplesaftertheprojection (butbeforeduplicate elimination)\nisT,eachpartition contains B~lpages.(Notethatthenumber ofpartitions\nisB-1because oneofthebufferpagesisusedtoreadintherelation during\nthepartitioning phase.)Thesizeofapartition istherefore B~l'andthesize\nofahashtableforapartition isB~l.f;wherefisafudgefactorusedto\ncapturethe(small)increase insizebetween thepartition andahashtablefor\nthepartition. ThenumberofbufferpagesBmustbegreaterthanthepartition\nsizeB~l.ftoavoidpartition overflow. Thisobservation impliesthatwerequire\napproximately B>j\"J-:rbufferpages.\nNowletusconsider thecostofhash-based projection. Inthepartitioning\nphase,wereadR,atacostofMI/Os.Wealsowriteouttheprojected tuples,\natotalofTpages,whereTissomefractionofM,depending onthefieldsthat\nareprojected out.Thecostofthisphaseistherefore M+Tl/Os;thecostof\nhashing isaCPUcost,andwedonottakeitintoaccount. Intheduplicate\nelimination phase,wehavetoreadineverypartition. Thetotalnumber of\npagesinallpartitions isT.Wealsowriteoutthein-memory hashtablefor\neachpartition afterduplicate elimination; thishashtableispartoftheresult\noftheprojection, andweignorethecostofwritingoutresulttuples,asusual.\nThus,thetotalcostofbothphasesisM+2T.Inourprojection onReserves\n(Figure14.2),thiscostis1000+2 .250=1500l/Os.\n14.3.3SortingVersusHashing forProjections\nThesorting-based approach issuperior tohashing ifwehavemanyduplicates\norifthedistribution of(hash)valuesisverynonuniform. Inthiscase,some\npartitions couldbemuchlargerthanaverage, andahashtableforsuchapar\u00ad\ntitionwouldnotfitinmemory duringtheduplicate elimination phase.Also,\nausefulsideeffectofusingthesorting-based approach isthattheresultis\nsorted.Further, sinceexternal sortingisrequired foravarietyofreasons, most\ndatabase systems haveasortingutility,whichcanbeusedtoimplement pro\u00ad\njectionrelatively easily.Fortheserea..-;ons, sortingisthestandard approach\nforprojection. Andperhaps duetoasimplistic useofthesortingutility,un\u00ad\nwantedattribute removalandduplicate elimination areseparate stepsinmany\nsystems (i.e.,thebasicsortingalgorithm isoftenusedwithouttherefinements\nweoutlined).\nWeobservethat,ifwehaveB>ITbufferpages,whereTisthesizeof\ntheprojected relation beforeduplicate elimination, bothapproaches havethe", "486": "452\nI--~--~\"-CHAPTER 1~\nProjection inCommercial Systems: InfotmLxuses hashing. IBMDB2,\nOracle8,andSybaseASEusesorting. Microsoft SQLServerandSybase\nASIQimplement bothhash-based andsort-based algorithms.\nsameI/Ocost.Sortingtakestwopasses.Inthefirstpass,wereadAIpages\noftheoriginal relation andwriteoutTpages.Inthesecondpa<;s,weread\ntheTpagesandoutputtheresultoftheprojection. Usinghashing, inthe\npartitioning pha<;e,wereadMpagesandwriteTpages'worthofpartitions.\nInthesecondphase,wereadTpagesandoutputtheresultoftheprojection.\nThus,considerations suchasCPUcosts,desirability ofsortedorderinthe\nresult,andskewinthedistribution ofvaluesdrivethechoiceofprojection\nmethod.\n14.3.4UseofIndexesforProjections\nNeitherthehashing northesortingapproach utilizesanyexisting indexes.\nAnexisting indexisusefulifthekeyincludes alltheattributes wewishto\nretainintheprojection. Inthiscase,wecansimplyretrievethekeyvalues\nfromtheindex-without everaccessing theactualrelation-and applyour\nprojection techniques tothis(muchsmaller) setofpages.Thistechnique,\ncalledanindex-only scan,andwa<;discussed inSections 8.5.2and12.3.2.If\nwehaveanordered (i.e.,atree)indexwhosesearchkeyincludes thewanted\nattributes asaprefix,wecandoevenbetter:Justretrieve thedataentries\ninorder,discarding unwanted fields,andcompare adjacent entriestocheck\nforduplicates. Theindex-only scan technique isdiscussed furtherinSection\n15.4.1.\n14.4THEJOINOPERATION\nConsider thefollowing query:\nSELECT*\nFROM Reserves R,SailorsS\nWHERE R.sid=S.sid\nThisquerycanbeexpressed inrelational algebra usingthejoinoperation:\nR[XlS.Thejoinoperation, oneofthemostusefuloperations inrelational\nalgebra, istheprimary meansofcombining information fromtwoormore\nrelations.", "487": "Evaluating Relational OpemtoTs 453\n,------------------_._. __._.._._.._______-_._----_._._--_ _-----------,\nJoinsinCommercial Systems: Syba..<;eASE suppodsindex nestedloop\nandsort-merge join.SybaseASIQsupports page-oriented nestedloop,in\u00ad\ndexnestedloop,simplehash,andsort-merge join,inaddition tojoinin\u00ad\ndexes(whichwediscussinChapter 25).\nOl'acle8stippoitspage-oriented\nnestedloopsjoin,sort-merge join,andavariantofhybridhashjoin.IBM\nDB2supports blocknestedloop,sort-merge, andhybridhashjoin.Mi\u00ad\ncrosoftSQLServersupports blocknestedloops,index'nestedloops,80rt\u00ad\nmerge,hashjoin,andatechnique calledha.shteam.s.Informix supports\nblocknestedloops,indexnestedloops,andhybridhashjoin.\nAlthough ajoincanbedefinedasacross-product followed byselections andpro\u00ad\njections, joinsarisemuchmorefrequently inpracticethanplaincross-products.\nFurther, theresultofacross-product istypically muchlargerthantheresultof\najoin,soitisveryimportant torecognize joinsandimplement themwithout\nmaterializing theunderlying cross-product. Joinshavetherefore received alot\nofattention.\nWenowconsider severalalternative techniques forimplementing joins.We\nbeginbydiscussing twoalgorithms (simplenestedloopsandblocknestedloops)\nthatessentially enumerate alltuplesinthecross-product anddiscardtuples\nthatdonotmeetthejoinconditions. Thesealgorithms areinstances ofthe\nsimpleiteration technique mentioned inSection12.2.\nTheremaining joinalgorithms avoidenumerating thecross-product. They\nareinstances oftheindexing andpartitioning techniques mentioned inSection\n12.2.Intuitively, ifthejoincondition consists ofequalities, tuplesinthetwo\nrelations canbethought of&'3belonging topartitions, suchthatonlytuplesin\nthesamepartition canjoinwitheachother;thetuplesinapartition contain\nthesamevaluesinthejoincolumns. Indexnestedloopsjoinscansoneofthe\nrelations and,foreachtupleinit,usesanindexonthe(joincolumns ofthe)\nsecondrelation tolocatetuplesinthesamepartition. Thus,onlyasubsetof\nthesecondrelation iscompared withagiventupleofthefirstrelation, andthe\nentirecross-product isnotenumerated. Thelasttwoalgorithms (sort-merge\njoinandhashjoin)alsotakeadvantage ofjoinconditions topartition tuplesin\ntherelations tobejoinedandcompare onlytuplesinthesamepartition while\ncomputing thejoin,buttheydonotrelyonapre-existing index.Instead, they\neithersortorhashtherelations tobejoinedtoachievethepartitioning.\nWediscussthejoinoftworelations RandS,withthejoin condition Ri=Sj,\nusingpositional notation. (Ifwehavemorecomplex joinconditions, thebasic\nideabehindeachalgorithm remainsessentially thesame.\\Vediscussthedetails\ninSection14.4.4.) vVeassmneAIpagesinRwithPI?tuplesperpageandN", "488": "454 CHAPTER 14\npagesinSwithPStuplesperpage.\\;VeuseRandSinourpresentation ofthe\nalgorithms, andtheReserves andSailorsrelations forspecificexamples.\n14.4.1NestedLoopsJoin\nThesimplest joinalgorithm isatuple-at-a-time nestedloopsevaluation. We\nscantheouterrelationR,andforeachtuplerER,wescantheentireinner\nrelationS.Thecostofscanning RisMl/Os.WescanSatotalofPR.Iv!\ntimes,andeachscancostsNl/Os.Thus,thetotalcostisM+PR.Iv!.N.\nforeachtuplerERdo\nforeach tuplesESdo\nifri==Sjthenadd(r,s)toresult\nFigure14.4SimpleNestedLoopsJoin\nSuppose wechooseRtobeReserves andStobeSailors. ThevalueofM\nisthen1,000,PRis100,andNis500.Thecostofsimplenestedloopsjoin\nis1000+100.1000.500pagel/Os(plusthecostofwritingouttheresult;\nweremindthereaderagainthatweuniformly ignorethiscomponent ofthe\ncost).Thecostisstaggering: 1000+(5\u00b7107)I/Os.NotethateachI/Ocosts\naboutlamsoncurrenthardware, whichmeansthatthisjoinwilltakeabout\n140hours!\nAsimplerefinement istodothisjoinpage-at-a-time: ForeachpageofR,we\ncanretrieve eachpageofSandwriteouttuples(r,s)forallqualifying tuples\nrER-pageandSES-page. Thisway,thecostisMtoscanR,asbefore.\nHowever, Sisscanned onlyMtimes,andsothetotalcostisM+Iv!.N.\nThus,thepage-at-a-time refinement givesusanimprovement ofafactorofPRo\nIntheexample joinoftheReserves andSailorsrelations, thecostisreduced\nto1000+1000.500=501,000I/Osandwouldtakeabout1.4hours.This\ndramatic improvement underscores theimportance ofpage-oriented operations\nforminimizing diskI/O.\nFromthesecostformulas astraightforward observation isthatweshouldchoose\ntheouterrelationRtobethesmallerofthetworelations (R[XJB=B[XJR,\naslongaswekeeptrackoffieldnames). Thischoicedoesnotchangethecosts\nsignificantly, however.Ifwechoosethesmallerrelation, Sailors,astheouter\nrelation, thecostofthepage-at-a-time algorithm is500+500\u00b71000=500,500\nI/Os,whichisonlymarginally betterthanthecostofpage-oriented simple\nnestedloopsjoinwithReserves astheouterrelation.", "489": "EvahLating Relat1:onal OperatoTs\nBlockNestedLoopsJoin455\nThesimplenestedloopsjoinalgorithm doesnoteffectively utilizebufferpages.\nSuppose wehaveenoughmemory toholdthesmallerrelation, say,R,with\natleasttwoextrabufferpagesleftover.\\Vecanreadinthesmallerrelation\nanduseoneoftheextrabufferpagestoscanthelargerrelationS.Foreach\ntuple SE5,wecheckRandoutputatuple(1',s)forqualifying tupless(i.e.,\nri=Sj).Thesecondextrabufferpage)susedasanoutputbuffer.Each\nrelation isscannedjustonce,foratotalI/Ocostof1\\1+N,whichisoptimal.\nIfenough memory isavailable, animportant refinement istobuildanin\u00ad\nmemory hashtableforthesmallerrelation R.TheI/OcostisstillM+N,but\ntheCPUcostistypically muchlowerwiththehashtablerefinement.\nWhatifwehavetoolittlememory toholdtheentiresmallerrelation? Wecan\ngeneralize thepreceding ideabybreaking therelation Rintoblocksthatcan\nfitintotheavailable bufferpagesandscanning allof5foreachblockofR.R\nistheouterrelation, sinceitisscanned onlyonce,andSistheinnerrelation,\nsinceitisscanned multiple times.IfwehaveBbufferpages,wecanreadin\nB-2pagesoftheouterrelationRandscantheinnerrelationSusingoneof\nthetworemaining pages.Wecanwriteouttuples(1',s),whererER-block,\nSES-page,andri=Sj,usingthelastbufferpageforoutput.\nAnefficient waytofindmatching pairsoftuples(i.e.,tuplessatisfying the\njoincondition ri=Sj)istobuildamain-memory hashtablefortheblockofR.\nBecause ahashtableforasetoftuplestakesalittlemorespacethanjustthe\ntuplesthemselves, building ahashtableinvolves atrade-off: Theeffective block\nsizeofR,intermsofthenumberoftuplesperblock, ~sreduced. Building ahash\ntableiswellworththeeffort.Theblocknestedloopsalgorithm isdescribed in\nFigure14.5.Bufferusageinthisalgorithm isillustrated inFigl.lre14.6.\nforeach blockofB-2pagesofRdo\nforeach pageof5do{\nforallmatching in-memory tuples TER-blockandsES-page,\nadd(1',s)toresult\n}\nFigure14.5BlockNestedLoopsJoin\nThecostofthisstrategy is!vI1/0sforreadinginR(whichisscanned only\nonce).5isscanned atotalofr:~21times-ignoring theextraspacerequired\nperpageduetothein-memory hashtable--\u00b7and eachscancostsNl/Os.The\ntotalcostisthusI\\1J+N.rrf!21\u00b7", "490": "456 CHAPTER lA\nJoinresult\n~-=:::>\n~~~r=... .\"\n\u00b7\u00b7\u00b7-+iQD ~~-~~\nI l,-~Sh tableforblockRIJ(k<B-1pages)\nf-------j-,=O D~\nInputbuffer Outputbuffer\n(toscanallofS)~~~Relations RandS\nr==--~:)'\nI\nDisk Bmainmemorybuffers Disk\nFigure 14.6BufferUsageinBlockNestedLoopsJoin\nConsider thejoinoftheReserves andSailorsrelations. LetuschooseReserves\ntobetheouterrelationRandassumewehaveenoughbufferstoholdanin\u00ad\nmemory hashtablefor100pagesofReserves (withatleasttwoadditional\nbuffers,ofcourse). WehavetoscanReserves, atacostof1000l/Os.Foreach\nlOa-page blockofReserves, wehavetoscanSailors. Therefore, weperform\n10scansofSailors,eachcosting500l/Os.Thetotalcostis1000+10.500=\n6000l/Os.Ifwehadonlyenoughbufferstohold90pagesofReserves, we\nwouldhavetoscanSailorsflOOO/90l =12times,andthetotalcostwouldbe\n1000+12\u00b7500 =7000l/Os,\nSuppose wechooseSailorstobetheouterrelationRinstead. Scanning Sailors\ncosts500l/Os.WewouldscanReserves f500/100l =5times.Thetotalcost\nis500+5 .1,000=5500l/Os.Ifinsteadwehaveonlyenoughbuffersfor90\npagesofSailors,wewouldscanReserves atotaloff500/901=6times.The\ntotalcostinthiscaseis500+6 .1000=6500l/Os.Wenotethattheblock\nnestedloopsjoinalgorithm takesalittleoveraminuteonourrunning example,\na.ssuming lOmsperI/Oasbefore.\nImpactofBlocked Access\nIfweconsider theeffectofblocked accesstoseveralpages,thereisafunda\u00ad\nmentalchangeinthewayweallocate buffersforblocknestedloops.Rather\nthanusingjustonebufferpagefortheinnerrelation, thebestapproach isto\nsplitthebufferpoolevenlybetween thetworelations. Thisallocation results\ninmorepa.ssesovertheinnerrelation, leadingtomorepagefetches. However,\nthetimespentonseekingforpagesisdramatically reduced.\nThetechnique ofdoublebuffering (discussed inChapter 13inthecontextof\nsorting) canalsobeused,butwedonotdiscussitfurther.", "491": "Evaluating Relational Operators\nIndexNestedLoopsJoin4.57\nIfthereisanindexononeoftherelations onthejoinattribute(s), wecantake\nadvantage oftheindexbymakingtheindexed relation betheinnerrelation.\nSuppose wehaveasuitable indexonS;Figure14.7describes theindexnested\nloopsjoinalgorithm.\nforeach tuplerERdo\nforeach tuplesESwhereri==Sj\nadd(1',s)toresult\nFigure 14.7IndexNestedLoopsJoin\nForeachtuple TER,weusetheindextoretrieve matching tuplesofS.\nIntuitively, wecompare ronlywithtuplesofSthatareinthesamepartition,\ninthattheyhavethesamevalueinthejoincolumn. Unliketheothernested\nloopsjoinalgorithms, therefore, theindexnestedloopsjoinalgorithm doesnot\nenumerate thecross-product ofRandS.Thecostofscanning RisM,as\nbefore.Thecostofretrieving matching Stuplesdepends onthekindofindex\nandthenumberofmatching tuples;foreachRtuple,thecostisa..sfollows:\n1.IftheindexonSisaB+treeindex,thecosttofindtheappropriate leaf\nistypically 2---4l/Os.Iftheindexisahashindex,thecosttofindthe\nappropriate bucketis1-21/Os.\n2.Oncewefindtheappropriate leaforbucket,thecostofretrieving matching\nStuplesdepends onwhether theindexisclustered. Ifitis,thecostper\noutertuplerERistypically justonemoreI/O.Ifitisnotclustered, the\ncostcouldbeoneI/Opermatching S-tuple(sinceeachofthesecouldbe\nonadifferent pageintheworstcase).\nAsanexample, supposethatwehaveahash-based indexusingAlternative (2)\nonthesidattribute ofSailorsandthatittakesabout1.2l/Osonaverage2\ntoretrievetheappropriate pageoftheindex.SincesidisakeyforSailors,\nwehaveatmostonematching tuple.Indeed, .sidinReserves isaforeignkey\nreferring toSailors,andtherefore wehaveexactlyonematching Sailorstuple\nforeachReserves tuple.Letusconsider thecostofscanning Reserves and\nusingtheindextoretrievethematching SailorstupleforeachReserves tuple.\nThecostofscanning Reserves is1000.Thereare100.1000tuplesinReserves.\nForeachofthesetuples,retrieving theindexpagecontaining theridofthe\nmatching Sailorstuplecosts1.2l/Os(onaverage); inaddition, wehaveto\nretrievetheSailorspagecontaining thequalifying tuple.Therefore, wehave\n2Thisisatypicalcostforhash-ba.~ed indexes,", "492": "458 CHAPTER l~\n100,000 \u00b7(1+1.2)l/Ostoretrieve matching Sailorstuples.Thetotalcostis\n221,000l/Os.\nAsanotherexample, supposethatwehaveahash-based indexusingAlternative\n(2)onthesidattribute ofReserves. NowwecanscanSailors(500l/Os),\nandforeachtuple,usetheindextoretrieve matching Reserves tuples.We\nhaveatotalof80.500Sailorstuples,andeachtuplecouldmatchwitheither\nzeroormoreReserves tuples;asailormayhavenoreservations orseveral.\nForeachSailorstuple,wecanretrievetheindexpagecontaining theridsof\nmatching Reserves tuples(assuming thatwehaveatmostonesuchindexpage,\nwhichisareasonable guess)in1.2l/Osonaverage. Thetotalcostthusfaris\n500+40,000.1.2=48,500l/Os.\nInaddition, wehavethecostofretrieving matching Reserves tuples.Sincewe\nhave100,000 reservations for40,000Sailors,assuming auniform distribution\nwecanestimate thateachSailorstuplematches with2.5Reserves tupleson\naverage.IftheindexonReserves isclustered, andthesematching tuplesare\ntypically onthesamepageofReserves foragivensailor,thecostofretrieving\nthemisjustoneI/OperSailortuple,whichaddsupto40,000extral/Os.\nIftheindexisnotclustered, eachmatching Reserves tuplemaywellbeon\nadifferent page,leadingtoatotalof2.5.40,000l/Osforretrieving qualify\u00ad\ningtuples.Therefore, thetotalcostcanvaryfrom48,500+40,000=88,500 to\n48,500+100,000=148,500 l/Os.Assuming 10msperI/O,thiswouldtakeabout\n15to25minutes.\nSo,evenwithanunclustered index,ifthenumberofmatching innertuplesfor\neachoutertupleissmall(onaverage), thecostoftheindexnestedloopsjoin\nalgorithm islikelytobemuchlessthanthecostofasimplenestedloopsjoin.\n14.4.2Sort-Merge Join\nThebasicideabehindthesort-merge joinalgorithm istoSOTtbothrelations\nonthejoinattribute andthenlookforqualifying tuples TERandsES\nbyessentially TneTging thetworelations. Thesortingstepgroupsalltuples\nwiththesamevalueinthejoincolumnandthusmakesiteasytoidentify\npartitions, orgroupsoftupleswiththesamevalue,inthejoincolumn. We\nexploitthispartitioning bycomparing theRtuplesinapartition withonlythe\nStuplesinthesamepartition (ratherthanwithallStuples),therebyavoiding\nenumeration ofthecross-product ofRandS.(Thispartition-ba.<-;ed approach\nworksonlyforequality joinconditions.)\nTheexternal sortingalgorithm discussed inChapter 13canbeusedtodothe\nsorting, andofcourse,ifarelation isalreadysortedonthejoinattribute, we", "493": "Evaluating Relational OperatoTs 4~9\nneednotsortitagain.vVenowconsider themerging stepindetail:vVescan\ntherelations RandS)lookingforqualifying tuples(i.e.,tuplesTrinRand\nTsinSsuchthatTri=Tsj).Thetwoscansstartatthefirsttupleineach\nrelation. vVeadvance thescanofRaslongasthecurrentRtupleislessthan\nthecurrentStuple(withrespecttothevaluesinthejoinattribute). Similarly,\nweadvance thescanofSaslongasthecurrentStupleislessthanthecurrent\nRtuple.\\Vealternate between suchadvances untilwefindanRtupleTrand\naStupleTswithTri=TSj'\nWhenwefindtuplesTrandTssuchthatTri=Tsj,weneedtooutputthe\njoinedtuple.Infact,wecouldhaveseveralRtuplesandseveralStupleswith\nthesamevalueinthejoinattributes asthecurrenttuplesTrandTs.We\nrefertothesetuplesasthecurrentRpartition andthecurrentSpartition. For\neachtuplerinthecurrentRpartition, wescanalltuplessinthecurrentS\npartition andoutputthejoinedtuple(r,s).Wethenresumescanning Rand\nS,beginning withthefirsttuplesthatfollowthepartitions oftuplesthatwe\njustprocessed.\nThesort-merge joinalgorithm isshowninFigure14.8.Weassignonlytuple\nvaluestothevariables Tr, Ts,andGsandusethespecialvalueeoftodenote\nthattherearenomoretuplesintherelationbeingscanned. Subscripts identify\nfields,forexample, TridenotestheithfieldoftupleTr.IfTrhasthevalue\neof,anycomparison involving Triisdefinedtoevaluate tofalse.\nWeillustrate sort-merge joinontheSailorsandReserves instances shownin\nFigures 14.9and14.10,withthejoincondition beingequality onthesidat\u00ad\ntributes.\nThesetworelations arealreadysortedonsid,andthemerging phaseofthe\nsort-merge joinalgorithm beginswiththescanspositioned atthefirsttupleof\neachrelation instance. Weadvance thescanofSailors,sinceitssidvalue,now\n22,islessthanthesidvalueofReserves, whichisnow28.ThesecondSailors\ntupleh&<;sid=28,whichisequaltothesidvalueofthecurrentReserves tuple.\nTherefore, wenowoutputaresulttupleforeachpairoftuples,onefromSailors\nandonefromReserves, inthecurrentpartition (i.e.,withsid=28).Sincewe\nhavejustoneSailorstuplewithsid=28andtwosuchReserves tuples,we\nwritetworesulttuples.Afterthisstep,weposition thescanofSailorsatthe\nfirsttupleafterthepartition withsid=28,whichha.<;sid=31.Similarly, we\nposition thescanofReserves atthefirsttuplewithsid=31.Sincethesetwo\ntupleshavethesamesidvalues,wehavefoundthenextmatching partition,\nandwemustwriteouttheresulttuplesgenerated fromthispartition (there\narethreesuchtuples). Afterthis,theSailorsscanispositioned atthetuple\nwithsid=36,andtheReserves scanispositioned atthetuplewithsid=58.\nTherestofthemergephaseproceeds similarly.", "494": "460 CHAPTER 14\nprocsmjoin(R, B,'Hi=By)\nifRnotsortedonattribute i,sortit;\nifBnotsortedonattributej,sortit;\nTr=firsttupleinR;\nTs=firsttupleinB;\nGs=firsttupleinS;\nwhileTri=eo!andGs-I=-eo!do{\nwhileTri<GSjdo\nTr=nexttupleinRafterTr;\nwhileTri>GSjdo\nGs=nexttupleinSafterGs//rangesoverR\n//rangesoverS\n//startofcurrentS-partition\n//continue scanofR\n//continue scanofB\nTs=Gs; //NeededincaseTrii=GSj\nwhileTri==GSjdo{ / /processcurrentRpartition\nTs=Gs; //resetSpartition scan\nwhileTSj==Trido{ / /processcurrentRtuple\nadd(Tr,Ts)toresult; //outputjoinedtuples\nTs=nexttupleinSafterTs;}//advance Spartition scan\nTr=nexttupleinRafterTr; //advance scanofR\n} //donewithcurrentRpartition\nGs=Ts;\n}//initialize searchfornextSpartition\nFigure14.8Sort-Merge Join\n~snarrwmUng~ ~day\n22dustin 745.0\n28yuppy 935.0\n31lubber 855.5\n36lubber636.0\n44guppy 535.0\n58rusty 1035.0\nFigure 14.9AnInstance ofSailors2810312/04/96 guppy\n2810311/03/96 }'uppy\n3110110/10/96 dustin\n3110210/12/96 lubber\n3110110/11/96 lubber\n5810311/12/96 dustin\nFigure14.10 AnInstance ofReserves", "495": "Evaluating Relational Operators \u00b7161\n~\nIngeneral, wehavetoscanapartition oftuplesinthesecondrelation asoften\nasthenumber oftuplesinthecorresponding partition inthefirstrelation.\nThefirstrelation intheexample, Sailors,ha.',justonetupleineachpartition.\n(Thisisnothappenstance butaconsequence ofthefactthatsidisakey~~~\nthisexample isakey-foreign keyjoin.)Incontra.\"t, suppose thatthejoin\ncondition ischanged tobesname=7'name. Now,bothrelations containmore\nthanonetupleinthepartition withsname=mame='lubber'. Thetupleswith\nrname='lubber'inReserves havetobescanned foreachSailorstuplewith\nsname='lubber'.\nCostofSort~MergeJoin\nThecostofsortingRisO(/vlloglv1) anclthecostofsortingSisO(NlogN).\nThecostofthemerging phaseis/vI+NifnoSpartition isscanned multiple\ntimes(orthenecessary pagesarefoundinthebufferafterthefirstpass).This\napproach isespecially attractive ifatleastonerelation isalreadysortedonthe\njoinattribute orhasaclustered indexonthejoinattribute.\nConsider thejoinoftherelations Reserves andSailors.Assuming thatwehave\n100bufferpages(roughly thesamenumberthatweassumed wereavailable\ninourdiscussion ofblocknestedloopsjoin),wecansortReserves injusttwo\npasses.Thefirstpassproduces 10internally sortedrunsof100pageseach.\nThesecondpassmergesthese10runstoproduce thesortedrelation. Because\nwereadandwriteReserves ineachpass,thesortingcostis2\u00b72.1000=4000\nl/Os.Similarly, wecansortSailorsintwopasses,atacostof2.2.500=2000\nl/Os.Inaddition, theseconclphaseofthesort-merge joinalgorithm requires\nanadditional scanofbothrelations. Thusthetotalcostis4000+2000+\n1000+500=7500l/Os,whichissimilartothecostoftheblocknestedloops\nalgorithm.\nSuppose thatwehaveonly35bufferpages.\\VecanstillsortbothReserves and\nSailorsintwopasses,andthecostofthesort-merge joinalgorithm remainsat\n7500l/Os.However, thecostoftheblocknestedloopsjoinalgorithm ismore\nthan15,000l/Os.Ontheotherhand,ifwehave ~300bufferpages,thecost\nofthesort~merge joinremains at7500I/Os,whereas thecostoftheblock\nnestedloopsjoindropsto2500l/Os.(Weleaveittothereadertoverifythese\nnumbers. )\n\\Venotethatmultiple scansofapartition ofthesecondrelationarepotentially\nexpensive. Inourexample, ifthenumber ofReserves tuplesinarepeatedly\nscanned partition issmall(say,justafewpages),thelikelihood offindingthe\nentirepartitiOli inthebufferpoolonrepeated scansisveryhigh,andtheI/O\ncostremains essentially thesameasforasinglescan.However, ifmanypages", "496": "462 CHAPTER 14\nofReserves tuplesareinagivenpartition, thefirstpageofsuchapartition\nmaynolongerbeinthebufferpoolwhenwerequestitasecondtime(after\nfirstscanning allpagesinthepartition; remember thateachpageisunpinned\na'3thescanmovespastit).Inthisca.se,theI/Ocostcouldbeashighasthe\nnumber ofpagesintheReserves partition timesthenumber oftuplesinthe\ncorresponding Sailorspartition!\nIntheworst-case scenario, themerging phasecouldrequireustoreadthe\ncomplete secondrelation foreachtupleinthefirstrelation, andthenumberof\nl/OsisO(M.N)l/Os!(Thisscenario occurswhenalltuplesinbothrelations\ncontainthesamevalueinthejoinattribute; itisextremely unlikely.)\nInpractice, theI/Ocostofthemergephaseistypically justasinglescanof\neachrelation. Asinglescancanbeguaranteed ifatleastoneoftherelations\ninvolved hasnoduplicates inthejoinattribute; thisisthecase,fortunately,\nforkey~foreign keyjoins,whichareverycommon.\nARefinement\nWeassumed thatthetworelations aresortedfirstandthenmergedinadistinct\npass.Itispossible toimprove thesort-merge joinalgorithm bycombining the\nmerging phaseofsortingwiththemerging phaseofthejoin.First,weproduce\nsortedrunsofsizeBforbothRand5.IfB>VI,whereListhesizeofthe\nlargerrelation, thenumber ofrunsperrelation islessthanVI.Suppose that\nthenumber ofbuffersavailable forthemerging pha.<;eisatlea'3t2VI;that\nis,morethanthetotalnumber ofrunsforRand5.Weallocate onebuffer\npageforeachrunofRandoneforeachrunof5.Wethenmergetherunsof\nR(togenerate thesortedversionofR),mergetherunsof5,andmergethe\nresulting Rand5streams a'3theyaregenerated; weapplythejoincondition\naswemergetheRandSstreamsanddiscardtuplesinthecross--product that\ndonotmeetthejoincondition.\nUnfortunately, thisideaincrea<;es thenumberofbuffersrequired to2JI.How\u00ad\never,byusingthetechnique discussed inSection13.3.1wecanproduce sorted\nrunsofsizeapproximately 2\u00b7BforbothRand5.Consequently, wehavefewer\nthanVI/2runsofeachrelation, giventheassumption thatB>VI.Thus,\nthetotalnumber ofrunsislessthanVI,thatis,lessthanB,andwecan\ncombine themerging pha.seswithnoneedforadditional buffers.\nThisapproach allowsustoperform asort-merge joinatthecostofreadingand\nwritingRandSinthefirstpa.ssandreadingRand5inthesecondpass.The\ntotalcostisthus ~1.(At+N).Inourexample, thecostgoesdownfrom7500\nto4500l/Os.", "497": "Evaluating Relatio'nal Operators 463\n}\nBlockedAccessandDouble-Buffering\nTheblockedI/Oanddouble-buffering optimizations, discussed inChapter 13\ninthecontextofsorting,canbeusedtospeedupthemerging passaswellas\nthesortingoftherelations tobejoined;wedonotdiscusstheserefinements.\n14.4.3HashJoin\nThehashjoinalgorithm, likethesort-merge joinalgorithm, identifies par\u00ad\ntitionsinRandSinapartitioning phaseand,inasubsequent probing\nphase,compares tuplesinanRpartition onlywithtuplesinthecorrespond\u00ad\ning5partition fortestingequality joinconditions. Unlikesort-merge join,hash\njoinuseshashing toidentifypartitions ratherthansorting. Thepartitioning\n(alsocalledbuilding) pha..\"Jeofhashjoinissimilartothepartitioning inhash\u00ad\nbasedprojection andisillustrated inFigure14.3.Theprobing (sometimes\ncalledmatching) phaseisillustrated inFigure14.11.\nDisko00\nOutputbufferHashtableforpartitionRi\n(k<B-1pages)\nBmainmemorybulTers\nDiskPartitions ofRandS Joinresult~\nFigure14.11 Probing PhaseofHashJoin\nTheideaistohashbothrelations onthejoinattribute, usingthesamehash\nfunction h.Ifweha..'3heachrelation (ideallyuniformly) intokpartitions, we\nareassuredthatRtuplesinpartition icanjoinonlywithStuplesinthesame\npartition i.Thisobservation canbeusedtogoodeffect:Wecanreadina\n(complete) partition ofthesmallerrelationRandscanjustthecorresponding\npartition ofSformatches. \\iVeneverneedtoconsider theseRandStuples\nagain.Thus,onceRandSarepartitioned, wecanperform thejoinbyreading\ninRand5justonce,provided enoughmemory isavailable toholdallthe\ntuplesinanygivenpartition ofR.\nInpractice webuildanin-memory hashtablefortheRpartition, usingaha..'3h\nfunction h2thatisdifferent fromh(sinceh2isintended todistribute tuples\ninapartition basedonh),toreduceCPUcosts.\\Neneedenoughmemory to\nholdthishashtable,whichisalittlelargerthantheRpartition itself.", "498": "464 CHAPTER ~4\nThehashjoinalgorithm ispresented inFigure14.12.(Thereareseveralvariants\nonthisidea;thisversioniscalledGracehashjoinintheliterature.) Consider\nthecostofthehashjoinalgorithm. Inthepartitioning phase,wehaveto\nscanbothRandSonceandwritethemoutonce.Thecostofthisphase\nistherefore 2(l'vi+N).Inthesecondphase,wescaneachpartition once,\nassuming nopartition overflows, atacostof.M+NI/Os.Thetotalcostis\ntherefore 3(AI+N),givenourassumption thateachpartition fitsintomemory\ninthesecondphase.Onourexample joinofReserves andSailors,thetotal\ncostis3.(500+1000)=4500I/Os,andassuming lOmsperI/O,hashjoin\ntakesunderaminute. Compare thiswithsimplenestedloopsjoin,whichtook\nabout140houTs--this difference underscores theimportance ofusingagood\njoinalgorithm.\n//Partition Rintokpartitions\nforeach tuplerERdo\nreadTandaddittobufferpageh(ri);\n//Partition Sintokpartitions\nforeach tuplesESdo\nreadsandaddittobufferpageh(sj);\n//Probing phase\nforI=1,...,kdo{//flushedaspagefills\n//flushedaspagefills\n//Buildin-memory hashtableforRz,usingh2\nforeach tuple TEpartition Rzdo\nreadrandinsertintohashtableusingh2(ri);\n//ScanSzandprobeformatching Rztuples\nforeach tuplesEpartition Szdo{\nreadsandprobetableusingh2(sj);\nformatching Rtuples T,output(7',s)};\nclearhashtabletopreparefornextpartition;\n}\nFigure 14.12 HashJoin\nMemory Requirements andOverflow Handling\nToincrease thechances ofagivenpartition fittingintoavailable memory in\ntheprobing phase,wemustminimize thesizeofapartition bymaximizing\nthenumber ofpartitions. Inthepartitioning phase,topartition R(similarly,", "499": "Evaluating Relational OperatOTS 465\n8)intokpartitions, weneedatleastkoutputbuffersandoneinputbuffer.\nTherefore, givenBbufferpages,themaximum number ofpartitions isk=\nB-1.Assuming thatpartitions areequalinsize,thismeansthatthesizeof\neachRpartition ist!l(a'3usual,AiisthenumberofpagesofR).Thenumber\nofpagesinthe(in-memory) hashtablebuiltduringtheprobing phasefora\npartition isthus ~'~'i,wherefisafudgefactorusedtocapturethe(small)\nincrease insizebetween thepartition andahashtableforthepartition.\nDuringtheprobing phase,inaddition tothehashtablefortheRpartition,\nwerequireabufferpageforscanning the8partition andanoutputbuffer.\nTherefore, werequireB>-k'~~+2.Weneedapproximately B>Jf.AIfor\nthehashjoinalgorithm toperform well.\nSincethepartitions ofRarelikelytobecloseinsizebutnotidentical, the\nlargestpartition issomewhat largerthant!l'andthenumber ofbufferpages\nrequired isalittlemorethanB>Jf.AI.Thereisalsotheriskthat,ifthe\nhashfunction hdoesnotpartition Runiformly, thehashtableforoneormore\nRpartitions maynotfitinmemory duringtheprobing phase.Thissituation\ncansignificantly degrade performance.\nAsweobserved inthecontextofhash-based projection, onewaytohandlethis\npartition overflow problem istorecursively applythehashjointechnique tothe\njoinoftheoverflowing Rpartition withthecorresponding 8partition. That\nis,wefirstdividetheRand8partitions intosubpartitions. Then,wejointhe\nsubpartitions pairwise. Allsubpartitions ofRprobably fitintomemory; ifnot,\nweapplythehashjointechnique recursively.\nUtilizing ExtraMemory: HybridHashJoin\nTheminimum amount ofmemory required forha.'3hjoinisB>Jf.AI.If\nmorememory isavailable, avariantofha.'3hjoincalledhybridhashjoin\noHersbetterperformance. Suppose thatB>f\u00b7(lYI/k),forsomeintegerk.\nThismeansthat,ifwedivideRintokpartitions ofsizeAI/k,anin-memory\nhashtablecanbebuiltforeachpartition. Topartition R(similarly, 5)intok\npartitions, weneedkoutputbuHersandoneinputbuHer:thatis,k+1pages.\nThisleavesuswithB-(k+1)extrapagesduringthepartitioning pha.<;e.\nSuppose thatB-(k+1)>f.(1'.,1/k).Thatis,wehaveenoughextramemory\nduringthepartitioning phasetoholdanin-memory hashtableforapartition\nofR.Theideabehindhybridhashjoinistobuildanin-memory ha.<;htable\nforthefirstpartition ofRduringthepartitioning pha.se,whichmeansthat\nwedonotwritethispartition todisk.Similarly, whilepartitioning 8,rather\nthanwriteoutthetuplesinthefirstpartition of5,wecandirectly probethe", "500": "466 CHAPTER }4\nin-memory tableforthefirstRpartition andwriteouttheresults.Attheend\nofthepartitioning phase,wehavecompleted thejoinofthefirstpartitions of\nRandS,inaddition topartitioning thetworelations; intheprobing phase,\nwejointheremaining partitions asinhashjoin.\nThesavingsrealizedthrough hybridhashjoinisthatweavoidwritingthefirst\npartitions ofRandStodiskduringthepartitioning phaseandreadingthem\ninagainduringtheprobing phase.Consider ourexample, with500pagesin\nthesmallerrelationRand1000pagesinS.3IfwehaveB=300pages,wecan\neasilybuildanin-memory hashtableforthefirstRpartition whilepartitioning\nRintotwopartitions. Duringthepartitioning phaseofR,wescanRandwrite\noutonepartition; thecostis500+250ifweassumethatthepartitions areof\nequalsize.WethenscanSandwriteoutonepartition; thecostis1000+500.\nIntheprobing phase,wescanthesecondpartition ofRandofS;thecostis\n250+500.Thetotalcostis750+1500+750=3000.Incontrast, thecostof\nhashjoinis4500.\nIfwehaveenoughmemory toholdanin-memory hashtableforallofR,the\nsavingsareevengreater. Forexample, ifB>f.N+2,thatis,k=1,wecan\nbuildanin-memory hashtableforallofR.ThisllleansthatwereadRonly\nonce,tobuildthishashtable,andreadSonce,toprobetheRhashtable.The\ncostis500+1000=1500.\nHashJoinVersusBlockNestedLoopsJoin\nWhilepresenting theblocknestedloopsjoinalgorithm, webrieflydiscussed\ntheideaofbuilding anin-memory hashtablefortheinnerrelation. Wenow\ncompare this(moreCPU-efficient) versionofblocknestedloopsjoinwithhybrid\nhashjoin.\nIfahashtablefortheentiresmallerrelationfitsinmemory, thetwoalgorithms\nareidentical.Ifbothrelations arelargerelativetotheavailable buffersize,we\nrequireseveralpassesoveroneoftherelations inblocknestedloopsjoin;hash\njoinisamoreeffective application ofhashing techniques inthiscase.TheI/O\nsavedinthiscasebyusingthehashjoinalgorithm incomparison toablock\nnestedloopsjoinisillustrated inFigure14.13.Inthelatter,wereadinallof\nSforeachblockofR;theI/Ocostcorresponds tothewholerectangle. Inthe\nhashjoinalgorithm, foreachblockofR,wereadonlythecorresponding block\nofS;theI/0costcorresponds totheshadedareasinthefigure.Thisdifference\ninI/OduetoscansofSishighlighted inthefigure.\n3Itisunfortunate, thatinourrunning example, thesmaller relation, whichwedenoted bythe\nvariable Rinourdiscussion ofhashjoin,isinfacttheSailorsrelation, whichismorenaturally\ndenoted by8!", "501": "Eval1tat'ing Relational OpemtoT8\n8182S354S5\nFigure14.13 HashJoinVs.BlockNestedLoopsforLargeRelations467.\nWenotethatthispictureisrathersimplistic. Itdoesnotcapturethecosts\nofscanning Rintheblocknestedloopsjoinandthepartitioning phaseinthe\nhashjoin,anditfocusesonthecostoftheprobing phase..\nHashJoinVersusSort-Merge Join\nLetuscompare hashjoinwithsort-merge join.IfwehaveB>VMbuffer\npages,whereMisthenumber ofpagesinthesmallerrelationandweassume\nuniform partitioning, thecostofhashjoinis3(M+N)l/Os.Ifwehave\nB>VNbufferpages,whereNisthenumber ofpagesinthelargerrelation,\nthecostofsort-merge joinisalso3(NI+N),asdiscussed inSection14.4.2.A\nchoicebetween thesetechniques istherefore governed byotherfactors,notably:\nIIIfthepartitions inhashjoinarenotuniformly sized,hashjoincouldcost\nmore.Sort-merge joinislesssensitive tosuchdataskew.\nIIIftheavailable number ofbuffersfallsbetween-1MandVN, hashjoin\ncostslessthansort-merge join,sinceweneedonlyenoughmemory tohold\npartitions ofthesmallerrelation, wherea'3 insort-merge jointhememory\nrequirements depend onthesizeofthelargerrelation. Thelargerthe\ndifference insizebetween thetworelations, themoreimportant thisfactor\nbecomes.\nIIAdditional considerations includethefactthattheresultissortedinsort\u00ad\nmergejoin.\n14.4.4General JoinConditions\nWehavediscussed severaljoinalgorithms forthecaseofasimpleequality\njoincondition. Otherimportant casesincludeajoincondition thatinvolves\nequalities overseveralattributes andinequality conditions. Toillustrate the\nca.'3Cofseveralequalities, weconsider thejoinofReserves RandSailors8with\nthejoincondition R.sid=S.s'id 1\\R.rname=S.sname:", "502": "468 CHAPTER 1.4\n\u2022Forindexnestedloopsjoin,wecanbuildanindexonReserves onthe\ncombination offields(R.sid,R.rname) andtreatReserves astheinner\nrelation. vVecanalsouseanexisting indexonthiscombination offields,\noronR.s'id,oronR.marne. (Similar remarks holdforthechoiceofSailors\nastheinnerrelation, ofcourse.)\n\u2022Forsort-merge join,wesortReserves onthecombination offields(sid,\nmarne)andSailorsonthecombination offields(sid,snarne). Similarly,\nforhashjoin,wepartition onthesecombinations offields.\n\u2022Theotherjoinalgorithms wediscussed areessentially unaffected.\nIfwehavean{nequality comparison, forexample, ajoinofReserves Rand\nSailors5withthejoincondition R.rnarne<S.sname:\n\u2022WerequireaB+treeindexforindexnestedloopsjoin.\n\u2022Hashjoinandsort-merge joinarenotapplicable.\n\u2022Theotherjoinalgorithms wediscussed areessentially unaffected.\nOfcourse,regardless ofthealgorithm, thenumber ofqualifying tuplesinan\ninequality joinislikelytobemuchhigherthaninanequality join.\nWeconclude ourpresentation ofjoinswiththeobservation thatnoonejoin\nalgorithm isuniformly superior totheothers.Thechoiceofagoodalgorithm\ndepends onthesizesoftherelations beingjoined,available accessmethods,\nandthesizeofthebufferpool.Thischoicecanhaveaconsiderable impacton\nperformance because thedifference between agoodandabadalgorithm fora\ngivenjoincanbeenormous.\n14.5THESETOPERATIONS\nWenowbrieflyconsider theimplementation ofthesetoperations Rn5,RxS,\nRu5,andR-S.Fromanimplementation standpoint, intersection andcr08S\u00ad\nproduct canbeseenasspecialcasesofjoin(withequality onallfields &'Sthe\njoincondition forintersection, andwithnojoincondition forcross-product).\nTherefore, wewillnotdiscussthemfurther.\nThemainpointtoacldress intheimplementation ofunionistheelimination\nofduplicates. Set-difference canalsobeimplemented usingavariation ofthe\ntechniques forduplicate elimination. (Unionanddifference queriesonasin\u00ad\nglerelation canbethought ofasaselection querywithacomplex selection\ncondition. Thetechniques discussecl inSection 14.2areapplicable forsuch\nqueries.)", "503": "Eval'uating Relational Operators 469\n~\nTherearetwoimplementation algorithms forunionandset-difference, again\nbased 011sortingandhashing. Bothalgorithms areinstances ofthepartitioning\ntechnique mentioned illSection12.2.\n14.5.1SortingforUnionandDifference\nToimplement RuS:\n1.SortRusingthecombination ofallfields;similarly, sortS.\n2.ScanthesortedRandSinparallelandmergethem,eliminating duplicates.\nAsarefinement, wecanproduce sortedrunsofRandSandmergethese\nrunsinparallel. (Thisrefinement issimilartotheonediscussed indetailfor\nprojection.) Theimplementation ofR-Sissimilar. Duringthemerging pass,\nwewriteonlytuplesofRtotheresult,afterchecking thattheydonotappear\ninS.\n14.5.2Hashing forUnionandDifference\nToimplement RUS:\n1.Partition RandSusingahashfunction h.\n2.Processeachpartition Iasfollows:\n\u2022Buildanin-memory hashtable(usinghashfunction h2i=h)forSI.\n\u2022ScanRI.Foreachtuple,probethehashtableforSI.Ifthetupleisin\ntheha.,,>htable,discardit;otherwise, addittothetable.\n\u2022Writeouttheha.'3htableandthendearittoprepare forthenext\npartition.\nToimplement R-S,weproceed similarly. Thedifference isintheprocessing\nofapartition. Afterbuilding anin-memory ha.,,>htableforSI,wescanRz.For\neachRztuple,weprobethehcl.,')htable;ifthetupleisnotinthetable,wewrite\nittotheresult.\n14.6AGGREGATE OPERATIONS\nTheSQLqueryshowninFigure14.14involves anaggregate opemtion, AVG.\nTheotheraggregate operations supported inSQL-92 areMIN,MAX,SUM,and\nCOUNT.", "504": "470\nSELECT AVG(S.age)\nFROM SailorsS\nFigure14.14 SimpleAggregation QueryCHAPTER 14\nThebasicalgorithm foraggregate operators consists ofscanning theentire\nSailorsrelationandmaintaining somerunning information aboutthescanned\ntuples;thedetailsarestraightforward. Therunning information foreachag\u00ad\ngregateoperation isshowninFigure14.15.Thecostofthisoperation isthe\ncostofscanning allSailorstuples.\nIAggregate OperationIRunning Inforrniation\nSUM Totalofthevaluesretrieved\nAVG (Total,Count)ofthevaluesretrieved\nCOUNT Countofvaluesretrieved.\nMIN Smallest valueretrieved\nMAX Largestvalueretrieved\nFigure14.15 Running Information forAggregate Operations\nAggregate operators canalsobeusedincombination withaGROUP BYclause.\nIfweaddGROUP BYratingtothequeryinFigure14.14,wewouldhaveto\ncompute theaverage ageofsailorsforeachratinggroup.Forquerieswith\ngrouping, therearetwogoodevaluation algorithms thatdonotrelyonan\nexisting index:Onealgorithm isbasedonsortingandtheotherisbasedon\nhashing. Bothalgorithms areinstances ofthepartitioning technique mentioned\ninSection12.2.\nThesortingapproach issimple-we sorttherelationonthegrouping attribute\n(rating)andthenscanitagaintocompute theresultoftheaggregate operation\nforeachgroup.Thesecondstepissimilartothewayweimplement aggregate\noperations without grouping, withtheonlyadditional pointbeingthatwehave\ntowatchforgroupboundaries. (Itispossible torefinetheapproach bydoing\naggregation aspartofthesortingstep;weleavethisasanexercise forthe\nreader.) TheI/Ocostofthisapproach isjustthecostofthesortingalgorithm.\nInthehashingapproach webuildahashtable(inmainmemory, ifpossible)\nonthegrouping attribute. Theentrieshavetheform(gTOuping-value, running\u00ad\ninfo).Therunning information depends ontheaggregate operation, asperthe\ndiscussion ofaggregate operations without grouping. Aswescantherelation,\nforeachtuple,weprobethehashtabletofindtheentryforthegrouptowhich\nthetuplebelongsandupdatetherunning information. 'Whentheh&'3htable\niscOlnplete, theentryforagrouping valuecanbeusedtocompute theanswer\ntupleforthecorresponding groupintheobviousway.Ifthehashtablefitsin", "505": "Evaluating Relational OpemtoTs 471\nmemory, whichislikelybecause eachentryisquitesmallandthereisonlyone\nentrypergrouping value,thecostofthehashing approach isO(.iV1),where1V!\nisthesizeoftherelation.\nIftherelation issolargethatthehashtabledoesnotfitinmemory, wecan\npartition therelationusingahashfunction hongTOuping-value. Sincealltuples\nwithagivengrouping valueareinthesamepartition, wecanthenprocesseach\npartition independently bybuilding anin-memory hashtableforthetuplesin\nit.\n14.6.1Implementing Aggregation byUsinganIndex\nThetechnique ofusinganindextoselectasubsetofusefultuplesisnotap\u00ad\nplicable foraggregation. However, undercertainconditions, wecanevaluate\naggregate operations efficiently byusingthedataentriesinanindexinsteadof\nthedatarecords:\n\u2022Ifthesearchkeyfortheindexincludes alltheattributes neededforthe\naggregation query,wecanapplythetechniques described earlierinthis\nsectiontothesetofdataentriesintheindex,ratherthantothecollection\nofdatarecordsandtherebyavoidfetchingdatarecords.\n\u2022IftheGROUP BYclauseattribute listformsaprefixoftheindexsearch\nkeyandtheindexisatreeindex,wecanretrievedataentries(anddata\nrecords, ifnecessary) intheorderrequired forthegrouping operation and\ntherebyavoidasortingstep.\nAgivenindexmaysupport oneorbothofthesetechniques; bothareexamples\nofindex-only plans.Wediscusstheuseofindexesforquerieswithgrouping and\naggregation inthecontextofqueriesthatalsoincludeselections andprojections\ninSection15.4.1.\n14.7THEIMPACT OFBUFFERING\nInimplementations ofrelational operators, effective useofthebufferpoolis\nveryimportant, andweexplicitly considered thesizeofthebufferpoolinde\u00ad\ntermining algorithm parameters forseveralofthealgorithms discussed. There\narethreemainpointstonote:\n1.Ifseveraloperations executeconcurrently, theysharethebufferpool.This\neffectively reducesthenumberofbufferpagesavailable foreachoperation.\n2.Iftuplesareaccessed usinganindex,especially anunclustered index,the\nlikelihood offindingapageinthebufferpoolifitisrequested multiple", "506": "472 CHAPTER 14\ntimesdepends (inaratherunpredictable way,unfortunately) onthesizeof\nthebufferpoolandthereplacement policy.Further, iftuplesareaccessed\nusinganunclustered index,eachtupleretrieved islikelytorequireusto\nbringinanewpage;therefore, thebufferpoolfillsupquickly,leadingtoa\nhighlevelofpagingactivity.\n3.Ifanoperation hasapatternofrepeated pageaccesses, wecanincrea..<;e\nthelikelihood offindingapageinmemory byagoodchoiceofreplacement\npolicyorbyreseTving asufficient numberofbuffersfortheoperation (ifthe\nbuffermanager provides thiscapability). Severalexamples ofsuchpatterns\nofrepeated accessfollow:\n\u2022Consider asimplenestedloopsjoin.:Foreachtupleoftheouterre\u00ad\nlation,werepeatedly scanallpagesintheinnerrelation.Ifwehave\nenoughbufferpagestoholdtheentireinnerrelation, thereplacement\npolicyisirrelevant. Otherwise, thereplacement policybecomes criti\u00ad\ncal.WithLRU,wewillneverfindapagewhenitisrequested, because\nitispagedout.Thisisthesequential flooding problem discussed in\nSection9.4.1.WithMRU,weobtainthebestbuffer utilization~the\nfirstB-2pagesoftheinnerrelationalwaysremaininthebufferpool.\n(Bisthenumber ofbufferpages;weuseonepageforscanning the\nouterrelation4andalwaysreplacethela..'3tpageusedforscanning the\ninnerrelation.)\n\u2022Inablocknestedloopsjoin,foreachblockoftheouterrelation, we\nscantheentireinnerrelation. However, sinceonlyoneunpinned page\nisavailable forthescanoftheinner rel~tion, thereplacement policy\nmakesnodifference.\n11IIIInanindexnestedloopsjoin,foreachtupleoftheouterrelation, we\nusetheindextofindmatching innertuples.Ifseveraltuplesofthe\nouterrelation havethesamevalueinthejoinattribute, thereisa\nrepeated patternofaccessontheinnerrelation; wecanmaximize the\nrepetition bysortingtheouterrelation onthejoinattributes.\n14.8REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIIIJConsider asimpleselection queryoftheform(JR.attrop1)aluAR). What\narethealternative accesspathsineachofthesecases:(i)thereisno\nindexandthefileisnotsorted,(ii)thereisnoindexbutthefileissorted.\n(Section 14.1)\n4Thinkaboutthesequence ofpinsandunpinsusedtoachieve this.", "507": "Evalllat'ing Relational Operators 473\n\u2022IfaB+treeindexmatches theselection condition, howdoesclustering\naffectthecost?Discussthisintermsoftheselectivity ofthecondition.\n(Section 14.1)\n\u2022Describe conjunctive normalformforgeneralselections. Definetheterms\nconjunct anddisfunct. Underwhatconditions doesageneralselection\ncondition matchanindex?(Section 14.2)\n\u2022Describe thevariousimplementation optionsforgeneralselections. (Sec\u00ad\ntion14.2)\n\u2022Discusstheuseofsortingversushashingtoeliminate duplicates during\nprojection. (Section 14.3)\n\u2022Whencananindexbeusedtoimplement projections, without retrieving\nactualdatarecords? ~Thendoestheindexadditionally allowustoelimi\u00ad\nnateduplicates without sortingorhashing? (Section 14.3)\n\u2022Consider thejoinofrelations Rand5.Describe simplenestedloopsjoin\nandblocknestedloopsjoin.Whatarethesimilarities anddifferences? How\ndoesthelatterreduceI/Ocosts?Discusshowyouwouldutilizebuffersin\nblocknestedloops.(Section 14.4.1)\n\u2022Describe indexnestedloopsjoin.Howdoesitdifferfromblocknestedloops\njoin?(Section 14.4.1)\n\u2022Describe sort-merge joinofRand5.Whatjoinconditions aresupported?\nWhatoptimizations arepossible beyondsortingbothRand5onthejoin\nattributes andthendoingamergeofthetwo?Inparticular, discusshow\nstepsinsortingcanbecombined withthemergeP&<;s.(Section 14.4.2)\n\u2022Whatistheideabehindhashjoin?Whatistheadditional optimization in\nhybridhashjoin?(Section 14.4.3)\n\u2022Discusshowthechoiceofjoinalgorithm depends onthenumberofbuffer\npagesavailable, thesizesofRand5,andtheindexesavailable. Bespe\u00ad\ncificinyourdiscussion andrefertocostformulas fortheI/Ocostofeae:h\nalgorithm. (Sections 14.12Section 14.13)\n\u2022Howaregeneraljoinconditions handled? (Section 14.4.4)\n\u2022\\Vhyarethesetoperations Rn5andRxSspecialcasesofjoins?Whatis\nthesimilarity between thesetoperations Ru5andR-5?(Section 14.5)\n\u2022Discusstheuseofsortingversushashinginimplementing Ru5andR-S.\nCompare thiswiththeilnplementation ofprojection. (Section 14.5)\n\u2022Discusstheuseofrunning injomwtion inimplementing aggregate opera\u00ad\ntions.Discusstheuseofsortingversushashing fordealingwithgrouping.\n(Section 14.6)", "508": "474 CHAPTER l4\n\u2022Underwhatconditions canweuseanindextoimplement aggregate oper\u00ad\nationswithout retrieving datarecords? Underwhatconditions doindexes\nallowustoavoidsortingorha.~hing? (Section 14.6)\n\u2022 Usingthecostformulas forthevariousrelational operator evaluation algo\u00ad\nrithms,discusswhichoperators aremostsensitive tothenumberofavail\u00ad\nablebufferpoolpages.Howisthisnumber influenced bythenumber of\noperators beingevaluated concurrently? (Section 14.7)\n\u2022Explain howthechoiceofagoodbufferpoolreplacement policycanin\u00ad\nfluenceoverallperformance. Identify thepatterns ofaccessin typical rela\u00ad\ntionaloperator evaluation andhowtheyinfluence thechoiceofreplacement\npolicy.(Section 14.7)\nEXERCISES\nExercise 14.1Brieflyanswerthefollowing questions:\n1.Consider thethreebasictechniques, iteration, indexing, andpartitioning, andtherela\u00ad\ntionalalgebraoperators selection, projection, andjoin.Foreachtechnique-operator pair,\ndescribe analgorithm basedonthetechnique forevaluating theoperator.\n2.Definethetermmostselective accesspathforaquery.\n3.Describe conjunctive normalform,andexplain whyitisimportant inthecontext of\nrelational queryevaluation.\n4.Whendoesageneralselection condition matchanindex?Whatisaprimary termina\nselection condition withrespecttoagivenindex?\n5.Howdoeshybridhashjoinimprove onthebasichashjoinalgorithm?\n6.Discusstheprosandconsofhashjoin,sort-merge join,andblocknestedloopsjoin.\n7.Ifthejoincondition isnotequality, canyouusesort-merge join?Canyouusehashjoin?\nCanyouuseindexnestedloopsjoin?Canyouuseblocknestedloopsjoin?\n8.Describe howtoevaluate agrouping querywithaggregation operator MAXusingasorting\u00ad\nbasedapproach.\n9.Suppose thatyouarebuilding aDBMSandwanttoaddanewaggregate operator called\nSECOND LARGEST, whichisavariation oftheMAXoperator. Describe howyouwould\nimplement it.\n10.Giveanexample ofhowbufferreplacement policiescanaffecttheperformance ofajoin\nalgorithm.\nExercise 14.2Consider arelationR(a,b,c,d,e)containing 5,000,000 records, whereeachdata\npageoftherelation holds10records. Risorganized asasortedfilewithsecondary indexes.\nAssumethatR.aisacandidate keyforR,withvalueslyingintherange0to4,999,999, and\nthatRisstoredinR.aorder.Foreachofthefollowing relational algebraqueries,statewhich\nofthefollowing approaches (orcombination thereof) ismostlikelytobethecheapest:\n\u2022AccessthesortedfileforRdirectly.", "509": "Evaluating Relational Operators\n\u2022Useaclustered B+treeindexonattribute R.a.\n\u2022Usealinearhashedindexonattribute R.a.\n\u2022Useaclustered B+treeindexonattributes (R.a,R.b).\n\u2022Usealinearhashedindexonattributes (R.a,R.b).\n\u2022Useanunclustered B+treeindexonattribute R.b.\n1.O\"u<50,OOOAb<50,ooo(R)\n2.0\"u=50,OOOAb<50,OOO (R)\n3.O\"u>50,OOOAb=50,ooo(R)\n4.0\"u=50,OOOi\\a=50,OlO (R)\n5.O\"a#50,OOOi\\b=50,Ooo(R)\n6.0\"a<50,OOOvb=50,OOO (R)\nExercise 14.3Consider processing thefollowing SQLprojection query:\nSELECT DISTINCT E.title,E.ename FROMExecutives E\nYouaregiventhefollowing information:\nExecutives hasattributes ename,title,dname,andaddress; allarestringfieldsof\nthesamelength.\nTheenameattribute isacandidate key.\nTherelation contains 10,000pages,\nThereare10bufferpages.475\nConsider theoptimized versionofthesorting-based projection algorithm: Theinitialsorting\npassreadstheinputrelationandcreatessortedrunsoftuplescontaining onlyattributes ename\nandtitle.Subsequent merging passeseliminate duplicates whilemerging theinitialrunsto\nobtainasinglesortedresult(asopposed todoingaseparate passtoeliminate duplicates from\nasortedresultcontaining duplicates).\n1.Howmanysortedrunsareproduced inthefirstpass?Whatistheaverage lengthof\ntheseruns?(Assume thatmemory isutilized wellandanyavailable optimization to\nincrease runsizeisused.)WhatistheI/Ocostofthissortingpass?\n2.Howmanyadditional mergepassesarerequired tocompute thefinalresultofthepro\u00ad\njectionquery?WhatistheI/Ocostoftheseadditional passes?\n3.(a)Suppose thataclustered B+treeindexontWeisavailable. Isthisindexlikelyto\nofferacheaper alternative tosorting? Wouldyouranswerchangeiftheindexwere\nunclustered? Wouldyouranswerchangeiftheindexwereahashindex?\n(b)Suppose thataclustered B+treeindexonenameisavailable. Isthisindexlikely\ntoofferacheaper alternative tosorting? Wouldyouranswerchangeiftheindex\nwereunclustered? Wouldyouranswerchangeiftheindexwereahashindex?\n(c)Suppose thataclustered B+treeindexon(ename, title)isavailable. Isthisindex\nlikelytoofferacheaper alternative tosorting? Wouldyouranswerchangeifthe\nindexwereunclustered? Wouldyouranswerchangeiftheindexwereahashindex?\n4.Suppose thatthequeryisasfollows:\nSELECTE.title,E.ename FROMExecutives E", "510": "476 CHAPTER ~4\nThatis,youarenotrequired tododuplicate elimination. Howwouldyouranswers to\ntheprevious questions change?\nExercise 14.4Consider thejoinRiXJR.a=SbS, giventhefollowing information aboutthe\nrelations tobejoined.Thecostmetricisthenumber ofpagel/Osunlessotherwise noted,\nandthecostofwritingouttheresultshouldbeuniformly ignored.\nRelation Rcontains 10,000tuplesandhas10tuplesperpage.\nRelation Scontains 2000tuplesandalsohas10tuplesperpage.\nAttribute bof relation Sistheprimary keyforS.\nBothrelations arestoredassimpleheapfiles.\nNeither relation hasanyindexesbuiltonit.\n52bufferpagesareavailable.\n1.WhatisthecostofjoiningRandSusingapage-oriented simplenestedloopsjoin?What\nistheminimum number ofbufferpagesrequired forthiscosttoremainunchanged?\n2.WhatisthecostofjoiningRandSusingablocknestedloopsjoin?Whatistheminimum\nnumber ofbufferpagesrequired forthiscosttoremainunchanged?\n3.WhatisthecostofjoiningRandSusingasort-merge join?Whatistheminimum\nnumber ofbufferpagesrequired forthiscosttoremainunchanged?\n4.WhatisthecostofjoiningRandSusingahashjoin?Whatistheminimum number of\nbufferpagesrequired forthiscosttoremainunchanged?\n5.WhatwouldbethelowestpossibleI/OcostforjoiningRandSusinganyjoinalgorithm,\nandhowmuchbufferspacewouldbeneededtoachievethiscost?Explain briefly.\n6.HowmanytuplesdoesthejoinofR.andSproduce, atmost,andhowmanypagesare\nrequired tostoretheresultofthejoinbackondisk?\n7.Wouldyouranswerstoanyoftheprevious questions inthisexercise changeifyouwere\ntoldthatR.aisaforeignkeythatreferstoS.b?\nExercise 14.5Consider thejoinofR.andSdescribed inExercise 14.1.\n1.With52bufferpages,ifunclustered B+indexes existedonR.aandS.b,wouldeither\nprovide acheaper alternative forperforming thejoin(usinganindexnestedloopsjoin)\nthanablocknestedloopsjoin?Explain.\n(a)Wouldyouranswerchangeifonlyfivebufferpageswereavailable?\n(b)vVouldyouranswerchangeifScontained only10tuplesinsteadof2000tuples?\n2.vVith52bufferpages,ifclustered B+indexesexistedonR.aandS.b,wouldeitherprovide\nacheaper alternative forperforming thejoin(usingtheindexnestedloopsalgorithm)\nthanablocknestedloopsjoin?Explain.\n(a)Wouldyouranswerchangeifonlyfivebufferpageswereavailable?\n(b)WouldyouranswerchangeifScontained only10tuplesinsteadof2000tuples?\n3.Ifonly15bufferswereavailable, whatwouldbethecostofasort-merge join?What\nwouldbethecostofahashjoin?\n4.IfthesizeofSwereincreased toalsobe10,000tuples,butonly15bufferpageswere\navailable, whatwouldbethecostofasort-merge join?Whatwouldbethecostofa\nhashjoin?", "511": "Evaluating Relational Operators 477\n5.IfthesizeofS\\vereincreased toalsobe10,000tuples,and52buffer pages wereavailable,\nwhatwouldbethecostofsort-merge join?\\Vhatwouldbethecostofhashjoin?\nExercise 14.6Answereachofthequestions~if somequestion isinapplicable, explainwhy-\u00ad\ninExercise 14.1againbutusingthefollowing information aboutRandS:\nRelation Rcontains 200,000 tuplesandhas20tuplesperpage.\nRelation Scontains 4,000,000 tuplesandalsoha.\"20tuplesperpage.\nAttribute aof relation Ristheprimary keyforR.\nEachtupleofRjoinswithexactly20tuplesofS.\n1,002bufferpagesareavailable.\nExercise 14.7Wedescribed variations ofthejoinoperation calledolLterjoinBinSection5.6.4\n.Oneapproach toimplementing anouterjoinoperation istofirstevaluate thecorresponding\n(inner)joinandthenaddadditional tuplespaddedwithnullvaluestotheresultinaccordance\nwiththesemantics ofthegivenouterjoinoperator.. However, thisrequires ustocompare\ntheresultoftheinnerjoinwiththeinputrelations todetermine theadditional tuplestobe\nadded.Thecostofthiscomparison canbeavoided bymodifying thejoinalgorithm toadd\ntheseextratuplestotheresultwhileinputtuplesareprocessed duringthejoin.Consider the\nfollowing joinalgorithms: blocknestedloopsjoin,indexnestedloopsjoin,sort-merge join,and\nhashjoin.Describe howyouwouldmodifyeachofthesealgorithms tocompute thefollowing\noperations ontheSailorsandReserves tablesdiscussed inthischapter:\n1.SailorsNATURAL LEFTOUTERJOINReserves\n2.SailorsNATURAL RIGHTOUTERJOINReserves\n3.SailorsNATURAL FULLOUTERJOINReserves\nPROJECT-BASED EXERCISES\nExercise 14.8(Notetoinstructors: Additional detailsm71stbeprovided ifthisexen:ise is\nassigned; seeAppendiJ: SO.)Implement thevariousjoinalgorithms described inthischapter\ninMinibase. (Asadditional exercises, youInaywanttoimplement selected algorithms forthe\notheroperators aswell.)\nBIBLIOGRAPHIC NOTES\nTheimplementation techniques usedforrelational operators inSystem Rarediscussed in\n[101].Theimplementation techniques usedinPRTV,whichutilized relational algebratrans\u00ad\nformations andaformofmultiple-query optimization, arediscussed in[358].Thetechniques\nusedforaggregate operations inIngresaredescribed in[246].[324]isanexcellent surveyof\nalgorithms forimplementing relational operators andisrecommended forfurtherreading.\nHash-based techniques areinvestigated (andcompared withsort-based techniques) in[110],\n[222],[:325],and[677].Duplicate elimination isdiscussed in[99].[277]discusses secondary\nstorageaccesspatterns arisinginjoinimplementations. Parallel algorithms forimplementing\nrelational operations arediscussed in[99,168,220.224,2:3:3, 293,534].", "512": "15\nATYPICAL RELATIONAL\nQUERY OPTIMIZER\n..HowareSQLqueriestranslated intorelational algebra? Asaconse\u00ad\nquence,whatclassofrelation algebraqueriesdoesaqueryoptimizer\nconcentrate on?\n..Whatinformation isstoredinthesystemcatalogofaDBMSandhow\nisitusedinqueryoptimization?\n..Howdoesanoptimizer estimate thecostofaqueryevaluation plan?\n..Howdoesanoptimizer generate alternative plansforaquery?What\nisthespaceofplansconsidered? Whatistheroleofrelational algebra\nequivalences ingenerating plans?\n..HowarenestedSQLqueriesoptimized?\n..Keyconcepts: SQLtoalgebra, queryblock;systemcatalog,data\ndictionary, metadata, systemstatistics, relational representation of\ncatalogs; costestimation, sizeestimation, reduction factors; his\u00ad\ntograms, equiwidth, equidepth, compressed; algebra equivalences,\npushing selections, joinordering; planspace,single-relation plans,\nmulti-relation left-deep plans;enumerating plans,dynamic program\u00ad\nmingapproach, alternative approaches\nLifeiswhathappens whileyou'rebusymakingotherplam.\n-JohnLennon\nInthischapter, wepresentatypicalrelational queryoptimizer indetail.We\nbeginbydiscussing howSQLqueriesareconverted intounitscalledblocks\n478", "513": "ATypicalQ'ueryOptirn:izeT 479\ni\n~andhowblocksaretranslated into(extended) relational algebraexpressions\n(Section 15.1).Thecentraltaskofanoptimizer istofindagoodplanfor\nevaluating suchexpressions. Optimizing arelational algebraexpression involves\ntwobasicsteps:\n\u2022Enumerating alternative plansforevaluating theexpression. Typically, an\noptimizer considers asubsetofallpossible plansbecause thenumber of\npossible plansisverylarge.\n\u2022Estimating thecostofeachenumerated planandchoosing theplanwith\nthelowestestimated cost.\nWediscusshowtousesystemstatistics toestimate theproperties oftheresult\nofarelational operation, inparticular resultsizes,inSection15.2.Afterdis\u00ad\ncussinghowtoestimate thecostofagivenplan,wedescribe thespaceofplans\nconsidered byatypicalrelational queryoptimizer inSections 15.3and15.4.\nWediscusshownestedSQLqueriesarehandled inSection15.5.Webriefly\ndiscusssomeoftheinfluential choicesmadeintheSystemRqueryoptimizer\ninSection15.6.Weconclude withashortdiscussion ofotherapproaches to\nqueryoptimization inSection15.7.\nWeconsider anumberofexample queriesusingthefollowing schema:\nSailors(sid: integer, sname:string, rating:integer, age:real)\nBoats(bid:integer, bname:string, color:string)\nReserves(sid: integer, bid:integer, day:dates,mame:string)\nAsinChapter 14,weassumethateachtupleofReserves is40byteslong,thata\npagecanhold100Reserves tuples,andthatwehave1000pagesofsuchtuples.\nSimilarly, weassumethateachtupleofSailorsis50byteslong,thatapage\ncanhold80Sailorstuples,andthatwehave500pagesofsuchtuples.\n15.1TRANSLATING SQLQUERIES INTOALGEBRA\nSQLqueriesareoptimized bydecomposing themintoacollection ofsmaller\nunits,calledblocks.Atypicalrelational queryoptimizer concentrates onop~\ntimizing asingleblockatatime.Inthissection, wedescribe howaquery\nisdecomposed intoblocksandhowtheoptimization ofasingleblockcanbe\nunderstood intenusofplanscomposed ofrelational algebraoperators.\n15.1.1Decomposition ofaQueryintoBlocks\nvVhenausersubmits anSQLquery,thequeryisparsedintoacollection of\nqueryblocksandthenpassedontothequeryoptimizer. Aqueryblock", "514": "480\nSELECT\nFROM\nWHERECHAPTER 15\nS.siel,MIN(Relay)\nSailorsS,Reserves R,BoatsB\nS.siel=RsielANDRbid=B.bidANDRcolor='red'AND\nS.rating= (SELECT MAX(S2.rating)\nFROM SailorsS2)\nGROUPBYS.sid\nHAVING COUNT(*)>1\nFigure15.1SailorsReserving RedBoats\n(orsimplyblock)isanSQLquerywithnonestingandexactlyoneSELECT\nclauseandoneFROMclauseandatmostoneWHEREclause, GROUPBYclause,\nandHAVING clause.TheWHEREclauseisassumed tobeinconjunctive normal\nform,asperthediscussion inSection14.2.Weusethefollowing query 8.'3a\nrunning example:\nFaTeach8ailor'withthehighe8tmting(oveTallsailors)andatleasttwoTeser\u00ad\nvat'lonsfaTTedboats,findthesailoTidandtheearliestdateonwhichthesailor\nIULSaTeseTvat:ion faTaTedboat.\nTheSQLversionofthisqueryisshowninFigure15.1.Thisqueryhastwo\nqueryblocks.Thenestedblockis:\nSELECT MAX(S2.rating)\nFROM SailorsS2\nThenestedblockcomputes thehighestsailorrating.Theouterblockisshown\ninFigure15.2.EverySQLquerycanbedecomposed intoacollection ofquery\nblockswithout nesting.\nSELECT\nFROM\nWHERE\nGROUPBY\nHAVINGS.sid,MIN(Rday)\nSailorsS,Reserves R,BoatsB\nS.sid=RsielANDRbicl=B.bidAND\nS.rating =RefeTence tonestedblock\nS.sid\nCOUNT(*)>1Rcolor='red'AND\nFigure15.2OuterBlockofRedBoatsQuery\nTheoptimizer examines thesystemcatalogs toretrieve information aboutthe\ntypesandlengthsoffields,statistics aboutthereferenced relations, andthe\naccesspaths(indexes) available forthem.Theoptimizer thenconsiders each\nqueryblockandchoosesaqueryevaluation planforthatblock.\\Vefocus1nostly\nonoptimizing asinglequeryblockanddeferadiscussion ofnestedqueriesto\nSection15.5.", "515": "ATypicalQueryOpt'imizer\n15.1.2AQueryBlockasaRelational Algebra Expression481\nThefirststepinoptimizing aqueryblockistoexpressitasarelational algebra\nexpression. Foruniformity, letusa.<;sumethatGROUPBYandHAVING arealso\noperators intheextended algebrausedforplansandthataggregate operations\nareallowedtoappearintheargument listoftheprojection operator. The\nmeaning oftheoperators shouldbeclearfromourdiscussion ofSQL.TheSQL\nqueryofFigure15.2canbeexpressed intheextended algebraas:\n1rS.sid,MIN(R.day) (\nHAVINGcoUNT(*\u00bb2(\nGROUP BYs.sid(\n0\"S.sid=R.sidAR. bid=B.bidAB.coloT='Ted' AS.Tating=valuc_Irom_nested_block (\nSailors xReserves xBoats))))\nForbrevity, weusedS,R,andB(ratherthanSailors,Reserves, andBoats)\ntoprefixattributes. Intuitively, theselection isappliedtothecross-product of\nthethreerelations. Thenthequalifying tuplesaregrouped byS.sid,andthe\nHAVING clausecondition isusedtodiscardsomegroups. Foreachremaining\ngroup,aresulttuplecontaining theattributes (andcount)mentioned inthe\nprojection listisgenerated. Thisalgebraexpression isafaithfulsummary of\nthesemantics ofanSQLquery,whichwediscussed inChapter 5.\nEverySQLqueryblockcanbeexpressed asanextended algebraexpression\nhavingthisform.TheSELECT clausecorresponds totheprojection operator,\ntheWHEREclausecorresponds totheselection operator, theFROMclausecorre\u00ad\nspondstothecross-product ofrelations, andtheremaining clausesaremapped\ntocorresponding operators inastraightforward manner.\nThealternative plansexamined byatypicalrelational queryoptimizer canbe\nunderstood byrecognizing thataqueryisessentially tT'catedasa0\"1rxalgebm\ne;cpression, withtheremaining operations (ifany,inagivenquery)carried\noutontheresultofthe0'1rxexpression. Theenrxexpression forthequeryin\nFigure15.2is:\n1rS.sid,R.day(\naS.sid=R.sidAR.b'id= B.bidAB.coloT='n:d' AS'.1'atlTl.g=value_f TO/lLTlcste(Lblock (\nSailors xReserves xBoats))\nTomakesurethattheGROUP BYandHAVING operations inthequerycanbe\ncarriedout,theattributes mentioned intheseclausesareaddedtotheprojec\u00ad\ntionlist.Further, sinceaggregate operations intheSELECT cla.use,sucha.sthe\nMIN(R.day)operation inourexample, arecomputed afterfirstcomputing the\nCJ1rxpartofthequery,aggregate expressions intheprojectioll listarereplaced", "516": "482 CHAPTER 15\nbythenamesoftheattributes towhichtheyrefer.Thus,theoptimization of\nthea1rxpartofthequeryessentially ignorestheseaggregate operations.\nTheoptimizer findsthebestplanforthea1rxexpression obtained inthis\nmanner fromaquery.Thisplanisevaluated andtheresulting tuplesare\nthensorted(alternatively, hashed) toimplement theGROUPBYclause.The\nHAVING clauseisappliedtoeliminate somegroups,andaggregate expressions\nintheSELECT clausearecomputed foreachremaining group.Thisprocedure\nissummarized inthefollowing extended algebraexpression:\n1rS.sid,MIN(R.day) (\nHAVINGcouNT(*\u00bb2(\nGROUPBYS.sid(\n1rS.sid,R.day (\naS.sid=R. sid/\\R.bid=B .bid/\\B.color='red' /\\S.rating=value_fro1n_nested_block (\nSailors xReserves xBoats)))))\nSomeoptimizations arepossible iftheFROMclausecontains justonerelation\nandtherelation hassomeindexesthatcanbeusedtocarryoutthegrouping\noperation. Wediscussthissituation furtherinSection15.4.1.\nToafirstapproximation therefore, thealternative plansexamined byatypical\noptimizer can beunderstood intermsoftheplansconsidered fora1rxqueries.\nAnoptimizer enumerates plansbyapplying severalequivalences between rela\u00ad\ntionalalgebraexpressions, whichwepresentinSection 15.3.Wediscussthe\nspaceofplansenumerated byanoptimizer inSection15.4.\n15.2ESTIMATING THECOSTOFAPLAN\nForeachenumerated plan,wehavetoestimate itscost.Therearetwoparts\ntoestimating thecostofanevaluation planforaqueryblock:\n1.Foreachnodeinthetree,wemustestimate thecostofperforming thecorre\u00ad\nsponding operation. Costsareaffected significantly bywhether pipelining\nisusedortemporary relations arecreatedtopasstheoutputofanoperator\ntoitsparent.\n2.Foreachnodeinthetree,wemustestimate thesizeoftheresultand\nwhether itissorted.Thisresultistheinputfortheoperation thatcorre\u00ad\nspondstotheparentofthecurrentnode,andthesizeandsortorderin\nturnaffecttheestimation ofsize,cost,andsortorderforthepanmt.\n\"\\Tediscussed thecostofimplementation techniques forrelational operators in\nChapter 14.Aswesawthere,estimating costsrequires knowledge ofvarious", "517": "ATypical Q71.er'1IOptimizeT 483\nparameters oftheinputrelations, suchasthenumber ofpagesandavailable\nindexes. Suchstatistics aremaintained intheDBMS's systemcatalogs. Inthis\nsection, wedescribe thestatistics maintained byatypicalDBMSanddiscuss\nhowresultsizesareestimated. AsinChapter 14,weusethenumber ofpage\nl/Osasthemetricofcostandignoreissuessuchasblockedaccess,forthesake\nofsimplicity.\nTheestimates usedbyaDBMSforresultsizesandcostsareatbestapprox\u00ad\nimations toactualsizesandcosts.Itisunrealistic toexpectanoptimizer to\nfindtheverybestplan;itismoreimportant toavoidtheworstplansandfind\nagoodplan.\n15.2.1Estimating ResultSizes\nWenowdiscusshowatypicaloptimizer estimates thesizeoftheresultcom\u00ad\nputedbyanoperator ongiveninputs.Sizeestimation playsanimportant role\nincostestimation aswellbecause theoutputofoneoperator canbetheinput\ntoanother operator, andthecostofanoperator depends onthesizeofits\ninputs.\nConsider aqueryblockoftheform:\nSELECT attTibute list\nFROM Telation list\nWHERE teTml1\\teTm21\\...1\\teTmn\nThemaximum number oftuplesintheresultofthisquery(without duplicate\nelimination) istheproduct ofthecardinalities oftherelations intheFROM\nclause.EverytermintheWHEREclause,however, eliminates someofthesepo\u00ad\ntentialresulttuples.WecanmodeltheeffectoftheWHEREclauseontheresult\nsizebyassociating areduction factorwitheachterm,whichistheratioofthe\n(expected) resultsizetotheinputsizeconsidering onlytheselection represented\nbytheterm.Theactualsizeoftheresultcanbeestimated asthemaximum size\ntimestheproduct ofthereduction factorsforthetermsintheWHEREclause.\nOfcourse,thisestimate reflectstheunrealistic butsimplifying a.ssurnption\nthattheconditions testedbyeachtermarestatistically independent.\n\\Venowconsider howreduction factorscanbecomputed fordifferent kindsof\ntermsintheWHEREclausebyusingthestatistics available inthecatalogs:\nIIIcolumn=value:Foratermofthisform.thereduction factorcanbe\napproximated byNf{C~1js(I)ifthereisH11ind~xIoncolumnfortherelation\ninquestion. Thisformulaassumes uniformdistribution oftuplesamongthe", "518": "484\n\u2022\n\u2022\n\u2022CHAPTER \\5\nindexkeyvalues;thisuniform distribution assumption isfrequently made\ninarrivingatcostestimates inatypicalrelational queryoptimizer. Ifthere\nisnoindexoncol'umn,theSystemRoptimizer arbitrarily assumesthatthe\nreduction factorisrlJ.Ofcourse,itispossible tomaintain statistics such\nasthenumber ofdistinctvaluespresentforanyattribute whether ornot\nthereisanindexonthatattribute. Ifsuchstatistics aremaintained, we\ncandobetterthanthearbitrary choiceofIt.\ncolumni=column2: Inthiscasethereduction factorcanbeapproximated\nbyMAX(NKeys(~1),NKeys(I2)) ifthereareindexesIland12oncolmnnl and\ncolumn2, respectively. Thisformula assumes thateachkeyvalueinthe\nsmallerindex,say,Il,hasamatching valueintheotherindex.Given\navalueforcolumnl, weassumethateachoftheNJ(eys(I2) valuesfor\ncol'U'mn2 isequallylikely.Therefore, thenumber oftuplesthathavethe\nsamevalueincolumn2 asagivenvalueincolumni isNKets(I2)'Ifonly\noneofthetwocolumns hasanindexI,wetakethereduction factorto\nbeNKe~1Js(I); ifneithercolumnhasanindex,weapproximate itbythe\nubiquitous rlJ.Theseformulas areusedwhether ornotthetwocolumns\nappearinthesamerelation.\n,l I o'TI.)1 .f't' .d bHigh(I)-valueCOumn>va,ue. 1eIecuctlOnacorISapprOXImate yHigh(I) ~Low(I)\nifthereisanindex1oncolumn.Ifthecolumnisnotofanarithmetic type\northereisnoindex,afraction lessthanhalfisarbitrarily chosen.Similar\nformulas forthereduction factorcanbederivedforotherrangeselections.\ncolumn IN(listofvalues):Thereduction factoristakentobethereduction\nfactorforcolumn=valuemultiplied bythenumber ofitemsinthelist.\nHowever, itisallowedtobeatmosthalf,reflecting theheuristic beliefthat\neachselection eliminates atleasthalfthecandidate tuples.\nTheseestimates forreduction factorsareatbestapproximations thatrelyon<l..'3\u00ad\nsumptions suchasuniform distribution ofvaluesandindependent distribution\nofvaluesindifferent columns. Inrecentyearsmoresophisticated techniques\nba\"sedonstoringmoredetailed statistics (e.g.,histograms ofthevaluesina\ncolumn, whichweconsider laterinthissection) havebeenproposed andare\nfindingtheirwayintocommercial systems.\nReduction factorscanalsobeapproximated fortermsoftheformcolumn IN\nsuhquery (ratiooftheestimated sizeofthesubqueryresulttothenumber\nofdistinctvaluesincolumnintheouterrelation); NOTcondition (I-reduction\nfactorforcondition); valuei<column< value2;thedisjunction oftwoconditions;\nandsoon,but\\vewillnotdiscusssuchreduction factors.\nTosummarize, regardless oftheplanchosen,wecanestimate thesizeofthe\nfinalresultbytakingtheproduct ofthesizesoftherelations intheFROMclause", "519": "AT:yp'lcalqueryOpt'irnizer 485\n$\nEstimating QueryCharacteristics: IBM DB2~Informix, Nlicrosoft\nSQLServer,Oracle8,andSybaseASEallusehistograms toestimate query\ncharacteristics suchasresultsizeandcost.Asanexample, SybaseASE\nusesone-dimensional, equidepth histograms withsomespecialattention\npaidtohighfrequency values,sothattheircountisestimated accurately.\nASEalsokeepstheaveragecountofduplicates foreachprefixofanindex\ntoestimate correlations between histograms forcomposite keys(although\nitdoesnotmaintain suchhistograms). ASEalsomaintains estimates of\nthedegreeofclustering intablesandindexes. IBMDB2,Informix, andOr\u00ad\naclealsouseone-dimensional equidepth histograms; Oracleautomatically\nswitches tomaintaining acountofduplicates foreachvaluewhenthere\narefewvaluesinacolumn. Microsoft SQLServerusesone-dimensional\nequiarea histograms withsomeoptimizations (adjacent bucketswithsim\u00ad\nilardistributions aresometimes combined tocompress thehistogram). In\nSQLServer,thecreation andmaintenance ofhistograms isdoneautomat\u00ad\nicallywithnoneedforuserinput.\nAlthough sampling techniques havebeenstudiedforestimating resultsizes\nandcosts,incurrentsystems, sampling isusedonlybysystemutilitiesto\nestimate statistics orbuildhistograms butnotdirectly bytheoptimizer\ntoestimate querycharacteristics. Sometimes, sampling isusedtodoload\nbalancing inparallelimplementations.\nandthereduction factorsforthetermsintheWHEREclause.Wecansimilarly\nestimate thesizeoftheresultofeachoperator inaplantreebyusingreduction\nfactors,sincethesubtreerootedatthatoperator's nodeisitselfaqueryblock.\nNotethatthenumberoftuplesintheresultisnotaffected byprojections ifdu\u00ad\nplicateelimination isnotperformed. However, projections reducethenumber\nofpagesintheresultbecause tuplesintheresultofaprojection aresmaller\nthantheoriginal tuples;theratiooftuplesizescanbeusedasareduction\nfactorforprojection toestimate theresultsizeinpages,giventhesizeof\ntheinputrelation.\nImproved Statistics: Histograms\nConsider arelation withNtuplesandaselection oftheformcolu:rnn>value\nonacolumnwith,,),IIindexI.Thereduction factor Tisapproximated by\nI~:.~\u00b7~I~W _~I:~:;)l(;),andthesizeoftheresultisestimated a\"sTN.Thisestimate\nreliesontheassumption thatthedistribution ofvaluesisuniform.", "520": "486 CHAPTER ~5\nEstimates canbeimproved considerably bymaintaining moredetailed statistics\nthanjustthelowandhighvaluesintheindexI.Intuitively, wewantto\napproximate thedistribution ofkeyvaluesIasaccurately aspossible. Consider\nthetwodistributions ofvaluesshowninFigure15.3.Thefirstisanonuniform\ndistribution Dofvalues(say,foranattribute calledage).Thefrequency ofa\nvalueisthenumberoftupleswiththatagevalue;adistribution isrepresented\nbyshowingthefrequency foreachpossible agevalue.Inourexample, thelowest\nagevalueis0,thehighestis14,andallrecorded agevaluesareintegers inthe\nrange0to14.Theseconddistribution approximates Dbyassuming thateach\nagevalueintherangeato14appearsequallyoftenintheunderlying collection\noftuples.Thisapproximation canbestoredcompactly because weneedto\nrecordonlythelowandhighvaluesfortheagerange(0and14respectively)\nandthetotalcountofallfrequencies (whichis45inourexample).\nDistribution D\n33Unifonn distribution approximating D\n333333333333333\noI 3 4 5 67 8 9 10II1213140 1 2 3 4 5 6 7 8 9 101112 13 14\nFigure15.3Uniform vs.Nonuniform Distributions\nConsider theselection age>13.Fl'omthedistribution DinFigure15.3,we\nseethattheresulthas9tuples.Usingtheuniform distribution approximation,\nontheotherhand,weestimate theresultsizeasfs\u00b745=3tuples.Clearly,\ntheestimate isquiteinaccurate.\nAhistogram isadatastructure maintained byaDBMStoapproximate adata\ndistribution. InFigure15.4,weshowhowthedatadistribution fromFigure\n15.3canbeapproximated bydividing therangeofagevaluesintosubranges\ncalledbuckets, andforeachbucket,counting thenumber oftupleswithage\nvalueswithinthatbucket.Figure15.4showstwodifferent kindsofhistograms,\ncalledequiwidth andequidepth, respectively.\nConsider thes~lection queryage>13againandthefirst(equiwidth) his\u00ad\ntogram. Wecanestimate thesizeoftheresulttobe5because theselected\nrangeincludes athirdoftherangeforBucket5.SinceBucket5represents a\ntotalof15tuples,theselected rangecorresponds to~.15=5tuples.Asthis\nexample shows,wea..ssumethatthedistribution withinahistogram bucketis\nuniform. Therefore, whenwesimplymaintain thehighandlowvaluesforindex", "521": "ATypicalQueryOptimizer\n9.0487\nEquiwidlh\n50\nII5.0Equideplh\n2.25 2.5\nlilli/II5.0\nBuckelIBucket2Buckel3Bucket4Buckel5\nCount;::):\\ C()unt~ Count:::::15COllnC;:::) Counl-:::::15Bucket1\nCoullt=9Bucket2Bucket3Bucket4Bucket5\nCounl:::::10 Count-\",IO Counl=7 Counl'\"l9\nFigure15.4Histograms Approximating Distribution D\nI,weeffectively usea'histogram' withasinglebucket. Usinghistograms with\nasmallnumber ofbuckets insteadleadstomuchmoreaccurate estimates, at\nthecostofafewhundred bytesperhistogram. (Likeallstatistics inaDBMS,\nhistograms areupdated periodically ratherthanwhenever thedataischanged.)\nOneimportant question ishowtodividethevaluerangeintobuckets. Inan\nequiwidth histogram, wedividetherangeintosubranges ofequalsize(in\ntermsoftheagevaluerange). Wecouldalsochoosesubranges suchthatthe\nnumberoftupleswithineachsubrange (i.e.,bucket)isequal.Suchahistogram,\ncalledanequidepth histogram, isalsoillustrated inFigure15.4.Consider\ntheselection age>13again.Usingtheequidepth histogram, weareledto\nBucket5,whichcontains onlytheagevalue15,andthuswearriveattheexact\nanswer, 9.Whiletherelevant bucket(orbuckets) generally contains more\nthanonetuple,equidepth histograms providebetterestimates thanequiwidth\nhistograms. Intuitively, bucketswithveryfrequently occurring valuescontain\nfewervalues,andthustheuniform distribution &'isumption isappliedtoa\nsmallerrangeofvalues,leadingtobetterapproximations. Conversely, buckets\nwithmostlyinfrequent valuesareapproximated lessaccurately inanequidepth\nhistogram, butforgoodestimation, thefrequent valuesareimportant.\nProceeding furtherwiththeintuition abouttheimportance offrequent values,\nanother alternative istomaintain separate countsforasmallnumber ofvery\nfrequent values,saytheagevalues7and14inourexample, andmaintain an\nequidepth (orother)histogram tocovertheremaining values.Suchahistogram\niscalledacompressed histogram. Mostcommercial DB1\\1Ss currently use\nequidepth histograms, andsomeusecompressed histograms.", "522": "488 CHAPTER ~5\n15.3RELATIONAL ALGEBRA EQUIVALENCES\nInthissection,wepresentseveralequivalences amongrelational algebraexpres\u00ad\nsions;andinSection15.4,wediscussthespaceofalternative plansconsidered\nbyaoptimizer.\nOurdiscussion ofequivalences isaimedatexplaining therolethatsuchequiva\u00ad\nlencesplayinaSystemRstyleoptimizer. Inessence, abasicSQLqueryblock\ncanbethought ofasanalgebraexpression consisting ofthecross-product of\nallrelations intheFROMclause,theselections intheWHEREclause,andthe\nprojections intheSELECT clause.Theoptimizer can choosetoevaluate any\nequivalent expression andstillobtainthesameresult.Algebra equivalences\nallowustoconvert cross-products tojoins,choosedifferent joinorders,and\npushselections andprojections aheadofjoins.Forsimplicity, weassumethat\nnamingconflicts neverariseandweneednotconsider therenaming operator\np.\n15.3.1Selections\nTwoimportant equivalences involvetheselection operation. Thefirstonein\u00ad\nvolvescascading ofselections:\nGoingfromtherightsidetotheleft,thisequivalence allowsustocombine sev\u00ad\neralselections intooneselection. Intuitively, wecantestwhether atuplemeets\neachoftheconditions C1...Cn.atthesametime.Intheotherdirection, this\nequivalence allowsustotakeaselection condition involving severalconjuncts\nandreplaceitwithseveralsmallerselection operations. Replacing aselection\nwithseveralsmallerselections turnsouttobeveryusefulincombination with\notherequivalences, especially commutation ofselections withjoinsorcross\u00ad\nproducts, whichwediscussshortly. Intuitively, suchareplacement isusefulin\ncaseswhereonlypartofacomplex selection condition canbepushed.\nThesecondequivalence statesthatselections arecommutative:\nInotherwords,'wecantesttheconditions C1andC2ineitherorder.\n15.3.2Projections\nTheruleforcascading projections saysthatsuccessively elilninating columns\nfromarelation isequivalent tosirnplyeliminating allbutthecolumns retained", "523": "ATypicalqu.eryOptimizeT\nbythefinalprojection:489\nEachaiisasetofattributes ofrelationR,andai~aHlfori=1...n \u00ad\n1.Thisequivalence isusefulinconjunction withotherequivalences suchas\ncommutation ofprojections withjoins.\n15.3.3Cross-Products andJoins\nTwoimportant equivalences involving cross-products andjoins. ~represent\nthemintermsofnaturaljoinsforsimplicity, buttheyholdforgeneraljoinsas\nwell.\nFirst,assuming thatfieldsareidentified bynameratherthanposition, these\noperations arecommutative:\nRx8\nRN88xR\nThisproperty isveryimportant. Itallowsustochoosewhichrelation istobe\ntheinnerandwhichtheouterinajoinoftworelations.\nThesecondequivalence statesthatjoinsandcross-products areassociative:\nRx(8xT)\nRN(8NT)(Rx8)xT\n(RN8)NT\nThuswecaneitherjoinRand8firstandthenjoinTtotheresult,orjoin8\nandTfirstandthenjoinRtotheresult.Theintuition behindassociativity\nofcross-products isthat,regardless oftheorderinwhichthethreerelations\nareconsidered, thefinalresultcontains thesamecolumns. Joinassociativity is\nbasedonthesameintuition, withtheadditional observation thattheselections\nspecifying thejoinconditions canbecascaded. Thusthesamerowsappearin\nthefinalresult,regardless oftheorderinwhichtherelations arejoined.\nTogether withcommutativity, associativity essentially saysthatwecanchoose\ntojoinanyp<l:iroftheserelations, thenjointheresultwiththethirdrelation,\nandalwaysobtainthesamefinalresult.Forexample, letusverifythat\nRN(8NT)~(T,C><]R)N8\nFromcommutativity, wehave:\nRN(8NT) RN(TN8)", "524": "490\nFromassociativity, wehave:\nRM(TMS)\nUsingcommutativity again,wehave:(RfxJT)MSCHAPTER .15\nInotherwords,whenjoiningseveralrelations, wearefreetojointherelations\ninanyorderwechoose.Thisorder-independence isfundamental tohowaquery\noptimizer generates alternative queryevaluation plans.\n15.3.4Selects,Projects, andJoins\nSomeimportant equivalences involvetwoormoreoperators.\nWecancommute aselection withaprojection iftheselection operation in\u00ad\nvolvesonlyattributes retained bytheprojection:\nEveryattribute mentioned intheselection condition cmustbeincluded inthe\nsetofattributes a.\nWecancombine aselection withacross-product toformajoin,asperthe\ndefinition ofjoin:\nWecancommute aselection withacross-product orajoiniftheselection\ncondition involves onlyattributes ofoneofthearguments tothecross-product\norjoin:\noARxS)\nac(RfxJS)ac(R)xS\nac(R) fxJS\nTheattributes mentioned incmustappearonlyinRandnotinS.Similar\nequivalences holdifcinvolves onlyattributes ofSandnotR,ofcourse.\nIngeneral, aselection aconRxScanbereplaced byaca<;cadeofselections\nac],aC2,andaC;JsuchthatClinvolves attributes ofbothRandS,C2involves\nonlyattributes ofR,andC;:linvolves onlyattributes ofS:\nUsingtheca...<;cadingruleforselections, thisexpression isequivalent to", "525": "ATypicalQueryOptimizer 491\n:;.\nUsingtheruleforcommuting selections andcross-products, thisexpression is\nequivalent to\nCTC1(CTC2(R)xCTC3(S))\nThuswecanpushpartoftheselection condition caheadofthecross-product.\nThisobservation alsoholdsforselections incombination withjoins.ofcourse.\n\\Vecancommute aprojection withacross-product:\nwherealisthesubsetofattributes inathatappearinR,anda2isthesubset\nofattributes inathatappearinS.Wecanalsocommute aprojection with\najoinifthejoincondition involves onlyattributes retained bytheprojection:\nwherealisthesubsetofattributes inathatappearinR,anda2isthesubset\nofattributes inathatappearinS.Further, everyattribute mentioned inthe\njoincondition cmustappearina.\nIntuitively, weneedtoretainonlythoseattributes ofRandSthatareeither\nmentioned inthejoincondition corincluded inthesetofattributes aretained\nbytheprojection. Clearly, ifaincludes allattributes mentioned inc,the\nprevious commutation ruleshold.Ifadoesnotincludeallattributes mentioned\ninC,wecangeneralize thecommutation rulesbyfirstprojecting outattributes\nthatarenotmentioned incora,performing thejoin,andthenprojecting out\nallattributes thatarenotina:\nNow, (Llisthesubsetofattributes ofRthatappearineitheraorc,anda2is\nthesubsetofattributes ofSthatappearineitheraorc.\nWecaninfactderivethemoregeneralcommutation rulebyusingtherulefor\ncascading projections andthesimplecommutation rule,andweleavethisa.s\nanexercise forthereader.\n15.3.5Oth,erEquivalences\nAdditional equivalences holdwhenweconsider operations suchasset-difference,\nunion,andintersection. Unionandintersection areassociative andcommuta\u00ad\ntive.Selections andprojections canbecommuted witheachofthesetopera\u00ad\ntions(set-difference, union,andintersection). \\Vedonotdiscusstheseequiva\u00ad\nlencesfurther.", "526": "492\nSELECT\nFROM\nWHERE\nGROUPBY\nHAVINGS.rating, COUNT(*)\nSailorsS\nS.rating>5ANDS.age=20\nS.rating\nCOUNTDISTINCT (S.sname)>2\nFigure15.5ASingle-Relation QueryCHAPTER 15\n15.4ENUMERATION OFALTERNATIVE PLANS\nWenowcometoanissuethatisattheheartofanoptimizer, namely,thespace\nofalternative plansconsidered foragivenquery.Givenaquery,anoptimizer\nessentially enumerates acertainsetofplansandchoosestheplanwiththe\nleastestimated cost;thediscussion inSection 12.1.1indicated howthecost\nofaplanisestimated. Thealgebraic equivalences discussed inSection 15.3\nformthebasisforgenerating alternative plans,inconjunction withthechoice\nofimplementation technique fortherelational operators (e.g.,joins)present\ninthequery.However, notallalgebraically equivalent plansareconsidered,\nbecause doingsowouldmakethecostofoptimization prohibitively expensive\nforallbutthesimplest queries. Thissectiondescribes thesubsetofplans\nconsidered byatypicaloptimizer.\nTherearetwoimportant casestoconsider: queriesinwhichtheFROMclause\ncontains asinglerelationandqueriesinwhichtheFROMclausecontains twoor\nmorerelations.\n15.4.1Single-Relation Queries\nIfthequerycontains asinglerelation intheFROMclause,onlyselection, pro\u00ad\njection,grouping, andaggregate operations areinvolved; therearenojoins.If\nwehavejustoneselection orprojection oraggregate operation appliedtoare\u00ad\nlation,thealternative implementation techniques andcostestimates discussed\ninChapter 14coveralltheplansthatmustbeconsidered. Wenowconsider\nhowtooptimize queriesthatinvolveacombination ofseveralsuchoperations,\nusingthefollowing queryasanexample:\nForeachratinggreaterthan5,printtheratingandthenurnber'of20-year'-old\nsailorswiththatrating,provided thatthereareatleasttwosuchsailorswith\ndifferent names.\nTheSQLversionofthisqueryisshowninFigure15.5.Usingtheextended\nalgebranotation introduced inSection15.1.2,wecanwritethisqueryas:\n7fS.mling,C'OUNT(*) (", "527": "AT,ypicalQueI7/Optim'izcr\nHAV\nINGCOUNTDISTINCT(8.snume\u00bb2(\nGROUP BYS.rating(\n7iS.rating .5'.sname (\n(lS.raling>5AS.age=20 (\nSailors)))))493\nNoticethatS.sname isaddedtotheprojection list,eventhoughitisnotinthe\nSELECT clause,because itisrequired totesttheHAVING clausecondition.\nWearenowreadytodiscusstheplansthatanoptimizer wouldconsider. The\nmaindecision tobemadeiswhichaccesspathtouseinretrieving Sailors\ntuples.Ifweconsidered onlytheselections, wewouldsimplychoosethemost\nselective accesspath,basedonwhichavailable indexesmatchtheconditions in\ntheWHEREclause(asperthedefinition inSection14.2.1). Giventheadditional\noperators inthisquery,wemustalsotakeintoaccountthecostofsubsequent\nsortingstepsandconsider whether theseoperations canbeperformed without\nsortingbyexploiting someindex.Wefirstdiscusstheplansgenerated when\ntherearenosuitable indexesandthenexamine plansthatutilizesomeindex.\nPlanswithoutIndexes\nThebasicapproach intheabsence ofasuitable indexistoscantheSailors\nrelationandapplytheselection andprojection (without duplicate elimination)\noperations toeachretrieved tuple,asindicated bythefollowing algebraexpres\u00ad\nsion:\n7iS.1'ating,S.8'l!ame (\n(lS.Ta[ing>5AS.age=20 (\nSailors))\nTheresulting tuplE~sarethensortedaccording totheGROUP BYclause(inthe\nexample query,onmting),andoneanswertupleisgenerated foreachgroupthat\nmeetsthecondition intheHAVING clause.Thecomputation oftheaggregate\nfunctions intheSELECT andHAVING clausesisdoneforeachgroup,usingone\nofthetechniques described inSection14.6.\nThecostofthisapproach consists ofthecostsofeachofthesesteps:\n1.Perfonning afilescantoretrieve tuplesandapplytheselections andpro-\u00b7\njections.\n2.'Writingouttuplesaftertheselections andprojectiolls.\n3.Sortingthesetuplestoimplement theGROUP BYclause.", "528": "494 CHAPTER t5\nNotethattheHAVING clausedoesnotcauseadditional I/O.Theaggregate\ncomputations canbedoneon-the-fiy (withrespecttoI/O)aswegenerate the\ntuplesineachgroupattheendofthesortingstepfortheGROUP BYclause.\nIntheexample querythecostincludes thecostofafilescanonSailorsplus\nthecostofwritingout(S.rating,S.sname) pairsplusthecostofsortingasper\ntheGROUP BYclause.ThecostofthefilescanisNPages(Sailors), whichis500\nI/Os,andthecostofwritingout(S.rating,S.sname) pairsisNPages(Sailors)\ntimestheratioofthesizeofsuchapairtothesizeofaSailorstupletimesthe\nreduction factorsofthetwoselection conditiolls. Inourexample, theresult\ntuplesizeratioisabout0.8,themtingselection hasareduction factorof0.5,\nandweusethedefaultfactorof0.1fortheageselection. Therefore, thecost\nofthisstepis20l/Os.Thecostofsortingthisintermediate relation (which\nwecallTemp)canbeestimated as3*NPages(Temp), whichis60I/Os,ifwe\nassumethatenoughpagesareavailable inthebufferpooltosortitintwo\npasses. (Relational optimizers oftena.'3sumethatarelation canbesortedin\ntwopasses,tosimplify theestimation ofsortingcosts.Ifthisassumption isnot\nmetatrun-time, theactualcostofsortingmaybehigherthantheestimate.)\nThetotalcostoftheexample queryistherefore 500+20+60=580l/Os.\nPlansUtilizing anIndex\nIndexes canbeutilizedinseveralwaysandcanleadtoplansthataresignifi\u00ad\ncantlyfasterthananyplanthatdoesnotutilizeindexes:\n1.Single-Index AccessPath:Ifseveralindexesmatchtheselection condi\u00ad\ntionsintheWHEREclause,eachmatching indexoffersanalternative access\npath.Anoptimizer canchoosetheaccesspaththatitestimates willresult\ninretrieving thefewestpages,applyanyprojections andnonprimary se\u00ad\nlectionterms(i.e.,partsoftheselection condition thatdonotmatchthe\nindex),andproceed tocompute thegrouping andaggregation operations\n(bysortingontheGROUP BYattributes).\n2.Multiple-Index AccessPath:IfseveralindexesusingAlternatives (2)\nor(3)fordataentriesmatchtheselection condition, eachsuchindexcan\nbeusedtoretrieveasetofrids.vVecanintersect thesesetsofrids,then\nsorttheresultbypageid(a.\"lsuming thattheridrepresentation includes\nthepageid)andretrievetuplesthatsatisfytheprimary selection termsof\nallthematching indexes. Anyprojections andnonprimary selection terms\ncanthenbeapplied, followed bygTC)l1ping andaggregation operations.\n3.SortedIndexAccessPath:Ifthelistofgrouping attributes isaprefix\nofatrecindex,theindexcanbeusedtoretrievetuplesintheorderrequired\nbytheGROUP BYclause.Allselection conditions canbeappliedoneach", "529": "ATypicalQu,eryOptimizer\nretrieved tuple,unwanted fieldscanberemoved, andaggregate operations\ncomputed foreachgTOUp.Thisstrategy workswell forclustered indexes.\n4.Index-Only AccessPath:Ifalltheattributes mentioned inthequery\n(intheSELECT, WHERE, GROUPBY,orHAVINGclauses) areincluded inthe\nsearchkeyforsomedenseindexontherelation intheFROMclause,an\nindex-only scancanbeusedtocompute answers. Because thedata\nentriesintheindexcontainalltheattributes ofatupleneededforthis\nqueryandthereisoneindexentrypertuple,weneverneeptoretrieve\nactualtuplesfromtherelation. Usingjustthedataentriesfromtheindex,\nwecancarryoutthefollowing stepsasneededinagivenquery:Apply\nselection conditions, removeunwanted attributes, sorttheresulttoachieve\ngrouping, andcompute aggregate functions withineachgroup.Thisindex\u00ad\nonlyapproach workseveniftheindexdoesnotmatchtheselections inthe\nWHEREclause.Iftheindexmatches theselection, weneedexamine only\nasubsetoftheindexentries;otherwise, wemustscanallindexentries.\nIneithercase,wecanavoidretrieving actualdatarecords; therefore, the\ncostofthisstrategy doesnotdependonwhether theindexisclustered. In\naddition, iftheindexisatreeindexandthelistofattributes intheGROUP\nBYclauseformsaprefixoftheindexkey,wecanretrievedataentriesin\ntheorderneededfortheGROUP BYclauseandtherebyavoidsorting!\nWenowillustrate eachofthesefourcases,usingthequeryshowninFigure\n15.5asarunning example. Weassumethatthefollowing indexes, allusing\nAlternative (2)fordataentries,areavailable: aB+treeindexonrating,a\nhashindexonage,andaB+treeindexon(rating. sname,age).Forbrevity,\nwedonotpresentdetailed costcalculations, butthereadershouldbeableto\ncalculate thecostofeachplan.Thestepsintheseplansarescans(afilescan,\nascanretrieving tuplesbyusinganindex,orascanofonlyindexentries),\nsorting,andwritingtemporary relations; andwehavealreadydiscussed how\ntoestimate thecostsoftheseoperations.\nAsanexample ofthefirstC<1se,wecouldchoosetoretrieveSailorstuplessuch\nthatS.age=20usingthehashindexonage.Thecostofthisstepisthecost\nofretrieving theindexentriesplusthecostofretrieving thecorresponding\nSailorstuples,whichdepends onwhether theindexisclustered. vVecanthen\napplythecondition S.mting>5toeachretrieved tuple;projectoutfieldsnot\nmentioned in~heSELECT, GROUPBY,andHAVINGclauses;andwritetheresult\ntoatemporary relation. Intheexample, onlytheratingandsnamefieldsneed\ntoberetained. Thetemporary relation isthensortedontheratingfieldto\nidentifythegroups,andsomegroupsareeliminated byapplying theHAVING\nconclitioIl.", "530": "496 CHAPTER 15. . ..._._---\n -~--l\nUtilizing Indexes: AllofthemainRDBMSs recognize theimportance\nofindex-only plansandlookforsuchplanswhenever possible. InIBM\nDD2,whencreating anindexausercanspecifyiasetof'include' \"alumns\nthataretobekeptintheindexbutarenotpartoftheindexkey.This\nallowsarichersetofindex-only queriestobehandled, because columns\nfrequently a.ccessed areincluded intheindexeveniftheyare;notpart of\nthekey.InMicrosoft SQLServer,aninteresting classofindex-only plans\nisconsidered: Consider aquerythatselectsattributes saland~age froma\ntable,givenanindexonsalandanother indexonage.SQLServeruses\ntheindexesbyjoiningtheentriesontheridofdatarecordstoidentify\n(sal,age)pairsthatappearinthetable.\nAsanexample ofthesecondcase,wecanretrieve ridsoftuplessatisfying\nmting>5 usingtheindexonrating,retrieveridsoftuplessatisfying age=20us\u00ad\ningtheindexonage,sorttheretrieved ridsbypagenumber, andthenretrieve\nthecorresponding Sailorstuples.Wecanretainjusttheratingandnamefields\nandwritetheresulttoatemporary relation, whichwecansortonmtingto\nimplement theGROUP BYclause. (Agoodoptimizer mightpipeline thepro\u00ad\njectedtuplestothesortoperator without creating atemporary relation.) The\nHAVING clauseishandled asbefore.\nAsanexample ofthethirdcase,wecanretrieveSailorstuplesinwhichS.mting\n>5,ordered byrating,usingtheB+treeindexonrating.Wecancompute\ntheaggregate functions intheHAVING andSELECT clauseson-the-fly because\ntuplesareretrieved inratingorder.\nAsanexample ofthefourthcase,wecanretrieve dataentT'iesfromthe(mting,\nsname,age)indexinwhichmting>5.Theseentriesaresortedbyrating(and\nthenbysnarneCLnJage,although thisadditional ordering isnotrelevant for\nthisquery). vVecanchooseentrieswithage=20andcompute theaggregate\nfunctions intheHAVINGandSELECT clauseson-the-fly becausethedataentries\nareretrieved inratingorder.Inthiscase,incontrast totheprevious case,we\ndonotretrieveanySailorstuples.Thisproperty ofnotretrieving datarecords\nmakestheindex-only strategy especially valuable withunclusterecl indexes.\n15.4.2Multiple-Relation Queries\nQueryblocksthatcontaintwoormorerelations intheFROMclauserequirejoins\n(orcross-products). Finding agoodplanforsuchqueriesisveryimportant\nbecause thesequeriescanbequiteexpensive. Regardless oftheplanchosen,\nthesizeofthefinalresultcanbeestimated bytakingtheproduct ofthesizes", "531": "ATypicalQ'lLeTyOptimizeT 497\noftherelations intheFROMclauseandthereduction factorsforthetermsin\ntheWHEREclause.But,depending ontheorderinwhichrelations arejoined,\nintermediate relations ofwidelyvaryingsizescanbecreated, leadingtoplans\nwithverydifferent costs.\nEnumeration ofLeft-Deep Plans\nAswesawinChapter 12,currentrelational systems, following theleadofthe\nSystemRoptimizer, onlyconsider left-deep plans.\\;Yenowdiscusshowthis\ndassofplansisefficiently searched usingdynamic programming.\nConsider aqueryblockoftheform:\nSELECT attribute list\nFROM relation list\nWHERE teT1nl1\\term2 1\\...1\\ter1nn\nASystemRstylequeryoptimizer enumerates allleft-deep plans,withselections\nandprojections considered (butnotnecessarily applied!) asearlyaspossible.\nTheenumeration ofplanscanbeunderstood &'3amultiple-pass algorithm in\nwhichweproceed asfollows:\nPass1:Weenumerate allsingle-relation plans(oversomerelation inthe\nFROMclause). Intuitively, eachsingle-relation planisapartialleft-deep plan\nforevaluating thequeryinwhichthegivenrelation isthefirst(inthelinear\njoinorderfortheleft-deep planofwhichitisapart).Whenconsidering\nplansinvolving arelationA,weidentify thoseselection termsintheWHERE\nclausethatmention onlyattributes ofA.Thesearetheselections thatcan\nbeperformed whenfirstaccessing A,beforeanyjoinsthatinvolveA.Wealso\nidentifythoseattributes ofAnotmentioned intheSELECT clauseorinterms\nintheWHEREclauseinvolving attributes ofotherrelations. Theseattributes\ncanbeprojected outwhenfirstaccessing A,beforeanyjoinsthatinvolveA.\nWechoosethebestaccessmethod forAtocarryouttheseselections and\nprojections, &'3perthediscussion inSection15.4.1.\nForeachrelation, ifwefindplansthatproduce tuplesindifferent orders,we\nretainthecheapest planforeachsuchordering oftuples.Anordering oftuples\ncouldproveusefulatasubsequent step,say,forasort-merge joinorimple\u00ad\nmenting aGROUPBYorORDERBYclause.Hence,forasinglerelation, wemay\nretainafilescan(&'3thecheapest overallplanforfetching alltuples)andaB+\ntreeindex (I:LSthecheapest planforfetching alltuplesinthesearchkeyorder).\nPass2:Wegenerate alltwo-relation plansbyconsidering eachsingle-relation\nplanretained afterPass1&'3theouterrelationand(successively) everyother", "532": "498 CHAPTER Jf5\nrelation astheinnerrelation. Suppose thatAistheouterrelation andB\ntheinnerrelation foraparticular two-relation plan.Weexamine thelistof\nselections intheWHEREclauseandidentify:\n1.Selections thatinvolveonlyattributes ofBandcanbeappliedbeforethe\njoin.\n2.Selections thatdefinethejoin(i.e.,areconditions involving attributes of\nbothAandBandnootherrelation).\n3.Selections thatinvolveattributes ofotherrelations andcanbeappliedonly\nafterthejoin.\nThefirsttwogroupsofselections canbeconsidered whilechoosing anaccess\npathfortheinnerrelationB.Wealsoidentifytheattributes ofBthatdonot\nappearintheSELECT clauseorinanyselection conditions inthesecondor\nthirdgroupandcantherefore beprojected outbeforethejoin.\nNotethatouridentification ofattributes thatcanbeprojected outbeforethe\njoinandselections thatcanbeappliedbeforethejoinisbasedontherelational\nalgebraequivalences discussed earlier.Inparticular, werelyontheequivalences\nthatallowustopushselections andprojections aheadofjoins.Aswewillsee,\nwhether weactually perform theseselections andprojections aheadofagiven\njoindepends oncostconsiderations. Theonlyselections thatarereallyapplied\nbefor\"ethejoinarethosethatmatchthechosenaccesspathsforAandB.The\nremaining selections andprojections aredoneon-the-fly aspartofthejoin.\nAnimportant pointtonoteisthattuplesgenerated bytheouterplanareas\u00ad\nsumedtobepipelinedintothejoin.Thatis,weavoidhavingtheouterplan\nwriteitsresulttoafilethatissubsequently readbythejoin(toobtainouter\ntuples). ForSOlnejoinmethods, thejoinoperator rnightrequirematerializing\ntheoutertuples.Forexample, ahashjoinwouldpartition theincoming tuples,\nandasort-merge joinwouldsortthemiftheyarenotalreadyintheappropri\u00ad\natesortorder.Nestedloopsjoins,however, canuseoutertuples H,\"itheyare\ngenerated andavoidmaterializing them.Similarly, sort-merge joinscanuse\noutertuplesastheyaregenerated iftheyaregenerated inthesortedorder\nrequired forthejoin.Weincludethecostofmaterializing theouterrelation,\nshouldthisbenecessary, inthecostofthejoin.Theadjustments tothejoin\ncostsdiscussed inChapter 14toreflecttheuseofpipelining ormaterialization\noftheouterarestraightforward.\nForeachsingle-relation planforAretained afterPa.\"iS1,foreachjoinmethod\nthatweconsider, wemustdetermine thebestaccesslnethodtollseforB.The\naccessmethod chosenforBretrieves, ingeneral, asubsetofthetuplesinB,\npossibly withsomefieldseliminated, asdiscllssed later.Consider relationB.", "533": "AT:lJpical qlleT~1JOptim'iztT 4~9\n\\Vehaveacollection ofselections (someofwhicharethejoinconditions) and\nprojections onasinglerelation, andthechoiceofthebestaccessmethod is\nmadea<;perthediscussion inSection15.4.1.Theonlyadditional consideration\nisthatthejoinmethod mightrequiretuplestoberetrieved insomeorder.For\nexample, inasort-merge join,wewanttheinnertuplesinsortedorderonthe\njoincolumn(s). Ifagivenaccessmethod doesnotretrieve innertuplesinthis\norder,wemustaddthecostofanadditional sortingsteptothecostofthe\naccessmethod.\nPass3:Wegenerate allthree-relation plans.Weproceed asinPass2,except\nthatwenowconsider plansretained afterPass2asouterrelations, insteadof\nplansretained afterPass1.\nAdditional Passes: Thisprocessisrepeated withadditional passesuntilwe\nproduce plansthatcontain alltherelations inthequery.Wenowhavethe\ncheapest overallplanforthequeryaswellasthecheapest planforproducing\ntheanswers insomeinteresting order.\nIfamultiple-relation querycontains aGROUP BYclauseandaggregate functions\nsuchasMIN,MAX,andSUMintheSELECT clause,thesearedealtwithatthe\nveryend.Ifthequeryblockincludes aGROUP BYclause,asetoftuplesis\ncomputed basedontherestofthequery,asdescribed above,andthissetis\nsortedaspertheGROUP BYclause.Ofcourse,ifthereisaplanaccording to\nwhichthesetoftuplesisproduced inthedesiredorder,thecostofthisplan\niscompared withthecostofthecheapest plan(a<;smning thatthetwoare\ndifferent) plusthesortingcost.Giventhesortedsetoftuples,partitions are\nidentified andanyaggregate functions intheSELECT clauseareappliedona\nper-partition basis,asperthediscussion inChapter 14.\nExamples ofMultiple-Relation QueryOptimization\nConsider thequerytreeshowninFigure 12.~~.Figure15.6showsthesame\nquery,takingintoaccount howselections andprojections areconsidered early.\nInlookingatthisfigure,itisworthernphc1...sizing thattheselections shownon\ntheleavesarenotnecessarily doneinadistinctstepthatprecedes the.ioin~H\nrather, (:1...<;wehaveseen,theyareconsidered aspotential matching predicates\nwhenconsiderIng theavailable accesspathsontherelations.\nSuppose thatwehavethefollowing indexes, allunclustered andusingAlter\u00ad\nnative(2)fordataentries: aB+treeindexontheratingfieldofSailors,a\nhashindexonthesidfieldofSailors,andaB+treeindexonthebidfieldof", "534": "500 CHAPTER 10\nOptimization inCommercial Syst~ms: IBMDB2,Informix, Microsoft\nSQLServer,Oracle8,andSybaseASEallsearchforleft-deep treesusing\ndynamic programming, asdescribed here,withseveralvariations. Forex\u00ad\nample,Oraclealwaysconsiders interchanging thetworelations inahash\njoin,whichcouldleadtoright-deep treesorhybrids. DB2gene'rates some\nbushytreesaswell.Systems oftenuseavarietyofstrategies forgenerating\nplans,goingbeyondthesystematic bottom-up enumeration thatwede\u00ad\nscribed, inconjunction withadynamic programming strategy forcosting\nplansandremembering interesting plans(toavoidrepeated analysis ofthe\nsameplan).Systems alsovaryinthedegreeofcontroltheygiveusers.\nSybaseASEandOracle8allowuserstoforcethechoiceofjoinorders\nandindexes--Sybase ASEevenallowsuserstoexplicitly edittheexecu\u00ad\ntionplan-whereas IBMDB2doesnotallowuserstodirecttheoptimizer\notherthanbysettingan'optimization level,'whichinfluences howmany\nalternative planstheoptimizer considers.\nIIsname\nI\nReservesUrating >5\nI\nSailors\nFigure15.6AQueryTree", "535": "ATypicalQv,cryOptinl'izcr 5Q1\nReserves. Inaddition, wea'Ssumethatwecandoasequential scanofboth\nReserves andSailors.Letusconsider howtheoptimizer proceeds.\nInPch<;S1,weconsider threeaccessmethods forSailors(B+tree,hashindex,\nandsequential scan),takingintoaccounttheselection IJrating>5' Thisselection\nmatches theB+treeonratingandtherefore reducesthecostforretrieving\ntuplesthatsatisfythisselection. Thecostofretrieving tuplesusingthehash\nindexandthesequential scanislikelytobemuchhigherthanthecostofusing\ntheB+tree.Sotheplanretained forSailorsisaccessviatheB+treeindex,and\nitretrieves tuplesinsortedorderbyrating.Similarly, weconsider twoaccess\nmethods forReserves takingintoaccounttheselection IJbid=100. Thisselection\nmatches theB+treeindexonReserves, andthecostofretrieving matching\ntuplesviathisindexislikelytobemuchlowerthanthecostofretrieving tuples\nusingasequential scan;accessthrough theB+treeindexistherefore theonly\nplanretained forReserves afterPass1.\nInPass2,weconsider takingthe(relation computed bythe)planforReserves\nandjoiningit(astheouter)withSailors.Indoingso,werecognize thatnow,\nweneed only Sailorstuplesthatsatisfy crrating>5andIJsid=value, wherevalue\nissomevaluefromanoutertuple.Theselection IJsid=value matches thehash\nindexonthesidfieldofSailors,andtheselection crrating>5matches theB+\ntreeindexontheratingfield.Sincetheequality selection hasamuchlower\nreduction factor,thehashindexislikelytobethecheaper accessmethod.\nInaddition tothepreceding consideration ofalternative accessmethods, we\nconsider alternative joinmethods. Allavailable joinmethods areconsidered.\nForexample, consider asort-merge join.Theinputsmustbesortedbysid;\nsinceneitherinputissortedbysidorhasanaccessmethodthatcanreturn\ntuplesinthisorder,thecostofthesort-merge joininthiscasemustinclude\nthecostofstoringthetwoinputsintempora.ry relations andsortingthem.A\nsort-merge joinprovides resultsinsortedorderbysid,butthisisnotauseful\nordering inthisexample because theprojection 7fsnameisapplied(on-the-fly)\ntotheresultofthejoin,thereby eliminating thesidfieldfromtheanswer.\nTherefore, theplanusingsort-merge joinisretained afterPch<;S2onlyifitis\ntheleastexpensive planinvolving Reserves andSailors.\nSimilarly, wealsoconsider takingtheplanforSailorsretained afterPass1and\njoiningit(astheouterrelation) withReserves. Nowwerecognize thatweneed\nonlyReserves tuplesthatsatisfy IJhid=100 and IJsid=val'lU~' wherevalueissome\nvaluefromanoutertuple.Again,weconsider allavailable joinmethods.\nvVefinallyretainthecheapest planoverall.\nAsanother example, illustrating theca<;ewhenmorethantworelations are\njoined,consider thefollowing query:", "536": "502 CHAPTER 15\nSELECT S.sid,COUNT(*) ASnumres\nFROM BoatsB,Reserves R,SailorsS\nWHERE R.sid=S.sidANDB.bid=R.bid ANDRcolor='red'\nGROUPBYS.sid\nThisqueryfindsthenumberofredboatsreserved byeachsailor.Thisquery\nisshownintheformofatreeinFigure15.7.\nITsid.COUNT(') ASnumras\nI\nGROUPB)' ~id\nI\n\"'<I Sailors\nbid~bld\n(Jcolor';:::.'red' Reserves\nBoats\nFigure15.7AQueryTree\nSuppose thatthefollowing indexesareavailable: forReserves, aB+treeonthe\nsidfieldandaclustered B+treeonthebidfield;forSailors,aB+treeindexon\nthesidfieldandahashindexonthesidfield;andforBoats,aB+treeindex\nonthecolorfieldandaha'3hindexonthecolorfield.(Thelistofavailable\nindexesiscontrived tocreatearelatively simple,illustrative example.) Letus\nconsider howthisqueryisoptimized. TheinitialfocusisontheSELECT, FROM,\nandWHEREclauses.\nInPass1,thebestplanisfoundforaccessing eachrelation, regarded asthe\nfirstrelation inanexecution plan.:ForReserves andSailors,thebestplanis\nobviously a.filescanbecause noselections matchanavailable index.Thebest\nplanforBoatsistousethehashindexoncolor,whichmatches theselection\nB.coloT='T'(~d'.TheB+treeoncoloralsomatches thisselection andisretained\neventhoughthehashindexischeaper, becauseitreturnstuplesinsortedorder\nbycolor.\nInPass2,foreachoftheplansgenerated inPass1,takenastheouterrelation,\nweconsider joininganotherrela.tion a'3theinnerone.Hence,weconsider each\nofthefollowing joins:filescanofReserves (outer)withBoats(inner),filescan\noflleserves (outer)withSailors(inner),filescanofSailors(outer)withBoats\n(inner),filescanofSailors(outer)withReserves (inner),Boatsaccessed via\nB+treeindexoncolor(outer)withSailors(inner) 1Boatsaccessed viaha'3h", "537": "AT.ypical q'lleT~1JOpt'im'izer S(}3\nindexoncolor(outer)withSailors(inner),Boatsaccessed viaB+treeindex\noncolor(outer)withReserves (inner),andBoatsaccessed viahashindexon\ncolor(outer)withRE'.3erves (inner).\nForeachsuchpair,weconsider everyjoinmethod, andforeachjoinmethod,\nweconsider everyavailable accesspathfortheinnerrelation. Foreachpair\nofrelations, weretainthecheapest oftheplansconsidered foreverysorted\norderinwhichthetuplesaregenerated. Forexample, withBoatsaccessed\nviathehashindexoncoloTastheouterrelation, anindexnestedloopsjoin\naccessing Reserves viatheB+treeindexonbidislikelytobeagoodplan;\nobservethatthereisnoha.\"hindexonthisfieldofReserves. Another planfor\njoiningReserves andBoatsistoaccessBoatsusingthehashindexoncoloT,\naccessReserves usingtheB+treeonbid,anduseasort-merge join;thisplan,\nincontrast totheprevious one,generates tuplesinsortedorderbybid.It\nisretained eveniftheprevious planischeaper, unlessanevencheaper plan\nproduces thetuplesinsortedorderbybid.However, theprevious plan,which\nproduces tuplesinnoparticular order,wouldnotberetained ifthisplanis\ncheaper.\nAgoodheuristic istoavoidconsidering cross-products ifpossible.Ifweapply\nthisheuristic, wewouldnotconsider thefollowing 'joins'inPass2ofthis\nexample: filescanofSailors(outer)withBoats(inner),Boatsaccessed viaB+\ntreeindexoncolor(outer)withSailors(inner),andBoatsaccessed viahash\nindexoncolor(outer)withSailors(inner).\nInPass3,foreachplanretained inPass2,takenastheouterrelation, we\nconsider howtojointheremaining relation astheinnerone.Anexample ofa\nplangenerated atthisstepisthefollowing: AccessBoatsviathehashindex\noncoloT,accessReserves viatheB+treeindexonbid,andjointhemusing\nasort-merge join,thentaketheresultofthisjoinastheouterandjoinwith\nSailorsusingasort-merge join,accessing SailorsviatheB+treeindexonthe\nsidfield.Notethat,sincetheresultofthefirstjoinisproduced insortedorder\nbybid,wherea.\" thesecondjoinrequires itsinputstobesortedbys'id,theresult\nofthefirstjoinmustbesortedbysidbeforebeingusedinthesecondjoin.The\ntuplesintheresultofthesecondjoinaregenerated insortedorderbysid.\nTheGROUP BYclauseisconsidered afteralljoins,anditrequires sortingon\nthesidfield.Foreachplanretained inPass3,iftheresultisnotsortedon\nsid,weaddthecostofsortingonthesidfield.Thesampleplangenerated in\nPass3produces tuplesinsidorder;therefore, itmaybethecheapest planfor\nthequeryevenifacheaper planjoinsallthreerelations butdoesnotproduce\ntuplesinsidorder.", "538": "504 CHAPTER 15\n15.5NESTED SUBQUERIES\nTheunitofoptimization inatypicalsystemisaqueryblock,andnestedqueries\naredealtwithusingsomeformofnestedloopsevaluation. Consider thefol\u00ad\nlowingnestedqueryinSQL:Findthenamesofsailorswiththehighestrating:\nSELECT\nFROM\nWHERES.sname\nSailorsS\nS.rating= (SELECT MAX(S2.rating)\nFROM SailorsS2)\nInthissimplequery,thenestedsubquerycanbeevaluated justonce,yielding\nasinglevalue.Thisvalueisincorporated intothetop-level queryasifithad\nbeenpartoftheoriginalstatement ofthequery.Forexample, ifthehighest\nratedsailorhasaratingof8,theWHEREclauseiseffectively modified toWHERE\nS.rating=8.\nHowever, thesubquery sometimes returnsarelation, ormoreprecisely, atable\nintheSQLsense(i.e.,possibly withduplicate rows).Consider thefollowing\nquery:FindthenamesofsailorswhohaveTeserved boatnumber 103:\nSELECT\nFROM\nWHERES.sname\nSailorsS\nS.sidIN(SELECT\nFROM\nWHERERsid\nReserves R\nRbid=103)\nAgain,thenestedsubquerycanbeevaluated justonce,yielding acollection\nofsids.ForeachtupleofSailors,wemustnowcheckwhether thesidvalue\nisinthecomputed collection ofsids;thischeckentailsajoinofSailorsand\nthecomputed collection ofsids,andinprinciple wehavethefullrangeofjoin\nmethods tochoosefrom.Forexample, ifthereisanindexonthesidfield\nofSailors,anindexnestedloopsjoinwiththecomputed collection ofsid\",as\ntheouterrelationandSailorsastheinneronemightbethemostefficient join\nmethod. However, inmanysystems, thequeryoptimizer isnotsmartenough\ntofindthisstrategy acommon approach istoalwaysdoanestedloopsjoin\ninwhichtheinnerrelation isthecollection ofsid\"computed fromthesubquery\n(andthis colle(~tion maynotbeindexed).\nThemotivation forthisapproach isthatitisasimplevariantofthetechnique\nusedtodealwithcondated ([neTicssuchasthefollowing versionoftheprevious\nquery:\nSELECT S.snallle", "539": "ATYVicalQ'lteTyOptim'izer 5()5\nFROM\n~lHERESailorsS\nEXISTS (SELECT*\nFROM Reserves R\nWHERE R.bid=103\nANDS.sid=R.sid)\nThisqueryiscorrelated-\"the tuplevariable Sfromthetop-level queryappears\ninthenestedsubquery.Therefore, wecannotevaluate thesubquery justonce.\nInthiscasethetypicalevaluation strategy istoevaluate thenestedsubquery\nforeachtupleofSailors.\nAnimportant pointtonoteaboutnestedqueriesisthatatypicaloptimizer\nislikelytodoapoorjob,because ofthelimitedapproach tonestedquery\noptimization. Thisishighlighted next:\n\u2022Inanestedquerywithcorrelation, thejoinmethod iseffectively index\nnestedloops,withtheinnerrelation typically asubquery(andtherefore\npotentially expensive tocompute). Thisapproach createstwodistinct\nproblems. First,thenestedsubqueryisevaluated onceperoutertuple;\nifthesamevalueappears inthecorrelation field(S.sidinourexample) of\nseveraloutertuples,thesamesubqueryisevaluated manytimes.Thesec\u00ad\nondproblem isthattheapproach tonestedsubqueriesisnotset-oriented.\nIneffect,ajoinisseenasascanoftheouterrelation withaselection on\ntheinnersubqueryforeachoutertuple.Thisprecludes consideration of\nalternative joinmethods, suchasasort-merge joinorahashjoin,that\ncouldleadtosuperior plans.\n\u2022Evenifindexnestedloopsistheappropriate joinmethod, nestedquery\nevaluation maybeinefficient. Forexample, ifthereisanindexonthesid\nfieldofReserves, agoodstrategy mightbetodoanindexnestedloopsjoin\nwithSailorsastheouterrelation andReserves &'3theinnerrelation and\napplytheselection onbidon-the-fly. However, thisoptionisnotconsidered\nwhenoptimizing theversionofthequerythatusesIN,becausethenested\nsubqueryisfullyevaluated asafirststep;thatis,Reserves tuplesthat\nmeetthebidselection areretrieved first.\n\u2022Opportunities forfindingagoodevaluation planmayalsobemissedbe\u00ad\ncauseoftheimplicitordering imposed bythenesting. Forexample, ifthere\nisanindex.onthesidfieldofSailors,anindexnestedloopsjoinwithRe\u00ad\nservesa,stheouterrelationandSailorsastheinneronemightbethemost\nefficient planforourexample correla,ted query.However, thisjoinordering\nisneverconsidered byanoptimizer.\nAnestedqueryoftenhasanequivalent querywithout nesting, andacorrelated\nqueryoftenhe1.<;anequivalent querywithout correlation. vVealreadysawcor-", "540": "506 CHAPTER ~5\nNested Queries: IBMDB2,Informix, Microsoft SQLServer,Orade8,\nandSybaseASEallusesomeversionofcorrelated evaluation tohandle\nnestedqueries, whichareanimportant partqftbeTPC-D benchmark;\nIBMandInformix support aversioninwhichtheresultsofsubqueries are\nstoredina'memo'tableandthesamesubquery isnotexecuted multiple\ntimes.AlltheseRDBMSs consider decqrrelation and\"flattening\" ofnested\nqueriesasanoption.Microsoft SQLServer,Oracle8andIBMDB2also\nuserewriting techniques, e.g.,MagicSets(seeChapter 24)orvariants, in\nconjunction withdecorrelation.\nrelatedanduncorrelated versions oftheexample nestedquery.Thereisalso\nanequivalent querywithoutnesting:\nSELECTS.sname\nFROM SailorsS,Reserves R\nWHERE S.sid=R.sidANDR.bid=103\nAtypicalSQLoptimizer islikelytofindamuchbetterevaluation strategy ifitis\ngiventheunnested or'decOlTelated' versionoftheexample querythanifitwere\ngiveneitherofthenestedversions ofthequery.Manycurrentoptimizers cannot\nrecognize theequivalence ofthesequeriesandtransform oneofthenested\nversions tothenonnested form.Thisis,unfortunately, uptotheeducated user.\nFromanefficiency standpoint, usersareadvisedtoconsider suchalternative\nformulations ofaquery.\nWeconclude ourdiscussion ofnestedqueriesbyobserving thattherecouldbe\nseverallevelsofnesting. Ingeneral, theapproach wesketched isextended by\nevaluating suchqueriesfromtheinnermost totheoutermost levels,inorder,in\ntheabsence ofcorrelation. Acorrelated subquery mustbeevaluated foreach\ncandidate tupleofthehigher-level (sub)querythatreferstoit.Thebasicidea\nistherefore similartothecaseofone-level nestedqueries;weomitthedetails.\n15.6THESYSTEM ROPTIMIZER\nCurrent relational queryoptimizers havebeengreatlyinfluenced bychoices\nmadeintheqesignofIBM'sSystemRqueryoptimizer. Important design\nchoicesintheSystemRoptimizer include:\n1.Theuseofstatistics aboutthedataba'3e instance toestiInate thecostofa\nqueryevaluation plan.\n2.Adecision toconsider onlyplanswithbinaryjoinsinwhichtheinner\nrelation isabaserelation (i.e.,notatelnporary relation). Thisheuristic", "541": "ATypicalQue7'yOptimizer' 507\nreducesthe(potentially verylarge)number ofalternative plansthatmust\nbeconsidered.\n3.Adecisiontofocusoptimization ontheclassofSQLquerieswithout nesting\nandtreatnestedqueriesinarelatively adhocway.\n4.Adecision nottoperform duplicate elimination forprojections (exceptas\nafinalstepinthequeryevaluation whenrequired byaDISTINCT clause).\n5.Amodelofcostthataccounted forCPUcostsaswellasI/Ocosts.\nOurdiscussion ofoptimization reflectsthesedesignchoices, exceptforthelast\npointinthepreceding list,whichweignoretoretainoursimplecostmodel\nbasedonthenumber ofpagel/Os.\n15.7OTHER APPROACHES TOQUERY OPTIMIZATION\nWehavedescribed queryoptimization basedonanexhaustive searchofalarge\nspaceofplansforagivenquery.Thespaceofallpossible plansgrowsrapidly\nwiththesizeofthequeryexpression, inparticular withrespecttothenumber\nofjoins,becausejoin-order optimization isacentralissue.Therefore, heuristics\nareusedtolimitthespaceofplansconsidered byanoptimizer. Awidelyused\nheuristic isthatonlyleft-deep plansareconsidered, whichworkswellformost\nqueries. However, oncethenumber ofjoinsbecomes greaterthanabout15,\nthecostofoptimization usingthisexhaustive approach becomes prohibitively\nhigh,evenifweconsider onlyleft-deep plans.\nSuchcomplex queries arebecoming important indecision-support environ\u00ad\nments,andotherapproaches toqueryoptimization havebeenproposed. These\nincluderule-based optimizers, whichuseasetofrulestoguidethegen\u00ad\nerationofcandidate plans,andrandomized plangeneration, whichuses\nprobabilistic algorithms suchassimulated annealing toexplorealargespaceof\nplansquickly,withareasonable likelihood offindingagoodplan.\nCurrent research inthisareaalsoinvolves techniques forestimating thesize\nofintermediate relations moreaccurately; parametric queryoptimization,\nwhichseekstofindgoodplansforagivenqueryforeachofseveraldifferent\nconditions thatmightbeencountered atrun-time; andmultiple-query opti\u00ad\nmization, inwhichtheoptimizer takesconcurrent execution ofseveralqueries\nintoaccount.\n15.8REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.", "542": "508 CHAPTER 15,\n\u2022\\VhatisanSQLqlleTJJblock?\\Vhyisitimportant inthecontext of query\noptimization? (Section 15.1)\n\u2022Describe howaqueryblockistranslated intoextended relational algebra.\nDescribe andmotivate theextensions torelational algebra. VVhyarea'Trx\nexpressions thefocusofanoptimizer? (Section 15.1)\n\u2022\\Vhatarethetwopartstoestimating thecostofaqueryplan?(Sec\u00ad\ntion15.2)\n\u2022Howistheresultsizeestimated fora(nrxexpression? Describe theuseof\nreduction factors,andexplainhowtheyarecalculated fordifferent kinds\nofselections? (Section 15.2.1)\n\u2022~Whatarehistograms? Howdotheyhelpincostestimation? Explain\nthedifferences between thedifferent kindsofhistograms, withparticular\nattention totheroleoffrequent datavalues.(Section 15.2.1)\n\u2022VVhenaretworelational algebraexpressions considered equivalent? Howis\nequivalence usedinqueryoptimization? Whatalgebraequivalences that\njustifythecommon optimizations ofpushing selections aheadofjoinsand\nre-ordering joinexpressions? (Section 15.3)\n\u2022Describe left-deep plansandexplainwhyoptimizers typically consider only\nsuchplans.(Section 15.4)\n\u2022Whatplansareconsidered for(sub)queries withasinglerelation? Of\nthese,whichplansareretained inthedynamic programming approach to\nenumerating left-deep plans?Discuss accessmethods andoutputorder\ninyouranswer. Inparticular, explain index-only plansandwhytheyare\nattractive. (Section 15.4)\n\u2022Explain howqueryplansaregenerated forquerieswithmultiple relations.\nDiscuss thespaceandtimecomplexity ofthedynamic programming ap\u00ad\nproach,andhowtheplangeneration processincorporates heuristics like\npushingselections andjoinordering. Howareindex-only plansformultiple\u00ad\nrelation queriesidentified? Howarepipelining opportunities identified?\n(Section 15.4)\n\u2022Howarenestedsubqueriesoptimized andevaluated? Discusscorrelated\nqueriesandtheadditional optimization challenges theypresent. \\Vhyare\nplansproduced fornestedqueriestypically ofpoorquality? VVhatisthe\nlessonforapplication programmers? (Section 15.5)\n\u2022Discusssomeoftheinfluential designchoicesmadeintheSystemRopti\u00ad\nmizer.(Section 15.6)\n\u2022Brieflysurveyoptimization techniques thatgobeyondthedynamic pro\u00ad\ngramming framework discussed inthischapter. (Section 15.7)", "543": "ATypicalQ'ueTyOphm'izeT\nEXERCISES\nExercise 15.1Brieflyanswerthefollowing questions:5q9\n1.Inthecontext ofqueryoptimization, whatisanSQLqueryblock?\n2.Definethetermredw:t'i.on factor.\n3.Describe asituation inwhichprojection shouldprecede selection inprocessing aproject\u00ad\nselectquery,anddescribe asituation wheretheopposite processing orderisbetter.\n(Assume thatduplicate elimination forprojection isdoneviasorting.)\n4.Ifthereareunclustered (secondary) B+treeindexes onbothR.aandS.b,thejoin\nR[Xla=bScouldbeprocessed bydoingasort-merge typeofjoin-without doingany\nsorting-by usingtheseindexes.\n(a)WouldthisbeagoodideaifRandSeachhasonlyonetupleperpageorwouldit\nbebettertoignoretheindexesandsortRandS?Explain.\n(b)WhatifRandSeachhavemanytuplesperpage?Again,explain.\n5.Explain theroleofinteresting ordersintheSystemRoptimizer.\nExercise 15.2Consider arelation withthisschema:\nErnployees(eid: integer, ename:string, sal:integer, title:string, age:integer)\nSuppose thatthefollowing indexes, allusingAlternative (2)fordataentries, exist:ahash\nindexoneid,aB+treeindexonsal,ahashindexonage,andaclustered B+treeindex\non(age,sal).EachEmployees recordis100byteslong,andyoucanassumethateachindex\ndataentryis20byteslong.TheEmployees relation contains 10,000pages.\n1.Consider eachofthefollowing selection conditions and,assuming thatthereduction\nfactor(RF)foreachtermthatmatches anindexis0.1,compute thecostofthemost\nselective accesspathforretrieving allEmployees tuplesthatsatisfythecondition:\n(a)sol>100\n(b)age.=25\n(c)age>20\n(d)eid=1,000\n(e)sal>2001\\age>30\n(f)sal>2001\\age=20\n(g)sal>2001\\title='CFO'\n(h)sal>200IIage>301\\hUe='CFO'\n2.Suppose that,foreachofthepreceding selection conditions, youwanttoretrieve the\naverage salaryofqualifying tuples.Foreachselection condition, describe theleastex\u00ad\npensiveevalwltion method andstateitscost.\n:3.Suppose that,foreachofthepreceding selection conditions, youwanttocompute theav-\u00ad\neragesalaryforeachagegroup.Foreachselection condition, describe theleastexpensive\nevaluation method andstateitscost.\n4.Suppose that,foreachofthepreceding selection conditions, youwanttocompute the\naverage ageforeachsa/level (Le.)groupbysal).Foreachselection condition, describe\ntheleastexpensive evaluation method andstateitscost.", "544": "510 CHAPTER ~5\n5.Foreachofthefollowing selection conditions, describe thebestevaluation method:\n(a)sal>200Vage=20\n(b)sal>200Vtitle='CFO'\n(c)title='CFO' 1\\ename='Joe'\nExercise 15.3Foreachofthefollowing SQLqueries, foreachrelation involved, listthe\nattributes thatmustbeexamined tocompute theanswer. Allqueriesrefertothefollowing\nrelations:\nEmp(eid: integer, did:integer, sal:integer, hobby:char(20))\nDept(did:integer, dname:char(20), floor:integer, budget:real)\n1.SELECT COUNT(*) FROMEmpE,DeptDWHEREE.did=D.did\n2.SELECT MAX(E.sal) FROMEmpE,DeptDWHEREE.did=D.did\n3.SELECT MAX(E.sal) FROMEmpE,DeptDWHEREE.did=D.didANDD.floor= 5\n4.SELECTE.did,COUNT(*) FROMEmpE,DeptDWHEREE.did=D.didGROUP BYD.did\n5.SELECT D.floor, AVG(D.budget) FROMDeptDGROUP BYD.tloor HAVING COUNT(*)>2\n6.SELECT D.tloor, AVG(D.budget) FROMDeptDGROUPBYD.floor ORDERBYD.floor\nExercise 15.4Youaregiventhefollowing information:\nExecutives hasattributes ename,title,dname,andaddress; allarestringfieldsof\nthesamelength.\nTheenameattribute isacandidate key.\nTherelation contains 10,000pages.\nThereare10bufferpages.\n1.Consider thefollowing query:\nSELECTE.title,E.ename FROMExecutives EWHEREE.title='CFO'\nAssumethatonly10%ofExecutives tuplesmeettheselection condition.\n(a)Suppose thataclustered B+treeindexontitleis(theonlyindex)available. What\nisthecostofthebestplan?(Inthisandsubsequent questions, besuretodescribe\ntheplanyouhaveinmind.)\n(b)Suppose thatanunclustered B+treeindexontitleis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(c)Suppose thataclustered B+treeindexonenarneis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(d)Suppo$e thataclustered B+treeindexonaddressis(theonlyindex)available.\nWhatisthecostofthebestpian?\n(e)Suppose thataclustered B+treeindexon(ename, title)is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n2.Suppose thatthequeryisasfollows:\nSELECTE.ename FROMExecutives EWHEREE.title='CFO' ANDE.dname='Toy'", "545": "AT..7JpicalQueryOpl'irnizer 51J\nAssume thatonly10%ofExecutives tuplesIIleetthecondition E.title='CFO',only\n10%meetE.dname ='Toy',andthatonly5%meetbothconditions.\n(a)Suppose thataclustered B+treeindexontitleis(theonlyindex)available. What\nisthecostofthebestplan?\n(b)Suppose thataclustered B+treeindexondnameis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(c)Suppose thataclustered B+treeindexon(title,dname) is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n(d)Suppose thataclustered B+treeindexon(title,ename) is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n(e)Suppose thataclustered B+treeindexon(dname, title,ename)is(theonlyindex)\navailable. Whatisthecostofthebestplan?\n(f)Suppose thataclustered B+treeindexon(ename, title,dname) is(theonlyindex)\navailable. Whatisthecostofthebestplan?\n3.Suppose thatthequeryisasfollows:\nSELECT E.title, COUNT(*) FROMExecutives EGROUPBYE.title\n(a)Suppose thataclustered B+treeindexontitleis(theonlyindex)available. What\nisthecostofthebestplan?\n(b)Suppose thatanunclustered B+treeindexont'ltleis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(c)Suppose thataclustered B+treeindexonenameis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(d)Suppose thataclustered B+treeindexon(ename, title)is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n(e)Suppose thataclustered B+treeindexon(title,ename) is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n4.Suppose thatthequeryisasfollows:\nSELECTE.title, COUNT(*) FROMExecutives E\nWHEREE.dname>'W%'GROUPBYE.title\nAssumethatonly10%ofExecutives tuplesmeettheselection condition.\n(a)Suppose thataclustered B+treeindexontitleis(theonlyindex)available. What\nisthecostofthebestplan?Ifanadditional index(onanysearchkeyyouwant)is\navailable, wouldithelpproduce abetterplan?\n(b)Suppose thatanunclustered B+treeindex OIltitleis(theonlyindex)available.\nWhatisthecostofthebestplan?\n(c)Suppose. thataclustered B+treeindexondnameis(theonlyindex)available.\nWhatisthecostofthebestplan?Ifanadditional index(onanysearchkeyyou\nwant)isavailable, wouldithelptoproduce abetterplan'?\n(d)Suppose thataclustered B+treeindexon(dname, title)is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?\n(e)Suppose thataclustered B+treeindexon(title,dname) is(theonlyindex)avail\u00ad\nable.Whatisthecostofthebestplan?", "546": ",512 CHAPTER ~5\nExercise 15.5Consider thequery7rA.B,C,D(R CXlA=CS). Suppose thattheprojection routine\nisbasedonsortingandissmartenoughtoeliminate allbutthedesiredattributes duringthe\ninitialpassofthesortandalsototossoutduplicate tupleson-the-fly whilesorting, thus\neliminating twopotential extrapa.'ises.Finally, assumethatyouknowthefollowing:\nRis10pageslong,andRtuplesareaoobyteslong.\nSis100pageslong,andStuplesare500byteslong.\nCisakeyforS,andAisakeyforR.\nThepagesizeis1024bytes.\nEachStuplejoinswithexactlyoneRtuple.\nThecombined sizeofattributes A,B,G,andDis450bytes.\nAandBareinRandhaveacombined sizeof200bytes;CandDareinS.\nL'''''hatisthecostofwritingoutthefinalresult? (Asusual,youshouldignorethiscost\ninanswering subsequent questions.)\n2.Suppose thatthreebufferpagesareavailable, andtheonlyjoinmethodthatisimple\u00ad\nmented issimple(page-oriented) nestedloops.\n(a)Compute thecostofdoingtheprojection followed bythejoin.\n(b)Compute thecostofdoingthejoinfollowed bytheprojection.\n(c)Compute thecostofdoingthejoinfirstandthentheprojection on-the-fly.\n(d)Wouldyouranswers changeif11bufferpageswereavailable?\nExercise 15.6Brieflyanswerthefollowing questions:\nLExplain theroleofrelational algebraequivalences intheSystemRoptimizer.\n2.Consider arelational algebra expression oftheformUc(-lq(RXS)).Suppose thatthe\nequivalent expression withselections andprojections pushedasmuchaspossible, taking\nintoaccollnt onlyrelational algebra equivalences, isinoneofthefollowing forms.In\neachcasegiveanillustrative example oftheselection conditions andtheprojection Iitits\n(c,I,el,11,etc.).\n(a)Equivalent mm:imally pushedform:rrl1(u,dR) XS),\n(b)Equivalent mal:imally pushedform:rrll(ucl(R) xUc2(S)).\n(c)Equivalent maximally Tn/shed f07'771: CTe(rrll(n12(R)x8)).\n(d)Equivalent maximally pushedfONT!: Uc1(rrll(u,drrdR)) x8)).\n(e)Equivalent ma:rimally pushed fO'l'17L' Ucl(nil(rr12(CTC2(R))xS)).\n(f)Equi~}(tlent rnaximally pushedfOT1n: 71\"1(0'\"1(71\"1l(71\"12(Uc2(R))x8))).\nExercise 15.7Consider thefollowing relational schemaandSQLquery.Theschemacap\u00ad\nturetiinformation aboutemployees, departments, andcompany finances (organized onaper\ndepartment basis).\nEmp(eid: integer, did:integer, sal:integer, hobby:char(20))\nDept(did: integer, dn07ne:char(20), floor:integer, phone:char(10))\nFinance( did:integer, budget:real,sales:real,e:r:penses: real)\nConsider t.hefollowing query:", "547": "ATypicalQ'llcryOpi'irnizer 51:?\nSELECT\nFRON\nWHERED.dname, F.budget\nEmpE,DeptD,Finance F\nE.did=D.did ANDD.did=F.did ANDD.floor=l\nANDE.sal ~59000ANDE.hobby ='yodeling'\n1.Identify arelational algebratree(orarelational algebra expression ifyouprefer)that\nreflectstheorderofoperations adecentqueryoptimizer wouldchoose.\n2.Listthejoinorders(i.e.,ordersinwhichpairsofrelations canbejoinedtocompute the\nqueryresult)thatarelational queryoptimizer willconsider. (Assume thattheoptimizer\nfollowstheheuristic ofneverconsidering plansthatrequirethecomputation ofcross\u00ad\nproducts.) Brieflyexplainhowyouarrivedatyourlist.\n3.Suppose thatthefollowing aclditional information isavailable: lJnclustered B+tree\nindexesexistonErnp.did, Ernp.sal, Dept.floor, Dept.did,andFinance. did.Thesystem's\nstatistics indicate thatemployee salaries rangefrom10,000to60,000,employees enjoy\n200different hobbies, andthecompany ownstwofloorsinthebuilding. Thereare\natotalof50,000employees and5,000departments (eachwithcorresponding financial\ninformation) inthedatabase. TheDBMSusedbythecompany hasjustonejoinmethod\navailable, indexnestedloops.\n(a)Foreachofthequery's baserelations (Emp,Dept,andFinance) estimate the\nnumber oftuplesthatwouldbeinitially selected fromthatrelation ifallofthe\nnon-join predicates onthatrelation wereappliedtoitbeforeanyjoinprocessing\nbegins.\n(b)Givenyouranswertothepreceding question, whichofthejoinordersconsidered\nbytheoptimizer hasthelowestestimated cost?\nExercise 15.8Consider thefollowing relational schemaandSQLquery:\nSuppliers(sid: integer, snarne:char(20), city:char(20\u00bb)\nSupply(sid:integer, pid:integer)\nParts(pid: integer, pnarne:char(20),price:real)\nSELECT\nFROM\nWHERES.sname, P.pname\nSuppliers S,PartsP,SupplyY\nS.sid=Y.sidANDY.pid=P.pidAND\nS.city='Madison' ANDP.price:s:1,000\n1.Whatinformation abollttheserelations doesthequeryoptimizer needtoselectagood\nqueryexecution planforthegivenquery?\n2.Howmanydifferent joinorders,assuming thatcross-products aredisallowed, doesa\nSystem R.stylequeryoptimizer consider whcndeciding howtoprocessthegivenquery?\nListeachofthcsejoinorders.\n3.\\\\-Thatindexes'mightbeofhelpinprocessing thisquery?Explain briefly.\n4.HowdoesaddingDISTINCT totheSELECT clauseaffecttheplansproduced?\n5.Howdoesadding ORDER BYsnametothequeryaffecttheplansproduced?\nG.Howdoesadding GROUP BY.marnetothequeryaffecttheplansproduced?\nExercise 15.9Consider thefollowing scenario:", "548": "514\nEmp(eid:integer, sal:integer, age:real,did:integer)\nDept(did:integer, pTOJid:integer, budget:real,status:char(10))\nProj(Tlf\"ojid: integer, code:integer, report:varchar)CHAPTER 15\nAssume thateachEmprecordis20byteslong,eachDeptrecordis40byteslong,andeach\nProjrecordis2000byteslongonaverage. Thereare20,000tuplesinEmp,5000tuplesin\nDept(notethatdidisnotakey),and1000tuplesinProj.Eachdepartment, identified by\ndid,has10projects onaverage. Thefilesystemsupports 4000bytepages,and12buffer\npagesareavailable. Allfollowing questions arebasedonthisinformation. Youcanassume\nuniform distribution ofvalues.Stateanyadditional assumptions. Thecostmetrictouseis\nthenumberofpage1/005.Ignorethecostofwritingoutthefinalresult.\n1.Consider thefollowing twoqueries: \"Findallemployees withage=30\"and\"Findall\nprojects withcode=20,\"Assume thatthenumber ofqualifying tuplesisthesame\nineachcase.Ifyouarebuilding indexesontheselected attributes tospeedupthese\nqueries, forwhichqueryisaclustered index(incomparison toanunclustered index)more\nimportant?\n2.Consider thefollowing query:\"Findallemployees withage>30.\"Assumethatthereis\nanunclustered indexonage.Letthenumber ofqualifying tuplesbeN.Forwhatvalues\nofNisasequential scancheaperthanusingtheindex?\n3.Consider thefollowing query:\nSELECT*\nFROMEmpE,DeptD\nWHEREE.did=D.did\n(a)Suppose thatthereisaclustered hashindexondidonEmp.Listalltheplansthat\nareconsidered andidentifytheplanwiththelowestestimated cost.\n(b)Assumethatbothrelations aresortedonthejoincolumn. Lis.talltheplansthat\nareconsidered andshowtheplanwiththelowestestimated cost.\n(c)Suppose thatthereisaclustered B+treeindexondidonEmpandDeptissorted\nondid.Listalltheplansthatareconsidered andidentifytheplanwiththelowest\nestimated cost.\n4.Consider thefollowing query:\nSELECT\nFROM\nWHERE\nGROUPBYD.dicl,COUNT(*)\nDeptD,ProjP\nD.projid=P.projid\nD.clid\n(a)Suppose thatnoindexesareavailable. Showtheplanwiththelowestestimated\ncost.\n(b)Ifthereisahashindex OIlP.projid whatistheplanwithlowestestimated cost?\n(c:)IfthereisahashindexonD.pmjid whatistheplanwithlowestestimated cost?\n(d)IfthereisahashindexonD-JiTojid andP.projid whatistheplanwithlowest\nestimated cost?\n(e)Suppose thatthereisaclustered B+treeindexonD.didandahashindexon\nP.]Jmjid. Showtheplanwiththelowestestimated cost.\n(f)Suppose thatthereisaclustered B+treeindexonD.did,alUh<:hindex OIlD.]JT'O)id,\nandahashindexonP.pmjid. Showtheplanwiththelowestestimated cost.", "549": "ATypical Q'UeT~lJOpti'rnizcT 51i)\n(g)Suppose thatthereisaclustered B+treeindexon(D.did,D.pmjidj andaha..,h\nindexonP.pmjid. Showtheplanwiththelowestestimated cost.\n(h)Suppose thatthereisaclustered B+treeindexon(D.pmjid, D.did>andah&<;h\nindexonP.pmjid. Showtheplanwiththelowestestimated cost.\n5.Consider thefollowing query:\nSELECT\nFROM\nWHERE\nGROUPBYD.did,COUNT(*)\nDeptD,ProjP\nD.projid=P.projid ANDD.budget>99000\nD.did\nAssumethatdepartment budgets areuniformly distributed intherange0to100,000.\n(a)Showtheplanwithlowestestimated costifnoindexesareavailable.\n(b)IfthereisahashindexonP.pmjid showtheplanwithlowestestimated cost.\n(c)IfthereisahashindexonD.budgetshowtheplanwithlowestestimated cost.\n(d)IfthereisahashindexonD.pmjid andD.budget showtheplanwithlowest esti~\nmatedcost.\n(e)Suppose thatthereisaclustered B+treeindexon(D.did,D.budget) andahash\nindexonP.projid. Showtheplanwiththelowestestimated cost.\n(f)Suppose thereisaclustered B+treeindexonD.did,ahashindexonD.b1ldget,\nandahashindexonP.projid. Showtheplanwiththelowestestimated cost.\n(g)Suppose thereisaclustered B+treeindexon(D.did,D.budgct, D.projid> anda\nhashindexonP.pmjid. Showtheplanwiththelowestestimated cost.\n(h)Suppose thereisaclustered B+treeindexon(D.did,D.projid, D.budget) anda\nhashindexonP.pmjid. Showtheplanwiththelowestestimated cost.\n6.Consider thefollowing query:\nSELECT\nFROM\nWHEREE.eid,D.did,P.projid\nEmpE,DeptD,ProjP\nE.sal=50,000 ANDD.budget>20,000\nE.did=D.did ANDD.projid=P.projid\nAssumethatemployee salariesareuniformly distributed intherange10,009to110,008\nandthatprojectbudgets areuniformly distributed intherange10,000to30,000.There\nisaclustered indexonsalforEmp,aclustered indexondidforDept,andaclustered\nindexonpmjidforProj.\n(a)Listalltheone-relation, two--relation, and three~relation subplans considered in\noptimizing thisquery.\n(b) Show theplanwiththelowestestimated costforthisquery.\n(c)IftheindexonProjwel'(\"unclustered, wouldthecostofthepreceding planchange\nsubstant:ially? WhatiftheindexonEmporonDeptwereunclllstered?", "550": "516\nBIBLIOGRAPHIC NOTESCHAPTER 15\nQueryoptimization iscriticalinarelational DBMS,andithastherefore beenextensivElly\nstudied. 'Veconcentrate inthischapter ontheapproach takeninSystem R,asdescribed\nin[668],although ourdiscussion incorporates subsequent refinements totheapproach. [78,1]\ndescribes queryoptimization inIngres.Goodsurveyscanbefoundin[41OJand[399J.[434]\ncontains severalarticlesonqueryprocessing andoptimization.\nFromatheoretical standpoint, [155]showsthatdetermining whether twoconjunctive q'ueT'ies\n(queries involving onlyselections, projections, andcross-products) areequivalent isanNP\u00ad\ncomplete problem; ifrelations aremv,ltisets, ratherthansetsoftuples,itisnotknownwhether\ntheproblem isdecidable, although itisIT:zPhard.Theequivalence problem isshowntobe\ndecidable forqueriesinvolving selections, projections, cross-products, andunionsin[643];\nsurprisingly, thisproblem isundecidable ifrelations aremultisets [404].Equivalence ofcon\u00ad\njunctive queriesinthepresence ofintegrity constraints isstudiedin[30],andequivalence of\nconjunctive querieswithinequality selections isstudiedin[440].\nAnimportant problem inqueryoptimization isestimating thesizeoftheresultofaquery\nexpression. Approaches basedonsampling areexplored in[352,353,384,481,569].The\nuseofdetailed statistics, intheformofhistograms, toestimate sizeisstudied in[405,558,\n598].Unlesscareisexercised, errorsinsizeestimation canquicklypropagate andmakecost\nestimates worthless forexpressions withseveraloperators, Thisproblem isexamined in[400].\n[512]surveysseveraltechniques forestimating resultsizesandcorrelations between valuesin\nrelations. Thereareanumber ofotherpapersinthisarea;forexample, [26,170,594,725],\nandourlistisfarfromcomplete,\nSemantic qneryoptimization isbasedontransformations thatpreserve equivalence onlywhen\ncertainintegrity constraints hold.Theideawasintroduced in[437]anddeveloped furtherin\n[148,682, 688].\nInrecentyears,therehasbeenincreasing interest incomplex queriesfordecision support\napplications. Optimization ofnestedSQLqueriesisdiscussed in[298,426,/130,557,760].\nTheuseoftheMagicSetstechnique foroptimizing SQLqueriesisstudied in[55:3,554,555,\n670,67:3].Rule-based queryoptimizers arestudiecl in[287,326,490,539,596].Finding it\ngoodjoinorderforquerieswithitlargenumber ofjoinsisstudied in[401,402, 453, 726].\nOptimization ofmultiple queriesforsimultaneous execution isconsiderecl in[585,633,669].\nDetermining queryplansatrun-time isdiscussed in[327,403].Re-optimization ofrunning\nqueriesbasedonstatistics gathered duringqueryexecution isconsidered byKabraandDeWitt\n[413].Probabilistic optimization ofqueriesisproposed in[183,229].", "551": "PARTV\nTRANSACTION MANAGEMENT", "552": "1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1", "553": "16\nOVERVIEW OFTRANSACTION\nMANAGEMENT\n...Whatfourproperties oftransactions doesaDBMSguarantee?\n...WhydoesaDBMSinterleave transactions?\n...Whatisthecorrectness criterion forinterleaved execution?\n...Whatkindsofanomalies caninterleaving transactions cause?\n...HowdoesaDBMSuselockstoensurecorrectinterleavings?\n...Whatistheimpactoflockingonperformance?\n...WhatSQLcommands allowprogrammers toselecttransaction char\u00ad\nacteristics andreducelockingoverhead?\n...HowdoesaDBMSguarantee transaction atomicity andrecovery from\nsystemcrashes?\n..Keyconcepts: ACIDproperties, atomicity, consistency, isolation,\ndurability; schedules, serializability, recoverability, avoiding cascading\naborts;anomalies, dirtyreads,unrepeatable reads,lostupdates; lock\u00ad\ningprotocols, exclusive andsharedlocks,StrictTwo-Phase Locking;\nlockingperformance, thrashing, hotspots;SQLtransaction charac\u00ad\nteristics, savepoints, rollbacks, phantoms, accessmode,isolation level;\ntransaction manager, recovery manager, log,systemcrash,mediafail\u00ad\nure;stealingframes,forcingpages;recovery phases,analysis, redoand\nundo.\n---~~--_ ....~------_._~---._._._ ..\u2022_----_ ....\nIalwayssay,keepadiaryandsomeday it'11keepyou.\n\u00b7fvlaeWest\n519", "554": "520 CHAPTER 16,\nInthischapter, wecovertheconcept ofalm'nsacl\u00a3on, 'iNhichisthefounda~\ntionforconcurrent execution andrecovery fromsystemfailureinaDBMS.A\ntransaction isdefinedasanyone e;recut\u00a3on ofauserprogram inaDBMSand\ndiffersfromanexecution ofaprogram outsidetheDBMS(e.g.,a Cprogram\nexecuting onUnix)inimportant ways.(Executing thesameprogram several\ntimesgenerates severaltransactions.)\nForperformance reasons, aDBJ'vlS lul.'>tointerleave theactionsofseveraltrans\u00ad\nactions. (vVemotivate interleaving oftransactions indetailinSection16.3.1.)\nHowever, togiveusersasimplewaytounderstand theeffectofrunning their\nprograms, theinterleaving isdonecarefully toensurethattheresultofacon\u00ad\ncurrentexecution oftransactions isnonetheless equivalent (initseffectonthe\ndatabase) tosomeserial,orone-at-a-time, execution ofthesamesetoftransac\u00ad\ntions,HowtheDBMShandlesconcurrent executions isanimportant a\"spectof\ntransaction management andthesubjectofconcurrency control. Acloselyr&\u00ad\nlatedissueishowtheDBMShandlespartialtransactions, ortransactions that\nareinterrupted beforetheyruntonormalcompletion, TheDBMSensuresthat\nthechanges madebysuchpartialtransactions arenotseenbyothertransac\u00ad\ntions.Howthisisachieved isthesubjectofcrashr'ecovery. Inthischapter,\nweprovideabroadintroduction toconcurrency controlandcrashrecovery in\na.DBMS,Thedetailsaredeveloped furtherinthenexttwochapters.\nInSection16.1,wediscussfourfundamental properties ofdatabase transactions\nandhowtheDBMSensurestheseproperties. InSection16.2,wepresentanab\u00ad\nstractwayofdescribing aninterleaved execution ofseveraltransactions, called\naschedule. InSection16,3,wediscussvariousproblems thatcanarisedueto\ninterleaved execution, \\Veintroduce lock-based concurrency control,themost\nwidelyusedapproach, inSection16.4.Wediscussperformance issuesassoci\u00ad\natedwithlock-ba'ied concurrency controlinSection16.5.vVeconsider locking\nandtransaction properties inthecontextofSQLinSection16.6,Finally, in\nSection16.7,wepresentanoverview ofhowaclatabase systemrecovers from\ncrashesandwhatstepsaretakenduringnormalexecution tosupport crash\nrecovery.\n16.1THEACIDPROPERTIES\nvVeintroduced theconcept ofdatabase trans;:Lctions inSection1.7,Toreca\u00ad\npitulate briefly,atransaction isanexecution ofauserprogram, seenbythe\nDBMSasaseriesofreadandwriteoperations.\nADBJ\\iISmustensurefourimportant properties oftransactions tomaintain\ndatainthefaceofconcurrent a.ccessandsystemfailures:", "555": "Overview ofTransaction Alanagernent 521\n1.Usersshouldbeabletoregardtheexecution ofeachtransaction asatomic:\nEitherallactionsarecarriedoutornoneare.Usersshouldnothaveto\nworryabouttheeffectofincomplete transactions (say,whenasystemcrash\noccurs).\n2.Eachtransaction, runbyitselfwithnoconcurrent execution ofothertrans\u00ad\nactions, lnustpreserve theconsistency ofthedatab&c;e. TheDBMSas\u00ad\nsumesthatconsistency holdsforeachtransaction. Ensuring thisproperty\nofatransaction istheresponsibility oftheuser.\n3.Usersshouldbeabletounderstand atransaction without considering the\neffectofotherconcurrently executing transactions, eveniftheDBMSin\u00ad\nterleaves theactionsofseveraltransactions forperformance reasons. This\nproperty issometimes referred to&'3isolation: Transactions areisolated,\norprotected, fromtheeffectsofconcurrently scheduling othertransactions.\n4.OncetheDBMSinformstheuserthatatransaction hasbeensuccessfully\ncompleted, itseffectsshouldpersistevenifthesystemcrashesbeforeall\nitschanges arereflected ondisk.Thisproperty iscalleddurability.\nTheacronym ACIDissometimes usedtorefertothesefourproperties oftrans\u00ad\nactions: atomicity, consistency, isolation anddurability. Wenowconsider how\neachoftheseproperties isensured inaDBMS.\n16.1.1Consistency andIsolation\nUsersareresponsible forensuring transaction consistency. Thatis,theuser\nwhosubmits atransaction mustensurethat,whenruntocompletion byitself\nagainsta'consistent' database instance, thetransaction willleavethedataba.,se\nina'consistent' state.Forexample, theusermay(naturally) havetheconsis\u00ad\ntencycriterion thatfundtransfers between bankaccounts shouldnotchange\nthetotalamount ofmoneyintheaccounts. Totransfer moneyfromoneac\u00ad\ncounttoanother, atransaction mustdebitoneaccount, temporarily leavingthe\ndatabase inconsistent inaglobalsense,eventhoughthenewaccount balance\nmaysatisfyanyintegrity constraints withrespecttotherangeofacceptable\naccount balances. Theuser'snotionofaconsistent database ispreserved when\nthesecondaccount iscredited withthetransferred amount.Ifafaultytrans\u00ad\nferprogram alwayscreditsthesecondaccount withonedollarlessthanthe\nalllount debited frOlllthefirstaccount, theDBMScannotbeexpected tode\u00ad\ntectinconsistencies duetosucherrorsintheuserprogram's logic.\nTheisolation property isensured byguaranteeing that,eventhoughactions\nofseveraltransactions rnightbeinterleaved, theneteffectisidentical toex\u00ad\necutingalltransactions oneaftertheotherinsorneserialorder.(vVediscuss", "556": "522 CHAPTER 16~\nhm'lltheDBMSimplements thisguarantee inSection16.4.)Forexample, if\ntwotransactions T1andT2areexecuted concurrently, theneteffectisguar\u00ad\nanteedtobeequivalent toexecuting (allof)T1followed byexecuting T2or\nexecuting T2followed byexecuting Tl.(TheDBIvISprovides noguarantees\naboutwhichoftheseordersiseffectively chosen.)Ifeachtransaction mapsa\nconsistent database instance toanother consistent database instance, execut\u00ad\ningseveraltransactions oneaftertheother(onaconsistent initialdatabase\ninstance) resultsinaconsistent finaldatabase instance.\nDatabase consistency istheproperty thateverytransaction seesaconsistent\ndatabase instance. Database consistency followsfromtransaction atomicity,\nisolation, andtransaction consistency. Next,wediscusshowatomicity and\ndurability areguaranteed inaDBMS.\n16.1.2Atomicity andDurability\nTransactions canbeincomplete forthreekindsofreasons. First,atransaction\ncanbeaborted, orterminated unsuccessfully, bytheDBMSbecause some\nanomaly arisesduringexecution. Ifatransaction isaborted bytheDBMSfor\nSOlneinternalreason,itisautomatically restarted andexecuted anew.Second,\nthesystemmaycrash(e.g.,becausethepowersupplyisinterrupted) whileone\normoretransactions areinprogress. Third,atransaction mayencounter an\nunexpected situation (forexample, readanunexpected datavalueorbeunable\ntoaccesssomedisk)anddecidetoabort(i.e.,terminate itself).\nOfcourse,sinceusersthinkoftransactions &<;beingatomic,atransaction that\nisinterrupted inthemiddlemayleavethedatabase inaninconsistent state.\nTherefore, aDBMSmustfindawaytoremovetheeffectsofpartialtransactions\nfromthedatabase. Thatis,itmustensuretransaction atomicity: Eitherallofa\ntransaction's actionsarecarriedoutornoneare.ADBMSensurestransaction\natomicity byvindoingtheactionsofincomplete transactions. Thismeansthat\nuserscanignoreincomplete transactions inthinking abouthowthedatabase is\nmodified bytransactions overtime.Tobeabletodothis,theDBMSmaintains\narecord,calledthelog.ofallwritestothedatabase. Thelogisalsousedto\nensuredurability: Ifthesystemcrashesbeforethechangesmadebyacompleted\ntransaction arewrittentodisk,thelogisusedtoremember andrestorethese\nchanges when th~systenlrestarts.\nTheDBMScomponent thatensuresatomicity anddurability, calledther'ec;ov\u00ad\ncryrnanagcr', isdiscussed furtherinSection16.7.", "557": "Overview ofTransaction, A1anagement\n16.2TRANSACTIONS ANDSCHEDULES\nAtransaction isseenbytheDBMSa'laseries,orlist,ofactions. Theactions\nthatcanbeexecuted byatransaction includereadsandwritesofdatabase\nobjects. To keep ournotation simple,wea'Jsumethatanobject0isalways\nreadintoaprogram variable thatisalsonamedO.'Necantherefore denote\ntheactionofatransaction Treadinganobject0asRT(O);similarly, wecan\ndenotewritingasHTT(O). Whenthetransaction Tisclearfromthecontext,\nweomitthesubscript.\nInaddition toreadingandwriting, eachtransaction mustspecifyasitsfinal\nactioneithercommit (i.e.,complete successfully) orabort(i.e.,terminate\nandundoalltheactionscarriedoutthusfar).AbortTdenotestheactionofT\naborting, andCommitT denotesTcommitting.\nWemaketwoimportant assumptions:\n1.Transactions interact witheachotheronlyviadataba'Je readandwrite\noperations; forexample, theyarenotallowedtoexchange messages.\n2.Adatabase isafiJ;edcollection ofindependent objects. Whenobjectsare\naddedtoordeletedfromadatabase ortherearerelationships between\ndatabase objectsthatwewanttoexploitforperformance, someadditional\nissuesarise.\nIfthefirstassumption isviolated, theDBMShasnowaytodetectorprevent\ninconsistencies causebysuchexternal interactions between transactions, andit\nisuptothewriteroftheapplication toensurethattheprogram iswell-behaved.\nWerelaxthesecondassumption inSection16.6.2.\nAschedule isalistofactions (reading, writing, aborting, orcommitting)\nfromasetoftransactions, andtheorderinwhichtwoactionsofatransaction\nTappearinaschedule mustbethesameastheorderinwhichtheyappearinT.\nIntuitively, aschedule represents anactualorpotential execution sequence. For\nexample, theschedule inFigure16.1showsanexecution orderforactionsoftwo\ntransactions T1andT2.\\eVemoveforward intimeaswegodownfromonerow\ntothenext.\\Veemphasize thataschedule describes theactionsoftransactions\nasseenbytheDBMS.Inaddition totheseactions, atransaction rnaycarryout\notheractions, suchasreadingorwritingfromoperating systemfiles,evaluating\narithmetic expressions, andsoon;however, wea:ssumethattheseactionsdo\nnotaffectothertransactions; thatis,theeffectofatransaction onanother\ntransaction canbeunderstood solelyintermsofthecornmon database objects\nthattheyreadandwrite.", "558": "524\nT1T2\nR(A)\nHl(A)\nR(B)\nIV(B)\nR(C)\nW\"(C)\nFigure 16.1ASchedule Involving TwoTransactionsCHAPTER 16\nNotethattheschedule inFigure16.1doesnotcontainanabortorcommitac\u00ad\ntionforeithertransaction. Aschedule thatcontains eitheranabortoracommit\nforeachtransaction whoseactionsarelistedinitiscalledacomplete sched\u00ad\nule.Acomplete schedule mustcontain alltheactionsofeverytransaction\nthatappears init.Iftheactionsofdifferent transactions arenotinterleaved\u00ad\nthatis,transactions areexecuted fromstarttofinish,onebyone-we callthe\nschedule aserialschedule.\n16.3CONCURRENT EXECUTION OFTRANSACTIONS\nNowthatwehaveintroduced theconcept ofaschedule, wehaveaconvenient\nwaytodescribe interleaved executions oftransactions. TheDBMSinterleaves\ntheactionsofdifferent transactions toimprove performance, butnotallinter\u00ad\nleavings shouldbeallowed. Inthissection, weconsider whatinterleavings, or\nschedules, aDBMSshouldallow.\n16.3.1Motivation forConcurrent Execution\nTheschedule showninFigure16.1represents aninterleaved execution ofthe\ntwotransactions. Ensuring transaction isolation whilepermitting suchconcur\u00b7\u00b7\nrentexecution isdifficult lnltnecessary forperformance reasons. First,while\nonetransa.etion iswaiting forapagetobereadinfromdisk,theCPUcan\nprocessanother transaction. ThisisbecauseI/Oactivity canbedoneinpar\u00ad\nallelwithCPUactivity inacomputer. Overlapping I/OandCPUactivity\nreducestheamountoftimedisksandprocessors areidleandincreases system\nthroughput (theaveragenumberoftransactions completed inagiventime).\nSecond, interleaved execution ofashorttransaction withalongtransaction\nusuallyallowstheshorttransaction tocomplete quickly. Inserialexecution,\nashorttransaction couldgetstuckbehindalongtransaction, leadingtoun\u00ad\npredictable delaysinresponse time,oraverage timetakentocomplete a\ntransaction.", "559": "01)eruiew ofTransaction A!anagf'rnent\n16.3.2SerializabHity\nAserializable schedule overasetSofcormnitted transactions isaschedule\nwhoseeffectonanyconsistent database instance isguaranteed tobeidentical\ntothatofsomecomplete serialschedule overS.Thatis,thedataba..<;e instance\nthatresultsfromexecuting thegivenschedule isidentical tothedatabase in\u00ad\nstancethatresultsfrOlIlexecuting thetransactions insomeserialorder. 1\nAsanexample, theschedule showninFigure16.2isserializable. Eventhough\ntheactionsofT1andT2areinterleaved, theresultofthisschedule isequivalent\ntorunningT1(initsentirety) andthenrunningT2.Intuitively, T1'sreadand\nwriteofBisnotinfluenced byT2'sactionsonA,andtheneteffectisthesame\niftheseactiollsare'swapped' toobtaintheserialschedule Tl;T2.\nTl T2\nR(A)\nvV(A)\nR(A)\nW(A)\nR(B)\nvV(B)\nR(B)\nW(B)\nCommit\nCommit\nFigure16.2ASerializable Schedule\nExecuting transactions seriallyindifferent ordersmayproduce different results,\nbutallarepresumed tobeacceptable: theDBMSmakesnoguarantees ahout\nwhichofthemwillbetheoutcome ofaninterleaved execution. Toseethis,\nnotethatthetwoexample transactions fromFigure16.2canbeinterleaved a.s\nshowninFigure16.:3.Thisschedule, alsoserializable, isequivalent totheserial\nschedule T2;Tl.IfT1andT2aresubmitted concurrently toaDBMS,either\noftheseschedules (amongothers)couldbechosen.\nThepreceding definition ofaserializable schedule doesnotcoverthecaseof\nschedules containing aborted transactions. Weextendthedefinition ofserial\u00ad\nizableschedules tocoveraborted transactions inSection16.3.4.\nllfatransaction printsavaluetothescreen,this'effed'isnotdirectly captured inthedatabase.\nForsimplicity, weassumethatsuchvaluesareabowrittenintothedatabase.", "560": "526\nTl T2\nR(A)\nvV(A)\nR(A)\nR(B)\nvV(B)\nvV(A)\nR(B)\nvV(B)\nCommit\nCommit\nFigure16.3Another Serializable ScheduleCHAPTER 16\nFinally, wenotethataDBMSmightsometimes executetransactions inaway\nthatisnotequivalent toanyserialexecution; thatis,usingaschedule thatis\nnotserializable. Thiscanhappenfortworeasons. First,theDBMSmightuse\naconcurrency controlmethodthatensurestheexecuted schedule, thoughnot\nitselfserializable, isequivalent tosomeserializable schedule (e.g.,seeSection\n17.6.2). Second, SQLgivesapplication programmers theabilitytoinstructthe\nDBMStochoosenon-serializable schedules (seeSection16.6).\n16.3.3Anomalies DuetoInterleaved Execution\nWenowillustrate threemainwaysinwhichaschedule involving twoconsistency\npreserving, committed transactions couldrunagainstaconsistent database and\nleaveitinaninconsistent state.Twoactionsonthesamedataobjectconflict if\natleastoneofthemisawrite.Thethreeanomcllous situations canbedescribed\nintermsofwhentheactionsoftwotransactions TlandT2conflictwitheach\nother:Inawrite-read (WR)conflict, T2readsadataobjectpreviously\nwrittenbyTl;wedefineread-write (RW)andwrite-write (WW)conflicts\nsimilarly.\nReading Uncommitted Data(WRConflicts)\nThefirstsourceofanomalies isthatatransaction T2couldreadadatabase\nobjectAthathasbeenmodified byanother transaction Tl,whichha\"inotyet\ncommitted. Suchareadiscalledadirtyread.Asimpleexample illustrates\nhowsuchaschedule couldleadtoaninconsistent database state.Consider\ntwotransactions TlandT2.eachofwhich,runalone,preserves datal)a\"ie\nconsistency: Tltransfers 8100fromAtoB,andT2increments bothAand\nBbyG%(e.g.,annualinterest isdeposited intothesetwoaccounts). Suppose", "561": "Overview ofTransaction A1anagement 527\nthattheactionsareinterleaved sothat(1)theaccount transfer programTl\ndeducts $100fromaccountA,then(2)theinterestdepositprogram T2reads\nthecurrentvaluesofaccounts AandBandadds6%interesttoeach,andthen\n(3)theaccounttransferprogram credits$100toaccountB.Thecorresponding\nschedule, whichistheviewtheDBMShasofthisseriesofevents,isillustrated\ninFigure16.4.Theresultofthisschedule isdifferent fromanyresultthatwe\nwouldgetbyrunning oneofthetwotransactions firstandthentheother.The\nproblem canbetracedtothefactthatthevalueofAwrittenbyTIisreadby\nT2beforeTIhascompleted allitschanges.\nTl T2\nR(A)\nvV(A)\nR(A)\nW(A)\nR(B)\nliV(B)\nCommit\nR(B)\nW(B)\nCommit\nFigure16.4Reading Uncommitted Data\nThegeneralproblem illustrated hereisthatTlmaywritesomevalueintoA\nthatmakesthedataba..':le inconsistent. AslongasTIoverwrites thisvaluewith\na'correct' valueofAbeforecommitting, noharmisdoneifTIandT2runin\nsomeserialorder,becauseT2wouldthennotseethe(temporary) inconsistency.\nOntheotherhetnel,interleaved execution canexposethisinconsistency andlead\ntoaninconsistent finaldatabase state.\nNotethatalthough atransaction mustleaveadatabase inaconsistent state\nafteritcompletes, itisnotrequired tokeepthedatabase consistent whileitis\nstillinprogress. Sucharequirement wouldbetoorestrictive: Totransfermoney\nfromoneaccounttoanother, atransaction rn1l8tdebitoneaccount, temporarily\nleavingthedatabase inconsistent, andthencreditthesecondaccount, restoring\nconsistency.", "562": "528\nUnrepeatable Reads(RWConflicts)CHAPTERd.6\nThesecondwayinwhichanomalous behavior couldresultisthatatransaction\nT2couldchangethevalueofanobjectAthathasbeenreadby1:1,transaction\nTl,whileTlisstillinprogress.\nIfTltriestoreadthevalueofAagain,itwillgetadifferent result,eventhough\nithasnotmodified Ainthemeantime. Thissituation couldnotariseinaserial\nexecution oftwotransactions; itiscalledanunrepeatable read.\nToseewhythiscancauseproblems, consider thefollowing example. Suppose\nthatAisthenumber ofavailable copiesforabook.Atransaction thatplaces\nanorderfirstreadsA,checksthatitisgreatertha,n0,andthendecrements it.\nTransaction TlreadsAandseesthevalue1.Transaction T2alsoreadsAand\nseesthevalue1,decrements Ato0andcommits. Transaction Tlthentriesto\ndecrement Aandgetsanerror(ifthereisanintegrity constraint thatprevents\nAfrombecoming negative).\nThissituation canneverariseinaserialexecution ofTlandT2;thesecond\ntransaction wouldreadAandsee0andtherefore notproceed withtheorder\n(andsowouldnotattempt todecrement A).\nOverwriting Uncommitted Data(WWConflicts)\nThethirdsourceofanomalous behavior isthatatransaction T2couldoverwrite\nthevalueofanobjectA,whichhasalreadybeenmodified byatransaction Tl,\nwhileTlisstillinprogress. EvenifT2doesnotreadthevalueofAwritten\nbyTl,apotential problem existsasthefollowing example illustrates.\nSuppose thatHarryandLarryaretwoemployees, andtheirsalariesmustbe\nkeptequal.Transaction Tlsetstheirsalariesto$2000andtransaction T2sets\ntheirsalariesto$1000.Ifweexecute theseintheserialorderTlfollowed by\nT2,bothreceivethesalary$1000:theserialorderT2followed byTlgiveseach\nthesalary$2000.Eitheroftheseisacceptable fromaconsistency standpoint\n(although HarryandLarrymaypreferahighersalary!). Notethatneither\ntransaction readsasalaryvaluebeforewriting it----such awriteiscalleda\nblindwrite,t:orobvious rea.sons.\nNow,consider thefollowing interleaving oftheactionsof1'1andT2:T2sets\nHarry'ssalaryto$1000,TlsetsLarry'ssalaryto$2000,T2setsLa.rry'ssalary\nto$1000andcommits, andfinallyTlsetsHarry'ssalaryto$2000andconnnits.\nTheresultisnotidentical totheresultofeitherofthetwopossible serial", "563": "OuenJiew ofTransaction ~Management\nexecutions, andtheinterleaved schedule istherefore notserializable. Itviolates\nthedesiredconsistency criterion thatthetwosalariesmustbeequal.\nTheproblem isthatwehavealostupdate. Thefirsttransaction tocommit,\nT2,overwrote Larry'ssalaryassetbyTl.IntheserialorderT2followed by\nT1,Larry'ssalaryshouldreflectTl'supdateratherthanT2's,butTl'supdate\nis'lost'.\n16.3.4Schedules Involving Aborted Transactions\nWenowextendourdefinition ofserializability toincludeabortedtrallsactions.2\nIntuitively, allactionsofaborted transactions aretobeundone, andwecan\ntherefore imaginethattheywerenevercarriedouttobeginwith.Usingthis\nintuition, weextendthedefinition ofaserializable schedule asfollows: Ase\u00ad\nrializable schedule overasetSoftransactions isaschedule whoseeffecton\nanyconsistent database instance isguaranteed tobeidentical tothatofsome\ncomplete serialschedule overthesetofcommitted transactions inS.\nThisdefinition ofserializability reliesontheactionsofaborted transactions\nbeingundonecompletely, whichmaybeimpossible insomesituations. For\nexample, supposethat(1)anaccount transfer program T1deducts $100from\naccountA,then(2)aninterestdepositprogram T2readsthecurrentvaluesof\naccounts AandBandadds6%interesttoeach,thencommits, andthen(3)\nT1isaborted. Thecorresponding schedule isshowninFigure16..5.\nTl T2\nR(A)\nW(A)\nR(A)\nvV(A)\nR(B)\nHl(B)\nCommit\nAbort\nFigure16.5AnUnrecoverable Schedule\n2Viemustalsoconsider incomplete transactions forarigorous discussion ofsystemfailures, because\ntransactions thatareactivewhenthesystemfailsareneitheraborted norcommitted. However, system\nrecovery usuallybeginsbyaborting allactivetransactions. andforourinformal discussion, considering\nschedules involving committed andaborted transactions issufficient.", "564": "530 CHAPTER$16\nNow,T2hasreadavalueforAthatshouldneverhavebeenthere.(Recall\nthatabortedtransactions' effectsarenotsupposed tobevisibletoothertrans\u00ad\nactions.)IfT2hadnotyetcommitted, wecoulddealwiththesituation by\ncascading theabortofTIandalsoaborting T2;thisprocessrecursively aborts\nanytransaction thatreaddatawrittenbyT2,andsoon.ButT2hasalready\ncommitted, andsowecannotundoitsactions. \\Vesaythatsuchaschedule\nisunrecoverable. Inarecoverable schedule, transactions commitonlyafter\n(andif!)alltransactions whosechangestheyreadcommit.Iftransactions read\nonlythechanges ofcommitted transactions, notonlyistheschedule recover\u00ad\nable,butalsoaborting atransaction canbeaccomplished without cascading\ntheaborttoothertransactions. Suchaschedule issaidtoavoidcascading\naborts.\nThereisanother potential problem inundoing theactionsofatransaction.\nSuppose thatatransaction T2overwrites thevalueofanobjectAthathasbeen\nmodified byatransaction TI,whileTIisstillinprogress, andTlsubsequently\naborts. AllofTl'schanges todatabase objectsareundonebyrestoring the\nvalueofanyobjectthatitmodified tothevalueoftheobjectbeforeTl's\nchanges. (Welookatthedetailsofhowatransaction abortishandled in\nChapter 18.)WhenTlisaborted anditschanges areundoneinthismanner,\nT2'schanges arelostaswell,evenifT2decidestocommit. So,forexample, if\nAoriginally hadthevalue5,thenWetSchanged byT1to6,andbyT2to7,if\nT1nowaborts,thevalueofAbecomes 5again.EvenifT2commits, itschange\ntoAisinadvertently lost.Aconcurrency controltechnique calledStrict2PL,\nintroduced inSection16.4,canpreventthisproblem (asdiscussed inSection\n17.1).\n16.4LOCK-BASED CONCURRENCY CONTROL\nADBMSmustbeabletoensurethatonlyserializable, recoverable schedules\nareallowedandthatnoactionsofcommitted transactions arelostwhileundo\u00ad\ningaborted transactions. ADBl'vlStypically usesalockingprotocoltoachieve\nthis.Alockisasmallbookkeeping objectCL.ssociated withadatabase object.\nAlockingprotocol isasetofrulestobefollowed byeachtransaction (anden\u00ad\nforcedbytheDBlVIS)toensurethat,eventhoughactionsofseveraltransactions\nmightbeinterleaved, theneteffectisidentical toexecuting alltransactions in\nsOlneserial or~ler.Different lockingprotocols usedifferent typesoflocks,such\nassharedlocksorexclusive locks,asweseenext,whenwediscusstheStrict\n2PLprotocol.", "565": "Ove-nJiew ofTransaction jvlanagement\n16.4.1StrictTwo-Phase Locking (Strict2PL)531\nThemostwidelyusedlockingprotocol, calledStrictTwo-Phase Locking, or\nStrict2PL,hastworules.Thefirstruleis\n1.Ifatransaction Twantstoread(respectively, rnodify)anobject,it\nfirstrequests ashared (respectively, exclusive) lockontheobject.\nOfcourse,atransaction thathasanexclusive lockcanalsoreadtheobject;\nanadditional sharedlockisnotrequired. Atransaction thatrequests alockis\nsuspended untiltheDBMSisabletograntittherequested lock.TheDBMS\nkeepstrackofthelocksithasgranted andensuresthatifatransaction holds\nanexclusive lockonanobject,noothertransaction holdsasharedorexclusive\nlockonthesameobject.ThesecondruleinStrict2PLis\n2.Alllocksheldbyatransaction arerelea.'3ed whenthetransaction is\ncompleted.\nRequests toacquireandreleaselockscanbeautomatically inserted intotrans\u00ad\nactionsbytheDBMS; usersneednotworryaboutthesedetails. eWediscuss\nhowapplication programmers canselectproperties oftransactions andcontrol\nlockingoverhead inSection16.6.3.)\nIneffect,thelockingprotocol allowsonly'safe'interleavings oftransactions.\nIftwotransactions accesscompletely independent partsofthedatabase, they\nconcurrently obtainthelockstheyneedandproceed merrilyontheirways.On\ntheotherband,iftwotransactions accessthesameobject,andonewantsto\nmodifyit,theiractionsareeffectively orderedserially\u00b7all actionsofoneof\nthesetransactions (theonethatgetsthelockonthecommon objectfirst)are\ncompleted before(thislockisreleased and)theothertransaction canproceed.\nWedenotetheactionofatransaction Trequesting ashared(respectively, exclu\u00ad\nsive)lockonobject0as5T(0)(respectively, XT(O)) andomitthesubscript\ndenoting thetn1l1saction whenitisclearfromthecontext. Asanexample,\nconsider theschedule showninFigure16.4.Thisinterleaving couldresultina\nstatethatcannotresultfromanyserialexecution ofthethreetransactions. For\ninstance, T1couldchangeAfrom10to20,thenT2(whichreadsthevalue20\nforA)couldchangeBfrom100to200,andthenT1wouldreadthevalue200\nforB.Ifrunserially, eitherTlorT2wouldexecute first,andreadthevalues\n10forAand100forB:Clearly, theinterleaved execution isnotequivalent to\neitherserialexecution.\nIftheStrict2PLprotocol isused,suchinterleaving isdisallowed. Letussee\nwhy.Assuming thatthetransactions proceed <ttthesamerelative speedas", "566": "532 CHAPTER*16\nbefore,T1wouldobtainanexclusive lockonAfirstandthenreadandwrite\nA(Figure16.6).Then,1'2wouldrequestalockonA.However, thisrequest\n1'1 T2\nX(A)\nR(A)\nlV(A)\nFigure16.6Schedule Illustrating Strict2PL\ncannotbegranted until1'1releases itsexclusive lockonA,andtheDBMS\ntherefore suspends 1'2.1'1nowproceeds toobtainanexclusive lockonB,\nreadsandwritesB,thenfinallycommits, atwhichtimeitslocksarereleased.\nT2'slockrequestisnowgranted, anditproceeds. Inthisexample thelocking\nprotocol resultsinaserialexecution ofthetwotransactions, showninFigure\n16.7.\nT1 T2\nX(A)\nR(A)\nW(A)\nX(B)\nR(B)\nW(B)\nCommit\nX(A)\nR(A)\nW(A)\nX(B)\nR(B)\nH'(B)\nCommit\nFigure16.7Schedule Illustrating Strict2PLwithSerialExecution\nIngeneral, however, theactionsofdifferent transactions couldbeinterleaved.\nAsanexample, consider theinterleaving oftwotransactions showninFigure\n16.8,whichispermitted bytheStrict2PLprotocol.\nItcanbeshownthattheStrict2PLalgorithm allowsonlyserializable sched\u00ad\nules.Noneoftheanomalies discussed inSection16.3.:3canariseiftheDBMS\nimplements Strict2PL.", "567": "Ovenriew ofTran,.'wdion Alanagement\nTl T2\n8(A)\nR(A)\n8(A)\nR(A)\nX(B)\nR(B)\nvV(B)\nConllnit\nX(C)\nR(C)\nW(C)\nCommit\nFigure16.8Schedule Following Strict2PLwithInterleaved Actions\n16.4.2Deadlocks533\nConsider thefollowing example. Transaction T1setsanexclusive lockonobject\nA,T2setsanexclusive lockonB,T1requests anexclusive lockonBandis\nqueued, andT2requests anexclusive lockonAandisqueued. Now,T1is\nwaitingforT2toreleaseitslockandT2iswaitingforT1toreleaseitslock.\nSuchacycleoftransactions waitingforlockstobereleased iscalledadeadlock.\nClearly, thesetwotransactions willmakenofurtherprogress. Worse,they\nholdlocksthatmayberequired byothertransactions. TheDBMSmusteither\npreventordetect(andresolve)suchdeadlock situations; thecommon approach\nistodetectandresolvedeadlocks.\nAsimplewaytoidentify deadlocks istouseatimeout mechanism. Ifatrans\u00ad\nactionhasbeenwaiting toolongforalock,wecana'3sume(pessimistically)\nthatitisinadeadlock cycleandabortit.Wediscussdeadlocks inmoredetail\ninSection17.2.\n16.5PERFORMANCE OFLOCKING\nLock-b\"l.'sed schqmes aredesigned toresolveconflicts between transactions and\nusetwoba'3icmechanisms: blocking andaborting. Bothmechanisrns involve\naperformance penalty: Blocked transactions mayholdlocksthatforceother\ntransactions towait,andaborting andrestarting atransaction obviously wa..'3tes\ntheworkdonethusfarbythattransaction. Adeadlock represents anextreme\ninstance ofblocking inwhichasetoftransactions isforeverblockedunlessone\nofthedeadlocked transactions isaborted bytheDBMS.", "568": "534 CHAPTER :F6\nInpractice, fewerthan1%oftransactions areinvolved inadeadlock, (uIdthere\narerelatively fewaborts.Therefore, theoverhead oflockingcomesprimarily\nfromdelaysduetoblocking.3Consider howblocking delaysaffectthroughput.\nThefirstfewtransactions areunlikelytoconflict, andthroughput risesinpro\u00ad\nportiontothenumber ofactivetransactions. Asmoreandmoretransactions\nexecuteconcurrently onthesamenumberofdatabase objects,thelikelihood of\ntheirblocking eachothergoesup.Thus,delaysduetoblocking increase with\nthenumberofactivetransactions, andthroughput increases moreslowlythan\nthenumber ofactivetransactions. Infact,therecomesapointwhenadding\nanother activetransaction actually reducesthroughput; thenewtransaction is\nblockedandeffectively competes with(andblocks)existing transactions. We\nsaythatthesystemthrashes atthispoint,whichisillustrated inFigure16.9.\nThrashing\n#Activetransactions\nFigure16.9LockThrashing\nIfadatabase systembeginstothrash,thedatabase administrator shouldreduce\nthenumberoftransactions allowedtorunconcurrently. Empirically, thrashing\nisseentooccurwhen30%ofactivetransactions areblocked, andaDBAshould\nmonitor thefraction ofblockedtransactions toseeifthesystemisatriskof\nthrashing.\nThroughput canbeincrea ..c;edinthreeways(otherthanbuyingafa..'3tersystem):\nIIllBylockingthesmallest sizedobjectspossible (reducing thelikelihood that\ntwotransactions needthesamelock).\n..Byreducing thetimethattransaction holdlocks(sothatothertransactions\nareblockedforashortertime).\n3Ivlanycommon deadlocks canbeavoided usingatechnique calledlockdowngrade8, implemented\ninmostcOlnmercial systems (Section 17.3).", "569": "Overview ofTmnsCLction lHanagement 535\n\u2022Byreducing hotspots.Ahotspotisadataba.ge objectthatisfrequently\naccessed andmodified, andcausesalotofblocking delays.Hotspotscan\nsignificantly affectperformance.\nThegranularity oflockingislargelydetermined bythedataba..<;;e system's im\u00ad\nplementation oflocking,andapplication programmers andtheDBAhavelittle\ncontroloverit.Wediscusshowtoimprove performance byminimizing the\nduration locksareheldandusingtechniques todealwithhotspotsinSection\n20.10.\n16.6TRANSACTION SUPPORT INSQL\nWehavethusfarstudiedtransactions andtransaction management usingan\nabstract modelofatransaction asasequence ofread,write,andabort/commit\nactions. Wenowconsider whatsupport SQLprovides foruserstospecify\ntransaction-level behavior.\n16.6.1Creating andTerminating Transactions\nAtransaction isautomatically startedwhenauserexecutes astatement that\naccesses eitherthedatabase orthecatalogs, suchasaSELECT query,anUPDATE\ncommand, oraCREATE TABLEstatement.4\nOnceatransaction isstarted,otherstatements canbeexecuted aspartofthis\ntransaction untilthetransaction isterminated byeitheraCOMMIT command\noraROLLBACK (theSQLkeyword forabort)command.\nInSQL:1999, twonewfeaturesareprovided tosupportapplications thatinvolve\nlong-running transactions, orthatmustrunseveraltransactions oneafterthe\nother.Tounderstand theseextensions, recallthatalltheactionsofagiven\ntransaction areexecuted inorder,regardless ofhowtheactionsofdifferent\ntransactions areinterleaved. Wecanthinkofeachtransaction asasequence of\nsteps.\nThefirstfeature,calledasavepoint, allowsustoidentifyapointinatrans\u00ad\nactionandselectively rollbackoperations carriedoutafterthispoint.This\nisespecially usefulifthetransaction carriesoutwhat-ifkindsofoperations,\nandwishestoundoorkeepthechanges basedontheresults. Thiscanbe\naccomplished bydefining savepoints.\n4SomeSQLstatements\u00b7 ..\u00b7\u00b7\u00b7\u00b7\u00b7e.g.,theCONNECT statement, whichconnects anapplication program toa\ndatabase server donotrequirethecreation ofatransaction.", "570": "536 CHAPTEH 16\nr-\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7~~~~ .---.----- ---- \"\"\"'-<\u00b7\u00b7---------1\nISQL:1999 Nested Transactions: Theconceptofatn,msactioll asan I\nI,atomicsequence ofactionshasbeenextended inSQL:1999 thrQugh thei\n\u2022introduction ofthesavepo'int feature. Thisallowspartsofatransaction to\nbeselectively rolledback.Theintroduction ofsavepoints represents the\nfirstSQLsupport fortheconcept ofnestedtransactions, whichhave\nbeenextensively studiedintheresearch community. TheideaisthataI\ntransaction canhaveseveralnestedsubtransactions, eachofwhichcan I\nbeselectively rolledback.Savepoints snpport asimpleformofone-level i\nnesting.\n'--------------, .. \" ,-\nInalong-running transaction, wemaywanttodefineaseriesofsavepoints.\nThesavepoint command allowsustogiveeachsavepoint aname:\nSAVEPDINT (savepoint name)\nAsubsequent rollback command canspecifythesavepoint torollbackto\nROLLBACK TOSAVEPDINT (savepoint name)\nIfwedefinethreesavepoints A,B,andCinthatorder,andthenrollback to\nA,alloperations sinceAareundone, including thecreation ofsavepoints B\nandC.Indeed,thesavepoint Aisitselfundonewhenwerollhacktoit,and\nwemustre-establish it(through anothersavepoint conunand) ifwewishtobe\nabletorollbacktoitagain.Fromalockingstandpoint, locksobtained after\nsavepoint Acanbereleased whenwerollbacktoA.\nItisinstructive tocompare theuseofsavepoints withthealternative ofexecut\u00ad\ningaseriesoftransactions (i.e.,treatalloperations inbetween twoconsecutive\nsavepoints asanewtransaction). Thesavepoint mechanism offerstwoad\u00ad\nvantages. First,wecanrollbackoverseveralsavepoints. Inthealternative\napproach, wecanrollbackonlythemostrecenttransaction, whichisequiv\u00ad\nalenttorollingbacktothemostrecentsavepoint, Second, theoverhead of\ninitiating severaltransactions isavoided.\nEvenwiththeuseofsavepoints, certainapplications mightrequireustorun\nseveraltransactions oneaftertheother.Tominimize theoverhead insuch\nsituations, SQL:1999 introduces anotherfeature,calledchained transactions,\n\\Vecancornmit orrollbackatransaction andimmediately initiateanother\ntransaction, Thisisdonebyusingtheoptional keywords ANDCHAINinthe\nCOMMIT andROLLBACK statements.", "571": "Overview ofTransaction AIanagement\n16.6.2WhatShouldWeLock?537\nUntilnow,wehavediscussed transactions andconcurrency controlintenusof\nanabstract modelinwhichadatabase contains afixedcollection ofobjects, and\neachtransaction isaseriesofreadandwriteoperations onindividual objects.\nAnimportant question toconsider inthecontextofSQLiswhattheDBMS\nshouldtreatasanobjectwhensettinglocksforagivenSQLstatement (thatis\npartofatransaction).\nConsider thefollowing query:\nSELECT S.rating, MIN(S.age)\nFROM SailorsS\nWHERE S.rating=8\nSuppose thatthisqueryrunsaspartoftransaction T1andanSQLstatement\nthatmodifies theageofagivensailor,sayJoe,withrating=8 runsa-spartof\ntransaction T2.What'objects' shouldtheDBMSlockwhenexecuting these\ntransactions? Intuitively, wemustdetectaconflictbetween thesetransactions.\nTheDBMScouldsetasharedlockontheentireSailorstableforT1andset\nanexclusive lockonSailorsforT2,whichwouldensurethatthetwotransac\u00ad\ntionsareexecuted inaserializable manner. However, thisapproach yieldslow\nconcurrency, andwecandobetterbylockingsmallerobjects, reflecting what\neachtransaction actually accesses. Thus,theDBMScouldsetasharedlock\noneveryrowwithmting=8 fortransaction T1andsetanexclusive lock on\njusttherowforthemodified tuplefortransaction T2.Now,otherread-only\ntransactions thatdonotinvolvending=8 rowscanproceedwithout waitingfor\nT1orT2.\nAsthisexample illustrates, theDBMScanlockobjectsatdifferent granular\u00ad\nities: \\~recanlockentiretablesorsetrow-level locks.Thelatterapproach is\ntakenincurrentsystems becauseitoffersmuchbetterperformance. Inpractice,\nwhilerow-level lockingisgenerally better,thechoiceoflockinggranularity is\ncomplicated. Forexample, atransaction thatexamines severalrowsandmod\u00ad\nifiesthosetha1satisfysomecondition mightbebestservedbysettingshared\nlocksontheentiretableandsettingexclusive locksonthoserowsitwantsto\nlllodify. vVediseussthisissuefurtherinSection17.5.3.\nAsecondpointtonoteisthatSQLstatements conceptually accessacollection\nofrowsdescribed bya.selection predicate. Intheprf~ceding example, transaction\nT1accesses allrowswithmting=8. vVesuggested thatthiscouldbedealtwith\nbysettingsharedlocksonallrowsinSailorsthathadrating=8. Unfortunately,\nthisisalittletoosilnplistic. Tosecwhy,consider anSQLstatelnent thatinserts", "572": "538 CHAPTER 1.6\nanewsailorwithmting=8 andrunsastransaction T3.(Observe thatthis\nexample violatesourassumption ofafixednumber ofobjectsinthedatabase,\nbutwemustobviously dealwithsuchsituations inpractice.)\nSuppose thattheDBJ\\iISsetssharedlocksoneveryexisting Sailorsrowwith\nmting=8 forTl.Thisdoesnotpreventtransaction T3fromcreating abrand\nnewrowwithmting=8 andsettinganexclusive lockonthisrow.Ifthisnewrow\nhasasmalleragevaluethanexisting rows,Tlreturnsananswerthatdepends\nonwhenitexecuted relativetoT2.However, ourlockingschemeimposes no\nrelativeorderonthesetwotransactions.\nThisphenomenon iscalledthephantom problem: Atransaction retrieves\nacollection ofobjects(inSQLterms,acollection oftuples)twiceandsees\ndifferent results,eventhoughitdoesnotmodifyanyofthesetuplesitself.To\nprevent phantoms, theDBMSmustconceptually lockallpossible rowswith\nmting=8 onbehalfofTl.Onewaytodothisistolocktheentiretable,at\nthecostoflowconcurrency. Itispossible totakeadvantage ofindexestodo\nbetter,aswewillseeinSection17.5.1,butingeneralpreventing phantoms can\nhaveasignificant impactonconcurrency.\nItmaywellbethattheapplication invoking T1canacceptthepotential inac\u00ad\ncuracyduetophantoms. Ifso,theapproach ofsettingsharedlocksonexisting\ntuplesforTlisadequate, andoffersbetterperformance. SQLallowsapro\u00ad\ngrammer tomakethischoice---and othersimilarchoices'--explicitly, aswesee\nnext.\n16.6.3Transaction Characteristics inSQL\nInordertogiveprogrammers controloverthelockingoverhead incurred by\ntheirtransactions, SQLallowsthemtospecifythreecharacteristics ofatrans\u00ad\naction: accessmode,diagnostics size,andisolation level.Thediagnostics\nsizedetermines thenumber oferrorconditions thatcanberecorded; wewill\nnotdiscussthisfeaturefurther.\nIftheaccessmodeisREADONLY,thetransaction isnotallowedtomodify\nthedatabclse. Thus,INSERT, DELETE, UPDATE, andCREATE comlnands cannot\nbeexecuted.Ifwehavetoexecute oneofthesecommands, theaccessmode\nshouldbesettoREADWRITE.1<ortransactions withREADONLYaccessmode.\nonlysharedlocksneedtobeobtained, thereby increasing concurrency.\nTheisolation levelcontrols theextenttowhichagiventransaction isex\u00ad\nposedtotheactionsofothertransactions executing concurrently. Bychoosing\noneoffourpossible isolation levelsettings, ausercanobtaingreaterconcur-", "573": "Ovenrie11J ofTnmsaction l\"tfanagernent 53Q\nrencyat thecostofincreasing thetransaction's exposure toothertransactions'\nuncommitted changes.\nIsolation levelchoicesareREADUNCOMMITTED, READCOMMITTED, REPEATABLE\nREAD,andSERIALIZABLE. Theeffectoftheselevelsissummarized inFigure\n16.10.Inthiscontext, dirtyreadandunrepeatable readaredefinedasusuaL\nLevel\nREADUNCOMMITTED\nREADCOMMITTED\nREPEATABLE READ\nSERIALIZABLEDirtyRead\nMaybe\nNo\nNo\nNoUnrepeatable Read\nMaybe\nMaybe\nNo\nNoMaybe\nMaybe\nMaybe\nNo\nFigure16.10 Transaction Isolation LevelsinSQL-92\nThehighestdegreeofisolation fromtheeffectsofothertransactions isachieved\nbysettingtheisolation levelforatransaction TtoSERIALIZABLE. Thisisolation\nlevelensuresthatTreadsonlythechanges madebycommitted transactions,\nthatnovaluereadorwrittenbyTischanged byanyothertransaction untilT\niscomplete, andthatifTreadsasetofvaluesbasedonsomesearchcondition,\nthissetisnotchanged byothertransactions untilTiscomplete (i.e.,Tavoids\nthephantom phenomenon).\nIntermsofalock-based implementation, aSERIALIZABLE transaction obtains\nlocksbeforereadingorwritingobjects, including locksonsetsofobjectsthat\nitrequires tobeunchanged (seeSection17.5.1)andholdsthemuntiltheend,\naccording toStrict2PL.\nREPEATABLE READensuresthatTreadsonlythechanges madebycommit\u00ad\ntedtransactions andnovaluereadorwrittenbyTischanged byanyother\ntransaction untilTiscomplete. However, Tcouldexperience thephantom\nphenomenon; forexample, whileTexamines allSailorsrecordswithrating=1,\nanother transaction mightaddanewsuchSailorsrecord,whichismissedby\nT.\nAREPEATABLEREADtransaction setsthesamelocksa'SaSERIALIZABLE trans\u00ad\naction,exceptthatitdoesnotdoindexlocking;thatis,itlocksonlyindividual\nobjects, notsetsofobjects. vVediscussindexlockingindetailinSection17.5.1.\nREADCOMMITTED ensuresthatTreadsonlythechanges madebycommitted\ntransactions, andthatnovaluewrittenbyTischanged byanyothertransaction\nuntilTiscomplete. However, avaluereadbyTmaywellbemodified by", "574": "540 CHAPTER 1!6\nanothertransaction whileTisstillinprogress, andTisexposedtothephantom\nproblem.\nAREADCOMMITTED transaction obtainsexclusive locksbeforewritingobjects\nandholdstheselocksuntiltheend.Italsoobtainssharedlocksbeforeread\u00ad\ningobjects, buttheselocksarereleased immediately; theironlyeffectisto\nguarantee thatthetransaction thatlastmodified theobjectiscomplete. (This\nguarantee reliesonthefactthateverySQLtransaction obtainsexclusive locks\nbeforewritingobjectsandholdsexclusive locksuntiltheend.)\nAREADUNCOMMITTED transaction Tcanreadchangesmadetoanobjectbyan\nongoing transaction; obviously, theobjectcanbechanged furtherwhileTisin\nprogress, andTisalsovulnerable tothephantom problem.\nAREADUNCOMMITTED transaction doesnotobtainsharedlocksbeforereading\nobjects. Thismoderepresents thegreatest exposure touncommitted changes\nofothertransactions; somuchsothatSQLprohibits suchatransaction from\nmakinganychangesitself-a READUNCOMMITTED transaction isrequired tohave\nanaccessmodeofREADONLY.Sincesuchatransaction obtainsnolocksfor\nreading objectsanditisnotallowed towriteobjects (andtherefore never\nrequests exclusive locks),itnevermakesanylockrequests.\nTheSERIALIZABLE isolation levelisgenerally thesafestandisrecommended for\nmosttransactions. Sometransactions, however, canrunwithalowerisolation\nlevel,andthesmallernumberoflocksrequested cancontribute toimproved sys\u00ad\ntemperformance. Forexample, astatistical querythatfindstheaveragesailor\nagecanberunattheREADCOMMITTED leveloreventheREADUNCOMMITTED\nlevel,because afewincorrect ormissingvaluesdonotsignificantly affectthe\nresultifthenumber ofsailorsislarge.\nTheisolation levelandaccessmodecanbesetusingtheSETTRANSACTION com~\nmand.Forexample, thefollowing command declares thecurrenttransaction\ntobeSERIALIZABLE andREADONLY:\nSETTRANSACTION ISOLATION LEVELSERIALIZABLE READONLY\nWhenatransaction isstarted,thedefaultisSERIALIZABLE andREADWRITE.\n16.7INTRODUCTION TOCRASH RECOVERY\nTherecovery manager ofaDBMSisresponsible forensuring transaction\natomicity anddurability. Itensuresatomicity byundoing theactionsoftrans\u00ad\nactionsthatdonotcommit, anddurability bymakingsurethatallactionsof", "575": "Overview of7'ransaction lvlanagernent 541\ncommitted transactions survivesystenl crashes, (e.g.,acoredumpcausedby\nabuserror)andmediafailures (e.g.,adiskiscorrupted).\n\\\\ThenaDB]\\,ISisrestarted aftercrashes. therecovery manager isgivencontrol\nandmustbringthedataba.'le toaconsistent state.Therecovery manager is\nalsoresponsible forundoing theactionsofanaborted transaction. Toseewhat\nittakestoimplement arecovery manager, itisnecessary tounderstand what\nhappens duringnormalexecution.\nThetransaction manager ofaDBMScontrols theexecution oftransactions.\nBeforereadingandwritingobjectsduringnormalexecution, locksmustbeac\u00ad\nquired(andreleasedatsomelatertime)according toachosenlockingprotocol.5\nForsimplicity ofexposition, wemakethefollowing assumption:\nAtomic Writes: Writing apagetodiskisanatomicaction.\nThisimpliesthatthesystemdoesnotcrashwhileawriteisinprogress andis\nunrealistic. Inpractice, diskwritesdonothavethisproperty, andstepsmust\nbetakenduringrestartafteracrash(Section 18.6)toverifythatthemost\nrecentwritetoagivenpagewascompleted successfully, andtodealwiththe\nconsequences ifnot.\n16.7.1Stealing FramesandForcingPages\n\\Vithrespecttowritingobjects, twoadditional questions arise:\n1.Canthechanges madetoanobject0inthebufferpoolbyatransaction T\nbewrittentodiskbeforeTcommits? Suchwritesareexecuted whenan\u00ad\nothertransaction wantstobringinapageandthebuffermanager chooses\ntoreplacetheframecontaining 0;ofcourse,thispagemusthavebeen\nunpinned byT.Ifsuchwritesareallowed, wesaythatastealapproach\nisused.(Informally, thesecondtransaction 'steals'aframefromT.)\n2.\\\\\"henatransaction cOl1units, mustweensurethatallthechanges ithas\nmadetoobjectsinthebufferpoolareimmediately forcedtodisk?Ifso.\nwesaythataforceapproach isused.\nFromthestandpoint ofimplementing arecovery manager, itissimplest touse\nabuffermanager withano-steaL forceapproach. Ifano-steal approach isused,\nwedonothavetoundothechanges ofanaborted transaction (because these\ndumges havenotbeenwrittentodisk) landifaforceapproach isused,wedo\nSAconcurrency control technique thatdoesnotinvolve locking couldbeusedinstead, butwe\na.ssul1lc thatlocking isllsed.", "576": "542 CHAPTER.16\nnothavetoredothechangesofacommitted transaction ifthereisasubsequent\ncrash(because allthesechanges areguaranteed tohavebeenwrittentodisk\natcommittime).\nHowever, thesepolicieshaveimportant drawbacks. Theno-steal approach as\u00ad\nsumesthatallpagesmodified byongoing transactions canbeaccommodated\ninthebufferpool,andinthepresence oflargetransactions (typically runin\nbatchmode,e.g.,payrollprocessing), thisassumption isunrealistic. Theforce\napproach resultsinexcessive pageI/Ocosts.Ifahighlyusedpageisupdated\ninsuccession by20transactions, itwouldbewrittentodisk20times.Witha\nno-force approach, ontheotherhand,thein-memory copyofthepagewould\nbesuccessively modified andwrittentodiskjustonce,reflecting theeffects\nofall20updates, whenthepageiseventually replaced inthebufferpool(in\naccordance withthebuffermanager's pagereplacement policy).\nForthesereasons, mostsystems useasteal,no-force approach. Thus,ifa\nframeisdirtyandchosenforreplacement, thepageitcontains iswrittento\ndiskevenifthemodifying transaction isstillactive(steal);inaddition, pagesin\nthebufferpoolthataremodified byatransaction arenotforcedtodiskwhen\nthetransaction commits (no-force).\n16.7.2Recovery-Related StepsduringNormalExecution\nTherecovery manager ofaDBMSmaintains someinformation duringnormal\nexecution oftransactions toenableittoperform itstaskintheeventofa\nfailure. Inparticular, alogofallmodifications tothedatabase issavedon\nstablestorage, whichisguaranteed6tosurvivecrashesandmediafailures.\nStablestorageisimplemented bymaintaining multiple copiesofinformation\n(perhaps indifferent locations) onnonvolatile storagedevicessuchasdisksor\ntapes.\nAsdiscussed earlierinSection 16.7,itisimportant toensurethatthelog\nentriesdescribing achangetothedatabase arewrittentostablestoragebefore\nthechangeismade;otherwise, thesystemmightcrashjustafterthechange,\nleavinguswithout arecordofthechange. (RecallthatthisistheWrite-Ahead\nLog,orWAL,property.)\nThelogenablestherecovery manager toundotheactionsofaborted and\nincomplete transactions andredotheactionsofcommitted transactions. For\nexample, atransaction thatcommitted beforethecrashmayhavemadeupdates\n(jNothing inlifeisreallyguaranteed exceptdeathandtaxes.However, wecanreducethechance\noflogfailuretobevanishingly smallbytakingstepssuchasduplexing thelogandstoringthecopies\nindifferent securelocations.", "577": "Overview ofTransaction A1anagement 5il3\nTuningtheRecovery Subsystem: DBMSperformance canbegreatly\naffected bytheoverhead imposed bytherecoverysubsystem. ADBAcan\ntakeseveralstepstotunethissubsystem 1suchat>correctly sizingthelog\nandhowitismanaged ondisklcontrolling therateatwhichbufferpages\nareforcedtodisk,choosing agoodfrequency forcheckpointing, andso\nforth.\ntoacopy(ofadatabase object)inthebufferpool,andthischangemaynothave\nbeenwrittentodiskbeforethecrash,because ofano-force approach. Such\nchangesmustbeidentified usingthelogandwrittentodisk.Further, changes\noftransactions thatdidnotcommitpriortothecrashmighthavebeenwritten\ntodiskbecauseofastealapproach. Suchchangesmustbeidentified usingthe\nlogandthenundone.\nTheamount ofworkinvolved duringrecovery isproportional tothechanges\nmadebycommitted transactions thathavenotbeenwrittentodiskatthetime\nofthecrash.Toreducethetimetorecoverfromacrash,theDBMSperiod\u00ad\nicallyforcesbufferpagestodiskduringnormalexecution usingabackground\nprocess(whilemakingsurethatanylogentriesthatdescribe changes these\npagesarewrittentodiskfirst,i.e.,following theWALprotocol). Aprocess\ncalledcheckpointing, whichsavesinformation aboutactivetransactions and\ndirtybufferpoolpages,alsohelpsreducethetimetakentorecoverfroma\ncrash.Checkpoints arediscussed inSection18.5.\n16.7.3Overview ofARIES\nARIESisarecovery algorithm thatisdesigned toworkwithasteal,no-force\napproach. Whentherecovery manager isinvokedafteracrash,restartproceeds\ninthreepha.'Ses.IntheAnalysis phase,itidentifies dirtypagesinthebuffer\npool(i.e.,changesthathavenotbeenwrittentodisk)andactivetransactions\natthetimeofthecra.'Sh.IntheRedopha.'Se,itrepeatsallactions, starting\nfromanappropriate pointinthelog,andrestoresthedataba.'Se statetowhatit\nwa.'Satthetimeofthecrash.Finally,intheUndophase,itundoestheactions\noftransactions thatdidnotcommit, sothatthedatabase reflectsonlythe\nactionsofcommitted transactions. TheARIESalgorithm isdiscussed further\ninChapter 18.,\n16.7.4Atomicity: Implementing Rollback\nItisimportant torecognize thattherecovery subsystem isalsoresponsible for\nexecuting theROLLBACK command, whichabortsasingletransaction. Indeed,", "578": "544 CHAPTER 1,6\nthelogic(andcode)involved inundoing asingletransaction isidentical tothat\nusedduringtheUndophaseinrecovering fromasystemcrash.Alllogrecords\nforagiventransctction areorganized inalinkedlistandcanbeefficiently\naccessed inreverseordertofacilitate transaction rollback.\n16.8REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIIWhataretheACIDproperties? Defineatomicity, consistency, isolation,\nanddurability andillustrate themthrough examples, (Section 16.1)\nIIIDefinethetermstransaction, schedule, complete schedule, andseTialsched\u00ad\nule.(Section 16.2)\nIIIWhydoesaDBMSinterleave concurrent transactions? (Section 16.3)\nIIIWhendotwoactionsonthesamedataobjectconflict? Definetheanoma\u00ad\nliesthatcanbecausedbyconflicting actions (dirtyreads,unrepeatable\nreads,lostupdates). (Section 16.3)\nIIIWhatisaserializable schedule? WhatisaTecoverable schedule? What\nisaschedule thatavoidscascading abor'ts? Whatisastrictschedule?\n(Section 16.3)\nIIIWhatisalockingpmtocol:? Describe theStrictTwo-Phase Locking (StTict\n2PL)protocol. Whatcanyousayabouttheschedules allowed bythis\nprotocol? (Section 16.4)\nIIIWhatoverheads areassociated withlock-based concurrency control? Dis\u00ad\ncussblockingandabo7,ting overheads specifically andexplainwhichismore\nimportant inpractiee. (Section 16.5)\nIIIWhatisthrashing? WhatshouldaDBAdoifthesystemthrashes? (Sec\u00ad\ntion16.5)\nIIIHowcanthroughput beincreased? (Section 16.5)\nIIIHowaretransactions created andterminated inSQL?Whataresave\u00ad\npoints? Whatarechained transactions? Explain whysavepoints and\nchainedtninsactions areuseful.(Section 16.6)\nIIIWhataretheconsiderations indetermining thelockinggranularity when\nexecuting SQLstatements? \\Nhatisthephantom problem? \\\\Thatirnpact\ndoesithaveonperformance? (Section 16.6.2)", "579": "Overview ofTransaction !vIanagement\n\u2022vVhattransaction characteristics canaprogrammer controlinSQL?Dis\u00ad\ncussthedifferent accessmodesandisolat'ion levelsinparticular. vVhat\nissuesshouldbeconsidered inselecting anaccessmodeandanisolation\nlevelforatransaction? (Section 16.6.3)\n\u2022Describe howdifferent isolation levelsareimplemented intermsofthelocks\nthatareset.'Whatcanyousayaboutthecorresponding lockingoverheads?\n(Section 16.6.3)\n\u2022vVhatfunctionality doestherecovery manager ofaDBMSprovide? What\ndoesthetransaction manager do?(Section 16.7)\n\u2022Describe thestealandforcepolicies in thecontextofabuffermanager.\nWhatpoliciesareusedinpractice andhowdoesthisaffectrecovery? (Sec\u00ad\ntion16.7.1)\n\u2022Whatrecovery-related stepsaretakenduringnormalexecution? What\ncanaDBAcontroltoreducethetimetorecoverfromacrash?(Sec\u00ad\ntion16.7.2)\n\u2022Howisthelogusedintransaction rollback andcrashrecovery? (Sec\u00ad\ntions16.7.2,16.7.3,and16.7.4)\nEXERCISES\nExercise 16.1Givebriefanswers tothefollowing questions:\n1.Whatisatransaction? Inwhatwaysisitdifferent fromanordinary program (ina\nlanguage suchasC)?\n2.Definetheseterms:atomicity, consistency, isolation, durability, schedule, blindwrite,\ndirtyread,unrepeatable read,serializable schedule, recoverable schedule, avoidsvcascading\u00ad\nabortsschedule.\n3.Describe Strict2PL.\n4.Whatisthephantom problem? Canitoccurinadatabase wherethesetofdatabase\nobjectsisfixedandonlythevaluesofobjectscanbechanged?\nExercise 16.2Consider thefollowing actionstakenbytransaction 1'1ondatabase objects\nXandY:\nR(X),W(X),R(Y), W(Y)\n1.Giveanexample ofanother transaction 1'2that,ifrunconcurrently totransaction l'\nwithout someformofconcurrency control, couldinterfere with1'1.\n2.Explain howtheuseofStrict2PLwouldprevent interference between thetwotransac\u00ad\ntions.\n:1.Strict2PLislIsedinmanydatabase systems. Givetworeasonsforitspopularity.", "580": "546 CHAPTER l6\nExercise 16.3Consider adatabase withobjectsXandYandassumethattherearetwo\ntransactions TlandT2.Transaction T1readsobjectsXandYandthenwritesobjectX.\nTransaction T2readsobjectsXandYandthenwritesobjectsXandY.\n1.Giveanexample schedule withactionsoftransactions T1andT2onobjectsXandY\nthatresultsinawrite-read conflict.\n2.Giveanexample schedule withactionsoftransactions T1andT2onobjectsXandY\nthatresultsinaread-write conflict.\n3.Giveanexample schedule withactionsoftransactions T1andT2onobjectsXandY\nthatresultsinawrite-write conflict.\n4.Foreachofthethreeschedules, showthatStrict2PLdisallows theschedule.\nExercise 16.4Wecallatransaction thatonlyreadsdatabase objectaread-only transac\u00ad\ntion,otherwise thetransaction iscalledaread-write transaction. Givebriefanswerstothe\nfollowing questions:\n1.Whatislockthrashing andwhendoesitoccur?\n2.Whathappens tothedatabase systemthroughput ifthenumber ofread-write transac\u00ad\ntionsisincreased?\n3.Whathappens tothedatbasesystemthroughput ifthenumber ofread-only transactions\nisincreased?\n4.Describe threewaysoftuningyoursystemtoincrease transaction throughput.\nExercise 16.5Suppose thataDBMSrecognizes increment, whichincrements aninteger\u00ad\nvaluedobjectby1,anddecrement asactions, inaddition toreadsandwrites.Atransaction\nthatincrements anobjectneednotknowthevalueoftheobject;increment anddecrement\nareversions ofblindwrites.Inaddition tosharedandexclusive locks,twospeciallocksare\nsupported: AnobjectmustbelockedinImodebeforeincrementing itandlockedinDmode\nbeforedecrementing it.AnIlockiscompatible withanother IorDlockonthesameobject,\nbutnotwith5andXlocks.\n1.Illustrate howtheuseofIandDlockscanincrease concurrency. (Showaschedule\nallowed byStrict2PLthatonlyuses5andXlocks.Explain howtheuseofIandD\nlockscanallowmoreactionstobeinterleaved, whilecontinuing tofollowStrict2PL.)\n2.Informally explain howStrict2PLguarantees serializability eveninthepresence ofI\nandDlocks.(Identify whichpairsofactionsconflict, inthesensethattheirrelative\nordercanaffecttheresult,andshowthattheuseof5,X,I,andDlocksaccording\ntoStrict2PLordersallconflicting pairsofactionstobethesameastheorderinsome\nserialschedule.)\nExercise 16.6Answerthefollowing questions: SQLsupports fourisolation-levels andt.wo\naccess-modes, foratotalofeightcombinations ofisolation-level andaccess-mode. Each\ncombination impiicitly definesaclassoftransactions; thefollowing questions refertothese\neightclasses:\n1.Consider thefourSQLisolation levels.Describe whichoftheplHmomena canoccurat\neachoftheseisolation levels:dirtyread,unrepeatable read,phantom problem.\n2.Foreachofthefourisolation levels,giveexamples oftransactions thatcouldberun\nsafelyatthatlevel.\n:.3.Whydoestheaccessmodeofatransaction matter?", "581": "Overview ofTransaction Manage'm,ent\nExercise 16.7Consider theuniversity enrollment database schema:547\nStudent(snurn: integer, snarne:string, majoT:string, level:string, age:integer)\nClass(name:string, meets_at: time,Toom:string, fid\"'integer)\nEnrolled(snum: integer, cname:string)\nFaculty(fid:integer, fname:string, deptid:integer)\nThemeaning oftheserelations isstraightforward; forexample, Enrolled hasonerecordper\nstudent-class pairsuchthatthestudent isenrolled intheclass.\nForeachofthefollowing transactions, statetheSQLisolation levelyouwoulduseandexplain\nwhyyouchoseit.\n1.Enrollastudent identified byhersnumintotheclassnamed'Introduction toDatabase\nSystems'.\n2.Change enrollment forastudent identified byhersnumfromoneclasstoanother class,\n3.Assignanewfacultymember identified byhisfidtotheclasswiththeleastnumber of\nstudents.\n4.Foreachclass,showthenumberofstudents enrolled intheclass.\nExercise 16.8Consider thefollowing schema:\nSuppliers(sid: integer, sname:string, addTess:string)\nParts(pid: integer, pname:string, coloT:string)\nCatalog(sid: integer, pid:integer, cost:real)\nTheCatalog relation liststhepricescharged forpartsbySuppliers.\nForeachofthefollowing transactions, statetheSQLisolation levelthatyouwoulduseand\nexplainwhyyouchoseit.\n1.Atransaction thataddsanewparttoasupplier's catalog.\n2.Atransaction thatincreases thepricethatasupplier chargesforapart.\n3.Atransaction thatdetermines thetotalnumber ofitemsforagivensupplier.\n4.Atransaction thatshows,foreachpart,thesupplier thatsupplies thepartatthelowest\nprice.\nExercise 16.9Consider adatabase withthefollowing schema:\nSuppliers( sid:integer, sname:string, addTess:string)\nParts(pid: integer, pname:string, coloT:string)\nCatalog( sid:integer, pid:integer, cost:real)\nTheCatalog relation liststhepricescharged forpartsbySuppliers.\nConsider threetransactions 1'1,1'2,and1'3;1'1always h8.o.'3SQLisolation levelSERIALIZABLE.\nWefirstrun1'1concurrently with1'2andthenwerun1'1concurrently with1'2butwechange\ntheisolation levelof1'2asspecified below.Giveadatabase instance andSQLstatements for\n1'1and1'2suchthatresultofrunning 1'2withthefirstSQLisolation levelisdifferent from\nrunning 1'2withthesecondSQLisolation level.Alsospecifythecommon schedule of1'1and\n1'2andexplainwhytheresultsaredifferent.", "582": "548\n1.SERIALIZABLE versusREPEATABLE READ.\n2.REPEATABLE READversusREADCOHMITTED.\n3.READCOMHITTED versusREADUNCOMHITTED.\nBIBLIOGRAPHIC NOTESCHAPTER 16\nThetransaction concept andsomeofitslimitations arediscussed in[332J.Aformaltransac\u00ad\ntionmodelthatgeneralizes severalearliertransaction modelsisproposed in[182].\nTwo-phase lockingwasintroduced in[252],afundamental paperthatalsodiscusses thecon\u00ad\nceptsoftransactions, phantoms, andpredicate locks.Formaltreatments ofserializability\nappearin[92,581].\nExcellent in-depth presentations oftransaction processing canbefoundin[90]and[770].[338]\nisaclassic,encyclopedic treatment ofthesubject.", "583": "17\nCONCURRENCY CONTROL\n..HowdoesStrict2PLensureserializability andrecoverability?\n..Howarelocksimplemented inaDBMS?\n..Whatarelockconversions andwhyaretheyimportant?\n..HowdoesaDBMSresolvedeadlocks?\n..Howdocurrentsysterns dealwiththephantom problerrl?\n..Whyarespecialized lockingtechniques usedontreeindexes?\n..Howdoesmultiple-granularity lockingwork?\n..WhatisOptimistic concurrency control?\n..WhatisTimestarrlp-Ba..')ed concurrency control?\n..WhatisMultiversion concurrency control?\n..Keyconcepts: Two-phase locking(2PL),serializability, recoverabil\u00ad\nity,precedence graph,strictschedule, viewequivalence, viewseri\u00ad\nalizable, locknlanager, locktable,transaction table,latch,convoy,\nlockupgrade, deadlock, waits-for graph,conservative 2PL,indexlock\u00ad\ning,predicate locking, multiple-granularity locking, lockescalation,\nSQLisolation level,phantom problerrl, optirnistic concurrency con\u00ad\ntrol,Thornas WriteRule,recoverability\nPoohwassittinginhishouseoneday,counting hispotsofhoney,\nwhentherecarneaknockonthedoor.\n\"!'''ourteen,'' saidPooh.\"Cornein.Fourteen. Or'wa.c:;itfifteen? Bother.\nT'hat'srnuddled rnc.\"\n549", "584": "550 CHAPTER 17\n'~Hallo,Pooh/'saidRabbit. \"Halla,R,abbit. Fourteen, wasn'tit?\"\n\"Whatwas?\"\"lVlypotsofhoneywhatIwascounting.\"\n\"Fourteen, that'sright.\"\n\"Areyousure?\"\n\"No,\"saidRabbit. \"Doesitmatter?\"\n\"--\",,---A.A.Milne,TheHouseatPoohComer\nInthischapter, welookatconcurrency controlinmoredetail.Webeginby\nlookingatlockingprotocols andhowtheyguarantee variousirnportant proper\u00ad\ntiesofschedules inSection17.1.Section17.2isanintroduction tohowlocking\nprotocols areimplemented inaDBMS.Section17.3discusses theissueoflock\nconversions, andSection17.4coversdeadlock handling. Section17.5discusses\nthreespecialized lockingprotocols---for lockingsetsofobjectsidentified bysome\npredicate, forlockingnodesintree-structured indexes, andforlockingcollec\u00ad\ntionsofrelatedobjects. Section17.6examines somealternatives tothelocking\napproach.\n17.12PL,SERIALIZABILITY, ANDRECOVERABILITY\nInthissection, weconsider howlockingprotocols guarantee someimportant\nproperties ofschedules; namely, serializability andrecoverability. Twosched\u00ad\nulesaresaidtobeconflict equivalent iftheyinvolvethe(sarnesetof)actions\nofthesametransactions andtheyordereverypairofconflicting actionsoftwo\ncommitted transactions inthesanleway.\nAswesawinSection16.3.3,twoactionsconflictiftheyoperateonthesame\ndataobjectandatleastoneofthemisawrite.Theoutcome ofaschedule\ndepends onlyontheorderofconflicting operations; wecaninterchange any\npairofnonconflicting operations without alteringtheeffectoftheschedule on\nthedatabase. Iftwoschedules areconflictequivalent, itiseasytoseethat\ntheyhavethesameeffectonadatabase. Indeed, because theyorderallpairs\nofconflicting operations inthesameway,wecanobtainoneofthernfrorn\ntheotherbyrepeatedly swapping pairsofnonconflicting actions,thatis,by\nswapping pairsofactionswhoserelativeorderdoesnotaltertheoutcome.\nAschedule isconflict serializable ifitisconflictequivalent tosomeserial\nschedule. Everyconflictserializable schedule isserializable, ifweassurnethat\nthesetofitemsinthedataba\"se doesnotgroworshrink;thatis,valuescan\nbenlodified butitemsarenotaddedordeleted. Welllakethisassurnption for\nnowandconsider itsconsequences inSection17.5.1.However, sonleserializ\u00ad\nableschedules arenotconflictserializable, asillustrated inFigure17.1.This\nschedule isequivalent toexecuting thetransactions seriallyintheorderTI,~r2,", "585": "COnC'lLrrency Control\nT1 T2 T3\nR(A)\nW(A)\nCOllirnit\nVV(A)\nCOllirnit\nW(A)\nCommit\nFigure 1.7.1Serializable Schedule ThatIsNotConflict Serializable\nT3,butitisnotconflictequivalent tothisserialschedule becausethewritesof\nT1andT2areordered differently.\nItisusefultocaptureallpotential conflicts between thetransactions inasched\u00ad\nuleinaprecedence graph,alsocalledaserializability graph.Theprece\u00ad\ndencegraphforaschedule Scontains:\n\u2022 Anodeforeachcomnlitted transaction inS.\n\u2022AnarcfranlTitoTjifanactionofTiprecedes andconflicts withoneof\nTj'sactions.\nTheprecedence graphsfortheschedules showninFigures16.7,16.8,and17.1\nareshowninFigure17.2(partsa,b,andc,respectively).\n(a) (b)\nFigure17.2Examples ofPrecedence Graphs\n'I'heStrict2PLprotocol (introduced inSection16.4)allowsonlyconflictseri\u00ad\nalizableschedules, asisseenfrcHuthefollowing tworesults:", "586": "....-2~)b. CHAPTERIv\n1.Aschedule S'isconflict serializable ifandonlyifitsprecedence graphis\nacyclic.(Anequivalent serialschedule inthisC'k'3eisgivenbyanytopolog\u00ad\nicalsortoverfheprecedence graph.)\n2.Strict2PLensurest.hattheprecedence graphforanyschedule thatita11o\\vs\nisacyclic.\nAwidelystudiedvariantofStrict2PL,calledTwo-Phase Locking (2PL),\nrelaxesthesecondruleofStrict2PLtoallowtransactions toreleaselocksbefore\ntheend,thatis,beforethecomnlit orabortaction.For2PL,thesecondrule\nisreplaced bythefollowing rule:\n(2PL)(2)Atransaction cannotrequest additional locksonceitre\u00ad\nleasesanylock.\nThus,everytransaction h3.-\"a'growing' phaseinwhichitacquires locks,fol\u00ad\nlowedbya'shrinking' phaseinwhichitreleases locks.\nItcanbeshownthatevennonstrict 2PLensures acyclicity oftheprecedence\ngraphandtherefore allowsonlyconflict serializable schedules. Intuitively, an\nequivalent serialorderoftransactions isgivenbytheorderinwhichtransactions\nentertheirshrinking phase:IfT2readsorwritesanobjectwrittenbyTl,Tl\nIllUSthavereleased itslockontheobjectbefore712requested alockonthis\nobject. ~rhus,Tlprecedes T2.(Asirnilarargulnent showsthatTlprecedes\nT2if7'2writesanobjectpreviously readbyTl.AforIllalproofoftheclaim\nwouldhavetoshowthatthereisnocycleoftransactions that'precede' each\notherbythisargurnent.)\nAschedule issaidtobestrictifavaluewrittenbyatransaction Tisnot\nreadoroverwritten byothertransactions untilTeitherabortsoreOlnrnits.\nStrictschedules arerecoverable, donotrequirecascading aborts,andactionsof\naborted transactions canbeundonebyrestoring theoriginal valuesoflnodified\nobjects. (SeethelastexaInple inSection 16.::~.4.) Strict2PLirnproves on\n2PLbyguaranteeing thateveryallowed schedule isstrictinaddition tobeing\nconflict serializable. Thereasonisthatwhenatransaction 'Twritesanobject\nunderStrict2PL,itholdsthe(exclusive) lockuntilitconunits oraborts.Thus,\nnoothertransaction canseeorrnodifythisobjectuntilTiscornplete.\n]'hereaderisinvitedtorevisittheexarnples inSection 16.:~.3toseehowthe\ncorresponding schedules aredisallowed byStrict2PLand2PL.Sirnilarly, it\nwouldbeinstructive to\\vorkouthowtheschedules fortheexarnples inSection\n16.~3.4aredisallc)\\ved byStrict2PLbutnotby2PL.", "587": "17.1.1ViewSerializability\nConflict serializability issufficient butnotnecessary forserializability. A1n01'e\ngeneralsufficient condition isvievvserializability. Twoschedules 81and82over\nthesaInesetof\ntransactions\"------any transaction thatappears ineither81or82\nrnustalsoappearintheother-----------are viewequivalent undertheseconditions:\n1.IffTireadstheinitialvalueofobjectAin81,itBlustalsoreadtheinitial\nvalueofAin82.\n2.IfTireadsavalueofAwrittenbyTjin81,itIIlUstalsoreadthevalueof\nAwrittenbyTjin82.\n3.ForeachdataobjectA,thetransaction (ifany)thatperforlns thefinal\nwriteonAin81mustalsoperform thefinalwriteonAin82.\nAschedule isviewserializable ifitisviewequivalent toSaIneserialschedule.\nEveryconflictserializable schedule isviewserializable, although theconverse\nisnottrue. ~orexample, theschedule showninFigure17.1isviewserializable,\nalthough itisnotconflict serializable. Incidentally, notethatthisexalnple\ncontains blindwrites.Thisisnotacoincidence; itcanbeshownthatanyview\nserializable schedule thatisnotconflictserializable contains ablindwrite.\nAswesawinSection 17.1,efficient lockingprotocols allowustoensurethat\nonlyconflictserializable schedules areallowed. Enforcing ortestingvie\\vseri\u00ad\nalizability turnsouttobelIluchlnoreexpensive, andtheconcept therefore has\nlittlepractical use,although itincreases ourunderstanding ofserializability.\n17.2INTRODUCTION TOLOCKMANAGEMENT\nThepartoftheI)Bl\\1Sthatkeepstrackofthelocksissuedtotransactions is\ncalledthelockmanager. Thelocklnanager rnaintains alocktable,which\nisaha\"shtablewiththedataobjectidentifier (4Sthekey.TheDBNISalso\nInaintains adescriptive entryforeachtransaction inatransaction table,\nandalIlongotherthings,theentrycontains apointertoalistoflocksheldb:y\nthetransaction. Thislistischecked beforerequesting alock,toensurethata\ntransaction doesnotrequestthesaInelocktwice.\nAlocktableentryforanobject-u--which canbeapage,arecord,andso\non,depending ontheDBMS---contains thefollowing inforrnation: thenurnber\noftransactions currently holding a.lockontheobject(thiscanbernorethan\noneiftheobjectislockedinsharedrnode),thenatureofthelock(sharedor\nexclusive), andapointerto(1,queueoflockrequests.", "588": "554 CHAPTER 17\n17.2.1Implementing LockandUnlockRequests\nAccording totheStrict2PLprotocol, beforeatransaction Treadsorwritesa\ndatabase object0,itmustobtainasharedorexclusive lockon0andInust\nholdontothelockuntilitcommits oraborts. Whenatransaction needsa\nlockonanobject,itissuesalockrequesttothelockmanager:\n1.Ifasharedlockisrequested, thequeueofrequests isernpty,andtheobject\nisnotcurrently lockedinexclusive mode,thelockmanager grantsthelock\nandupdates thelocktableentryfortheobject(indicating thattheobject\nislockedinsharedmode,andincrernenting thenumber oftransactions\nholdingalockbyone).\n2.Ifanexclusive lockisrequested andnotransaction currently holdsalock\nontheobject(whichalsoimpliesthequeueofrequests isempty),thelock\nrnanager grantsthelockandupdates thelocktableentry.\n3.Otherwise, therequested lockcannotbeimmediately granted, andthe\nlockrequestisaddedtothequeueoflockrequests forthisobject.The\ntransaction requesting thelockissuspended.\nWhenatransaction abortsorcomrnits, itreleases allitslocks.Whenalock\nonanobjectisreleased, thelockmanager updates thelocktableentryforthe\nobjectandexarnines thelockrequestattheheadofthequeueforthisobject.\nIfthisrequestcannowbegranted, thetransaction thatmadetherequestis\nwokenupandgiventhelock.Indeed,ifseveralrequests forasharedlockonthe\nobjectareatthefrontofthequeue,alloftheserequests cannowbegranted\ntogether.\nNotethatifTIhasasharedlockon0and1'2requests anexclusive lock,\nT2'srequestisqueued. Now,ifT3requests asharedlock,itsrequestenters\nthequeuebehindthatofT2,eventhoughtherequested lockiscornpatible\nwiththelockheldbyTI.ThisruleensuresthatT2doesnotstarve,thatis,\nwaitindefinitely whileastreamofothertransactions acquiresharedlocksand\ntherebypreventT2frorngettingtheexclusive lockforwhichitiswaiting.\nAtomicity ofLockingandUnlocking\nTheirnplernentation oflockandl1nlockcornrnands rnustensurethattheseare\natomicoperations. Toensureatornicity oftheseoperations whenseveralin\u00ad\nstancesofthelockrnanager codecanexccuteconcurrently, accesstothelock\ntablehastobeguarded byanoperating systernsynchronization rnechanisrn\nsucha..sasernaphore.", "589": "Co'nc'UT'rency (}onlToI 5~5\nTounderstand why,suppose thatatransaction requests anexclusive lock.\nThelockmanager checksandfindsthatnoothertransaction holdsalockon\ntheobjectandtherefore decidestogranttherequest. But,inthe11leantirne,\nanother transaction rnighthaverequested andreceived aconflicting lock.To\nprevent this,theentiresequence ofactions.inalockrequestcall(checking\ntoseeiftherequestcanbegranted, updating thelocktable,etc.)mustbe\nirnplernented asanatornicoperation.\nOtherIssues:Latches, Convoys\nInaddition tolocks,whichareheldoveralongduration, aDBMSalsosupports\nshort-duration latches. Settingalatchbeforereadingorwritingapageensures\nthatthephysical readorwriteoperation isatomic;otherwise, tworead/write\noperations rnightconflictiftheobjectsbeinglockeddonotcorrespond todisk\npages(theunitsofI/O).Latchesareunsetimmediately after thephysical read\norwriteoperation iscOlnpleted.\nWeconcentrated thusfaronhowtheDBMSschedules transactions basedon\ntheirrequests forlocks.Thisinterleaving interacts withtheoperating system's\nscheduling ofprocesses' accesstotheCPUandcanleadtoasituation called\naconvoy,wheremostoftheCPUcyclesarespentonprocessswitching. The\nproblem isthatatransaction Tholdingaheavilyusedlockmaybesuspended\nbytheoperating system. UntHTisresurned, everyothertransaction that\nneedsthislockisqueued. Suchqueues,calledconvoys, canquicklybecome\nverylong;aconvoy,onceforrned, tendstobestable.Convoys areoneofthe\ndrawbacks ofbuilding aDB~lSontopofageneral-purpose operating system\nwithpreeruptive scheduling.\n17.3LOCKCONVERSIONS\nAtransaction rnayneedtoacquireanexclusive lockonanobjectforwhichit\nalreadyholdsasharedlock.Forexarnple, aSQLupdatestatenlent couldresult\ninsharedlocksbeingsetoneachrowinatable.Ifarowsatisfiesthecondition\n(intheWHEREclause)forbeingupdated, anexclusive lockmustbeobtained\nforthatrow.\nSuchalockupgrade requestlnustbehandled specially bygranting theexclu\u00ad\nsivelockillunediately ifnoothertransaction holdsasharedlockontheobject\nandinserting therequestatthefrontofthequeueother\\vise. Therationale\nforfavoring thetransaction thusisthatitalready 1101dsasharedlockonthe\nobjectandqueuing itbehind.another tretnsaction thatwantsanexclusive lock\nonthf~SeHneobjectcausesbothadeadlock. UnfortunatelY,while favoring lock\nupgrades helps,itdoesnotpreventdeadlocks causedbytwoconflicting upgrade", "590": "556 CHAPTER 17\nrequests. Forexalnplc, iftwotransactions thatholdasharedlockonanobject\nbothrequestanupgrade toanexclusive lock,thisleadstoadeadlock.\nAbetterapproach istoavoidtheneedforlockupgrades altogether byobtaining\nexclusive locksinitially, anddowngrading toasharedlockonceitisclearthat\nthisissufficient. Inourexalnple ofanSQLupdatestatelnent, rowsinatable\narelockedinexclusive rnodefirst.Ifarowdoesnotsatisfythecondition for\nbeingupdated, thelockontherowisdnwngraded toasharedlock.Doesthe\ndovvngrade approach violatethe2PLrequirernent? Onthesurface, itdoes,\nbecause downgrading reducesthelockingprivileges heldbyatransaction, and\nthetransaction Illaygoontoacquireotherlocks.However, thisisaspecialcase,\nbecause thetransaction didnothingbutreadtheobjectthatitdowngraded,\neventhoughitconservatively obtained anexclusive lock.Wecansafelyexpand\nourdefinition of2PLfromSection17.1toallowlockdowngrades inthegrowing\nphase,provided thatthetransaction hasnotlnodified theobject.\nThedowngrade approach reducesconcurrency byobtaining writelocksinsome\ncaseswheretheyarenotrequired. Onthewhole,however, itirnproves through\u00ad\nputbyreducing deadlocks. Thisapproach istherefore widelyusedincurrent\ncommercial systems. Concurrency canbeincreased byintroducing anewkind\noflock,calledanupdate lock,thatiscornpatible withsharedlocksbutnot\notherupdateandexclusive locks.Bysettinganupdatelockinitially, rather\nthanexclusive locks,wepreventconflicts withotherreadoperations. Oncewe\naresureweneednotupdatetheobject,wecandowngrade toasharedlock.If\nweneedtoupdatetheobject,wernustfirstupgrade toanexclusive lock.This\nupgrade doesnotleadtoadeadlock because noothertransaction canhavean\nupgrade orexclusive lockontheobject.\n17.4DEALING WITHDEADLOCKS\nDeadlocks tendtoberareandtypically involveveryfewtransactions. Inprac\u00ad\ntice,therefore, databa.'3c systerns periodically checkfordeadlocks. 'Vhena\ntransaction Tiissuspended because alockthatitrequests cannotbegranted,\nitrnustwa,ituntilalltransactions Tjthatcurrently holdconflicting locksre\u00ad\nlea,'3ethcrn.Thelockrnanager rnaintains astructure calledawaits-for graph\ntodetectdeadlock cycles.Thenodes corr(~spond toactivetransactions, and\nthereisanarcfrolnTi to'Tjif(andonlyif)Tiis\\vaitingfor1)toreleasea\nlodeThelockrnanagcr addsedgestothisgraphwhenitqueueslockrequests\nandrernoves edges\\vhcnitgra,ntslockrequests.\nConsider theschedule showninF'igure17.:3,Thelaststep,sho\\vnbelovvthe\nline,createsacycleinthe\\vaits-for graph.Figure17.4shovvsthe\u00b7waits-for\ngraphbeforeandafterthisstep.", "591": "COnC1tTTency C'ontTol\nTlT2 T3T4\nS(A)\nJl(A)\nX(B)\nvV(B)\n8(B)\n8(C)\nR(C)\nX(C)\nX(B)\nX(A)\nFigure17.3Schedule Illustrating Deadlock597\n(a)\nFigure 17.4\\\\!aits-for GraphBeforeandAfterDeadlock", "592": "558 CHAPTER lw7\nObservethatthe\\vaits-for graphdescribes allactivetransactions, someofwhich\neventually abort.IfthereisanedgefroInTitoT'jinthe'N~aits-for graph,and\nbothTiandTjeventually commit, thereisanedgeintheopposite direc\u00ad\ntion(froInl'jtoTi)intheprecedence graph(whichinvolves onlycOlluuitted\ntransactions) .\nThewaits-for graphisperiodically checked forcycles,whichindicate deadlock.\nAdeadlock isresolved byaborting atransaction thatisonacycleandreleasing\nitslocks;thisactionallowsSOlneofthewaitingtransactions toproceed. The\nchoiceofwhichtransaction toabortcanbemadeusingseveralcriteria: the\nonewiththefewestlocks,theonethathasdonetheleastwork,theonethatis\nfarthest fromcompletion, andsoall.FUrther, atransaction mighthavebeen\nrepeatedly restarted; ifso,itshouldeventually befavored duringdeadlock\ndetection andallowedtocomplete.\nAsilnplealternative tomaintaining awaits-for graphistoidentify deadlocks\nthrough atimeout mechanism: Ifatransaction hasbeenwaitingtoolongfor\nalock,weassume(pessiruistically) thatitisinadeadlock cycleandabortit.\n17.4.1Deadlock Prevention\nElnpirical resultsindicatethatdeadlocks arerelatively infrequent, anddetection\u00ad\nbasedschemes workwellinpractice. However, ifthereisahighlevelofcon\u00ad\ntentionforlocksandtherefore anincreased likelihood ofdeadlocks, prevention\u00ad\nbasedschelnes couldperform better.Wecanpreventdeadlocks bygivingeach\ntransaction apriority andensuring thatlower-priority transactions arenot\nallowedtowaitforhigher-priority transactions (orviceversa). Onewayto\nassignpriorities istogiveeachtransaction atimestamp whenitstartsup.\nThelowerthetimestamp, thehigheristhetransaction's priority; thatis,the\noldesttransaction hasthehighestpriority.\nIfatransaction Tirequests alockandtransaction Tjholdsaconflicting lock,\nthelocklnanager canuseoneofthefollowing twopolicies:\nIIWait-die: IfTihashigherpriority, itisallowedtowait;otherwise, itis\naborted.\nIIWound-wait: IfTihashigherpriority, abort7);otherwise, l\"1iwaits.\nInthe\\vait-die scherne, lower-priority transactions canneverwaitforhigher\u00ad\npriority transactions. Inthewound-wait scherne, higher-priority transactions\nneverwaitforlower-priority transactions. Ineitherease,nodeadlock cyc.le\ndevelops.", "593": "Concurrency Control 539\nAsubtlepointisthatwenlustalsoensurethatnotransaction isperennially\naborted because itneverhasasufficiently highpriority. (Notethat,inboth\nschernes, thehigher-priority transaction isneveraborted.) Whenatransac\u00ad\ntionisaborted andrestarted, itshouldbegiventhesametimestamp ithad\noriginally. Reissuing timestarnps inthiswayensuresthateachtransaction\nwilleventually becornetheoldesttransaction, andtherefore theonewiththe\nhighestpriority, andwillgetallthelocksitrequires.\nThewait-die schemeisnonpreemptive; onlyatransaction requesting alockcan\nbeaborted. Asatransaction growsolder(anditspriorityincreases), ittends\ntowaitformoreandrnoreyounger transactions. Ayounger transaction that\nconflicts withanoldertransaction mayberepeatedly aborted (adisadvantage\nwithrespecttowound-wait), butontheotherhand,atransaction thathas\nallthelocksitneedsisneveraborted fordeadlock reasons(anadvantage with\nrespecttowound-wait, whichispreemptive).\nAvariantof2PL,calledConservative 2PL,canalsopreventdeadlocks. Un\u00ad\nderConservative 2PL,atransaction obtainsallthelocksitwilleverneedwhen\nitbegins,orblockswaitingfortheselockstobecome available. Thisscheme\nensuresthattherewillbenodeadlocks, and,perhaps llloreimportant, thata\ntransaction thatalreadyholdssomelockswillnotblockwaitingforotherlocks.\nIflockcontention isheavy,Conservative 2PLcanreducethetimethatlocks\nareheldonaverage, because transactions thatholdlocksareneverblocked.\nThetrade-off isthatatransaction acquires locksearlier,andiflockcontention\nislow,locksareheldlongerunderConservative 2PL.Fromapractical per\u00ad\nspective, itishardtoknowexactlywhatlocksareneededaheadoftime,and\nthisapproach leadstosettingmorelocksthannecessary. Italsohashigher\noverhead forsettinglocksbecause atransaction hastoreleasealllocksandtry\ntoobtainthernalloverifitfailstoobtainevenonelockthatitneeds.This\napproach istherefore notusedinpractice.\n17.5\nSPECIAI-JIZED LOCKING TECHNIQUES\nThusfarwehavetreatedadatabase asafixedcollection ofindependent data\nobjectsinourpresentation oflockingprotocols. Wenowrelaxeachofthese\nrestrictions anddiscusstheconsequences.\nIfthecollection ofdataba.se objectsisnotfixed,butcangrowandshrink\nthroughtheinsertion anddeletion ofobjects, wemustdealwithasubtlecOlnpli\u00ad\ncationknown a'3thephantom, problem, whichwasillustrated inSection16.6.2.\nWediscussthisproblern inSection17.5.1.", "594": "560 CHAPTER 17\nAlthough treating adatabase H\",Sanindependent collection ofobjectsisade\u00ad\nquateforadiscussion ofserializability andrecoverability, luuchbetterperfc)l'\u00ad\nrnancecansOlnetilnes beobtained usingprotocols thatrecognize andexploit\ntherelationships between objects. vVediscusstwosuchC<l\"ses,nalnely, locking\nintree-structured indexes (Section 17.5.2)andlockingacollection ofobjects\nwithcontairnnent relationships between the1n(Section 17.5.3).\n17.5.1Dynamic Databases andthePhantom Problem\nConsider thefollowing exarnple: rrransaction TlscanstheSailorsrelation to\nfindtheoldestsailorforeachoftheratinglevels1and2.First,Tlidentifies\nandlocksallpages(assurning thatpage-level locksareset)containing sailors\nvvithrating1andthenfindstheageoftheoldestsailor,whichis,say,71.\nNext,transaction T2insertsanewsailorwithrating1andage96.Observe\nthatthisnewSailorsrecordcanbeinserted ontoapagethatdoesnotcontain\nothersailorswithrating1;thus,anexclusive lockonthispagedoesnotconflict\nwithanyofthelocksheldbyTl.T2alsolocksthepagecontaining theoldest\nsailorwithrating2anddeletesthissailor(whoseageis,say,80).T2then\ncomrnits andreleases itslocks.Finally, transaction T1identifies andlocks\npagescontaining (allremaining) sailorswithrating2andfindstheageofthe\noldestsuchsailor,whichis,say,63.\nTheresultoftheinterleaved execution isthatages71and63areprintedin\nresponse tothequery.IfT1hadrunfirst,thenT2,wewouldhavegottenthe\nages71and80;ifT2hadrunfirst,thenT1,wewouldhavegottentheages\n96and63.Thus,theresultoftheinterleaved execution isnotidentical toany\nserialexection ofTland1'2,eventhoughbothtransactions followStrict2PL\nandcOlnmit. Theproblem isthatT1assurnes thatthepagesithaslocked\ninclude allpagescontaining Sailorsrecordswithrating1,andthisassurnption\nisviolated whenrT2insertsanewsuchsailoronadifferent page.\n'rheHawisnotintheStrict2PLprotocol. R,ather, itisinT1'sirnplicit as\u00ad\nsurnption thatithaslockedthesetofallSailors n~cordswith ratingvalue1.\nT1'ssernantics requires ittoidentify allsuchrecords, butlockingpagesthat\ncontainsuchrecordsatagiventirnedoesnotprevent new\"phantorn\" records\nfrornbeingaddedonotherpages.]\"'1hasth~refore notlockedthesetofdesired\nSailorsrecords,\nStrict2PLguarantees conflictserializability; indeed,therearenocyclesinthe\nprecedence graphforthisexarnple because conflicts aredefinedwithrespect\ntoobjects(inthisexcunple, pages)read/written bythetraJlsactions. However,\nbecause thesetofobjectsthatshrnddhavebeenlockedbyTlwasalteredby\ntheactionsofT2,theolltcorne oftheschedule differedfrollltheoutcorne ofany", "595": "CfoncuTTency Control 561\nserialexecution. 1~hisexalllple bringsoutanirnportant pointaboutconflict\nserializability: Ifnewitenlsareaddedtothedataba'ie, conflictserializability\ndoesnotguarantee serializability .\n.i\\closerlookathowatransaction identifies pagescontaining Sailorsrecords\nvvithrating1suggests hovvtheproblenl canbehandled:\n\u2022Ifthereisnoindexandallpagesinthefilernustbescanned, T1IUUSt\nsomeho\\v ensurf~thatnonewpagesareaddedtothefile,inaddition to\nlockingallexisting pages.\n\u2022Ifthereisanindexontheratingfield,T1canobtainalockontheindex\npage~again, assurning thatphysical lockingisdoneatthepagelevel-that\ncontains adataentrywithrating=1.Iftherearenosuchdataentries,that\nis,norecordswiththisratingvalue,thepagethatwouldcontainadata\nentryforrating=l islockedtoprevent sucharecordfrombeinginserted.\nAnytransaction thattriestoinsertarecordwithrating=-l intotheSailors\nrelation 11lUStinsertadataentrypointing tothenewrecordintothisindex\npageandisblocked untilT1releases itslocks.Thistechnique iscalled\nindexlocking.\nBothtechniques effectively giveT1alockonthesetofSailorsrecordswithrat\u00ad\ning=l:Eachexisting recordwithrating=l isprotected frolllchanges byother\ntransactions, andadditionally, newrecordswithrating=l cannotbeinserted.\nAnindependent issueishowtransaction 7'1canefficiently identify andlock\ntheindexpagecontaining rating=1.Wediscussthisissueforthecaseoftree\u00ad\nstructured indexesinSection17.5.2.\n\\Venotethatindexlockingisaspecialca..seofaluoregeneralconcept called\npredicate locking. Inourexalnple, thelockontheindexpageirnplieitly\nlockedallSailorsrecordsthatsatisfythelogicalpredicate rating=1.1V101'e\ngenerally, wecn]}support irnplicitlockingofallrecordsthatrnatchanarbitra,ry\npredicate. General predicate lockingisexpensive toirnplenlent andtherefore\nnotcOllullonly used.\n17.5.2Concurrency ControlinB+Trees\nAstraightforward approach toconcurrency controlforB+treesand ISA~iI\nindexesistoignoretheindexstructure, treateachpageasadataobject,and\nusesenneversionof2PL.ThissiInplistic lockingstrategy vvouldleadtoveryhigh\nlockcontention inthehigherlevelsofthetree~because everytreesearchbegins\nattherootandproceeds alongsornepathtoaleafnode.Fortunately, Innch\nInoreefficient lockingprotocols thatexploitthehierarchical structure ofatree", "596": "562 CHAPTER J7\nindexareknowntoreducethelockingoverhead whileensuring seriaIizability\nandrecoverability.We discusssorneoftheseapproaches briefly,concentrating\nonthesearchandinsertoperations.\nTwoobservations providethenecessary insight:\n1.Thehigherlevelsofthetreeonlydirectsearches. Allthe'real'datais\nintheleaflevels(intheforrnatofoneofthethreealternatives fordata\nentries).\n2.Forinserts,anodemustbelocked(inexclusive rnode, ofcourse)onlyifa\nsplitcanpropagate uptoitfrornthemodified leaf.\nSearches shouldobtainsharedlocksonnodes,starting attherootandpro\u00ad\nceeding alongapathtothedesiredleaf.Thefirstobservation suggests thata\nlockonanodecanbereleased assoonasalockonachildnodeisobtained,\nbecause searches nevergobackupthetree.\nAconservative lockingstrategy forinsertswouldbetoobtainexclusive lockson\nallnodesaswegodownfromtheroottotheleafnodetobemodified, because\nsplitscanpropagate allthewayfromaleaftotheroot.However, oncewelock\nthechildofanode,thelockonthenodeisrequired onlyintheeventthata\nsplitpropagates backtoit.Inparticular, ifthechildofthisnode(onthepath\ntothemodified leaf)isnotfullwhenitislocked,anysplitthatpropagates up\ntothechildcanberesolved atthechild,anddoesnotpropagate furthertothe\ncurrentnode.Therefore, whenwelockachildnode,wecanreleasethelockon\ntheparentifthechildisnotfull.Thelocksheldthusbyaninsertforceany\nothertransaction following thesarnepathtowaitattheearliestpoint(i.e.,the\nnodenearesttheroot)thatrnightbeaffected bytheinsert.Thetechnique of\nlockingachildnodeand(ifpossible) releasing thelockontheparentiscalled\nlock-coupling, orcrabbing (thinkofhowacrabwalks,andcornpare itto\nhowweproceed downatree,alternately releasing alockonaparentandsetting\nalockonachild).\nWeillustrate B-t-treelockingusingthetreeinFigure17.5.Tosearchfordata\nentry38*,atransaction T'irnustobtainanSlockonnodeA,readthecontents\nanddeterrnine thatitneedstoexamine nodeB,obtainanSlockonnodeB\nandreleasethelockonA,thenobtainanSlockonnodeC1andrelea.'3ethe\nlockonB,thenobtainanSlockonnodeDandreleasethelockon().\nTialwaysrnaintains alockallonenodeinthepath,toforcenewtransactions\nthatwanttoreadornlodifynodesonthesarnepathtowaituntilthecurrent\ntransaction isdone.Iftransaction 7)wantstodelete38*,forexarnple, itrnust\nalsotraverse thepathfro111theroottonodeDandisforcedtowaituntil11i", "597": "CO'TLc1trrency ContTol\nA\nFigure17.5B+'TheeLocking Example\nisdone.Ofcourse,ifSOl11etransaction Tkholdsalockon,say,nodeCbefore\nTireachesthisnode,Tiissimilarly forcedtowaitforTktocomplete.\nToinsertdataentry45*,atransaction 111UStobtainanSlockonnodeA,obtain\nan8lockonnodeBandreleasethelockonA,thenobtainanSlockonnode\nC(observe thatthelockonBisnotreleased, because Cisfull),thenobtain\nanXlockonnodeEandreleasethelocksonCandthenB.Because nodeE\nhasspaceforthenewentry,theinsertisaccomplished bymodifying thisnode.\nIncontrast, consider theinsertion ofdataentry25*.Proceeding asforthe\ninsertof45*,weobtainanXlockonnodeH.Unfortunately, thisnodeisfull\nandmustbesplit.Splitting Hrequiresthatwealsornodifytheparent,nodeF,\nbutthetransaction ha...,onlyanSlockonF.Thus,itmustrequestanupgrade\nofthislocktoanXlock.Ifnoothertra,nsaction holdsanSlockonF,the\nupgrade isgranted, andsinceFhasspace,thesplitdoesnotpropagate further\nandtheinsertion of25*canproceed (bysplittingIfandlockingGtomodify\nthesiblingpointerinItopointtothenewlycreatednode).However, ifanother\ntransaction holdsan8lockonnodeF,thefirsttransaction issuspended until\nthistransaction relea.sesitsSlack.\nObserve thatifanother transaction holdsan8lockon}'andalsowantsto\naccessnodeH,wehaveadeadlock becausethefirsttransaction hasanXlock\nonIf.Thepreceding exarnple alsoillustrates aninteresting pointaboutsibling\npointers: When\\vesplitleafnodeIf,thenewnodern'Ustbeaddedtotheleft\nofIi,sinceotherwise thenodewhosesiblingpointeristobechanged would\nbenode1,whichha\"-,,adifferent parent.TornodifyasiblingpointeronI,we", "598": "564 C~HAPTER 1t{\n'wouldhavetolockitsparent,nodeC:(andpossibly ancestors ofC:,inorderto\nlocken.\nExceptforthelocksonint(~rrnediate nodesthatweindicated couldbereleased\nearly,sennevariantof2PLHUlstbeusedtogovernwhenlockscanbereleased,\ntoensureserializability andrecoverability.\nT'hisapproach irllproves considerably onthenaiveuseof2PL,butseveralex\u00ad\nclusivelocksarestillsetunnecessarily and,although theyarequicklyreleased,\naffectperfon.nance substantially. OnewaytoiInprove perforlllance isforinserts\ntoobtainsharedlocksinsteadofexclusive locks,exceptfortheleaf,whichis\nlockedinexclusive 11lode.Inthevastrnajority ofcases,asplitisnotrequired\nandthisapproach worksverywell.Iftheleafisfull,however, weBlustupgrade\nfromsharedlockstoexclusive locksforallnodestowhichthesplitpropagates.\nNotethatsuchlockupgrade requests canalsoleadtodeadlocks.\nThetreelockingidea'3thatwedescribe illustrate thepotential forefficient\nlockingprotocols inthisveryimportant specialcase,buttheyarenotthe\ncurrentstateoftheart.Theinterested readershouldpursuetheleadsinthe\nbibliography.\n17.5.3Multiple-Granularity Locking\nAnother specialized lockingstrategy, calledmultiple-granularity locking,\nallowsustoefficiently setlocksonobjectsthatcontainotherobjects.\nForinstance, adatabase contains severalfiles,afileisacollection ofpages,\nandapageisacollection ofrecords.Atransaction thatexpectstoaccessrnost\nofthepagesinafileshouldprobably setalockontheentirefile,ratherthan\nlockingindividual pages(orreeords) whenitneedsthern.Doingsoreduces\nthelockingoverhead considerably. Ontheotherhand,othertra,nsactions that\nrequireaccesstopartsofthefile....\u00b7....\u00b7-evenpartsnotneededbythistransaction\u00b7\u00b7-\u00b7 ..\u00b7\u00ad\nareblocked. Ifatransaction accesses relatively fewpagesofthefile,itisbetter\ntolockonlythosepages.Sirnilarly, ifatransaction accesses severalrecordson\napage,itshouldlocktheentirepage,andifitaccesses justafewrecords, it\nshouldlockjustthoserecords.\nThequestion tobeaddressed ish(nvalockrnanager canefficiently ensurethat\napage,forexaruple, isnotlockedbyatransaction whileanother transaction\nholdsaconflicting lockonthefilecontaining thepage(a.ndtherefore, irnplicitly,\nonthepage).", "599": "ConC7lTTency COintTol 5jj5\nTheideaistoexploitthehierarchical natureofthe'contains~ relationship. A\ndat.abase contains asetoffiles,eachfilecontains asetofpages,andeachpage\ncontains asetofrecords. Thiscontairunent hierarchy canbethought ofas\natreeofobjects, \\vhereeachnodecontains allitschildren. (Theapproach\ncaneasilybeextended tocoverhierarchies thatarenottrees,butwedonot\ndiscussthisextension.) Alockonanodelocksthatnodeand,irnplicitly, allits\ndescendants. (Notethatthisinterpretation ofalockisverydifferent fron1B+\ntreelocking, wherelockinganodedoesnotlockanydescendants ilnplicitly.)\nInaddition toshared(8)andexclusive (XO)locks,rnultiple-granularity locking\nprotocols alsousetwonewkindsoflocks,calledintention shared (18)and\nintention exclusive (IX)locks.18locksconflictonlywithXlocks.IX\nlocksconflictwith8andXlocks.TolockanodeinS(respectively, X)luode,\natransaction mustfirstlockallitsancestors in18(respectively, 1X)rllode.\nThus,ifatransaction locksanodein8rIlode,noothertransaction canhave\nlockedanyancestor inXrnode;siInilarly, ifatransaction locksanodeinX\nmode,noothertransaction canhavelockedanyancestor in8orXmode.This\nensuresthatnoothertransaction holdsalockonanancestor thatconflicts\nwiththerequested 8orXlockonthenode.\nAcommon situation isthatatransaction needstoreadanentirefileandmodify\nafewoftherecordsinit;thatis,itneedsan8lockonthefileandan1Xlock\nsothatitcansubsequently locksorneofthecontained objectsinXmode.It\nisusefultodefineanewkindoflock,calledan81Xlock,thatislogically\nequivalent toholdingan8lockandanIXlock.Atransaction canobtaina\nsingle81Xlock(whichconflicts withanylockthatconflicts witheitherSor\nIX)insteadofan8lockandanIXlock.\nAsubtlepointisthatlocksrnustberelea..sed inleaf-to-root orderforthisproto\u00ad\ncoltoworkcorrectly. Tbseethis,consider whathappens whenatransaction Ti\nlocksallnodesonapathfrolHtheroot(corresponding totheentiredatabase)\ntothenodecorresponding tosornepagepin18rnode,lockspin8rHode,and\nthenrelea..sesthelockontherootnode.Another transaction Tjcouldnow\nobtainanXlockontheroot.ThislockiInplicitly givesTjan.\u00a3Ylockonpage\np,whichconflicts withthe8lockcurrently heldbyTi.\nlIIultiple-granularity lockinglllustbeusedwith2PLtoensureserializability.\nThe2PLprotocol dictates whenlockscanberele(ksed. Atthattirne,locksob\u00ad\ntainedusingrIlultiple-granularity lockingcanbereleased andIIlUStberelcclsed\ninleaf-to-rootorder.\nFinally, thereisthequestion ofhO\\\\Itodecidewhatgranularity oflockingis\nappropriate foragiventransaction. Oneapproach istobeginbyobtaining fine\ngranularity locks(e.g.,attherecordlevel)and,afterthetransaction requests", "600": "566 CHAPTER 107\n-~\",,_._ ..-__._.._.._..__--_.--_._._ ..-- __-~.\" __._-_ _........ .._-_._-~.,,\"\nLockGranularity: SOfiedatabase systeIlls allowprogrammers toover\u00ad\nridethedefaultmechanisllt forchoosing alockgranularity. Forexalnple,\nMicrosoft SQLServerallowsuserstoselectpagelockinginsteadoftable\nlocking,usingthekeyword PAGLOCK. IBrvf'sDB2 UDBallowsforexplicit\ntable-level locking.\nacertainnUlnber oflocksatthatgranularity, tostartobtaining locksatthe\nnexthighergranularity (e.g.,atthepagelevel).Thisprocedure iscalledlock\nescalation.\n17.6CONCURRENCY CONTROL WITHOUT LOCKING\nLocking isthemostwidelyusedapproach toconcurrency controlinaDBMS,\nbutitisnottheonlyone.Wenowconsider somealternative approaches.\n17.6.1Optimistic Concurrency Control\nLocking protocols takeapessimistic approach toconflicts between transactions\nanduseeithertransaction abortorblocking toresolveconflicts. Inasystenl\nwithrelatively lightcontention fordataobjects,theoverhead ofobtaining locks\nandfollowing alockingprotocol mustnonetheless bepaid.\nInoptimistic concurrency control,thebasicpremise isthatmosttransactions\ndonotconflictwithothertransactions, andtheideaistobeaspermissive\naspossible inallowing transactions toexecute. Transactions proceed inthree\nphases:\n1.Read:Thetransaction executes, reading valuesfroInthedatabase and\nwritingtoaprivateworkspace.\n2.Validation: Ifthetransaction decidesthatitwantstoc0l111uit, theDBIvIS\ncheckswhether thetransaction couldpossibly haveconflicted withany\notherconcurrently executing transaction. Ifthereisapossible conflict, the\ntransaction isaborted; itsprivateworkspace isclearedanditisrestarted.\n:3.Write: Ifvalidation deterrnines thattherearenopossible confliets, the\nchangestodataobjects111adebythetransaction initsprivateworkspace\narecopiedintothedataba.se.\nIf,indeed,therearefewconfiicts, andvalidation canbedoneefficiently, this\napproach shouldleadtobetter'performance thanlocking. Iftherearernany", "601": "Concurrency Control 567\nconflicts, thecostofrepeatedly restarting transactions (thereby wasting the\n,yorkthey'vedone)hurtsperfornlance significantly.\nEachtransaction Tiisassigned athnestamp TS(T'i)atthebeginning ofits\nvalidation pha.':ie,andthevalidation criterion checkswhether thetiITlestalnp\u00ad\nordering oftransactions isanequivalent serialorder.Foreverypairoftransac\u00ad\ntionsTiandTjsuchthatTS(l\"1i)<TS(Tj), oneofthefollowing validation\nconditions ITIUSthold:\n1.Ticompletes (allthreephases)beforeTjbegins.\n2.Ticompletes beforeTjstartsitsWritephase,andTidoesnotwriteany\ndatabase objectreadbyTj.\n3.Ticompletes itsReadphasebeforeTjcompletes itsReadphase,andTi\ndoesnotwriteanydatabase objectthatiseitherreadorwrittenbyTj.\nTovalidate Tj,wemustchecktoseethatoneoftheseconditions holdswith\nrespecttoeachcomlnitted transaction TisuchthatTS(Ti)<TS(Tj). Each\noftheseconditions ensuresthatTj'smodifications arenotvisibletoTi.\nFurther, thefirstcondition allowsTjtoseesomeofTi'schanges, butclearly,\ntheyexecutecompletely inserialorderwithrespecttoeachother.Thesecond\ncondition allowsTjtoreadobjectswhileTiisstillmodifying objects,butthere\nisnoconflictbecauseTjdoesnotreadanyobjectrnodified byT'i.Although\nTjmightoverwrite someobjectswrittenbyTi,allofTi'swritesprecede allof\nTj'swrites.Thethirdcondition allowsTiandTjtowriteobjectsatthesame\ntimeandthushaveevenIT10reoverlapintimethanthesecondcondition, but\nthesetsofobjectswrittenbythetwotransactions cannotoverlap. Thus,no\nRW,WR,orWWconflicts arepossible ifanyofthesethreeconditions ismet.\nChecking thesevalidation criteriarequires ustomaintain listsofobjectsread\nandwrittenbyeachtransaction. Further, whileonetransaction isbeingvali\u00ad\ndated,noothertransaction canbeallowedtocommit; otherwise, thevalidation\nofthefirsttransaction mightmissconflicts withrespecttothenewlycom\u00ad\nmittedtransaction. TheWritephaseofavalidated transaction rnustalsobe\ncompleted (sothatitseffectsarevisibleoutsideitsprivateworkspace) before\nothertransactions canbevalidated.\nAsynchronization rnechanisrn suchasacriticalsection canbeusedtoensure\nthatatmostonetransaction isinits(colllbined) Validation/Write phasesat\nanytirne.(Whenaprocess isexecuting acriticalsectioninitscode,the\nsysternsuspends allotherprocesses.) Obviously, itisirnportant tokeepthese\npha~es ~lSshort H.Spossible inordertorniniruize theirnpactonconcurrency. If\ncopiesofrnodified objectshavetobecopiedfrorntheprivateworkspace, this", "602": "568 CHAPTER 17\ncanrnakethe\\Vritephaselong.Analternative approach (whichcarriesthe\npenaltyofpoorphysical localityofobjects, suchasB\u00b7+\u00b7treeleafpages,that\nrnustbeclustered) istousealevelofindirection. Inthisschernc, everyobject\nisaccessed viaalogicalpointer, andinthe\\Vritephase,wesirnplyswitchthe\nlogicalpointertopointtotheversionoftheobjectintheprivateworkspace,\ninsteadofcopyingthe0bject.\nClearly,itisnottheca.scthatoptiInistic concurrency controlhasnooverheads;\nrather,thelockingoverheads oflock-based approaches arereplaced withthe\noverheads ofrecording read-lists andwrite-lists fortransactions, checking for\nconflicts, andcopying changes frorntheprivateworkspace. Sirnilarly, theirn\u00ad\nplicitcostofblocking inalock-based approach isreplaced bytheimplicitcost\noftheworkwastedbyrestarted transactions.\nImproved Conflict Resolution1\nOptirnistic Concurrency Controlusingthethreevalidation conditions described\nearlierisoftenoverlyconservative andunnecessarily abortsandrestartstrans\u00ad\nactions. Inparticular, according tothevalidation conditions, T'icannotwrite\nanyobjectreadbyTj.IIowever, sincethevalidation isairnedatensuring that\nTilogically executes beforeTj,thereisnoharmifTiwritesalldataitems\nrequired byTjbefore7)readstheIn.\nTheproblerIl arisesbecause wehavenowaytotellwhenTiwrotetheobject\n(relative toTj'sreadingit)atthetirnewevalidateTj,sinceallwehaveisthe\nlistofobjectswrittenbyT'iandthelistreadbyTj.Suchfalseconflicts canbe\nalleviated byafiner-grain resolution ofdataconflicts, usingrnechanisrI1s very\nsinlilartolocking.\nThebasicideaisthateachtransaction intheR,caclpha.setellstheDBMSabout\niteIIlsitisreading, and\u00b7whenatransaction Tiiscornrnitted (anditswritesare\naccepted), theDBMScheckswhether anyoftheiternswrittenbyTiarebeing\nreadbyany(yettobevalidated) transaction Tj.Ifso,wekno\\vthatTj's\nvalidation rnusteventually fail.vVecaneitherallowT,itodiscover thiswhen\nitisvalidated (thediepolicy)orkillitandrestartitinnnediately (thekill\npolicy).\nrfhedetailsarec1.,)follo\\vs. Beforereadingadataiterrl, (1,transaction Tenters\nanaccessentryinah::lShtable.Theaccessentrycontains thetransact'ion\nid,adataobjectid,andarn..odified flag(initially settofalse),andentriesare\nhashedonthedataobjectid.Aterl1porary exclusive lockisobtained onthe\n1\"\\VethankAlexander Thoma..sian forwritingthissection.", "603": "(}O'lLCU1\"rency Cfontrol 569\n$\nhashbucketcontaining theentry,andthelockisheld\\vhilethereaddataiteIIl\niscopiedfrolllthedatab<:lSe bufIerintotheprivate'workspace ofthetransactioll.\nDuringvalidation of~Tthehashbuckets ofalldataobjects accessed byT\nareagainlocked(inexclusive 11lode)tocheckifThasencountered anydata\nconflicts. ~rhasencountered aconflictifthernodified flagissettotrueinone\nofitsaccessentries. (This&')SUIIles thatthe'die'policyisbeingused;ifthe\n'kill'policyisused,'Tisrestarted whentheflagissettotrue.)\nIfTissuccessfully validated, welockthehashbucketofeachobjectlnodified\nbyT,retrieve allaccessentriesforthisobject,setthernodified flagtotrue,\nandreleasethelockonthebucket.Ifthe'kill'policyisused,thetransactions\nthatentered theseaccessentriesarerestarted. Wethen cornplete~r's Write\nphase.\nItseemsthatthe'kill'policyisalwaysbetterthanthe'die'policy,because it\nreducestheoverallresponse timeandwastedprocessing. However, executing\nTtotheendhastheadvantage thatallofthedataitemsrequired forits\nexecution areprefetched intothedatabase buffe~r,andrestarted executions of\nTwillnotrequirediskI/Oforreads.Thisassumes thatthedatabase buffer\nislargeenoughthatprefetched pagesarenotreplaced, and,1noreirnportant,\nthataccessinvariance prevails; thatis,successive executions ofTrequire\nthesamedataforexecution. WhenTisrestarted itsexecution tirneisnluch\nshorterthanbeforebecause nodiskI/Oisrequired, andthusitschances of\nvalidation arehigher. (Ofcourse,ifatransaction hasalready completed its\nReadphaseonce,subsequent conflicts shouldbehandled usingthe'kill'policy\nbecause allitsdataobjectsarealready inthebufferpool.)\n17.6.2Timestamp-Based Concurrency Control\nInlock-ba'3edconcurrency control, conflicting actionsofdifferent transactions\nareordered bytheorderinwhichlocksareobtained, andthelockprotocol ex\u00ad\ntendsthisordering onactionstotransactions, thereby ensuring serializability.\nInoptirrlistic concurrency control, atiInestanlp ordering isirnposed ontrans\u00ad\nactionsandvalidation checksthatallconflicting actionsoccurred inthesaIne\norder.\nTinlcstarnps canalsobeusedinanother \\vay:Eachtransaction canbeassigned\natirnestanlp atstartup, andwecanensure,atexecution tirne,thatifaction\na'ioftransaction T'iconflicts \\vithactionajoftransaction Tj,a'ioccursbefore\najif'1'8(T'i)<TS(Tj). Ifanactionviolates thisordering, thetransaction is\naborted andrestarted.", "604": "570 CHAPTER 17\nToirnplernent thisconcurrency control schellH~leverydatabase object0isgiven\nareadtirnestampRT S(0)andawritetimestamp v~lTS(0).Iftransaction\nTwantstoreadobject0,andTS(T)<~VTS(O), theorderofthisread\nwithrespecttothemostrecentwriteon0wouldviolatethetimestamp order\nbetween thistransaction andthewriter.Therefore, Tisabortedandrestarted\nwithanew,largertimestarnp. IfTS(T)>WTS(O), Treads0,andl~TS(O)\nissettothelargerofRTS(O) andTS(T). (Notethataphysical change--the\nchangetoRTS(O)-iswrittentodiskandrecorded inthelogforrecovery\npurposes, evenonreads.Thiswriteoperation isasignificant overhead.)\nObservethatifTisrestarted withthesametimestamp, itisguaranteed tobe\nabortedagain,duetothesaIneconflict. Contrast thisbehavior withtheuseof\ntimestamps in2PLfordeadlock prevention, wheretransactions arerestarted\nwiththesametimestarnp asbeforetoavoidrepeated restarts. Thisshowsthat\nthetwousesoftimestamps arequitedifferent andshouldnotbeconfused.\nNext,consider whathappens whentransaction Twantstowriteobject0:\n1.IfTS(T)<RTS(O), thewriteactionconflicts withthemostrecentread\nactionof0,andTistherefore abortedandrestarted.\n2.IfTS(T)<WTS(O), anaiveapproach wouldbetoabortTbecause\nitswriteactionconflicts withthemostrecentwriteof0andisoutof\ntimestamp order.However, wecansafelyignoresuchwritesandcontinue.\nIgnoring outdated writesiscalledtheThomas WriteRule.\n3.Otherwise, Twrites0andWTS(O) issettoTS(T).\nTheThomas WriteRule\nWenowconsider thejustification fortheTholIlas WriteRule.IfTS(T)<\nWTS(O), thecurrentwriteactionhas,ineffect,beenmadeobsolete bythe\nrnostrecentwriteof0,whichfollowsthecurrentwriteaccording tothetirnes\u00ad\ntalnpordering. WecanthinkofT'swriteactionasifithadoccurred irnrnedi\u00ad\natelybeforethernostrecentwriteof0andwasneverreadbyanyone.\nIftheThoma') vVriteRuleisnotused,thatis,Tisaborted incase(2),the\ntirnestamp protocol, like2PL,allowsonlyconflictserializable schedules. Ifthe\nTho1l1aS '\\TriteR,uleisused,S(Hneschedules areperrnitted thatarenotconflict\nserializable, fl.'3illustrated bytheschedule inFigure17.6.2BecauseT2's\\vrite\nfollowsTl'sreadandprecedesTl'swriteofthesanleobject,thisschedule is\nnotconflictserializable.\n21ntheotherdirection, 2PLpennits someschedules thatarenotallowed bythetimestamp algo\u00ad\nrithmwiththeThomas WriteRule;seeExercise 17.7.", "605": "COnC'llr'Tency ContTol\nT1\nR(A)\nW(A)\nCOlnmitT2\nl{T(A)\nCornrnit571\nFigure17.6ASerializable Schedule 'rhatIsNotConflict Serializable\nl'heThomas WriteRulereliesontheobservation thatT2'swriteisneverseen\nbyanytransaction andtheschedule inFigure17.6istherefore equivalent to\ntheserializable schedule obtained bydeleting thiswriteaction,whichisshown\ninFigure17.7.\nT1 T2\nR(A)\nCommit\nW(A)\nCommit\nFigure17.7AConflict Serializable Schedule\nRecoverability\nUnfortunately, thetimestamp protocol justpresented permits schedules that\narenotrecoverable, asillustrated bytheschedule inFigure17.8.IfTS(T1) ::::::1\nandT8(T2) =2,thisschedule ispermitted bythetimestalnp protocol (with\norwithout the1\"ho111as \\\\TriteRule).ThetiInestalnp protocol canbemodified\ntodisallow suchschedules bybuffering allwriteactionsuntilthetransaction\nCOIDlnits. Intheexample, whenTlwantstowriteA,WTS(A) isupdated to\nreflectthisaction,butthechangetoA.isnotcarriedoutirrllnediately; instead,\nitisrecorded inaprivateworkspace, orbuffer.WhenT2wantstoreadA\nsubsequently, itsthnestamp iscornpared withl\u00a5TS(A), andthereadisseen\ntobeperrnissible. However, ~r2isblockeduntilT1cornpletes. IfT1cornrnits,\nitschangetoAiscopiedfro111thebuffer;other\\vise, thechanges inthebuffer\narediscarded. ~r2isthenallowedtoreadA.\nThisblocking ofT2issinlilartotheeffectofT1obtaining anexclusive lockon\nA.Nonetheles8, evenwiththismodification, thetirnestarnp protocol perrnits\nsorneschedules notperrnitted by2PL;thetwoprotocols arenotquitethesenne.\n(SeeExercise 17.7.)", "606": "1\"1T2\nR(A)\nl~T(B)\nCorllrnit\nFigure17.8AnUnrecoverable Schedule\nBecause recoverability isessential, suchamodification mustbeusedforthe\ntimestamp protocol tobepractical. Giventheaddedoverhead thisentails,on\ntopofthe(considerable) costofmaintaining readandwritetilnestamps, thnes\u00ad\ntampconcurrency controlisunlikelytobeatlock-based protocols incentralized\nsystems. Indeed,ithasbeenusedmainlyinthecontextofdistributed database\nsystems (Chapter 22).\n17.6.3Multiversion Concurrency Control\nThisprotocol represents yetanother wayofusingtimestamps, assigned at\nstartuptime,toachieveserializability. Thegoalistoensurethatatransac\u00ad\ntionneverhastowaittoreadadatabase object,andtheideaistomaintain\nseveralversions ofeachdatabase object,eachwithawritetimestamp, andlet\ntransaction Tireadthemostrecentversionwhosetimestarnp precedesTS(Ti).\nIftransaction 1'iwantstowriteanobject,wemustensurethattheobject\nhasnotalreadybeenreadbysonleothertransaction TjsuchthatTS(Ti)<\n1'S(Tj). IfweallowTitowritesuchanobject,itschangeshouldbeseenby\nTjforserializability, butobviously Tj,whichreadtheobjectatSaInetinlein\nthepast,willnotsee~r'i'schange.\nTocheckthiscondition, everyobjectalsohasanassociated readtimestarnp,\nandwhenever atransaction readstheobject,thereadtimestamp issetto\nthemaxhuuru ofthecurrentreadtilnestarnp andthereader's tirnestarnp. If7',t\nwantstowriteanobject0andTS(Ti)<RTS(O),Tiisabortedandrestarted\nwithanew,largertimestamp. Otherwise, Ticreatesanewversionof0and\nsetsthereadandwritetirnestarnps ofthenewversionto7'S(Ti).\nThedrawbacks ofthissehenlearesimilartothoseoftirnestarnp concurrency\ncontrol, andinaddition, thereisthecostofrnaintaining versions. Onthe\notherhand,readsareneverblocked, whichcanbeirnportant forworkloads\ndorninated bytransactions thatonlyreadvaluesfrornthedatabase.", "607": "C:onC7LTr'ency C}ontTol r.::\"\"3,';j(\nI-;~t DoReal\n-;~ms Do?\n~~~-~~;, Informix,\n Microsoft-~~\n~Server,andSybaseABEuseStrict2PLorvariants (ifatransaction re\u00ad\nIquestsalowerthanSERIALIZABLE SQLisolation level;seeSection 16.6).\nIVlicrosoft SQLServeralsosupports rnodifieation timestamps sothata\ntransaction canrun\"\"vithoutsettinglocksandvalidate itself(do-it-yourself\nOptirnisticConC1:1rrency Control!). Oracle8usesalllultiversion concur\u00ad\nrencycontrolschernein\"\"vhichreadersneverwait;infact,readersnever\ngetlocksanddetectconflicts bychecking ifablockchanged sincethey\nreadit.Allthesesysterllssupport rnultiple-granu1arity locking, withsup\u00ad\nportfortable,page,androwlevellocks.Alldealwithdeadlocks using\nwaits-for graphs. SybaseASIQsupports onlytable-level locksandaborts\natransaction ifalockrequestfails-\u00b7--updates (andtherefore conflicts) are\nrareinadatawarehouse, andthissimpleschemesuffices.________ ..\",\".1\n17.7REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Whenaretwoschedules conflict equivalent? Whatisaconflict serializable\nschedule? Whatisastrictschedule? (Section 17.1)\n\u2022Whatisaprecedence graphorserializability graph?Ilowisitrelatedtocon\u00ad\nflictserializability? Howisitrelatedtotwo-phase locking? (Section 17.1)\n\u2022Whatdoesthelockmanager do?Describe thelocktableandtransaction\ntabledatastructures andtheirroleinlockmanagement. (Section 17.2)\nIIDiscusstherelative nH.~ritsoflockupgrades andlockdowngrades. (Sec\u00ad\ntion17.3)\nlIlIDescribe andcornparedeadlock detection a,nddeadlock prevention schernes.\n\\Vhyaredetection schernes rnorecornrnonly used?(Section 17.4)\nIIIfthecollection ofdatabase objectsisnotfixed,butcangro\\vandshrink\nthrough insertion anddeletion ofobjects, welnustdealwithasubtlecorll\u00ad\nplication knownasthephantorn problern. Describe thisproblern andthe\nindexlockingapproach tosolvingtheprobleln. (Section 17.5.1)\nIIIntreeindexstructures, lockinghigherlevelsofthetreecanbecorneaper\u00ad\nforrnanee bottleneck. Explainwhy.I)escribe specialized lockingtechniques\nthataddresstheproblenl, andexplainwhytheyworkcorrectly despitenot\nlJeingtwo-phase. (Section 17.5.2)\nII\nAI71lt'iple-granldaT'ity locki'ngenablesustosetlocksonobjectsthatcontain\notherobjects, thusiInplicitly lockingallcontained objects. \\Vhyisthis\napproach irnportant andhowdoesitwork?(Section 17.5.3)", "608": "574 CHAPTER \\7\n\u2022Inoptirrtistic conClLrrency control,nolocksaresetandtransactions read\nandrnodifydataobjectsinaprivateworkspace. Howareconflicts between\ntransactions detected andresolved inthisapproach? (Section 17.6.1)\n\u2022Intirnestamp- basedconcurrency control,transactions areassigned atimes\u00ad\ntarnpatstartup; howisitusedtoensureserializability? Howdoesthe\nThomas WriteRuleimprove concurrency? (Section 17.6.2)\n\u2022Explain whytinlestamp-based concurrency controlallowsschedules that\narenotrecoverable. Describe howitcanbemodified through buffering to\ndisallow suchschedules. (Section 17.6.2)\n\u2022Describe multiversion concurrency control.Whatareitsbenefitsanddis\u00ad\nadvantages incomparison tolocking? (Section 17.6.3)\nEXERCISES\nExercise 17.1Answerthefollowing questions:\n1.Describe howatypicallockmanager isimplemented. Whymustlockandunlockbe\natomicoperations? Whatisthedifference between alockandalatch?Whatareconvoys\nandhowshouldalockmanager handlethem?\n2.Compare lockdowngrades withupgrades. Explain whydowngrades violate2PLbut\narenonetheless acceptable. Discusstheuseofupdatelocksinconjunction withlock\ndowngrades.\n3.Contrast thetimestamps assigned torestarted transactions whentinwstanlps areused\nfordeadlock prevention versuswhentimestamps areusedforconcurrency control.\n4.StateandjustifytheThomas WriteRule.\n5.Showthat,iftwoschedules areconflictequivalent, thentheyareviewequivalent.\n6.Giveanexample ofaserializable schedule thatisnotstrict.\n7.Giveanexample ofastrictschedule thatisnotserialiable.\n8.~1otivate anddescribe theuseoflocksforimproved conflict resolution inOptinlistic\nConcurrency Control.\nExercise 17.2Consider thefollowing cla..'3sesofschedules: ser'ializablelconfiict-serializable,\n1..J'iew-ser'ializable, recoverable, avoids-cascading-aborts, andstrict.Foreachofthefollowing\nschedules, statewhichofthepreceding cla.'3sesitbelongs to.Ifyoucannotdecidewhether a\nschedule belongsinacertainclassba.'3edonthelistedactions, explainbriefly.\nTheactionsarelistedintheordertheyarescheduled andprefixed withthetransaction name.\nIfacommit orabortisnotshown,theschedule isincomplete; assurnethatabortorcornrnit\nlllustfollowallthelistedactions.\n1.Tl:R(X), T2:R(X), Tl:W(X), T2:\\iV(X)\n2.Tl:W(X), T2:R(Y), Tl:R(Y), T2:R(X)", "609": "C}oncurrency Contr'Ol\n3.Tl:R(X), T2:R(Y), T~3:\\V(X), T2:R(X), Tl:R(Y)\n4.Tl:R(X), T1:R(Y), T1:W(X), T2:R(Y), T:3:\\\u00a5CY), Tl:W(X), T2:R(Y)\n5.Tl:R(X), T2:W(X), Tl:W(X), T2:Abort, Tl:Cmnmit\n6.Tl:R(X), T2:W(X), Tl:\\V(X), T2:Comrnit, Tl:Comm.it\n7.T1:W(X), T2:R(X), 1'l:W(X), 1'2:Abort, T.1:COllllllit\n8.Tl:W(X), T2:R(X), Tl:W(X), T2:Conunit, Tl:Col1unit\n9.Tl:W(X), T2:R(X), Tl:W(X), T2:Commit, Tl:Abort\n10.1'2:R(X),1'3:W(X), T3:Cmnrnit, Tl:W(Y), Tl:Commit, T2:R(Y),\nT2:W(Z), T2:Colllmit\n11.Tl:R(X), T2:W(X), T2:Cornrnit, Tl:W(X), Tl:Colllmit, T:3:R(X), T3:Collnnit\n12.Tl:R(X), T2:W(X), Tl:W(X), T3:R(X), Tl:Comlllit, T2:Corn111it, 1'3:Comlnit575\nExercise 17.3Consider thefollowing concurrency controlprotocols: 2PL,Strict2PL,Con\u00ad\nservative 2PL,Optimistic, Tilnestamp without theThomas WriteRule,1'ilnestamp withthe\nThomas WriteRule,andMultiversion. l'oreachoftheschedules inExercise 17.2,statewhich\noftheseprotocols allowsit,thatis,allowstheactionstooccurinexactlytheordershown.\nForthetimestamp-based protocols, assurnethatthetimestamp fortransaction Tiisiand\nthataversionoftheprotocol thatensures recoverability isused.Further, iftheThomas\nWriteRuleisused,showtheequivalent serialschedule.\nExercise 17.4Consider thefollowing sequences ofactions, listedintheordertheyaresub\u00ad\nmittedtotheDBMS:\n\u2022Sequence 81:Tl:R(X), T2:W(X), T2:W(Y), T3:W(Y), Tl:W(Y),\nTl:Commit, T2:Commit, T3:Commit\n\u2022Sequence 82:Tl:R(X), T2:W(Y), T2:W(X), T3:W(Y), Tl:W(Y),\nTl:C0111mit, T2:Commit, T3:Commit\n!<oreachsequence andforeachofthefollowing concurrency controlrnechanislns, describe\nhowtheconcurrency controlmechanislll handlesthesequence.\nAssurnethatthetirnestarnp oftransaction Tiis'i.Fbrlock-based concurrency controlrnech\u00ad\naniS111S,addlockandunlockrequests totheprevious sequence ofactionsasperthelocking\nprotocol. TheDB\"NISprocesses actionsintheordershown.Ifatransaction isblocked, a%Ulne\nthatallitsactionsarequeueduntilitisreslllned; theI)B11Scontinues withthenextaction\n(according tothelistedsequence) ofanunblocked transaction.\n1.Strict2PLwithtiluestamps usedfordeadlock prevention.\n2.Strict2PLwithdeadlock detection. (Showthewaits-for graphinC(l.seofdeadlock.)\n~3.Conservative (andStrict,i.e.,withlockshelduntilend-of-transaction) 2PL.\n4.Optimistic concurrency control.\n5.Tiruestarup concurrency controlwithbuffering ofreadsandwrites(toensurerecover\u00ad\nability)andtheTholnas WriteRule.\n6.rvluitiversioll concurrency control.", "610": "576 CIIAPTER 1J\nAllSchedules\n\u2022\u2022_.\"\u2022\u2022~._~ ._\",_. \u2022\u2022\u2022\u2022_.__._\u2022\u2022\u2022_.__~\",_.~ \u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022 ~~\u2022\u2022~.~ ~~\u2022\u2022\u2022\u2022\u2022u\u2022\u2022\u2022\u2022 ~\u2022\u2022\u2022\u2022 ~ ........\nViewSerializable '1\n(.,~ ~_~_u.uu \u2022\u2022\u2022u\u2022\u2022_\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022 \\i\n(---~~~t~~-t ~rft~l~riaJ~\nI-R~:able1\nIr-~\n~:t~ll:;--~--:;~i~~~rt 11\nL\nl=='==--t~---~-=k-t-+~LLJ\n~---_._---~--~ ..~...~_..__.._....._._.._-_......._._-_ .._--</\nFigure 17.9VennDia,gram forClassesofSchedules\nExercise 17.5Foreachofthefollowing lockingprotocols, assulning thateverytransaction\nfollowsthatlockingprotocol, statewhichofthesedesirable properties areensured: serializ\u00ad\nability,conflict-\u00b7serializability, recoverability, avoidance ofcascading aborts.\n1.Alwaysobtainanexclusive lockbeforewriting; holdexclusive locksuntilend-of-transaction.\nNosharedlocksareeverobtained.\n2.Inaddition to(1),obtainasharedlockbeforereading; sharedlockscanbereleased at\nanytime.\n3.Asin(2),andinaddition, lockingistwo-phase.\n4.Asin(2),andinaddition, alllockshelduntilend-of-transaction.\nExercise 17.6TheVenndiagranl (frorn[76])inFigure17.9showstheinclusions between\nseveralclassesofschedules. Giveoneexaulple schedule foreachoftheregionsSlthrough\nS12inthediagrarn.\nExercise 17.7Brieflyanswerthefollowing questions:\n1.DrawaVenndiagnnll thatShO\\V8theinclusions between theclassesofschedules perulit\u00ad\ntcclbythefollowing concurrency controlprotocols: 2PL,8tr'ict2PL,Conscr1.Jauve 2PL,\nOptirni.stic, Timestamp withouttheThorna8~Vr'ite Rule,Tirne8tam.p withtheThonHt8\nWrite R1J,lc~andAh.tlt'll,)(:T.'Fion.\n2.Giveoneex<:'unple schedule foreachregioninthediagrarIl.\n:3.ExtendtheVenndiagranl toincludeserializable andconflict-serializable schedules.\nExercise 17.8Answer eachofthefollmving questions briefly.Thequestions arebasedon\nthefollowing relational schern.a:\nErnp(C'id:integer) cnarne:string, age:integer, salary:real,did:integer)\nDept(~~~~~_~_~:.~.~::, drunne:string, flooT:integer)\n(melonthefc)llowing updatecornrnand:\nreplace(salary=1.1*F]\\{P.salary) where.KtvlP.enarne ='Santa'", "611": "C:onC1LTTeTLCY C\\Jn(:Tol 5r-.'.....\",{\n1.Giveanexaruple ofaquerythatwouldconflict withthiscomrnand (inaconcurrency\ncontrolsense)ifbothwererunatthes::.unetim.e.Explain whatcouldgowroIlg~andhow\nlockingtupleswouldsolvetheprobleIll.\n2.Giveanexarnple ofaqueryoracOHlInand thatwouldconflictwiththiscOIl1ruand, such\nthattheconflict couldnotberesolved byjustlockingindividual tuplesorpagesbut\nrequires indexlocking.\n~).Explain whatindexlockingisandhowitresolves thepreceding conflict.\nExercise 17.9SQLsupports fourisolation-levels andtwoaccess-rllodes, foratotalofeight\ncornbinations ofisolation-level andaccess-rnode. Eachcorubinatioll inlplicitly definesaclass\noftransactions; thefollO\\ving questions refertotheseeightclasses:\n1.Foreachoftheeightclasses,describe alockingprotocol thatallowsonlytransactions in\nthisclass.Doesthelockingprotocol foragivenclassmakeanyassurnptiolls aboutthe\nlockingprotocols usedforotherclasses? Explain briefly.\n2.Consider aschedule generated bytheexecution ofseveralSQLtransactions. Isitguar\u00ad\nanteedtobeconflict-serializable? tobeserializable'? toberecoverable?\n3.Consider aschedule generated bytheexecution ofseveralSQLtransactions, eachof\nwhichhasREADONLYaccess-mode. Isitguaranteed tobeconflict-serializable? tobe\nserializable? toberecoverable?\n4.Consider aschedule generated bytheexecution ofseveralSQLtransactions, eachof\nwhichhasSERIALIZABLE isolation-level. Isitguaranteed tobeconflict-serializable? to\nbeserializable? toberecoverable?\n5.CanyouthinkofatinlCstarup-based concurrency controlschemethatcansupport the\neightclassesofSQLtransactions?\nExercise 17.10Consider thetreeshownInFigure19.5.Describe thestepsinvolved in\nexecuting eachofthefollowing operations according tothetree-index concurrency control\nalgorithm discussed inSection 19.3.2,intermsoftheorderinwhichnodesarelocked,un\u00ad\nlocked,read,andwritten. Bespecificaboutthekindoflockobtained andanswereachpart\nindependently oftheothers,alwaysstarting withthetreeshowninFigure19.5.\n1.Searchfordataentry40*.\n2.Searchforalldataentriesk*withk~40.\n3.Insertdataentry62*.\n4.Insertdataentry40*.\n5.Insertdataentries62*and75*.\nExercise 17.11Consider adatabase organized intennsofthefollowing hierarachy ofob\u00ad\njects:Thedatabase itselfisanobject(D),anditcontains twofiles(Fl(ludF'2),eachof\nwhichcontains 1QOOp<.Lges(PI...PlOOOanclPl()()l...P2000,respectively). Eachpagecon\u00ad\ntains100records, andrecords aTeidentified asp:i,where]J isthepageidentifier andiisthe\nslotoftherecordonthatpage.\nI'vlultiple-granularity lockingisused,with5',.i\\{)15',#1XandS'IXlocks,anddatah<Lse-level,\nfile-level, page-level ;111<1record-level locking. Foreach()fthefoll()\\ving operations, indicaJ;e\nthesequence oflockrequests that1nustbegenerated byatransctction thatwantstocarry\nout(just)theseoperations:", "612": "578\n1.ReadrecordP1200:5.(~HAPTER 1;:7\n2.ReaclrecorclsP1200 :98through P1205:2.\nii.ReadaU(records onall)pagesinfile}'l.\n4.'ReadpagesP500through P520.\n5.ReadpagesPIOthrough P980.\n6.ReadallpagesinPIand(ba..gedonthevaluesread)rnodify10pages.\n7.DeleterecordP1200:98.(Thisisablindwrite.)\n8.Deletethefirstrecordfrorneachpage. (Again~theseareblindwrites.)\n9.Deleteallrecords.\nExercise 17.12Suppose thatwehaveonlytwotypesoftransactions, TlandT2.Transac\u00ad\ntionspreserve database consistency whenrunindividually. Wehavedefinedseveralintegrity\nconstnLiTtts suchthattheDBNISneverexecutes anySQLstatenwnt thatbringsthedatabase\nintoaninconsistent state.AssunlethattheDBlVISdoesnotperform anyconcurrency control.\nGiveanexarllple schedule oftwotransactions TlandT2thatsatisfies alltheseconditions,\nyetproduces adatabase instance thatisnottheresultofanyserialexecution of7'1andT2.\nBIBLIOGRAPHIC NOTES\nConcurrent accesstoBtreesisconsidered inseveralpapers,including [70,456,472,505,678].\nConcurrency controltechniques forLinearHashing arepresented in[240]and[543].Multiple\u00ad\ngranularity lockingisintroduced in[3:36]andstudiedfurtherin[127,449].\nAconcurrency controlmethodthatworkswiththeARIESrecovery rnethod ispresented in\n[545].Another paperthatconsiders concurrency controlissuesinthecontext ofrecovery is\n[492].AlgorithrIls forbuilding indexeswithout stopping theDBMSarepresented in[548]and\n[9].1'heperformance ofBtreeconcurrency controlalgorithnls isstudied in[704].Perfor\u00ad\nnlanceofvariousconcurrency controlalgorithms isdiscussed in[16,729,735].Agoodsurvey\nofconcurrency controlrnethods andtheirperfornlance is[734].[455]isacomprehensive\ncollection ofpapersonthistopic.\nTilYwstarIlp-based multiversion concurrency controlisstudiedin[6201.IvIultiversion concur-\u00ad\nrencycontrolalgoritllIIls arestudied forrnally in[87J.Lock-based rnultiversion techniques\nareconsidered in[460].Optirnistic concurrency controlisintroduced in[457].Theuseof\naccessinvariance toirnprove conflict resolution inhigh-contention environrnents isdiscussed\nin[281]and[280].1'rallsacti0I1 rnanagenwnt issuesforreal-tirne databa ..'5esysterns aredis\u00ad\ncussedin[1,15,:368,:382,:386,448].Thereisalargebodyoftheoretical resultsondata.ba.se\nconcurrency control; [582,89]offerthorough textbook presentations ofthisrnaterial.", "613": "18\nCRASH RECOVERY\n(,...WhatstepsaretakenintheARIESmethodtorecoverfronlaDBl\\1S\ncrash?\n...Howisthelogrnaintained duringnonnaloperation?\n..Howisthelogusedtorecoverfrornacrash?\n(\",..Whatinfonnation inaddition tothelogisusedduringrecovery?\n\"'What isacheckpoint andwhyisitused?\n...W'hathappens ifrepeated crashesoccurduringrecovery?\n...Howismediafailurehandled?\n...Howdoestherecovery algorithnl interact withconcurrency control?\n..Keyconcepts: stepsinrecovery, analysis, redo,undo;ARIES,\nrepeating history; log,LSN,forcing pages,WAL;typesoflog\nrecords, update, cornrnit, abort,end,cOlnpensation; transaction ta-\u00b7\nble,lastLSN; dirtypagetable,recLSN; checkpoint, fuzzycheckpoint\u00ad\ning,rnao;;;terlogrecord;rnediarecovery; interaction withconcurrency\ncontrol; shadowpaging\nHurnpty Durnpty satona\\vall.\nlIurnpty Durnpty h(1,(1agreatfall.\nA.lltheKing'shorsesandalltheKing'stnen\nCouldnotputlIllrnpty together again.\n-~~~()ldnurseryrhyrne\n579", "614": "580 C~HAPTER 18p\nTherecovery manager ofaDB~/[S isresponsible forensuring tvvoirnportant\nproperties oftransactions: Atornicity anddurability. Itensures ato'Tn:icity by\nundoing theactionsoftransactions thatdonotconlIllitanddurab'il'ity byrnak\u00ad\ningsurethatallactionsofconunitted transactions survivesystem crashes\n(e.g.,acoredurnpcausedbyabuserror)andInediafailures (e.g.,adiskis\ncorrupted).\n1\"'herecovery rnanager isoneofthehardest cOlllponents ofaDBlViStodesign\nandinlplernent. Itrnustdeal'withawideva,rietyofdatabase statesbecause\nitiscalledonduringsystenlfailures. Inthischapter, \"\\IvepresenttheARIES\nrecovery algorithnl, whichisconceptually sinlple,workswellwithawiderange\nofconcurrency controlrnechanisrns, andisbeingusedinanincre&sing number\nofdatabase syterns.\nWebeginwithanintroduction toARIES inSection 18.1.Wediscussthe\nlog,whichacentraldatastructure inrecovery, inSection 18.2,andother\nrecovery-related datastructures inSection 18.3.Wecomplete ourcoverage\nofrecovery-related activity duringnormalprocessing bypresenting theWrite\u00ad\nAheadLogging protocol inSection18.4,andcheckpointing inSection18.5.\nWediscussrecovery frornacrashinSection18.6.Aborting (orrollingback)\nasingletransaction isaspecialcaseofUndo,discussed inSection18.6.3.We\ndiscussmediafailures inSection18.7,andconclude inSection 18.8witha\ndiscussion oftheinteraction ofconcurrency controlandrecovery andotherap\u00ad\nproaches torecovery. Inthischapter, weconsider recovery onlyinacentralized\nDBMS; recovery inadistributed DBMSisdiscussed inChapter 22.\n18.1INTRODUCTION TOARIES\nARIES isarecovery algorithrn designed toworkwithasteal,no-force ap\u00ad\nproach. Whentherecovery rnanager isinvoked aftera,craBh:restartproceeds\ninthn~ephases:\n1.Analysis: Identifies dirtypagesinthebufferpool(i.e.,changesthathave\nnotbeenwrittentodisk)andactivetransactions atthetiITleofthecrash.\n2.Redo:H,epeats allactions,starting frOIDanappropriate pointinthelog,\nandrestores thedatabase statetowhatitwasatthetirneofthee1'a8h.\n~).lJndo:lJndoestheactionsoftransactions thatdidnotcOllunit, sotlU:l,t\nthedataba,se reflectsonlytheactionsofcornrnitted transactions.\nConsider thesirnpleexecution historyillustrated inFigure18.1.'\\\\7henthe\nsysteIIlisrestarted, theA,nalysis phaseidentifies 'TlH.nd ~r:3astransactions", "615": "CrYlBhRecovery\nLSN L()(;\n10-update:T1writesP5\n20---update:T2writesP3\n30-T2comnlit\n40---T2end\n50-update:T3writesPI\n60-update:T3writesP3\nXCRASH, RESTART\nFigure 18.1Execution History withaCrashh&l,.'a\nactiveatthetimeofthecrashandtherefore tobeundone;T2asacorrnuitted\ntransaction~ andallitsactionstherefore tobewrittentodisk;andPI ~P3,and\nP5aspotentially dirtypages.Alltheupdates (including thoseofTIandT3)\narereapplied intheordershownduringtheRedophase.Finally,theactions\nofTIandT;-3areundoneinreverseorderduringtheUndophase;thatis,T3's\nwriteofP3isundone, 7\"3'swriteofPIisundone, andthenTI~swriteofP5\nisundone.\nThreeInainprinciples liebehindtheARIESrecovery algoritlun:\n!IIWrite-Ahead Logging: Anychangetoadatabase objectisfirstrecorded\ninthelog;therecordintheloglllUstbewrittentostablestoragebefore\nthechangetothedatabase objectiswrittentodisk.\n!IIRepeating History During Redo:Onrestartfollowing acrash,,AllIES\nretraces allactionsoftheDBlVlSbeforethecrashandbringsthesystern\nbacktotheexactstatethatitwa,sinatthetilneofthecrash.Then,\nitundoestheactionsoftransactions stillactiveatthetirneofthecra..sh\n(effectively aborting theln).\n11IILogging Changes During Undo:Changes lnadatothedataba.se '.vhile\nundoing atransaction areloggedtoensuresuchanactionisnotrepeated\nintheeventofrepeated (failures causing) restarts.\nThesecondpointdistinguishes AllIESfrornotherrecovery algorithrns andis\nthebasisforrnuchofitssirnplicity andflexibility. Inparticular, ABIEScan\nsupport conCUlTcnc:Jl controlprotocols thatinvolvelocksoffinergranularity\nthanapage(e.g.,record-level loc:ks). T1heSeCO]lc!andthirdpointsarealso", "616": "582 CIIAPTER 18\n---.....,.------_._ ...._..._._._-_._._---\nCrashRecovery: IB~1DB2,Inforrnix, Iv1icrosoft SQLServer,Oracle8,\nandSybasel\\SEalluseaWALseherueforrecovery. IBIvIDB2usesARIES,I!I\niI\nandtheothersuseseheruesthatareactually quitesinlilartoARIES(e.g.,I\nallchanges arere-applied, notjustthechangesmadebytransactions thatI\nare'winners') although thereareseveralvariations.\n------- ~..- ...................._.. ---- ~\nimportant indealingwithoperations whereredoingandundoing theopera\u00ad\ntionarenotexactinverses ofeachother.Wediscusstheinteraction between\nconcurrency controlandcrashrecovery inSection18.8,wherewealsodiscuss\notherapproaches torecovery briefly.\n18.2THELOG\nThelog,SOlnetirnes calledthetrailorjournal, isahistoryofactionsexecuted\nbytheDBMS.Physically, thelogisafileofrecordsstoredinstablestorage,\nwhichisassumed tosurvivecrashes; thisdurability canbeachieved bymain\u00ad\ntainingtwoormorecopiesofthelogondifferent disks(perhaps indifferent\nlocations), sothatthechance of allcopiesofthelogbeingsinlultaneously lost\nisnegligibly small.\nThemostrecentportionofthelog,calledthelogtail,iskeptinnlainInemory\nandisperiodically forcedtostablestorage. Thisway,logrecordsanddata\nrecordsarewrittentodiskatthesamegranularity (pagesorsetsofpages).\nEverylogrecord isgivenauniqueidcalledthelogsequence number\n(LSN). Aswithanyrecordid,wecanfetchalogrecordwithonediskaccess\ngiventheLSN.Further, LSNsshouldbeassigned inruonotonically increasing\norder;thisproperty isrequired fortheARIESrecovery algorithrn. Ifthelogis\nasequential file,inprinciple growing indefinitely, theLSNcansirllplybethe\naddressofthefirstbyteofthelogrecord'!\nForrecovery purposes, everypageinthedataba':lc contains theLSNofthernost\nrecentlogrecordthatdescribes achangetothispage.ThisLSNiscalledthe\npageLSN.\nAlogrecordis\\vritten foreachofthefollowing actions:\n--_._--_ .._...._._---------\n1Inpractice, various techniques areusedtoidentify portions ofthelogthatare'tooold'tobe\nneededagaintoboundtheamount ofstablestorage usedforthelog.Givensuchabound,thelogmay\nbeimplemented a...<;a'circular' file,inwhichcasetheI..ISNmaybethelogrecordidplusa\"UYm,p-count.", "617": "583\n\u2022Updating aPage:AfterrTlodifying thepage,an'npdatetyperecord (dt:~\nscribedlaterinthissection) isappended tothelogtail.TlhepageLSN of\nthepageisthensettotheLSNoftheupdatelogrecord.(ThepageBlust\nbepinnedinthebufferpoolwhiletheseactionsarecarriedout.)\nIIIConl1nit: vVhenatransaction decidestoconunit, itforce-writes aconk\n'{nittypelogrecordcontaining thetransaction id.Thatis,thelogrecord\nisappended tothelog,andthelogtailiswrittentostablestorage, upto\nandincluding thecOllunit record.2Thetransaction isconsidered tohave\ncOIlnnitted attheinstantthatitscOlnmit logrecordiswrittentostable\nstorage. (Solneadditional stepsrnustbetaken,e.g.,reilloving thetransac\u00ad\ntion'sentryinthetransaction table;thesefollowthe'writingofthecOlInnit\nlogrecord.)\n\u2022Abort: Whenatransaction isaborted, anaborttypelogrecordcontaining\nthetransaction idisappended tothelog,andUndoisinitiated forthis\ntransaction (Section 18.fL3).\n\u2022End:Asnotedabove,whenatransaction isaborted orcomrnitted, some\nadditional actionsrnustbetakenbeyondwritingtheabortorCOlllIllit log\nrecord. Afteralltheseadditional stepsarec()lnpleted, anendtypelog\nrecordcontaining thetransaction idisappended tothelog.\nIIIUndoing anupdate: Whenatransaction isrolledback(because the\ntransaction isaborted, orduringrecovery frornacrash),itsupdates are\nundone. Whentheactiondescribed byanupdatelogrecordisundone, a\ncornpensation logTeconl,orCLR,iswritten.\nEv(~rylogrecordhascertainfields:prevLSN, transID, andtype.Thesetof\nalllogrecordsforagiventransaction isrnaintained asalinkedlistgoingback\nintirne,using thE~prevLSN field;thislistHUlstbeupdated whenever alog\nrecordisadded.ThetransII) fieldistheidofthetransaction generating the\nlogrecord,andthetypefieldobviously indicates thetypeofthelogrecord.\nAdditional fieldsdependonthetypeofthelogrecord. vVealreadyrnentioned\ntheadditional contents ofthevariouslogrecordtypes,withtheexception of\ntheupdate EtIIdcornpensa>tion logr(~cordtypes,\\\\Thiehwedescribe next.\nUpdateLogRecords\nThefieldsinanupdate logrecordareillustrated inFigure18.2.frhepageID\nfieldisthepageieloftheInodified page;thelengthinbytesandtheoffsetofthe\n'2Notethatthissteprequires thebuffermanager tobeabletoselectively forcepagestostabl(~\nstorage.", "618": "584\nprevLloiN traa\".iID type pageIJ.) length offsetC~HAPTERfl8\nbefore~image after-image\nFieldscommon toalllogrecords Additional fi.eldsforupdatelogrecords\nFigure18.2Contents ofanUpdate LogRecord\nchangearealsoincluded. Thebefore-image isthevalueofthechanged bytes\nbeforethechange;theafter-image isthevalueafterthechange. Anupdate\nlogrecordthatcontains bothbefore-andafter-images canbeusedtoredo\nthechangeandundoit.Incertaincontexts, whichwedonotdiscussfurther,\nwecanrecognize thatthechangewillneverbeundone(or,perhaps, redone).\nAredo-only update logrecordcontains justtheafter-iluage; similarly an\nundo-only update recordcontains justthebefore-iluage.\nCompensation LogRecords\nAcompensation logrecord(CLR)iswrittenjustbeforethechangerecorded\ninanupdatelogrecordUisundone. (Suchanundocanhappenduringnor\u00ad\nrnalsystemexecution whenatransaction isaborted orduringrecovery froIna\ncrash.)AcOlnpensation logrecordCdescribes theactiontakentoundothe\nactionsrecorded inthecorresponding updatelogrecordandisappended to\nthelogtailjustlikeanyotherlogrecord.'fhecornpensation logrecordCalso\ncontains afieldcalledundoNextLSN, whichistheLSNofthenextlogrecord\nthatistobeundoneforthetransaction thatwrote 11pdaterecordlJ;thisfield\ninCissettothevalueofprevLSNin[J.\nAsanexarllple, consider thefourthupdatelogreeordshowninFigure18.3.\nIfthisupdateisundone, aCLIl\\vouldbewritten, andtheinforrnation init\nwouldincludethetransII), pageID, length,offset,andbefore-iInage fieldsfroln\ntheupdaterecord.NoticethattheCLH,recordsthe(undo)actionofchanging\ntheaffected bytesbacktothebefore-irnage value;thus,thisvalueandthe\nlocation oftheaffected bytesconstitute theredoinfonnation fortheaction\ndescribed bytheCLH,.r-IheundoNextLSN fieldissettotheLSNofthefirst\nlogrecordinFigure18.:3.\nlJnlikeanupdatelogrecord,aCLIldescribes anactionthat\\villneverbe\ntlndone,thatis,\\veneverundoanundoaction.'1'herea,sonissirnple:Anupdate\nlogrecorddescribes achangelnadebyatransaction duringnonnalexecution\nandthetransaction rnaysubsequently beaborted, whereas a(:LH,describes\nellla,ctiol1tak.entorollback atransaction for\\vllichthedecision toaborthas\nalrea.lJy beenrnade.Therefore, thetransaction rnustberolledback,andthe", "619": "C:Tash Recover~lj 585\nundoactiondescribed bytheCLIlisdefinitely required. Thisobservation is\nveryusefulbecause itboundsthea1nount ofspaceneededforthelogduring\nrestartfroinacrash:1'henUlnberofCLHsthatca,nbevvrittenduringLJndois\nno1norethanthenurnber ofupdatelogrecordsforactivetransactions atthe\ntirneofthecrash.\nACLR.II1aybe'writtentostablestora,ge (follo\\ving \\iVAL,ofcourse)butthe\nundoactionitdescribes rIlaynotyetbeenvvrittcntodiskwhenthesystenl\ncrashesagain.Inthiscase,theundoactiondescribed intheCLRisreapplied\nduringtheItedophase,justliketheactiondescribed inupdatelogrecords.\nForthesere&'3ons, aCLIlcontains theinfonnation neededtoreapply, 01'redo,\nthechangedescribed butnottoreverseit.\n18.3OTHER RECOVERY ..REI.JATED STRU'CTURES\nInaddition tothelog,thefollowing twotablescontainimportant recovery\u00ad\nrelatedinfornlation:\nIITransaction Table:Thistablecontains oneentryforeachactivetrans\u00ad\naction. 'Theentrycontains (arnongotherthings)thetransaction id,the\nstatus,andafieldcalledlastLSN, whichistheLSNofthernostrecentlog\nrecordforthistransaction. Thestatusofatransaction canbethatitisin\nprogress, corunlitted, oraborted. (Inthelattertwocases,thetransaction\nwillberernoved fro1l1thetableoncecertain'cleanup'stepsarec(nupleted.)\nIIDirtypagetable:Thistablecontains oneentryforeachdirtypagein\nthE:~bufferpool,thatis,eachpagewithchanges notyetreflected ondisk.\nTheentrycontains afieldrecLSN, vvhichistlH~LSNofthefirstlogrecord\nthatcausedthepagetobecorne dirty.NotethatthisLSNidentifies the\nearliestlogrecordthatlnighthavetoberedoneforthispageduringrestart\nfronlacr<:1,sh.\nI)uringnorrnaloperation, thesecLrernainta..ined bythetransa,ction rnanager and\nthebufferrnanager, respectively, andduringrestartafteracrash,theseta,bles\narereconstructed intheAnalysis phaseofrestart.\nConsider thefollc)\\ving silupicexarnple. 11:ansaction TIOOOchangesthevalueof\nbytes21to2:3011pageP500frorn'ABC'to'!)EF',transaction 'T2000changes\n'lII.rto'I<IJ\\;1'onpageP600,transaction 1~2000changes bytes20through 22\nfronl'C;rJE'to'QRS'onpage])50(\\thentransaction T1000changes 'TlTV'\nto'-\\,VXY'onpageP505. I'hedirtypagetable,thetransaction table':~;:lnd__---------_. __.__.__.---\n3Thestatusfieldisnotshowninthefigureforspacereasons; alltransactions areinprogress.", "620": "586 (~HAPTERil8\npageID recLSN\nP500\nlength offsethefore-image after-image\nP600\nP505\nDIRTYPAGE\nTRANSACTION TABLEprcyl..-..\"iN transID type pagelD\n'1'1000 update P500\n'1'2000 update P600\n'1'2000 update PSOO\nTlOOO update P505\nLOG3\n32\\ ABC DEF\n4\\ HU KLM\n20 CiDE QRS\n2\\ TUV\nFigure 18.3Instance ofLogandTtansaction Table\nthelogatthisinstantareshowninFigure18.3.()bserve thatthelogisshown\ngrowing fronitoptobottorn; olderrecordsareatthetop.Although therecords\nforeachtransaction arelinkedusingtheprevLSN field,thelogasawholealso\nhasasequential orderthatisiInportant---for exarnple, T2000's changetopage\nP500followsTIOOO's changetopageP500,andintheeventofacrash,these\nchanges nUlstberedoneinthesanleorder.\n18.4THEWRITE-AHEAD LOG\nPROTOCOI.J\nBeforewritingapagetodisk,everyupdatelogrecordthatdescribes achange\ntothispagernustbeforcedtostablestorage. Thisisaccornplished byforcing\nalllogrecordsuptoandincluding theonewithLSNequaltothepageLSN to\nstablestoragebefore\\vritingthepagetodisk.\nTheirnportance ofthe\"TAl\"protocol carulotbeovererl1phasized- --\\VAListhe\nfundarnentaJ rulethatensuresthatarecordofeverychangetothedatabase\nisavailable whileatternpting torecoverfroniacra\"sh.Ifa.\u00b7transaction rnade (l.\nchangeandcorIllnittedjtheno-force approa,(:h IncansthatSOlneofthesechanges\nrnaynothavebeenvvrittcntodiskatthetirneofasulJsequent cTcu,h.\\\\Tithout a\nrecordofthesechanges, therewouldbenowa.ytoerlsurcthatthechanges ofa\ncornl11.itted transaction survivecrashes. Notethatthedefinition ofacortun'itted\ntTnn.sacf'ion iseffectivel,Y 'atransa,ction allofwhoselogrecordsjincluding a\nconunit recordjhavel)een\\vrittentostcl,blestorage'.\n\\Vhenatxctnsc.tction iscornrnitted, thelogU.tilisforcedtostabl(~storage, even\nifano-force appro;J,ch isbeingused.Itis'.1l1orthcontrasting thisoperation with\nthea,ctionstakenunderaforc(~approach: Ifa.,forceapproach isused,allthe\npagesrIlodified bythetransaction, ratherthanaportionofthelogthatincludes\nallitsrecords, IHllS!,beforcedtodiskVl1herlthetransaction conllIlits. Thesetof", "621": "(}rashReco'LJery 5\u00a37\nallchanged pagesistypically 11luchlargerthanthelogtajlbecause thesizeof\nanupdatelogrecordiscloseto(tvvice)thesizeofthechanged bytes,\u00b7whichis\nlikelytobeInuchs1na11erthanthepagesize.Further, thelogis1naintained asa\nsequential file,andall\\\\Tritestothelogaresequential \"\\Trites.Consequently, the\ncostofforcingthelogtailisluuchsIllallerthanthecostof\\vritingaJlchanged\npagestodisk.\n18.5CHECKPOINTIN(;\nAcheckpoint islikeasnapshot oftheDB:NlSstate,andbytakingcheckpoints\nperiodically, aswewillsee,theDBl\\1Scanreducethealnount ofworktobe\ndoneduringrestartintheeventofasubsequent crc1..sh.\nCheckpointing inARIEShasthreesteps.First,abegin_checkpoint recordis\nwrittentoindicate whenthecheckpoint starts.Second, anend__checkpoint\nrecordisconstructed, including initthecurrent contents ofthetransaction\ntableandthedirtypagetable,andappended tothelog.Thethirdstepis\ncarriedoutaftertheend_checkpoint recordiswrittentostablestorage: A\nspecialmaster recordcontaining theLSNofthebegirLcheckpoint logrecordis\nwrittentoaknownplaceonstablestorage. 'Vhiletheend__checkpoint record\nisbeingconstructed, theDBMScontinues executing transactions andwriting\notherlogrecords; theonlyguarantee wehaveisthatthetransaction tableand\ndirtypagetableareaccurate asofthe ti'lY~eofthebegirLcheckpoint record.\nThiskindofcheckpoint, calledafuzzycheckpoint, isinexpensive because it\ndoesnotrequirequiescing theSystCIllorwritingoutpagesinthebufferpool\n(unlikesenneotherforlnsofcheckpointing). Ontheotherhand,theeffectiveness\nofthischeckpointing technique islirnitedbytheearliestrecLSNofpagesinthe\nd.irtypagestable,because duringrestartweInustredochanges starting froin\nthelogrecord\\vhoseLSNisequaltothisrecI.lSN. l-Iavingabackground process\nthatperiodically writesdirtypagestodiskhelpstolirnitthisprobleln.\nvVhentheSystCIIlcornesbackupafteracrash,therestartprocess beginsby\nlocating thernostrecentcheckpoint record.Foruniforlnity, thesysteIllal\\v::tys\nbeginsno1'n1alexecution bytakirlgacheckpoint, in\\vhich.thetransaction table\nanddirtypagetablearebothClnpty.\n18.6\n RECOV~:RIN'G FROMAsysrr~=M CRASH\n\\Vhenthesystenlisrestarted afteracrash,therecovery Iuana,ger proceeds in\nthreephases,asshowninFigure18.4.", "622": "588\nUNDO\nREDOLO(;\nANALYSIS\njOldestlogrttord\n,\\oftraa\"actious\nactiveatera<;l.\nSmallest rec.LSN\nBindirtypagetable\natendofAnalysis\nc['-'lostrecentcheckpoint\nCRASH (endoflog)C~HAPTEIl Its\nFigure 18.4Threel'lhasesofRestart inARIES\nTheAnalysis phasebeginsbyexamInIng thernostrecentbegin_checkpoint\nrecord,whoseLSNisdenotedCinFigure18.4,andproceeds forward inthe\nloguntilthelastlogrecord. '1'heRedophasefollowsAnalysis andredoesall\nchangestoanypagethatIllighthavebeendirtyatthetir11eofthecrash;thisset\nofpagesandthestarting pointforRedo(thesrnallest recLSNofanydirtypage)\naredeterrnined duringAnalysis. 'TheUndophasefollowsRedoandundoesthe\nchanges ofalltransactions activeatthetirneofthecrash;again,thissetof\ntransactions isidentified duringtheAnalysis phase.NotethatRedoreapplies\nchanges intheorderinwhichtheywereoriginally carriedout;Undoreverses\nchanges intheopposite order,reversing thelllostrecentchangefirst.\nObserve thattherelativeorderofthethreepointsA,B,andCinthelogrnay\ndifferfrolIlthatshowninFigure18.4.Thethreephasesofrestartaredescribed\ninrnoredetailinthefollowing sections.\n18.6.1Analysis Phase\nl'heAnalysis phaseperfonns threetc1...,ks:\n1.Itdetennines thepointinthelogat\\vhichtostarttheRedopass.\n2.Itdeterrnines ((1,conservative superset ofthe)pagesinthebufferpoolthat\n\\Ver8'clirtyatthetirneofthecrash.\n:3.It\nidentifies'iransEtctions that\\\\rereactiveatthetirneofthecrashandrnust\nbeundone.\nAnalysis 'beginsbyexEtrnining thernostrecentbegirLcheckpoint logrecordand\ninitializing thedirtypagetableandtransaction tabletothecopiesofthose\nstructures inthenextend-e.:heckpoint record. ~rhus,t11esetablesareinitialized\ntothesetofdirtypagesandactivetranscl,c:tions atthetilneofthecheckpoint.", "623": "C:'1'ash Reco'Ve'T~lJ 5~9\n(Ifadditional logrecordsarebetween thebegiILcheckpoint andencLcheckpoint\nrecords, thetablesHIUstbeadjusted toreflecttheinforluation inthese records~\nbut\\vecnnitthedetailsofthisstep.SeeExercise 18.9.)A.naJysis thenscans\ntheloginthefor\\vard direction untilitreachestheendofthelog:\nIIIIfanendlogrecordforatransaction Tisencountered,T isreIlloved fronl\nthetransaction tablebecauseitisnolongeractive.\nIIIIfalogrecordotherthananendrecordforatransaction Tisencountered,\nanentryforTisaddedtothetransaction tableifitisnotalreadythere.\nFurther, theentryforTisrnodified:\n1.ThelastLSN fieldissettotheLSNofthislogrecord.\n2.IfthelogrecordisacOllnnit record,thestatusissettoC,otherwise\nitissettoU(indicating thatitistobeundone).\nIIIIfaredoable logrecordaffecting pagePisencountered, andPisnotin\nthedirtypagetable,anentryisinserted intothistablewithpageidPand\nrecLSNequaltotheLSNofthisredoable logrecord.ThisLSNidentifies\ntheoldestchangeaffecting pagePthatmaynothavebeenwrittentodisk.\nAttheendoftheAnalysis phase,thetransaction tablecontains anaccurate\nlistofalltransactions thatwereactiveatthetilueofthecrash\u00b7-\u00b7\u00b7\u00b7_\u00b7--this isthe\nsetoftransactions withstatusU.Thedirtypagetableincludes allpagesthat\nweredirtyatthetirneofthecrashbutrnayalsocontain SOInepagesthatwere\nwrittentodisk.Ifanend_write logrecordwerewrittenatthecornpletion of\nea,chwriteoperation, thedirtypagetableconstructed duringAnalysis could\nbelnadernoreaccurate, butinAHJES,theadditional costofwritingeneLwrite\nlogrecordsisnotconsidered tobeworththegain.\nAsanexa.rnple, consider theexecution illustrated inFigure 18.~3.Letusextend\nthisexecution byassurning that]'2000COlIllnits, thenTIOnOrnodifies another\npage,say,.P700,andappends anupdaterecordtothelogtail,andthenthe\nsysterncra\"shes(beforethisupdatelogrecordiswrittentostablestorage).\nThedirtypagetableandthetransaction table,heldinrnernory, arelostinthe\ncra..sh.Thernostrecentcheckpoint \\Vah')takenatthebeginning oftheexecution,\n\\vithanernptytran.saction tableanddirtypagetable;itisnotshowninFigure\n18.;3.Afterexcunining thislogrecord,\\vhich\\veassurneisjustbeforethe\nfirstlogrecordshowninthefigure,Analysis initializes thetwotablestol>e\nernpty.Scanning forv:.rard inthelog,T'1000isaddedtothetransaction table;\ninadditiol1,P500 isad(h~dtothedirtypageta,blc\\vith recLSNequaltothe\nLSNofthefirstsho\\vnlogrecord.Sirnilarly, T2C)OOisaddedtothetransaction\ntableandPGOO isaddedtothedirtypagetable.Thereisnochangebasedon\nthethirdlogrecord,andthefourthrecord n:~sultsintheaddition ofP505to", "624": "590 CHAPTER,18\nthedirtypagetable.TheeOllnnit recordforT2000 (notinthefigure)isno\\v\nencountered, andT2000isrelIloved fro111thetransaction table.\nTheAnalysis pha~eisnoweornplete, anditisrecognized thattheonlyactive\ntransaction atthetilneofthecrashisTIOOO,\\vithlastLSN equaltotheLSN\nofthefourthrecordinFigure18.3.rrhedirtypagetablereconstructed inthe\nAnalysis pha.cseisidentical tothatshowninthefigure.Theupdatelogrecord\nforthechangetoP700islostinthecrashandnotseenduringtheAnalysis\npa.'3s.Thanks totheWALprotocol, however, alliswell\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7--the corresponding\nchangetopageP700cannothavebeenwrittentodiskeither!\nSaIneoftheupdates rnayhavebeenwrittentodisk;forconcreteness, letus\naSSUInethatthechangetoP600(andonlythisupdate) waswrittentodisk\nbeforethecrash.ThereforeP600 isnotdirty,yetitisincluded inthedirty\npagetable.rIhepageLSN onpageP600,however, reflectsthewritebecause it\nisnowequaltotheLSNofthesecondupdatelogrecordshowninFigure18.3.\n18.6.2RedoPhase\nDuringtheRedophase,ARIESreapplies theupdates ofalltransactions, COill\u00ad\nrnittedorotherwise. Further, ifatransaction wasaborted beforethecrash\nanditsupdates wereundone, asindicated byCLRs,theactionsdescribed in\ntheCLRsarealsoreapplied. Thisrepeating history paradigm distinguishes\nARIESfromotherproposed vVAL-based recovery algoritlnIls andcausesthe\ndatabase tobebrought tothesarnestateitwasinatthetimeofthecrash.\nrrheR,edophasebeginswiththelogrecordthathasthesrnallest recLSNofall\npagesinthedirtypagetableconstructed bytheAnalysis passbecause thislog\nrecordidentifies theoldestupdatethatrnaynothavebeenwrittentodiskprior\ntothecrash.Starting frornthislogrecord,R,edoscansforward untiltheend\nofthelog.Foreachredoable logrecord(update orCLR)encountered, Rx~do\ncheckswhether theloggedactionHUlstberedone.Theactionrnustberedone\nunlessoneofthefollo\\ving conditions holds:\nIIIIlTheaffected pageisnotinthedirtypagetable.\nIIrrheaffected pageisinthedirtypagetable,buttherecLSNfortheentry\nisgTcatcT tlU),'t1theLSNofthelogrecordbeingchecked.\nII1'hepageLSN (storedonthepage,whichrnustberetrieved tocheckthis\ncondition) isgTea!;crthanOTequaltotheLSNofthelogrecordbeing\nchecked.\nrrh(~firstcondition obviously 1118a11Sthatallchanges tothispagehavebeen\n\\vrittentodisk.Because therecLSNisthefirstupdatetothispa.,gethatlnay", "625": "Crushlleco1Jery 591\nnothavebeenwrittentodisk,thesecondcondition rneansthattheupdate\nbeingchecked ,\"va.sindeedpropagated todisk.Thethirdcondition, \\vhiehis\nchecked la.\",stbecause itrequires ustoretrievethepage,alsoensuresthatthe\nupdatebeingcheckedwas\u00b7writtentodisk,because eitherthisupdateoralater\nupdatetothepagewcL.'3written. (R,ecalloura.ssurnption thatawritetoapage\nisatomic;thisassurnption isirnportant here!)\nIftheloggedactionlllustberedone:\n1.Theloggedactionisreapplied.\n2.ThepageLSN onthepageissettotheLSNoftheredonelogrecord.No\nadditional logrecordiswrittenatthistiIne.\nLetuscontinue withtheexarnple discussed inSection18.6.1.FrorIlthedirty\npagetable,thesmallest recLSNisseentobetheLSNofthefirstlogrecord\nshowninFigure18.3.Clearly, thechanges recorded byearlierlogrecords\n(therehappentobenoneinthisexample) havebeenwrittentodisk.Now,\nRedofetchestheaffected page,P500,andcompares theLSNofthislogrecord\nwiththepageLSN onthepageand,because weassurned thatthispagewasnot\nwrittentodiskbeforethecrash,findsthatthepagE~LSN isless.Theupdate\nistherefore reapplied; bytes21through 23arechanged to'DEF',andthe\npageLSN issettotheLSNofthisupdatelogrecord.\nRedothenexarnines thesecondlogrecord.Again,theaffected page,P600,is\nfetchedandthepageLSN iscornpared totheLSNoftheupdatelogrecord.In\nthiscase,because weassurned thatP600 waswrittentodiskbeforethecrash,\ntheyareequal,andtheupdatedoesnothavetoberedone.\nTherernaining logrecordsareprocessed sirnilarly, bringing thesysternback\ntotheexactstateitwasinatthetirueofthecra,5h.Notethatthefirsthvo\nconditions indicating thataredoisunnecessary neverholdinthisexaruple.\nIntuitively, theycorneintoplaywhenthedirtypagetablecontains averyold\nrecLSN, goingbacktobeforetherJlostrecentcheckpoint. Inthiscase,asIledo\nscansforwa.rd frornthelogrecordwiththisLSN,itencounters logrecordsfor\npagesthatwerewrittentodiskpriortothecheckpoint andtherefore notin\nthedirtypagetableinthecheckpoint. SorneofthesepagesInaybedirtied\nagainafterthecheckpoint; nonetheless, theupdates tothesepagespriortothe\ncheckpoint neednotberedone.Although thethirdcondition aloneissufficient\ntorecognize thattheseupdates neednotberedone, itrequires ustofetch\ntheaffected page.'Thefirstt\\VOconditions allc)\\vustorecognize thissituation\n\\vithout fetching thepage.(Thereaderisencouraged toconstruct exaulples\nth,ltillustrate theuseofeachoftheseconditions; seeExercise 18.8.)", "626": "592\n.AttheendoftheIledophase,endtyperecordsarewrittenforantransactions\nwithstatusC,whicharerCllloved '\u00a31'01nthetransaction table.\n18.6.3UndoPhase\nThe1Jndophase,unliketheothertwopha..')cs,scansbackward fronltheend\nofthelog.Thegoalofthisphaseistoundotheactionsofalltransactions\nactiveatthetilneofthecra..sh,thatis,toeffectively abortthe1n.Thissetof\ntransactions isidentified inthetransaction tableconstructed bytheAIlalysis\nphase.\nTheUndoAlgorithm\nUndobeginswiththetransaction tableconstructed bythe.Analysis phase,\nwhichidentifies alltransactions activeatthetiIneofthecrash,andincludes the\nLSNofthe1110strecentlogrecord(thelastLSN field)foreachsuchtransaction.\nSuchtransactions arecalledlosertransactions. AllactionsoflosersIllUstbe\nundone, andfurther, theseactionsrnustbeundoneinthereverseoftheorder\ninwhichtheyappearinthelog.\nConsider thesetoflastLSN valuesforalllosertransactions. Letuscallthisset\nToUndo. Undorepeatedly choosesthelargest(Le.,rnostrecent)LSNvaluein\nthissetandprocesses it,untilrro1Jndo isernpty.Toprocessalogrecord:\n1.IfitisaCLRandtheundoNextLSN valueisnotnull,theundoNextLSN\nvalueisaddedtothesetToUndo; iftheundoNextLSN isnull,anend\nrecordiswrittenforthetransaction because itiscornpletely undone, and\ntheCLR,isdiscarded.\n2.Ifitisan.updaterecord,aCLR,iswrittenandthecorresponding a,ctionis\nundone, asdescribed inSection18.2,andtheprevLSN valueintheupdate\nlogrecordisaddedtothesetToUndo.\n\\i\\lhenthesetrroUndo isernpty,thelJndo phas(~iscornplete. I{estart isno\\v\ncornplete, andthesystenlcanproceed 'withnonnaloperations.\nLetuscontinue withthescenario discussed inSections 18.6.1and18.6.2.The\nonlvactivetratlsaction atthetiTneofthecra,sh\\vas detennined tobeTI000.~J . ,'- - . , ... .,'-' -., .\". -\u2022\u2022\n:F'rornthetransaction table,vvegettheLSNofitsInostrecentlogrecord,\\vhich\nisthefourthupdatelogrecordinFigure18.3.'1'henpdn..teisundone, anda\nCL11is\\vritten\\vith undoNextLSN equaltotheLSNofthefirstlogrecordin\nthefigure.T'henextrecordtobeundonefortransaction i\"TI000isthefirstlog\nrecordinthefigure.Afterthisisundone, aCLRa,nelanendlogrecordfor\n711000<trewritten, <tndtheIJndophaseiscornplete.", "627": "CT'ash ReC()7.]CT'!i 59,3\nInthisexarnple, undoing theactionrecorded inthefirstlogrecordcausesthe\nactionofthethirdlogrecor~l,\\vhichisduetoaconunitted traJlsaetioIl, tobe\noverwritten andthereby lost!rrhissituation arisesbecause 1\"'2000overvvrote\nadataitcrIl\\vrittenbyTIOOOwhile1''1000 W(l..'3stillactive;ifStrict2PLwere\nfollo\\ved, 1'2000\\vouldnothavebeenallowedtooverwrite thisdataiterH.\nAborting aTransaction\nAborting a.transaction isjustaspecialcaseoftheUndophaseofRestart in\n\\vhichasingletransaction, ratherthanasetoftransactions, isundone. The\nexarnple inFigure18.5,discussed next,illustrates thispoint.\nCrashesduringRestart\nItisimportant tounderstand howthelTndoalgorithrn presented inSection\n18.6.3handlesrepeated systerncrashes. Because thedetailsofprecisely how\ntheactiondescribed inanupdatelogrecordisundone arestraightforward,\nwediscussUndointhepresence ofsysterncrashesusinganexecution history,\nshowninFigure18.5,thatabstracts awayunnecessary detail.Thisexarnple\nillustrates howaborting atransaction isaspecialcaseofUndoandhowtheuse\nofCLRsensuresthattheUndoactionforanupdatelogrecordisnotapplied\ntwice.\nLSN LOG\n00,os-;-begin_checkpoint, end_checkpoint\n10-rupdate:TlwritesP5 prevLSN\n20-F-update:T2writesP3\n30 Tlabort .-\\\nI\n40,45-F-CLR:UndoT1LSN10,T1tndundonextLSN\n50-..,......update:T3writesPIi\nI\nj\n!\nI\n60-......update:1'2writesP5....../\n><CRASH, RESTART\n70 CLR:l1ndo'1'2LSN60\nso,85 CLR:Undo'1'3LSN50,'1'3end\n><CRASH, RR~TART\n90,95 CLR:lJndoT2LSN20,T2end\nFigure 18.5ExC'uTlple ofUndowithRepeatt!d C~rashes", "628": "594 (;IIAPTEH. J8\n'rhelogshcnvstheorderin\\vhich theDB~IS executed variousactions; notethat\ntheLSNsareinascending order ~andthat eal~hlogrecordforatransaction ha..'3\naprevLSN' fieldthatpointstotheprevious logrecordforthattransaction. \\~Te\nhavenotshown'n/ullprevLSNs, thatis,SOInespecial'\\lailleused intheprevLSN\nfieldofthefirstlogrecordfora,transaction toindicate tha,tthereisnoprevious\nlogrecord. vVealsocOlnpacted thefigurebyoccasionally displaying hvolog\nrecords(separated byacOIlllna) onasingleline.\nLogrecord(withLSN)30indicates thatTlaborts. Allactionsofthistrans\u00ad\nactionshouldbeundoneinreverseorder,andtheonlyactionof~r1,described\nbytheupdatelogrecord10,isindeedundoneasindicated byCLR,40.\nAfterthefirstcrash,Analysis identifies F)l(withrecLSN50),P~3(withrecLSN\n20),andP5(withrecLSN 10)asdirtypages.Logrecord45showsthatTlisa\ncornpleted transaction; hence,thetransaction tableidentifies T2(withlastLSN\n60)andT3 (withlastLSN' 50)asactiveatthetirneofthecrash.'1'heRedo\nplu:1...sebeginswithlogrecord10,whichistherninirnurn recLSN inthedirty\npagetable,andreapplies allactions(fortheupdateandCLR,records), asper\ntheRedoalgorithIl1 presented inSection 18.6.2.\nTher1'olJndo setconsists ofLSNs60,for1'12,and50,forT~3.ThelJndophase\nnowbeginsbyprocessing thelogrecordwithLSN60because 60isthelargest\nLSNintheToUndo set.Theupdateisundone, andaCLR,(withLSN70)\niswrittentothelog. ~rhisCLIlhasllndoNextLSN equalto20,whichisthe\nprevLSN valueinlogrecord60;20isthenextactiontobeundonefor112.Now\nthelargestrernaining LSNintherroundosetis50.The \\vritE~corresponding\ntologrecord50isnowundone, andaCLH,describing thechangeis'written.\nrrhiseLH,hasLSN80,anditsundoNextLSN fieldisnullbecause 50isthe\nonlylogrecordfortransaction T3.Therefore T~3iscOITlpletely undone, andan\nendrecordiswritten. Logrecords70,80,and85aTewrittentostablestorage\nbeforethesysterncrct.shes asecondtirHe;ho\\vever, thechanges described by\ntheserecords ITlaynothavebeenwritten,todisk..\n\\\\lhenthesysternisresta.rted aftertheS8C011(1cra,,')}LAnalysis deterrnines that\ntheonlyactivetransactioIl atthetirneofthecrash \\\\1[1.'3'T2;inaddition, thedirty\npa,getableisidenticaJ to\\\\Thatit\\VEtSduringtheprevious restart. Logrecords\n10througll 85areprocessed EtgainduringItedo.(Ifsorneofthechanges rnade\nduringtheprcv\"ious H,edowerevvrittentodisk,thepageLSN's ontheaffected\npagesareusedtodetectthissituation andavoidwritingthesepagesagain.)\nT'helJndophaseconsiders theonlyLSN intheTolJndo set,70,andprocesses it\n}))\"addingtIlellndoNextLSN value(20)tothe1'olJndo set.Next,logrecord20\nisprocessed l)yllndoing~r2's \"\\Triteofpage}J:.3,a.nda.CIJl,isVvTitten(LSN90).\nBecause 20isthefirstof7'2'slogrecords andtherefore, thelaAstofitsrecords", "629": "tobeundone~~the undoNextLSN fieldinthisCLR ISntlll,anendrecord IS\nwrittenforT2,al1dtheTolJndo setisno\\v E:~rnpty.\nllecovery isno\\vcornplete, andnorrnalexecution canresurnevviththe\u00b7writing\nofacheckpoint record.\nThisexarnple illustrated repeated crashesduringthelJndophage. Ii()l'corn\u00ad\npleteness, letusconsider vvhathappens ifthes)'sterncra,'3hes\u00b7whileR,estart is\nintheAnalysis orIledopha.se.IfacrashoccursduringtheAnalysis phase,all\ntheworkdoneinthisphaseislost,andonrestarttheAnalysis phasestarts\nafreshvviththesa11leinforrnation asbefore.Ifacr&'3hoccursduringtheRedo\nphase,theonlyeffectthatsurvives thecra...9histhatsorneofthechanges rnade\nduringRedo11U1Yhavebeenwrittentodiskpriortothecrash.R,estartstarts\nagainwiththeAnalysis phaseandthentheRedophase,andsorneupdatelog\nrecordsthatwereredonethefirsttirnearoundwillnotberedoneasecondtirne\nbecause thepageLSN isnowequaltotheupdaterecord's LSN(although the\npageshavetobefetchedagaintodetectthis).\nWecantakecheckpoints duringllestarttorninirnize repeated workintheevent\nofacrash,butwedonotdiscussthispoint.\n18.7MEDIARECOVERY\nMediarecovery isbasedonperiodically rnaking acopyofthedatabase. Be\u00ad\ncausecopying alargedatabase objectsuchasafileCeHltakealongtirHe,and\ntheI)BMSrnustbeallowedtocontinue vvithitsoperations intheIneantirne,\ncreating acopyishandled inarnanner sirnilartotakingafuzzycheckpoint.\n\\\\Thenadataba.se objectsuchasafileorapageiscorrupted, thecopyofthat\nobjectisbrought up-to-date byusingthelogtoidentifyandreapplythechanges\nofcornnlitted transactions andundothechanges ofuncoI1unitted transactions\n(asofthetirneofthernediarecovery operation).\nThe\nbegilLchecl<.point LSNofthernostrecentcOlllplete checkpoint isrecorded\nalong\\viththecopy()fthedatabase objecttoluinirnize thevvorkinreapplying\nchaxlges ofcornrnitt(~d transactions. LetusCOlnpare thesl11<:.111est recLSN of\nadirtypageinthecorresponding encLcheckpoint record\\viththeI;SNofthe\nbegirLcheckpoint recordandcalltheslua.llerofthesetvvoLSNsI.\\Veobserve\nthattheactions recorded inalllogrecordswithLSNslessthaDIInustbe\nref1ectE~(l inthecopy.Thus:0111ylogrecords\\vithLSNs greaterthanIneedbe\nreapplied tothecopy.", "630": "/\"\"()6D... C~HAPTg,R 18\nFinally,theupdates oftransactions thatareincornplete atthetiIl1eofInedia\nrecovery orthat\\vereaborted afterthefuzzycopy\\va\"corllpleted needtobe\nundonetoensurethatthepagereflectsonlytheactionsofconunitted transac\u00ad\ntions.Thesetofsuchtransactions canbeidentified (1...'3intheAnalysis pass,\nandweornitthedetails.\n18.8OTHER APPROACHES ANDINTERACTION WITH\nCONCURRENCY CONTROL\nLikeARIES,theInostpopular alternative recovery algoritlllns alsornaintain a\nlogofdataba.'3e actionsaccording tothe\\VALprotocol. AInajaI'distinction\nbetween ARIESandthesevariants isthattheRedophaseinARIES repeats\nhistory,thatis,redoestheactionsofalltransactions, notjustthenon-losers.\nOtheralgorithms redoonlythenon-losers, andtheRedophasefollowsthe\nUndophase,inwhichtheactionsoflosersarerolledback.\nThankstotherepeating historyparadigm andtheuseofCLRs,ARIESsup\u00ad\nportsfine-granularity locks(record-level locks)andloggingoflogicaloperations\nratherthanjustbyte-level rnodifications. Forexalllple, consider atransaction\nTthatinsertsadataentry15*intoaB+treeindex.Between thetirnethis\ninsertisdoneandthetimethatTiseventually aborted, othertransactions Inay\nalsoinsertanddeleteentriesfrornthetree.Ifrecord-level locksaresetrather\nthanpage-level locks,theentry15*I11aybeonadifferent physical pagewhen\nTabortsfr0111theonethatTinserted itinto.Inthiscase,theundooperation\nfortheinsertof15*lllUStberecorded inlogicaltennsbecause thephysical\n(byte-level) actionsinvolved inundoing thisoperation arenottheinverseof\nthephysical actionsinvolved ininserting theentry.\nI.Jogging logicaloperations yieldsconsiderably higherconcurrency, although the\nuseoffine-granularity lockscanleadtoincreased lockingactivity(because rnore\nlocks1nustbeset).Hence:thereisatrade-off between different \\VAL-b<.k\"led\nrecovery schclnes. vVechosetocoverARIESbecause ithasseveralattractive\nproperties, inpa.rticular, itssirnplicity anditsabilitytosupport fine-granularity\nlocksandloggingoflogicaloperations.\nOneoftheearliestrecovery algorithrns, llsedintheSyster11 R,prototype at\nIBI\\'1,takesav(~rydifferent approach. 'Thereisnologgingand,ofcourse,\nno\\VALprotocol. Instead, thedatabase istreatedasacollection ofpages\nandaccessed thTough apagetable,which IIHtpSpageidstodiskaddresses.\n\\Vhenatransaction Inakeschanges to<'1datapagelitactually Inakesacopy\nofthepage,calledtheshadow ofthepage,a,nelchanges theshadow page.\nThetransaction copiestheappropriate partofthepagetableandchan,gesthe\nentryforthechanged pagetopointtotheshadov,r, sothatitcanseethe", "631": "changes; ho\\vever ~othertransactions continue toseetheoriginal pagetable,\nandtherefore theoriginal page,untilthistransaction COll1lnits. Aborting a\ntransaction issirnple: .Justdiscarditsshadcnvversions ofthepagetableand\nthedatapages.Cornrnitting atransaction involves rnakingitsversionofthe\npagetablepublicanddiscarding theoriginaldatapagesthataresuperseded\nbyshado\\vpages.\nThisscheluesuffersfrornanUlnber ofproblerlls. First,databecornes highly\nfragrnented cluetothereplacernent ofpagesbyshado\"vversions, \"vhichrIlaybe\nlocatedfarfr01ntheoriginal page.Thisphenornenon reducesdataclustering\nandrnakesgoodgarbage collection irnperative. Second, thesche1nedoesnot\nyieldasufficiently highdegreeofconcurrency. rrhird,thereisa,substantial\nstorageoverhead duetotheuseofshadowpages. ~burth,theprocessaborting\natransaction canitselfrunintodeadlocks, andthissituation rllustbespecially\nhandled becausethesernantics ofaborting anaborttransaction getsrnurky.\nForthesereasons, eveninSysternR,shadowpagingwaseventually superseded\nby\\VAL-based recovery techniques.\n18.9REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n..Whataretheadvantages oftheARIESrecovery algoritluu? (Section 18.1)\nIIDescribe thethreestepsincrashrecovery inARIES? Whatisthegoalof\ntheAnalysis phase?Theredophase?Theundophase?(Section 18.1)\nII\\lVhatistheLSNofalogrecord?(Section 18.2)\nII\\Vhatarethedifferent typesoflogrecords <:l,,11dwhenaretheywritten?\n(Section 18.2)\nifill\"Vhatinforrnation isrnaintained inthetransaction tableandthedirtypage\ntable?(Section 18.3)\nifillvVhatis\\Vrite-Ah(~adLogging? \\Vhatisforcedtodiskatthetirneatrans\u00ad\nactionCOIlllnits? (Section 18.4)\n\u2022\\~Thatisafuzzycheckpoint? \\Vhyisituseful?\"\\ThatisarnaBterlogrecord?\n(Section 18.5)\nIIIIn\\vhichdirection doesthe.A.nalysis phaseofrecovery scanthelog?At\n\\vhichpointinthelogdoesitbeginandendthescan?(Section 18.6.1)\nIIDescril)c \\vhatinfonnation isgathered intheAnalysis pha,seandho\\v.\n(Section 18.6.1)", "632": "598 CHAPTER IS\n\u2022In\\vhichdirection doestheRedophaseofrecovery processthelog?At\nwhichpointinthelogdoesitbeginandend?(Section 18.6.2)\n\u2022Whatisaredoable logrecord? Underwhatconditions istheloggedac\u00ad\ntionredone? \\Vhatstepsarecarriedoutwhenaloggedactionisredone?\n(Section 18.6.2)\n\u2022Inwhichdirection doestheUndophaseofrecovery processthelog?At\nwhichpointinthelogdoesitbeginandend?(Section 18.6.3)\n\u2022Whatarelosertransactions? Howaretheyprocessed intheUndophase\nandinwhatorder?(Section 18.6.3)\n\u2022Explain whathappensiftherearecrashesduringtheUndophaseofre\u00ad\ncovery.WhatistheroleofCLR.s?Whatifthereare~rashesduringthe\nAnalysis andRedophases?(Section 18.6.3)\nIIHowdoesaDBlV1Srecoverfrom111ediafailurewithoutreadingthecomplete\nlog?(Section 18.7)\n\u2022Record-level loggingincreases concurrency. Whatarethepotential prob\u00ad\nlems,andhowdoesARIESaddressthem?(Section 18.8)\nIIWhatisshadowpaging?(Section 18.8)\nEXERCISES\nExercise 18.1Brieflyanswerthefollowing questions:\n1.Howdoestherecovery rnanager ensureatornicity oftransactions? Howdoesitensure\ndurability?\n2.Whatisthedifference between stablestorageanddisk?\n:3.Whatisthedifference between asystenlcrashandauledi\"lfailure?\n4.Explain thevVALprotocol.\nt).Describe thestealandno-force policies.\nExercise 18.2BrieflyanswerthefollO\\ving questions:\n1.v\\Thataretheproperties required ofLSNs?\n2.\\\\Thatarcthefieldsinanupdatelogrecord? Explain theuseofeachfield.\n:3.VVhatareredoal)le logrecords?\n4.vVha.tarethedifferences between updatelogrecordsandCLRs?\nExercise 18.3Brieflyanswerthefollowing questions:\n1.\\VhataretherolesoftheAnalysis, Iledo1andUndophasesinAHlES?\n2.(;onsider theexecution showninFigure18.6.", "633": "LSN LOG\n00 begin__checkpoint\n10-end_cbeckpoint\n20-update:TlwritesP5\n30---update:T2writesP3\n40.....-.-T2commit\nSO T2end\n60.....-.-update:T3writesP3\n70 Tlabort\n><CRASH, RESTART\nFigure18.6Execution withaCrash\nLSN LOG\n00-r-update:TlwritesP2\n10-l-update:TlwritesPI\n20-update:T2writesP5\n30 update:T3writesP3\n40 T3commit\n501-update:T2writesPS\n60iupdate:T2writesP3\n70-r-T2abort\nFigure18.7Aborting aTransaction\n(a)WhatisdoneduringAnalysis? (BepreciseaboutthepointsatwhichAnalysis\nbeginsandendsanddescribe thecontents ofanytablesconstructed inthisphase.)\n(b)WhatisdoneduringRedo?(BepreciseaboutthepointsatwhichRedobeginsand\nends.},\n(c)'VVhatisdoneduringUndo?(Bepreciseaboutthepoints H.twhichUndobegins\nandends.)\nExercise 18.4Consider theexecution showninFigllre18.7.\n1.ExtendthefiguretoshuwprevLSN andllndonextLSN values.\n2.Describe theactionstakentorollback transaction 7\"'2.", "634": "600 C~HAPTER 1B\nLSN LOG\n00-begin_checkpoint\n10 end_checkpoint\n207update:1'1write..~PI\n30---update:1'2writesP2\n40---update:1'3writesP3\n50-1'2commit\n60---update:1'3writesP2\n70......0-1'2end\n80-update:1'1writesP5\n90-!-1'3abort\n><CRASH,RESTART\nFigure 18.8Execution withMultiple Cra...,hes\n3.ShowthelogafterT2isrolledback,including allprevLSN andundonextLSN valuesin\nlogrecords.\nExercise 18.5Consider theexecution showninFigure18.8.Inaddition, thesysterllcrashes\nduringrecovery afterwritingtwologrecordstostablestorageandagainafterwritinganother\ntwologrecords.\n1.WhatisthevalueoftheLSNstoredinthemasterlogrecord?\n2.WhatisdoneduringAnalysis?\n3.WhatisdoneduringRedo?\n4.\\VhatisdoneduringUndo?\n,5.Showthelogwhenrecovery iscomplete, including allnon-null prevLSN andunclonextLSN\nvaluesinlogrecords.\nExercise 18.6Brieflyanswerthefollowing questions:\n1.Howischeckpointing doneinARIES?\n2.Checkpointing canalsobedoneasfollows: Quiescethesysterllsothatonlycheckpointing\nactivity canbeinprogress, writeoutcopiesofalldirtypages,andincludethedirtypage\ntableandtrallsaction tableinthecheckpoint record.\\\\lhataretheprosandconsofthis\napproach versusthecheckpointiug a,pproach ofARIES?\n:3.\\Vhathappens ifasecondbegiILcheckpoint recordisencountered duringtheAnalysis\nph<-1..13e?\n4.C;anaseconden(Lcheckpoint recordbeencountered duringtheAnaJysis phase?\n5.\\iVh,YistheuseofCLRsirnportant fortheuseofundoactionsthatarenotthephysical\ninverseoftheoriginal update?", "635": "Figure18.9LSN LOG\n00-'-begin_checkpoint\n10-!-update:TlwritesPI\n20+'1'1commit\n30-+update:T2writesP2\n40T'1'1end\n50-'1'2abort\n60-rupdate:'1'3write'iiP3\n70 end_checkpoint\n80--'1'3commit\n><CRASH, RESTART\nLogRecords between Checkpoint Records601\nf;\n6.Giveanexample thatillustrates howtheparadigm ofrepeating historyandtheuseof\nCLRsallowARIEStosupport locksoffinergranularity thanapage.\nExercise 18.7Brieflyanswerthefollowing questions:\n1.Ifthesystemfailsrepeatedly duringrecovery, whatistherrlaximum nunlber oflog\nrecordsthatcanbewritten(asafunction ofthenumber ofupdateandotherlogrecords\nwrittenbeforethecrash)beforerestartcOInpletes successfully?\n2.Whatistheoldestlogrecordweneedtoretain?\n3.Ifabounded amount ofstablestorage isusedforthelog,howcanwealwaysensure\nenoughstablestoragetoholdalllogrecordswrittenduringrestart?\nExercise 18.8Consider thethreeconditions underwhicharedoisunnecessary (Section\n20.2.2).\n1.\\Vhyisitcheaper totestthefirsttwoconditions?\n2.Describe anexecution thatillustrates theuseofthefirstcondition.\n;3.Describe anexecution thatillustrates theuseofthesecondcondition.\nExercise 18.9Thedescription inSection 18.6.1oftheAnalysis pha,sernadethesirnplifying\nassulTlptioll thatnologrecordsappeared between thebegill-checkpoint andend_checkpoint\nrecordsfortheInostrecentcOlnplete checkpoint. Thefollowing questions explore howsuch\nrecordsshouldbehandled.\n1.Explain whylogrecordscouldbewrittenbetween thebegiIl-checkpoint andeneLcheckpoint\nrecords.\n2.Describe howtheAnalysis phasecouldbeInodified tohandlesuchrecords.\n;3.Consider theexecution sho\\vninl~\"igure18.9.Showthecontents oftheencLcheckpoint\nrecord.\n4.Illustrate yourrnodified Analysis pha.seontheexecution showninFigure18.9.", "636": "602\nExercise 18.10Ans\\verthefollowing questions briefly:C~HAPTER IB\n1.Explain how1nedinrecovery ishandled inARIES.\n2.\\Vhatarethepros(I,ndconsofusingfuzzydurnpsfornlediarecovery?\n~1.\\VhatarethesirYlilarities and differencf~s between checkpoints andfuzzychunps?\n4.Contrast ARIESwithothervVAL-based recovery schernes.\n5.Contrast AHlESwithshadcrw-page-bcLsed recovery.\nBIBLIOGRAPHIC NOTES\nOurdiscussion oftheARIESrecovery algorithm isbasedon[544].[282]isasurveyarticle\nthatcontains averyreadable, shortdescription ofARIES.[541,545]alsodiscussARIES.\nFine,\u00b7granularity lockingincreases concurrency butatthecostof11101'elockingactivity; [542]\nsuggests atechnique basedonLSNsforalleviating thisproblerYl. [458]presents afor111al\nverification ofARIES.\n[355]isanexcellent surveythatprovides abroader treatrnent ofrecovery algoritlulls thanour\ncoverage, inwhichwechosetoconcentrate ononeparticular algorithrn. [17]considers perfor\u00ad\nrnanceofconcurrency controlandrecovery algorithrIls, takingintoaccount theirinteractions.\nTheirnpactofrecovery onconcurrency control isalsodiscussed in[769].[625]contains a\nperforrnance analysis ofvariousrecovery techniques. [236]cornpares recovery techniques for\nmainrnerllory database systeulS, whichareoptirnized forthecasethat11l0stoftheactivedata\nsetfitsinrnainH1ernory.\n[478]presents adescription ofarecovery algorithm basedonwrite-ahead logging inwhich\n'loser'transactions cHefirstundoneandthen(only)transactions thatcorl1nlitted beforethe\ncrashareredone. Shadow pagingisdescribed in[493,337].AschernethatusesacOlnbination\nofshadow pagingandin-place updating isdescribed in[624].", "637": "PARTVI\nDATABASE DESIGN ANDTUNING", "638": "", "639": "19\nSCHEMA REFINEMENT AND\nNORMAL FORMS\nWI\"Whatproblems arecausedbyredundantly storinginformation?\n..Whatarefunctional dependencies?\n..Whatarenornlalformsandwhatistheirpurpose?\n...Whatarethebenefits ofBCNFand8NF?\n...Whataretheconsiderations indecolllposing relations intoappropriate\nnormalforms?\n..Wheredoesnormalization fitintheprocessofdatabase design?\n...Areluoregeneraldependencies usefulindatabase design?\n..Keyconcepts: redundancy, insert,delete,andupdateanomalies;\nfunctional dependency, Armstrong's Axioms; dependency closure, at\u00ad\ntributeclosure; normalfonns,BCNF,8NF;decOlnpositions, lossless\u00ad\njoin,dependency-preservation; multivalued dependencies, joindepen\u00ad\ndencies, inclusion dependencies, 4NF,5NF\nItisanlelancholy truththatevengreatIneIlhavetheirpoorrelations.\nCharles Dickens\nConceptual database designgivesusasetofrelation 8chen1&') andintegrity\nconstraints (ICs)thatcanberegarded a,sagoodstarting pointforthefinal\ndat(1)ase design. T'hisinitialdesignIHustberefinedbytakingthelCginto\naccount rnorefullythanispossiblc\\vith justtheEllrnodelconstructs aIIdalso\nbyconsidering perforrnance criteriaandtypicalworkloads. Inthischapter,\nwec!iscllsshowlCscanbeusedtorefinetheconceptual schenulproduced by\nG05", "640": "606 (]HAprrER 19\ntranslating anER,1Hodeldesignintoacollection ofrelations. \\Vorkload and\nperforrnance considerations arediscussed inChapter 20.\n\\Veconcentrate onanirnportant classofconstraints calledflLnct'ional depen\u00ad\ndencies. Otherkindsofles,forexarnple, m/ultival'll,ed dependencies andjoin\ndependencies, alsoprovideusefulinforrnation. TheycansOIuetilnes revealre\u00ad\ndundancies thatcannotbedetected usingfunctional dependencies alone.We\ndiscusstheseotherconstraints briefly.\nThischapterisorganized asfollows. Section19.1isanoverview oftheschenla\nrefineInent approach discussed inthischapter. Weintroduce functional depen\u00ad\ndenciesinSection19.2.InSection19.3,weshowhowtoreasonwithfunctional\ndependency information toinferadditional dependencies fromagivensetof\ndependencies. Weintroduce norlnalforInsforrelations inSection19.4;the\nnormalformsatisfied byarelation isameasure oftheredundancy intherela\u00ad\ntion.Arelationwithredundancy canberefinedbydecomposing it,orreplacing\nitwithsmallerrelations thatcontainthesaIneinformation butwithout redun\u00ad\ndancy.Wediscussdeco1npositions anddesirable properties ofdecompositions\ninSection 19.5,andweshowhowrelations canbedecomposed intosmaller\nrelations indesirable normalformsinSection19.6.\nInSection 19.7,wepresentseveralexamples thatillustrate howrelational\nschemas obtained bytranslating anERmodeldesigncannonetheless suffer\nfrolnredundancy, andwediscusshowtorefinesuchschemas toeliminate the\nproblems. InSection19.8,wedescribe otherkindsofdependencies fordataba..se\ndesign.Weconclude withadiscussion ofnornlalization forourcasestudy,the\nInternet shop,inSection19.9.\n19.1INTRODUCTION TOSCHEMA REFINEMENT\nWenowpresentanoverview oftheprobleIns thatschenlarefinement isintended\ntoaddress andarefinernent approach basedondecolnpositions. Iledundant\nstorageofinforrnation istherootcauseoftheseproblerns. Although decoInpo\u00ad\nsitioncanelirninate redundancy, itcanleadtoproblclns ofitso\\vnandshould\nbeusedwithcaution.\n19.1.1 Pro~lems CausedbyRedundancy\nStoringtheSeHneinforrnation redundantly, thatis,inl110rethanoneplace\n\\vithinadatabase, canleadtoseveralproblcll1S:\nIIRedundant Storage: SOU1CiuforInation isstoredrepeatedly.", "641": "607\nIIUpdate Anomalies: Ifonecopyofsuehrepeated dataisupdated, an\ninconsistency iscreatedunlessallcopiescu'csirnilarly updated.\nIIInsertion Anomalies: ItIIU1Ynotbepossible tostorecertaininforlnation\nunlesssorneother,unrelated, inforIIlatioIl isstoredaswell.\nIIDeletion Anomalies: Itrnaynotbepossible todeletecertaininforrnation\nvvithout losing SOHleother,unrelated, infofrnation asv'lell.\nConsider arelationobtained bytranslating avariantoftheIIourly_Empsentity\nsetfrornChapter 2:\nHourly_Ernps(:2,sn, na'lne,lot,rating,hOllrly_wages, hOllr.'LwoTked)\nInthischapter, weornitattribute typeinforrnation forbrevity, sinceourfocus\nisonthegrouping ofattributes intorelations. Weoftenabbreviate anattribute\nnarnetoasingleletterandrefertoarelation schemabyastringofletters,one\nperattribute. Forexarllple, werefertotheHourly_ErnpsschernaasSNLRWH\n(~Vdenotesthehov,rly_wages attribute).\n1'hekeyforHourly_Empsisssn.Inaddition, suppose thatthehourly_wages\nattribute isdeterrnined bytheTatingattribute. Thatis,foragiven7'CLting\nvalue,thereisonlyoneperrllissible houTly_wages value.ThisICisanexanlple\nofafunctional dependency. Itleadstopossible redundancy intherelation\nHourly_Ernps,asillustrated inFigure19.1.\nInarne\n.,._....._..-,----._-\n123-22-3666 Attishoo 488 10 40\n._.n_\u00b7\u00b7_\u00b7\u00b7~\u00b7~\u00b7\u00b7\u00b7~\u00b7 ~..\"\"\"\".'.'.\"\"<-\",,'-\"\"\"'.'\n231-31-5368 Sruiley 228 10 ~30\n....'~.\".li...\"'\u2022. .__.... ~.._..._.._..-\n131-24-3650 Srllethurst 355 7 ~30-434-26-3751 Guldu :355 7 ~)2---612-67-4134 :NIadayan 358 10 40\n._........._-. .-\nFigure 19.1AnInstance oftheHourly_Emps Relation\nIfthesaInevalueappears intheratingcolurnnoftv'lotuples,theICtellsus\nthatthesarnevalueHUlstappearinthehourly_wages colurnn c1.'3well.This\nredundancy hasthesarnenegative consequences a..sbefore:\nIIRedtlndant StoTage: rrheratingvalue8corresponds tothehourlywage10,\nandthis(L.':lsociation isrepeated threetirnes.\nII[TpdateAnoTno1ic,,: ThehO'lLTlY_'l1HLgcs inthefirsttuplecouldbeupdated\nwithout rnakingasirnilarchangeinthesecondtuple.", "642": "608 CHAPT'ER 19t\n\u2022InseT\"lion Ano'mal'ie,';: VVecannotinsertatupleforancrnployee unless\\ve\nknowthehourlywagefortheernployee's ratingvalue.\n\u2022Delet'ion finon-LaUe..,: If\\vedeletealltuplesvvithagivenratingvalue(e.g.,\nwedeletethetuplesforSnlcthurst andGuldu) \\velosethe&t;sociation\nbet:\\veen thatTat'ingvalueanditshouTly_wage value.\nIdeally, vve\\vantscherna.s thatdonotpennitredundancy, butattheveryleast\nwewanttobeabletoidentify schernas thatdoallowredundancy. Evenifwe\nchoosetoacceptaschernavvithsorneofthesedrawbacks, perhaps owingto\nperforlnance considerations, wewanttornakeaninfonned decision.\nNullValues\nItisworthconsidering whether theuseofnullvaluescanaddresssomeofthese\nproblems. Aswewillseeinthecontextofourexarnple, theycannotprovidea\ncomplete solution, buttheycanprovidesornehelp.Inthischapter, wedonot\ndiscusstheuseofnullvaluesbeyondthisoneexarnple.\nConsider theexample Hourly_Elnpsrelation. Clearly, nullvaluescannothelp\neliminate redundant storageorupdateanomalies. Itappears thattheycan\naddressinsertion anddeletion anomalies. Forinstance, todealwiththeinser\u00ad\ntionanolnaly exarnple, wecaninsertanelTIplayee tuplewithnullvaluesinthe\nhourlywagefield.However, nullvaluescannotaddressallinsertion anornalies.\nForexarnple, wecannotrecordthehourlywageforaratingunlessthereis\nanernployee withthatrating,because wecannotstoreanullvalueinthessn\nfield,whichisaprirnary keyfield.Sinlilarly, todealwiththedeletion anomaly\nexarnple, wernightconsider storingatuplewithnullvaluesinallfieldsexcept\nTat'ingandhourly_wages ifthelasttuplewithagivenratingwouldotherwise\nbedeleted. However, thissolution doesnotworkbecause itrequires the8871,\nvaluetobenull,andprirnary keyfieldscannotbenull.Thus,rl/ullvaluesdo\nnotprovideageneralsolution totheproblerns ofreclundancy, eventhoughthey\ncanhelpinsornecases.\n19.1.2Decompositions\nIntuitively, redundancy arises\\vhenarelational schcrnaforcesanassociation\nbet\\veen attributes thatisnotnatural. Functional dependencies (and,forthat\nrnatter,otherIes)can'beusedtoidentify suchsituations andsuggest re\u00a31ne\u00ad\nrnentstothescheruEL Theessential ideaisthatrnanyproblerns arising fr0111re\u00ad\ndundancy carlbeaddressed byreplacing arelation 'withacollection of'srnaller'\nrelations.", "643": "ScheTnaRefine'Tnent andNOTlnal ]?o'T'rns 609\nA.decomposition ofarelation schemaItconsists ofreplacing therelation\nscherna byt\\VO(or1no1'e)relation schcrnas thateachcontainasubsetofthe\nattributes ofRandtogether includeallattributes inR.Intuitively, \\eve\\evant\ntostoretheinforrnation inanygiveninstance ofRbystoringprojections of\ntheinstance. Thissectionexalnines theuseofdecornpositions through several\nexanlples.\nvVecandecornpose lIourly_Ernpsintotworelations:\nIfourly_Ernps2C~.:~n~ naTne,lot,'rating,hOUr\\'Lwo'rked)\n\\Vages(rating,hourly_wages)\nTheinstances oftheserelations corresponding totheinstance ofHourly_E1nps\nrelation inFigure19.1isshowninFigure19.2.\n'--['-ioT]'rating[hours_lLJorked-n\n] Inarne\n..._- .....\"\"....,,,..........\n123-22-3666 Attishoo 488 40-231-31-5368 Sluiley 228 30\n-_..._...... _...\n131-24-3650 Smethurst 355 30\n...-.,...-.....-...\"'....\"......,...._- ..._._...\n434-26-3751 Guldu 355 32-_...~._--_...\n612-67-4134 Madayan 358 40[ssn\nIrating\n l!!ourly~'u)ages\nFl_~_no_\nFigure19.2Instances ofHourly...Emps2 andvVages\nNotethatwecaneasilyrecordthehourlywageforanyratingsirnplybyadding\natupleto\\;Vages,evenifnoernployee withthatratingappears inthecur\u00ad\nrentinstance offlourly_Ernps. Changing thewageassociated \\vitharating\ninvolves updating asingleWagestuple.Thisisrnoreefficient thanupdating\nseveraltuples(asintheoriginal design), anditelirninates thepotential for\ninconsistency.\n19.1.3Problems RelatedtoDecomposition\nlJnless\\vearecareful~decornposing arelation schernacancreate1n01'eproblerns\nthanitsolves. rrvVOirnportant questions llHlstbeaskedrepeatedly:\n1.1)0vveneedtodecornpose arelation?", "644": "610\n2.\\\\Thatproblerns (ifany)doesagivendeeornposition cause?CHAPTER 19\nTohelp\\viththefirstquestion, severalnorrrtalj'O'rnl,8havebeenproposed for\nrelations. Ifarelation schernaisilloneofthesenOfrual1'orrns,weknovvthat\ncertainkindsofproblerlls cannotarise.Considering thenorrnalforrnofagiven\nrelation schernacanhelpustodecide\\vhether ornottodecornpose itfurther. If\nvvedecidethatarelation scherna 111UStbedecornposed further, vvernustchoose\naparticular dec()lnposition (I.e.,aparticular collection ofslnallerrelations to\nreplacethegivenrelation).\nWithrespecttothesecondquestion, twoproperties ofdecornpositions are\nofparticular inter(~st. Thelossless-join property enables ustorecoverany\ninstance ofthedecornposed relation frolncorresponding instances ofthes111aller\nrelations. Thedependency-preservation property enables ustoenforce any\nconstraint ontheoriginalrelation bysinlplyenforcing SaInecontraints oneach\nofthesrnallerrelations. Thatis,weneednotperform joinsoftheslllaller\nrelations tocheckwhether aconstraint ontheoriginal relation isviolated.\nFromaperformance standpoint, queriesovertheoriginal relation mayrequire\nustojointhedecomposed relations. Ifsuchqueriesarecommon, theperfor\u00ad\nrnancepenalty ofdecomposing therelation maynotbeacceptable. Inthis\ncase,wemaychoosetolivewithsomeoftheproblems ofredundancy andnot\ndecompose therelation. Itisimportant tobeawareofthepotential problerns\ncausedbysuchresidual redundancy inthedesignandtotakestepstoavoid\nthern(e.g.,byaddingSaInecheckstoapplication code).Insonlesituations,\ndecomposition couldactually improve performance. Thishappens, forexam\u00ad\nple,iflnostqueriesandupdates exanline onlyoneofthedecornposed relations,\nwhichissrnallerthantheoriginal relation. vVedonotdiscusstheirnpactof\ndecompositions onqueryperforInance inthischapter; thisissueiscovered in\nSection20.8.\n()urgoalinthischapteristoexplain S0111epowerful concepts anddesignguide\u00ad\nlinesb&'3edonthetheoryoffunctional dependencies. Agooddatab&'3e designer\nshouldhaveafirmgraspofnor1nalfonnsand\\vhatproblerns they(doordo\nnot)alleviate, thetechnique ofdecornposition, andpotential problerns vvith\ndecornpositions. ForexaInple, adesigner oftenasksquestions such&'3these:Is\narelation inagivennonnalforIn?Isadecornposition clependency-preserving?\nOurobjective istoexplainwhentoraisethesequestions andthesignificance\noftheanswers.", "645": "SchernaRefine'rnent andNornuIl }'OT'lnS\n19.2FUNCTIONAL DEPENDENCIES611\nAfunctional dependency (FD)isakindofIethatgeneralizes theconcept\nofakey.LetRbearelation schernaandlet..\u00a5\"andYbenonernpty setsof\nattributes inR.Wesaythataninstance rofRsatisfiestheFDX~}i1ifthe\nfollowing holdsforeverypairoftuplestlandt2inr-.\nIft1.X=t2..X,thentl.}T=t2.Y'\".\nw(~usethenotation tl.Xtorefertotheprojection oftuplet1ontotheat\u00ad\ntributes in.<\\'\",inanaturalextension ofourTIlCnotation (seeChapter 4)t.a\nforreferring toattribute aoftuplet.AnFDX----7Yessentially saysthatiftwo\ntuplesagreeonthevaluesinattributes X,they111Ustalsoagreeonthevalues\ninattributes Y.\nFigure19.3illustrates therneaning oftheFDAB----7Cbyshowing aninstance\nthatsatisfiesthisdependency. ThefirsttwotuplesshowthatanFDisnotthe\nsameasakeyconstraint: Although theFDisnotviolated, ABisclearlynot\nakeyfortherelation. Thethirdandfourthtuplesillustrate thatiftwotuples\ndifferineithertheAfieldortheBfield,theycandifferintheCfieldwithout\nviolating theFD.Ontheotherhand,ifweaddatuple(aI,bl,c2,dl)tothe\ninstance showninthisfigure,theresulting instance wouldviolatetheFD;to\nseethisviolation, compare thefirsttupleinthefigurewiththenewtuple.\n--...-......................... ...\"\"\"...................... \"N\na1b1c1d1\na1b1c1d2\na1b2c2dl\na2blc3ell\n...............\"\"...............,.\"'\" '........n....'...................-.-----\"-\nFigure 19.3AnInstance thatSatisfiesAB-JoC\nIlecallthatalegalinstance ofarelationnUlstsatisfyallspecified les,including\nallspecified FDs.AsnotedinSection3.2,IesrIlustbeidentified andspecified\nba...sedonthesernantics ofthereal-world enterprise beingn1odeled. Bylooking\nataninstance ofarelation, wernightbeabletotellthatacertainFDdoesnot\nhold.I-Iowever; weC<-:l.TlneverdeducethatanFDdocsholdbylookingatone\nor1I10reinstances oftherelation, beca,useanFD,likeotherles,isastaternent\naboutallpossible legalinstances oftherelation.\n1X_._,Yisre,lel aASXfu'nctionally deteTrninc8 Y,orsimplya..sXdeterm'ines Y.", "646": "612 C~HAP'TgR 19\n.Aprirnary keyconstraint isaspecialeaseofan.1\"1).Theattributes inthekey\nplaytheroleofX,andthesetofallattributes intherelation playstheroleof\nY.Note,ho\\vever, thatthedefinition ofanFDdoesnotrequirethattheset..Y\"\nbe111iniInal; theadditionalrninimality condition IllustbeInetfor-'~tobeakey.\nIf..~----+Yholds,\\vhere Y\"isthesetofallattributes, andthereisSCHne(strictly\ncontajned) subsetllof.iJ(suchthat1/----+ },~holds,then..X\"isa81LIJerkey.\nIntherestofthischapter, \u00b7weseeseveralexarIlples ofFDsthatarenotkey\nconstraints.\n19.3REASONING ABOUT FDS\nGivenasetofFDsoverarelation scheula.R,typically severaladditional FDs\nholdoverRwhenever allofthegivenFDshold.Asanexalnple, consider:\nWorkersC~~n, naTne,lot,did,since)\nWeknowthatssn----+didholds,sincessnisthekey,andFDdid----+lotisgiven\ntohold.Therefore, inanylegalinstance ofWorkers, iftwotupleshavethe\nsamessnvalue,theyBlusthavethesarnedidvalue(frolHthefirstFD),and\nbecause theyhavethesarrledidvalue,theymustalsohavethesaInelotvalue\n(1'1'0111thesecondFD).Therefore, theFDssn----+lotalsoholdsonWorkers.\nWesaythatanFDfisimplied byagivensetFofFDsiffholdsonevery\nrelation instance thatsatisfies alldependencies inF;thatis,fholdswhenever\nallFDsinFhold.Notethatitisnotsufficient forftoholdonSaIneinstance\nthatsatisfies alldependencies inF;rather,frnustholdoneveryinstance that\nsatisfies alldependencies inP'.\n19.3.1ClosureofaSetofFDs\nThesetofall.FDsirnplied byagivensetFofFDsiscalledtheclosllre of\nJi-',denoted as.F'+.Anirnportant question ishowwecaninfer,orcornpute,\ntheclosureofagivenset]?ofFDs. ~rheanswerissirnpleandelegant. The\nfolhwving threerules,calledArmstrong's Axioms, canbeappliedrepeatedly\ntoinferallFI)sirnpliedbyaset]?ofFDs.\\lVeuse..,\"\"Y,andZtodenotescts\nofattributes overarelation schernaIt:\n\\IReflexivity: IfX~}T,thenX----+Y.\n\\IAugn1.entation: If)(-'tY,then..YZ---t}TZforanyZ.\n11IITransitivity: If)(----+Y(urdY", "647": "Sche-rna Rejinenu:nt andlVoT'lnall?oTTns 61~\nTheorem 1AT1nstrong'8 A:riornsaresoundJinthattheygene1ute only1t'Ds\ninF\"+-'whenapT)l'iedtoaset,Fofj?D8.TheyarealsocompleteJinthatrepeated\na]Jplicat'ion afthese T\"ules1JJillgenerate allFDsintheClOS'U7\"'e.Fl+.\nThesoundness ofArrnstrong's Axiorns isstraightfor\\vard toprove.Cornplete\u00ad\nnessishardertoshow;seeExercise 19.17.\nItisconvenient touseSOlneadditional ruleswhilerea..soningaboutP+:\n\u2022Union: IfX~YandX~Z,thenX~YZ.\n\u2022Decomposition: IfX-+YZ,thenX~y'andX-7Z.\nTheseadditional rulesarenotessential; theirsoundness canbeprovedusing\nArmstrong's AxiolllS.\nToillustrate theuseoftheseinference rulesforFDs,consider arelation schelua\nABCwithFDsA\u00b7\u00b7\u00b7\u00b7-*BandB-7C.InatrivialFD,therightsidecontains\nonlyattributes thatalsoappearontheleftside;suchdependencies alwayshold\nduetoreflexivity. Usingreflexivity, wecangenerate alltrivialdependencies,\nwhichareoftheform:\nX~Y,whereY~X,X~ABC,andY~ABC.\nFrOHltransitivity wegetA-+C.Fronlauglnentation wegetthenontrivial\ndependencies:\nAC--->-BGY\n,AB-7AC',AB-7C13.\nAsanother exalnple, weusearnoreelaborate versionofContracts:\nContracts (!:..9ntractid, supplierid, pro,jectid, dept'id,partid,qty,val'ue)\n\\VedenotetheschenlaforContracts a..sCSJDPQ V.Therneaning ofatupleis\nthatthecontract withcontractid Cisanagreelnent thatsupplierS(sv,pplierid)\n'willsupplyQiternsofpart?(par-tid) toprojectJ(pTo,ject'id) associated with\ndepartrnent D(deptid); thevaluetlofthiscontract isequaltovalue.\nThefollowing resareknowntohold:\n1.1'hecontract idGlisakey:C-+CSJDP(J V.\n2.AprojectpurclHlses agivenpartusingasinglecontract: .II)--+C1\n\u2022", "648": "614 (JHAPTER 19\n3..A.departInent purcha ..'3esa.tmostonepartfroulasupplier: 8D---+P.\nSeverala.dditional FDsholdintheclosureofthesetofgivenFDs:\nE'rorIl.IP-}C\\G'1-+C!SJD.PCJ 'V,andtransitivity, \"\"VBinfer.IP-_..+CJSJDPCJ V.\nFraIn8D_...-7Pandaugnlentation, weinferSDJ-7JP.\nFraIn8DJ-7.IP,JP-7CSJDPQ~r, andtransitivity, weinferSDJ---+CSJD\u00ad\nPQV.(Incidentally, whileitIllayappeartenlpting todoso,wecannotconclude\nSD-7CSDPQ V,canceling .Ionbothsides.FDinference isnotlikearitlunetic\nIllultiplication! )\nWecaninferseveraladditionalFDs thatareintheclosurebyusingaugruen\u00ad\ntationordecomposition. Forexarnple, fromC----+CSJDPQ V,usingdecompo\u00ad\nsition,wecaninfer:\nC-7C,C-75,C-7J,C-}D,andsoforth\nFinally,wehaveanumber oftrivialFDsfromthereflexivity rule.\n19.3.2Attribute Closure\nIfwejustwanttocheckwhether agivendependency, say,X---+Y,isinthe\nclosureofaset ~F'ofFDs,wecandosoefficiently without cornputing Fl+.We\nfirstcornpute theattribute closureX+with respecttoF,\\vhichistheset\nofattributes AsuchthatX-7Acanbeinferred usingtheArrnstrong Axioms.\nThealgorithrn forcomputing theattribute closureofasetXofattributes is\nshowninFigure19.4.\nclosure =X;\nrepeatuntilthereisnochange: {\nifthereisanFDU-}VinFsuchthatU~closllre,\nthensetclo,sure ==closureUv\u00b7\n}\nFigure19.4Computing theAttribute Closure ofAttribute SctX\nTheorem 2Thealgorithln .showninF'iguTc 1.9.4cornputes theattr'ibv,te closure\nX-+--oftheattribute set~Y'IDithrespecttothesctof}\"1DsFl.", "649": "Scherna RejiTtCrnerd andNOTlnalForTns 615\n$\nTheproofofthistheorern isconsidered inExercise 19.15.ThisalgoriUuIl can\nberl10dified tofindkeysbystarting withset.i\\\"\"containing a,singleattribute and\nstopping assoon cl,.o;;;ClOS'UTCcontains allattributes intherelation scherna. By\nvarying thestarting attribute andtheorderin\\vhichthealgorithrIl considers\nFDs,\\vecanobtainallcandidate keys.\n19.4NORMAL FORMS\nGivenarelation sche111a, weneedtodecidewhether itisagooddesignorwe\nneedtodecornpose itintosrnaller relations. Suchadecision llUlstbeguided\nbyanunderstanding ofwhatproblenls, ifany,arisefrolnthecurrentschelna.\nToprovide suchguidance, severalnormal formshavebeenproposed. Ifa\nrelation schelnaisinoneofthesenorrnalforIns,weknowthatcertainkindsof\nproblerlls cannotarise.\nThenonnalforrnsba...'SedonFDsarefir-stnor-rnalforrn(1Nfj,secondnor-mal\nforrn(2NJ?),thi'tdnorrnalfor-rn (3NF),andBoyce-Codd nor-rnalfor-rn(BCN]?).\nThesefonnshaveincreasingly restrictive requirernents: Everyrelation inBCNF\nisalsoin3NF,everyrelation in3NFisalsoin2NF,andeveryrelation in2NFis\ninINF.Arelation isinfirstnormal fortHifeveryfieldcontains onlyatornic\nvalues,thatis,nolistsorsets.Thisrequirerllent isiInplicit inourdefinition\noftherelational rnode!. Although SOHleofthenewerdatabase systerlls are\nrelaxing thisrequirernent, inthischapter weaSSUlnethatitalwaysholds.2NF\nisInainlyofhistorical interest. 3NFandBCNFareirnportant frolHadatabase\ndesignstandpoint.\nWhilestudying norrnalfonns,itisirnportant toappreciate theroleplayedby\nFDs.Consider arelation scherna I?withf1ttributes ABC:.Intheabsence ofany\nICs,anysetofternary tuplesisalegalinstance andthereisnopotential for\nredundancy. ()ntheotherhand,suppose that\\vehavetheFI)A--,'>13.Nowif\nseveraltupleshavethesarneAvalue,theyrnustalsohavetllCsarneB value.\nThispotential redundanc:y canbepredicted usingtheFDil1fonnation. If11101'8\ndetailed 1Csarespecified, \\vernaybeabletodetectrnoresubtleredundancies\nas\\vell.\n\\Veprilnarily discussredundancy revealed l)yPI)inforrnation. InSection 19.8,\n\\vediscuss 11loresophisticated 1Csca1ledrnuUivalued dependencies andjoin\ndependencies andnorrnalforrnsbasedontheIn.\n19.4.1Boyce ...CoddNormalForm\nLetI?bearelation scherna, 1?bethesetofF'I)sgiventoholdoverR,.iX\"bea..- .\nsubsetoftheattributes ofR,andAbe(\\,.11attribute ofI?l~isinBoyce-Codd", "650": "616 (~HAPTERtg\nnormal formif,foreveryFl)X -+AinF,oneofthefollo\\ving statements is\ntrue:\n\u2022 AE.<Y;thatis,itisatrivialFD,or\n\u2022 Xisasuperkey.\nIntuitively, inaBCNFrelation, theonlynontrivial dependencies arethose\nin'whichakeydetennines SaIneattribute(s). Therefore, eachtuplecanbe\nthought ofC1....':lanentityorrelationship, identified byakeyanddescribed by\nthereluaining attributes. !(ent(in[425])putsthiscolorfully, ifalittleloosely:\n\"Eachattribute nlustdescribe [anentityorrelationship identified by]thekey,\nthe\\vhole'key,andnothingbutthekey.\"Ifweuseovalstodenoteattributes\norsetsofattributes anddravvarcstoindicate FDs,arelation inBCNFhas\nthestructure illustrated inFigure19.5,considering justonekeyforsimplicity.\n(Ifthereareseveralcandidate keys,eachcandidate keycanplaytheroleof\nKEYinthefigure,withtheotherattributes beingtheonesnotinthechosen\ncandidate key.)\n--...-::-----\nNonkeyattr2\nFigure19.5FDsinaBCNFRelation\nBCNFensuresthatnoredundancy canbedetected usingFDinfonnation alone.\nItisthustheInostdesirable norrnalform(fronlthepointofviewofredundancy)\nifwetakeintoaccount onlyFDinformation. 1'hispointisillustrated inFigure\n19.6.\nFigure19.6Instance Illustrating BCNF\nThisfigureshc)\\vs(t\\VOtuplesin)aninstance ofarelation withthreeattributes\nX,}T,an.dA.r:Cherea.ret\"votupleswiththesaInevalueintheXcolurnn. Now\nsuppose that\\vekno\\vthatthisinstance satisfies anFD-,y._-+A.~recansee\nthatoneofthetuples heLl)thevalueaintheAcolurnn. \\\\lhatcan\\veinfer\nal)outthevalueintheAcolllrnn inthesecondtuple?'UsingtheFI),\\vecan\nconclude thatthesecondtuplealsohasthevalueainthiscolurnn. (Notethat\nthisisreallytheonlykindofinference \\vecanIna,keaboutvaluesinthefields\noftuplesbyusingFDs.)", "651": "Schc'lnaRefinenu:;nt andN(J'r'rnalF'orrns\nButisthissituation notanexaInple ofredundancy? \\Veappeartohavestored\nthevalueat\\viee.Cansuchasituation ariseinaBCNFrelation? Theans\\ver\nisNo!Ifthisrelation isinBCNF,because Aisdistinct fronl..x:-,itfollowsthat\nXIllU8tbeakey.(Otherwise, theFDX-+A\\vouldviolateBC:NF.) If.IYis\nakey,thenYl=Y2,whichIneansthatthetwotuplesareidentical Sincea\nrelation isdefinedtobea8etoftuples,\\\\recannothavetwocopiesofthesaIne\ntupleandthesituation shc)\\vninFigure19.6cannotarise.\nrrherefore, ifarelation isinBCNF,everyfieldofeverytuplerecordsapiece\nofinforlnation thatcannotbeinferred (usingonlyFDs)frornthevaluesinall\notherfieldsin(alltuplesof)therelation instance.\n19.4.2ThirdNormalForm\nLetRbearelation scherna,FbethesetofFDsgiventoholdoverR,Xbea\nsubsetoftheattributes ofR,andAbeanattribute ofR.Risinthirdnormal\nforInif,foreveryFDX-+AinF,oneofthefollowing statenlents istrue:\n\u2022 AEX;thatis,itisatrivialFD,or\n\u2022 Xisasuperkey, or\n\u2022 AispartofsornekeyforR.\nrrhedefinition of3NFissinlilartothatofBCNF,withtheonlydifference being\nthethirdcondition. EveryBCNFrelation isalsoin3NF.Tounderstand the\nthirdcondition, recallthatakeyforarela,tion isarninirnal setofattributes\nthatuniquely deterrnines allotherattributes. Arrlllstbepartofakey(any\nkey,ifthereareseveral). Itisnotenough forAtobepartofasuperkey,\nbecause thelattercondition issatisfied byeveryattribute! Finding allkeys\nofarelation scherna isknowntobeanNP-cornplete problern, andsoisthe\nprob1ern ofdetennining whether arelation sehernaisin3NF.\nSuppose thatadependency X\u00b7-+Acausesaviolation of3NF.Therearetwo\ncases:\n\u2022Xisaproper 8'l.lb8Ctof80'(nekeyK.Suchadependency is801netirnes called\napartialdependency. InthisCc1se,westore(X,./1)pairsredundantl:y.\nAsaneXEtlnple, consider theIleserves relation \\vithattributes SBIJC1frorn\nSection19.7.4.Theonlykeyis8El),and\\vehavetheFD8-_.+C/.vVestore\nthecreditca,rdnurnber forasailoraslnanytirnes <:1.'3therearereservations\nforthatsailor.\n\u2022 XisnotapTOpCTsnb8ctofanykey.Suchadependerlcy issornetirnes\ncalledatransitive dependency, because itrneans\\vehaveachainof", "652": "618 CHAPTER 19\ndependencies !(---+X---+A.Theproblem isthatwecannotassociate an\nXvalue\\vithaKvalueunlesswealsoassociate anAvaluevvithanX\nvalue.Asanexanlple, consider theHourly-Enlpsrelationwithattributes\nSNLRWH froInSection19.7.1.TheonlykeyisS,butthereisanFDR\n---+1,V,\\vhiehgivesrisetothechainS---+R-~-\"W.Theconsequence isthat\n\\vecannotrecordthefactthatelnployee ShasratingRwithout knowing\nthehourly\\vageforthatrating.'Thiscondition leadstoinsertion, deletion,\nandupdateanoIllalies.\nPartialdependencies areillustrated inFigure19.7,andtransitive dependencies\nareillustrated inFigure19.8.NotethatinFigure19.8,thesetXofattributes\n11layorIllaynothavesomeattributes inconunon withKE-Y;thediagranl should\nbeinterpreted asindicating onlythatXisnotasubsetofKEY.\nCase1:AnotinKEY\nFigure 19.7PartialDependencies\nCase1:AnotinKEY\nCase2:AisinKEY\nFigure19.8Transitive Dependencies\nTheInotivation for3NFisrathertechnical. ByInakinganexception forcertain\ndependencies involving keyattributes, wecanensurethateveryrelationschclna\ncanbedecornposed intoacollection of3NFrelations usingonlydec(nnpositions\nthathavecertaindesirable properties (Section 19.5).Suchaguarantee doesnot\nexistforBCNFrelations; the:3NFdefinition weakens theBCNFrequirernents\njustenoughtoInakethisguarantee possible. \\VeInaytherefore cOlnprornise by\nsettlingfora:3NFdesign.AsweseeinChapter 20,we11laysOllletilnes accept\nthis cornpr()Jni~e (orevensettleforanon-:3NF scheIna) forotherreasons as\nwell.\nlJnlikeBCNF,however, BOlneredundancy ispossible \"Vvith :~NF.Theproblerns\nclssoci<:tted \\vithpartialand transitiv(~ dependencies persistifthereisanontriv\u00ad\nialdep(~ndencyX --~.,AandXisnotasup(~rkey, eveniftherelation isin:3NF\nl)ccause Aispa,rtofakey.Thunderstand thispoint,letusrevisittheR,eserves", "653": "Scherna Refinelnent fLTUiJ.N'oT1nalForrns 619\nrelation withattributes SEDea,ndtheFDS~['1,\\vhichstatesthatasailor\nusesauniquecreditcardtopayforreservations. Sisnotakey,clndCisnot\npartofakey.(Infact,theonlykeyisSED.)Hence,thisrelation isnotin3NF;\n(S,CJpairsarestoredredundantly. IIowever, ifwealsoknowthatcreditcards\nuniquely identifytheo\\vner,vvehavetheFDC--?5,whichrneansthatGEJD\nisalsoakeyforReserves. Therefore, thedependency S-7Cdoesnotviolate\n3NF,andR,eserves isin3NF.Nonetheless, inalltuplescontaining thesaIne5\nvalue,thesaIne(8,CJpairisredulJ.dantly recorded.\nForcOlllpleteness, wereluarkthatthedefinition ofsecond norrnal formis\nessentially thatpartialdependencies arenotallowed. Thus,ifarelation isin\n3NF(whichprecludes bothpartialandtransitive dependencies), itisalsoin\n2NF.\n19.5PROPERTIES OFDECOMPOSITIONS\nDecoIllposition isatoolthatallowsustoeliminate redundancy. Asnotedin\nSection19.1.3,however, itisiInportant tocheckthatadecoInposition doesnot\nintroduce newproblellls. Inparticular, weshouldcheckwhether adecomposi\u00ad\ntionallowsustorecovertheoriginalrelation, andwhether itallowsustocheck\nintegrity constraints efficiently. vVediscusstheseproperties next.\n19.5.1Lossless-Join Decomposition\nLetRbearelation schelnaandletFbeH,setofFDsoverR.Adecolnposition\nofRintotwoschernas withattribute setsXandYissaidtobealossless-join\ndecomposition withrespecttoFif,foreveryinstance TofRthatsatisfies\nthedependencies in}?,1Tx('r) N1T}-(r) =T.Inotherwords,\\vecanrecover\ntheoriginal relation 1'rornthedeconlposed relations.\nThisdefinition caneasilybeextended tocoveradecornposition ofIiintoInore\nthantworelations. Itisea.\"sytoseethatT~1fx(r) [XJ1TyC,.,)ahvaysholds.\nIIIgeneral, though,theotherdirection doesnothold.Ifsvetakeprojections\nofarelation andrecornbine thelnusingnaturaljoirl,\\Ve typically obta.in SOlne\ntuplesthat'were1.'1.otintheoriginal relation. Thissituation isillustrated in\nFigure19.9.\nByreplacing theinstance TshowninFigure19.9\"Vviththeinstances 1f8P(r)and\n1TPI)(r),'\\velosesorneinforInation. Inparticular, suppose thatthetuplesin't\nd(-~note\nrelationships.vVe cannolongertellthattherelationships (81,PI,d:3)\nand(8:3,])1,d:ddonothold.rrhedecoluposition ofschelnaSPDintoS.Pand\nPI)istherefore loss,Yiftheinstance '(showninthefigureislegal,thatis,ifthis", "654": "620 C;HAPTERt19\n81pIellf---- ._- _..-\n82p2d2\n..-83pId3_.\nslpId3\ns3pIell[P--\u00b7-I~\n\u00a7.'~~~pId3\n1rI:JD(r)s1pI\ns9p2'....f--- ..\ns3pI\n...-\nInstance T.....,.,.... .._.\nslpI.ell\ns2p2 d2\n.._..-\nL~.9.pI.d3\nFigure 19.9Instances Illustrating LossyDecompositions\ninstance couldariseintheenterprise beingrIlodeled. (Observe thesiInilarities\nbetween thiseX~Llnple andtheContracts relationship setinSection 2.5.3.)\nAlldecompositions usedtoeli'minate redundancy mustbelossless. Thefollow\u00ad\ningsirnpletestisveryuseful:\nTheorern 3LetRbearelation andFbeasetofFDsthatholdoverIl.The\ndecomposition ofRintorelations withattribute setsIIIandR2isl08slessifand\nonlyifp+contains eithertheFDR1nR2---+R1ortheFDR1nR2---'fR2.\nInotherwords,theattributes cornrIlon toRlandR2HUlstcontain akeyfor\neitherRIOI'R2.2Ifarelation isdecornposed into1110rethantworelations,\nanefficient (tiTnepolynomial inthesizeofthedependency set)algoritllln is\navailable totestwhether ornotthedec(nnposition islossless, butwewillnot\ndiscussit.\nConsider thelIourly_Ernpsrelation again.Ithasattributes SNLRWII, and\ntheFI)R~Wcausesaviolation of3NF.Wedealt\u00a5liththisviolation by\ndecorIlposing therelation intoSNLRII andIlvV.SinceRiscornrnon toboth\ndecornposed relations andIi---+Wholds,thisdecornposition islossless-join.\nThisexarnple illustrates ageneralobservation thatfollowsfroIHTheorerll 3:\nIfanFf)X---+}Tholdsoverarelationiiand ~yn}Tisernpty,the\ndecornposition ofRinto.R-y~andXYislossless.\nXappears inbothIt--~~.y'(since ~\u00a5(I}7isernpty)and.IYY,anditisakeyfor\n){}T.\n2SeeExercise 19.19foraproofofTheorern :3.Exercise 19.11illustrates thatthe'onlyiflclaim\ndepends ontheIL')slIInption thatonlyfunctional dependencies canbespecified a..sintegrity constraints.", "655": "ScheTna Rejinc'fnent andlVorrnal FOT1ns 6~1\nAnother hnportant observation, '\\vhiehwestatewithout pr()of~hal;)todo\\vith\nrepeated decolnpositiollS. Suppose thatarelationIiisdecornposed intoRland\nR2through aIOBsless-join decolupositiol1, andtlUttRlisdecolnposed intoRl.1\nandR12through another lossless-join decolnposition. Then,thedecolnposition\nofRintoR.lI,R.12,and.R2islossless-join; byjoiningftllandR12,\\vecan\nrecoverR.1,andbythenjoiningRlandR2,wecanrecoverflo\n19.5.2Dependency-Preserving Decomposition\nConsider theContracts relationwithattributes C8JDPCJVfronl Section19.3.l.\nThegivenFDsareC-+C8JDPQV, JP\"'-7C1\n,andSD-+P.Because SDisnot\nakeythedependency SD\".,-1-Pcausesaviolation ofBCNF.\nWecandecolnpose Contracts intotworelations withschelnas CSJDQVand\nSDPtoaddress thisviolation; thedecolnposition islossless-join. Thereis\nonesubtleproblelll, however. Wecanenforcetheintegrity constraint JP-}C\neasilywhenatupleisinserted intoContracts byensuring thatnoexisting tuple\nhasthesameJPvalues(astheinserted tuple)butdifferent Cvalues. Once\nwedecompose Contracts intoCSJDQVandSDP,enforcing thisconstraint\nrequires anexpensive joinofthetworelations whenever atupleisinserted into\nCSJDQV.Wesaythatthisdecornposition isnotdependency-preserving.\nIntuitively, adependency-preserving decornposition allowsustoenforceallFDs\nbyexarnining asinglerelationinstance oneachinsertion orrnodification ofatu\u00ad\nple.(Notethatdeletions cannotcauseviolation ofFDs.)Todefinedependency\u00ad\npreserving decornpositions precisely, wehavetointroduce theconcept ofapro\u00ad\njectionofFDs.\nLetRbearelation schenlathatisdecolnposed intotwoschernaswith attribute\nsetsX'and}/,andletFbeasetofFDsoverIl.T'heprojection ofFonXis\nthesetofFDsintheclosureli'+(notjust.F!)thatinvolveonlyattributes inX.\n\\Vedenotetheprojection ofI?onattributes .iYa,sFx..Notethatadependency\nU-_...+VinF+isinl~~x;onlyifallthecLttributes in[/andVarein.iY.\nThedecornposition ofrelation schernaIlwithFI)s}'intoschcrnas withattribute\nsets..:\u00a5and}/isdependency-preserving ifCF'xUF\\\u00b7)+==I?+,Thatis,ifwe\ntakethedependencies in};'(andFvandcornpute theclosureoftheirun.ion,vve\ngetbackalldependencies intheclosureofF.rrherefore, \\veneedtoenforceonl,y\nthedependencies inJi'){andF}r:allFDsin}'+arethensuretobesatisfied. ~ro\nenforce }~':(,\\V8needtoexarnine onlyrelation)((onin.sertstothatrelation).\nToenforce F'y,\u00b7,\\Aleneedtoexarnine onlyrela,tion Y\u00b7.", "656": "622\nToappreciate theneedtoconsider the(:IosureFl+-whileCOIUpllting theprojec\u00ad\ntionoff?,suppose thatarelation R\\vithattributes ABG1isclecornposed into\nrelations\\vith attributes ABandBe:.Theset~FofFDsoverRincludesA-+\nB,B---+C,andG1-+A.Ofthese,A----+Bisin1~~1BandB-+C)isin}'\"'lBC.\nButisthisdecoIIlposition dependency-preserving? \\~lhataboutC---+A?This\ndependency isnotirnplied bythedependencies listed(thusfar)for[<'ABand\n}13c\u00b7\nTheclosureof1~1contains alldependencies in}'plusA-+C,B-+A,andC~---+B.\nConsequently, f:1Balsocontains B-+A,and.FBccontains C-+B.Therefore,\nFABUF}3c;contains A-+B,B-+C,Ii-+A,andC-,.B.Theclosureofthe\nd(~pendencies inf:1.Band}'BCnowincludes C-).A(whichfollowsfrornC_.....+B,\nB\u00b7--+A,andtransitivity). l'hus,thedeccHnposition preserves thedependency\nC-+A.\nAdirectapplication ofthedefinition givesusastraightforward algoritlun for\ntestingwhether adeconlposition isdependency-preserving. (Thisalgorithrn\nisexponential inthesizeofthedependency set.Apolynomial algorithnl is\navailable; seeExercise 19.9.)\nWebeganthissectiol1with anexanlple ofalossless-join deC0111position thatwas\nnotdependency-preserving. Otherdecorupositions aredependency-preserving,\nbutnotlossless. Asilnpleexalnple consists ofarelationABC'withFDA~---+B\nthatisdecornposed intoABandBG.\n19.6\nNORMAI-iIZATION\nHavingcoveredtheconcepts neededtounderstand theroleofHortHa}fonns\nanddecolnpositions indataba\"se design,wenowconsider algoritlnIls forcon\u00ad\nvertingrelations toBCNFor:3NF.Ifarelation schelna, isnotinBCNF,it\nispossible toobtainalossless-join deccunpositioll intoacollection ofBCNF\nrelation sCherl1chs. Unfortunately, therelllaybenodependenc,y-preserving de-\u00b7\ncOlnposition intoacollection ofBCN.Frelation schernas. l-Ic}\\vever, thereis\nahvays (l,dependency-preserving, lossless-join decoruposition intoacollection\nof~3NFrelation schernas.\n19.6.1Decomposition intoBCNF\nvVonowpresentan<llgorithIl1 fordecornposing arelation schernaIiwithaset\nofFI)sFintoacollection ofBCNFrelation schernas:", "657": "Scherna,RefinClnent andIVoTTnall?orrns 623\n1.Suppose thatRisnotinBCNF.Let.IX'CIt,Abe::1,singleattribute inR,\nandX--7AbeanFDthatcausesaviolation ofBCNF.DecornposeR into\nR-ilandXA.\n2.IfeitherIi-\",4or..YAisnotinBCN.F, decornpose thernfurtherbya\nrecursive application ofthisalgorithrn.\nIf..-\",4denotes thesetofattributes otherthanAinIl,and./YAdenotes the\nunionofattributes in-\"YandA.SinceX----+Aviolates BCNF,itisnotatrivial\ndependency; further,Aisasingleattribute. Therefore, AisnotinX;that\nis,..;\\nAisernpty. Therefore, eachdec()lnposition carriedoutinStep1.is\nlossless-j oin.\nThesetofdependencies associated vvithR.-AandXAistheprojection ofF\nontotheirattributes. Ifoneofthenewrelations isnotinBCNF,w'edecornpose\nitfurtherinStep2.Sinceadecornposition resultsinrelations withstrictly\nfewerattributes, thisprocessterrninates, leavinguswithacollection ofrelation\nschernas thatareallinBCNF.Further, joininginstances ofthe(twoor1nore)\nrelations obtained through thisalgorithrn yieldsprecisely thecorresponding\ninstance oftheoriginal relation (i.e.,thedecorllposition intoacollection of\nrelations eachofwhichinBCNFisalossless-join dec()lnposition).\nConsider theContracts relationwithattributes C3JDPQ VandkeyC.Weare\ngivenFDsJP---7Cand3D-+P.Byusingthedependency 3D-+Ptoguidethe\ndecornposition, wegetthetwoschernas3DPandC5JDQV. 51)PisinBCNF.\nSuppose thatwealsohavetheconstraint thateachprojectdealswithasingle\nsupplier: .I_.+5.Thisrneanstluttthesche1naCSJDQVisnotinBeN}?Sowe\ndeccnnpose itfurtherintoJ3andC.IDC2V.C--+JDQVholdsoverCJDQV;the\nonlyotherFI)sthatholdarethoseobtained frorllthisPI)byaugrnentation, and\ntherefore allFDsconte-tinakeyintheleftside.Thus,eachoftheschernas ST)P,\n.IS,andC:.I1J(JVisinBCNF~andthiscollection ofschcrnas alsorepresents a\nlossless-join decornposition of()SJD(JV.\nThe st(~PSinthisdeC(nllposition processcanbevisualized asatree,assho\\vn\ninFigure19.10.rrherootistheoriginal relationCSJIJPQ \\/,andtheleavesare\ntheBCNl~~relations thatresultfrornthedeccHnposition aJgorithrn: 3D?,.IS,\nandCSDC2V.Intuitively, ea.chinternal nodeisreplaced byitschildren through\nEtsingledecOruI}osition stepguidedbytheFDshownjustbelo\\vthenode.\nRedundancy inBCNFRevisited\nT'hedecolnposition of(}SJDQViuto,S])}),J5'1,andC'JI)(J\\lisnotdependency\u00ad\npreserving. Intuitively, dependency Jp..._...~(}carlllotbeenforced without a,join.\n()ne\\vaytodeal\\viththissituation istoaddarelation \\vithattributes G1J}).In", "658": "624 C~HAPTER 19\nFigure19.10 Decomposition ofCSJDQV intoSDP,JS,andCJDQV\neffect,thissolution arnounts tostoring SOITleinformation redundantly tornake\nthedependency enforcement cheaper.\nThisisasubtlepoint:Eachoftheschemas CJP,SDP,JS,andCJDQV isin\nBCNF,yetsomeredundancy canbepredicted byFDinfonnation. Inparticu\u00ad\nlar,ifwejointherelation instances forSDPandCJDQVand projecttheresult\nontotheattributes CJP,wernustgetexactlytheinstance storedintherelation\nwithschernaCJP.WesawinSection19.4.1thatthereisnosuchredundancy\nwithinasingleBCNFrelation. Thisexarnple showsthatredundancy canstill\noccuracrossrelations, eventhoughthereisnoredundancy withinarelation.\nAlternatives inDecomposing toBCN~-'\nSuppose severaldependencies violateBCNF.Depending on\u00b7whichofthesede\u00ad\npendencies wechoosetoguidethenextdecornposition step,wernayarriveat\nquitedifferent collections ofBeNFrelations. Consider Contracts. \\Vejust\ndecornposed itintoSDP,is,andCJDCjV.Suppose wechoosetodecornpose\ntheoriginal relation (}SJDPC2 VintoJSandCJIJPCjV,basedontheFD.I-+\nS.Theonlydependencies thatholdover(}JIJPQVEtre.IP----7Candthekey\ndependency C~C.IDPQV. SinceiPisakey,C:J.DPC2Vis inBeNF.Thus,the\nschernas JSandCJDPQVrepresent alossless-join decornposition ofContracts\nintoBCNFrelations.\nThelessontobelearnedhereisthatthetheor,Yofdependencies cantellus\u00b7when\nthereisredundancy andgiveuscluesaboutpossible clecornpositions toaddress\ntheproblern,butitcannotdiscrirninate arnongdecornposition alternatives. A\ndesigner hastoconsider thealternatives andchooseonebasedonthescrnantics\noftheapplication.", "659": "*625\nBCNFandDependency-Preservation\nSoruethnes, theresiIuplyisnodecomposition intoBCNFthatisdependency\u00ad\npreserving ..i\\sanexaruple, consider therelation schelnaSBD,inwhichatuple\ndenotesthatsailorSha.sreserved boat,8OIldate[J.Ifwehavethe11\"'Ds8B\n~D(asailorcanreserveagivenboatforatnlostoneday)andD-+B(on\nanygivendayatrllostoneboatcanbereserved), SBnisnotinBCNFbecause\nDisnotakey.Ifwetrytodec(nnpose it,however, wecannotpreserve the\ndependency BB\"-7D.\n19.6.2Decomposition into3NF\nClearly, theapproach \\veoutlined for10ssless-joiIl decornpositioIl intoBCNF\nalsogivesusalossless-join decomposition into3NF.(Typically, wecanstop\nalittleearlierifwearesatisfied withacollection of3NFrelations.) Butthis\napproach doesnotensuredependency-preservation.\nAsiInplerllodification, however, yieldsadeco111position into3NFrelations that\nislossless-join anddependency-preserving. Beforewedescribe thismodifica\u00ad\ntion,weneedtointroduce theconcept ofalninirnal coverforasetofFDs.\nMinimal CoverforaSetofFDs\nAminimal coverforasetFofFDsisasetGofFDssuchthat:\n1.Everydependency inGisoftheforIn..\u00a5---+A,whereAisasingleattribute.\n2.TheclosureF+isequaltotheclosure(;+.\n:3.IfweobtainasetIIofdependencies frornGbydeleting oneor1110redepen\u00ad\ndenciesorbydeleting attributes frornadependency inG,thenp+'i=II+.\nIntuitively, arninirnal coverforaset}-'ofFDsisanequivalent setofdepen\u00ad\ndenciesthatis'minirnal intworespects: (1)Everydependency isasslIlallas\npossible; tha,t;iS1eachattribute ontheleftsideisnecessary andtherightside\nisasingleattribute. (2)Everydependency initisrequired fortheclosureto\nbeequaltoj?-+',.\nAsanexarnplc, letJ?bethesetofdependencies:\n1B1BCID E'E'j-' (\"'I1'\"T;'lIlA (-'11)}'--' E-'G'1 it..-+',j -- ----+ .../,.f...._--t>T,-~r--+,.1~Ul( ./. f----+ .../.J.\nFirst1letusrewriteit()DF-_...+BGsothateveryrightsideisasingleattribute:", "660": "626\nACDF-tEand ACDF-t G,CHAPTERt9\nNextconsider ACDF-+G,Thisdependency isirnpliedbythefollowing FDs:\nA-7B,ABC'D-7E,andEF-7G,\nTherefore, \\vecandeleteit,Sirnilarly, wecandeleteACDF-71:7,Nextcon\u00ad\nsiderABCD -7E,SinceA-7Bholds,wecanreplaceitwithACD_..._~E,(At\nthispoint,thereadershouldverifythateachrernaining FDisrninilnal and\nrequired,) Thus,arninilnal coverforFistheset:\nA-7B,ACD-7E,EF---7Ci,andEF--+H,\nThepreceding exarnple illustrates ageneralalgorithrn forobtaining arninimal\ncoverofaset}i'ofFDs:\n1.PuttheFDsinaStandard Form:Obtainacollection Gofequivalent\nFDswithasingleattribute ontherightside(usingthedecornposition\naxiolIl),\n2.Minimize theLeftSideofEachFD:ForeachFDinG,checkeach\nattribute intheleftsidetoseeifitcanbedeletedwhilepreserving equiv\u00ad\nalencetoF+,\n3.DeleteRedundant FDs:Checkeachreluaining FDinGtoseeifitcan\nbedeletedwhilepreserving equivalence to.F+,\nNotethattheorderinwhichweconsider FDswhileapplying thesestepscould\nproduce different rninilnal covers;therecouldbesevera'!rninirnal coversfora\ngivensetofFDs,\nlV101'8irnportant, itisnecessary torniniInize theleftsidesofF'DsbefoTcchecking\nforredundant FI)s,Ifthesetwostepsarereversed, thefinalsetofFI)scould\nstillcontainsenneredundant FDs(i,e.,notbearninirnal cover),asthefollowing\nexarnple illustrates, LetFbethesetofdependencies, eachof\"\"vhichisalready\ninthestandard fornl:\n.A13CTJ -tE',E\"~~D,A----;.13,andAC----;.I),\nObserve thatnoneoftheseFDsisredundant; if\\vechecked forredundantFDs\nfirst,\\ve\"\"vouldgetthesaInesetofFI)sI?,Theleftsideofil13CIJ };canbe\nn~l)hiced byACt\\vhilepreserving equivalence to1~\"1+,and,ve\\vouldstophereif\n\\vechecked forreclunda.ntF'Ds inI?beforernillilnizing theleftsides. HO\\V8Ver,\nthesetofFDs\"\"ve11(lVeisnotaInininlal cover:", "661": "Sche17~a Ilefinerncnt andNOTrnal j?OT'lnS\nACt.......:;.E,E_..-+D,A--tB,andAG1-+D.~127\nFrOlIltransitivity, thefirsttwoFDsirnplythela.\",'3tFD,,v-hichcantherefore be\ndeletedwhilepreserving equivalence to1~1+.Theirnportant pointtonoteis\nthatAC---+Dbecc)lnes redundant onlyafterwereplaceABeD-)-EwithAC\n-)-E.If\"veIninirnize leftsidesofFDsfirstandthencheekforredundantFDs,\n,veareleft\"viththefirstthreeFDsinthepreeeding list,whieh isindeeda\nIninirna1 coverforF.\nDependency-Preserving Decomposition into3NJ.1-'\nReturning totheproblenl ofobtaining alossless-join, dependency-preserving\ndecornposition into3NFrelations, letRbearelation withaset[/'ofFDsthat\nisaminirnal cover,andletR1,R2,...,Rnbealossless-join decolnposition\nofR.For1<i<n,suppose thateachRiisin3NFandletFidenotethe\nprojection ofFontotheattributes ofRi.Dothefollowing:\n\u2022IdentifythesetNofdependencies inFthatisnotpreserved, thatis,not\nincluded intheclosureoftheunionofFis.\n\u2022:F'oreachFDX---tAinN,createarelation schelnaXAand add ittothe\ndecomposition ofR.\nObviously, everydependency inFispreserved ifwereplaceRbytheR'iSplus\ntheschernas oftheforn1XAaddedinthisstep.TheRisaregiventobein\n3NF.Wecanshowthateachoftheschelnas XAisin3NFasfollows: SinceX\n----7'Aisinthelninirnal coverF,Y---+AdoesnotholdforanyYthatisastrict\nsubsetofX.Therefore, Xis(1,keyforXA.:F\\llrther, ifanyotherdependencies\nholdoverXA,therightsidecaninvolveonlyattributes inX'becauseAisa\nsingleattribute (because X-~AisanFDinarninhnal cover).SinceXisa\nkeyfor..:YA,noneoftheseadditional dependencies causesaviolation of~3NF\n(although theyrnightcauseaviolation ofBCNF).\nAsanoptilYlization, ifthesetNcontains severalFI)swith thesaIneleft\nside,say,X -~~.-t..41,X-tA2, ,..X-..+/In,wecanreplacethern\\vith\n(.I.,singleequivalent FDX-tAI..I4\u00b7n.Therefore, \\veproduce onerelation\nscherna ..X'..141.../In,insteadofseveralschernasXA1,.... ~X'\"An,\\vhichisgener\u00ad\nallypreferable.\n(~onsider theContracts relation vvithattrilnltes C:SJDPQV etnelFI)sJP-j>C:,\n81)--4P.andJ....-\u00bbS.If\\vedecolnpose (}SJIJPe) VintoSDIJandC}SJl)(JV,\nthen8DPisinBCNF,butC\\'1J1)(2Visnotev(~nin:3NI;'.So\\vedec.olupose it\nfurtherintoJSandC1JDe2V.rrherelation schcrnas 19IJ.P,.I8,EtnelC7JDQVare\nin~3NF(infact,inBCNF) 1andthedecoInposition islossless-join. lIowever,", "662": "628 (;HAPTElt 19\nthedependency JP---:,.C'isnotpreserved. ThisproblerIl canbeaddressed by\naddingarelation schenute'Jptothedecornposition.\n3NFSynthesis\nvVeassurned thatthedesignprocessstartswithanElldiagraII1, andthatour\nuseofFDsisprilnarily toguidedecisions aboutdecolnposition. Thealgo\u00ad\nrithillforobtaining alossless-join, dependency-preserving decornpositiol1 was\npresented intheprevious section fro111thisperspective--------a lossless-join decoru\u00ad\nposition into3NFisstraightforward, andthealgorithrn addresses dependency\u00ad\npreservation byaddingextrarelation schcrnas.\nAnalternative approach, calledsynthesis, istotakealltheattributes overthe\noriginal relation Randarnininlal coverFfortheFDsthatholdoveritand\naddarelation schernaXAtothedecomposition ofRforeachFDX-----+AinF.\nTheresulting collection ofrelation schernas isin3NFandpreserves allFDs.\nIfitisnotalossless-join decomposition ofR,wecanDlakeitsobyaddinga\nrelation schenlathatcontains justthoseattributes thatappearinsornekey.\nThisalgorithrn givesusalossless-join, dependency-preserving decornposition\ninto3NFandhaspolynornial corIlplexity-----polynornial algorithms areavailable\nforcoruputing rninirnal covers,andakeycanbefoundinpolync)Inial tirHe\n(eventhoughfindingallkeysisknowntobeNP-cornplete). Theexistence\nofapolynornial algorithnl forobtaining alossless-join, dependency-preserving\ndecornposition into3NFissurprising whenweconsider thattestingwhether a\ngivenschenu:l,isin~~NFisNP-cornplete.\nAsa.nexarnple, consider arelationABG1withFI)sF::::::::{A-----+B,C-----+B}.~rhe\nfirststepyieldstherelation scheluas ABandBG.T'hisisnotalossless-join\ndeC0l11position ofAilC;ABnBCisB,andneitherB-----+AnorIJ-,C:isin/?+.\nIfweadda,schernaAC:,\\vehavethelossless-join property <:I\",\"well.Although\nthecollectic)ll ofrelations AB,BC, andACisadepenclency-preserving, lossless\u00ad\njoindecornposition ofABC,weobtained itthrough aprocess ofsynthesis,\nrathertllanthrough aprocessofrepeated decornposition. \\\\Tenotethatthe\ndecoIIIposition produced bythesynthesis approa,ch heavilydependends onthe\nrninirnal coverused.\nAsanother exarnple ofthesynthesis approach, consider theContracts relation\nwithattributes (}SJDP(JVand thefollovving FI)s:\nCC\\').IIJ.P(J V,.IP-----+C,8D--+P,aDdJ-7s.\nThissetofFI)sisnotarninirnal cover,andso\\veIllUStfindOI18.\\Vefirst\nreplaceG-.-7(}S'IJ[J.P(J Vv'lithtllcF'I)s:", "663": "5~che'Tna Refincrnent andj\\forlnal FC)'t'rns\nC'-+5,Cf-\"J,(:_.+IJ,C'_...+.P,C--+Q~and()-+\\1.\n11heFDC--+Pisirnplied byC1-toS,C_.......;.D,andSD-_\u00b7\u00b7+P~sowecandelete\nit.~rheFDC-r~SisirnpliedbyC-;.JandJ_..u}S;so\\veeandeleteit.This\nleavesuswitharninirnal cover:\nC_.-+,I,C_.-71),C\u00b7--:,.Q,C-;.V,JP--...;.C,3D---;.P,andJ~.._+S.\nlJsingthealgorithrll forensuring dependency-preservation, weobtainthere\u00ad\nlational schernaCJ,CD,CQ.CV,GlJP,SDP,andJB.Wecanirnprove this\nschenlabycornbining relations forwhichCisthekeyintoCDJP(JV.Inaddi\u00ad\ntion,wehaveSDPand,ISinourdecorllposition. Sinceoneoftheserelations\n(CDJPQ V)isasuperkey, \\vearedone.\nConlparing thisdecomposition withthatobtained earlierinthissection, we\nfindtheyarequiteclose,withtheonlydifference beingthatoneofthemhas\nCDJPQV insteadofCJPandCJDQV. Ingeneral, however, therecouldbe\nsignificant differences.\n19.7SCHEMA REFINEMENT INDATABASE DESIGN\nWehaveseenhownormalization canelilninate redundancy anddiscussed sev\u00ad\neralapproaches tononnalizing arelation. Wenowconsider howtheseideas\nareappliedinpractice.\nDatabase designers typically useaconceptual designrnethodology, suchasER\ndesign,toarriveataninitialdataba,,\"3e design. Giventhis,theapproach of\nrepeated decorllpositions torectifyinstances ofredundancy islikelytobethe\nrnostnaturaluseofPI)sandnonnalization techniques.\nInthissection, \\veInotivate theneedforaschcrnarefinernent stepfollovving\nElldesign.ItisnaturaltoaBkwhether \\veevenneedtodecornpose relations\nproducedbytranslating anElidiagranl. ShouldagoodERdesignnotleadtoa\ncollection ofrelations freeofredundancy prob.lerns? Unfortunately, Fjlldesign\nisac()!nplex, subjective process, andcertainconstraints arenotexpressible\nintennsofElldiagraJns. 1'heexaruples inthissectionareintendecl toillus\u00ad\ntrate\\vhydecornposition ofrelations produced throughElldesignrnightbe\nnecessary.", "664": "6:30 C~lIAPTgR 19\n19.7.1Constraints onanEntitySet\nConsider theHourly _ElllPSrelation again.rrheconstraint thatattribute 8/)'nis\nakeycanbeexpressed a..sanFI):\n{ssn}---}{SS11,naTne,lot,l>ai'ing, ho'U,'rIY_J.oages,\n hOUTS_'U)orke.d}\n:Forbrevity, we\\vritethisFD&'3S---}8NLR~VII, usingasinglelettertodenote\neachattribute andornitting thesetbraces,butthereadershouldrernernber\nthatbothsidesofanFDcontainsetsofattributes. Inaddition, theconstraint\nthatthehourl:y~wagesattribute isdeterruined bytheratingattribute isanFD:\nR.,.W.\nAs\\vesawinSection19.1.1,thisFI)ledtoredundant storageofratingwage\nassociations. Itcannotbeexpressed in,teTrnsoftheER rr~odel. OnlyFDs\nthat deteTrr~ine allattTilndes ofarelation (i.e.,keyconstraints) canbeex\u00ad\npTessedintheERrnodel.rrherefore, wecouldnotdetectitwhenweconsidered\nHourly_EIIlPSasanentitysetduringERIIlodeling.\nWecouldarguethattheproblenl withtheoriginal designwasanartifactofa\npoorERdesign,whichcouldhavebeenavoided byintroducing anentityset\ncalled Wag(~_Table (withattributes ratingandhouTly_wages) andarelationship\nsetlIas_Wages associating IIourly_.ErIlpsandvVagc_Table.Thepoint,however,\nisthatwecouldeasilyarriveattheoriginaldesigngiventhesubjective natureof\nEllrnodeling. HavingforInaltechniques toidentifytheproblenl withthisdesign\nandguideustoa,betterdesignisveryuseful.1'hevalueofsuchtechniques\ncannotbeunderestirnated whendesigning largeschernas\u00b7\u00b7\u00b7\u00b7-schcrnas withrnore\nthanahundred tablesarenotunCOIllIHon.\n19.7..2Constraints onaRelationship Set\n1\"'heprevious exarnple illustrated howFDscanhelptorefinethesubjective\ndecisions BladeduringER.design,butonecouldarguethatthebestpossible\nER,eliagrarn \\vouldhaveledtothesc:Hnefinalsetofrelations. ()urnextexarnple\nshovvsho\\vFf)inforrnation ca.llleadtoa.setofrelations unlikely tobearrived\natsol(~lythrough ER.design.\n\\Verevisitanexanlple frOTH Chapt<~r 2.Suppose that\\vehaveentitysetsParts,\nSuppli(~rs, andI)epartrnents, as\\vellasarelationship setContracts thatinvolves\nalloftheIn.\\lVen~fertoth(~schernaforContra(:ts asC7C2}>S'1IJ. Acontra,ct \\vith\ncontract id()specifies that <1,supplier8\\villsupplysorneql.Hlntity (2ofapart\nPtoadepartrnent J).(\\,Vehaveadderlthecontract ieIfieldC'tC)tIleversiorlof\ntheC~ontracts relation discussed inChapter 2.)", "665": "SchCTnaRefinernc'n.t\n anr11VoT7nalFoTrn8 6431\nvVeBlighthaveapolicythatadepartrnent purchases atInostonepaJtfror11\nanygivensupplier. 'Therefore, ifthereareseveralcontracts between thesaIne\nsupplier anddepartrnent, \\veknowthatthesaInepartInus!;beinvolved inall\nofthcrn.Thisconstraint iscUIFD,DS\u00b7--.+P.\nAgain\"vehaveredundancy anditsa\",c;sociated problclns. \\Vecanaddress this\nsituation bydecornposing Contracts intotworelations withattributes CQSD\nand3DP.Intuitively, therelation3DPrecordsthepartsupplied toadepart\u00ad\nrllentbyasupplier, andtherelation C:QSDrecordsadditional infornlation\naboutacontract. Itisunlikely thatwewouldarriveatsuchadesignsolely\nthrough ERrIlodeling, sineeitishardtofOfrnulate anentityorrelationship\nthatcorresponds naturally toCQSD.\n19.7.3Identifying Attributes ofEntities\nThisexarIlple illustrates howacarefulexamination ofFDscanleadtoabetter\nunderstanding oftheentitiesandrelationships underlying therelational tables;\ninparticular, itshowsthatattributes caneasilybeassociated withthe'wrong'\nentitysetduringERdesign. 'I'heERdiagrarn inFigure19.11showsarela\u00ad\ntionship setcalledWorks_In thatissilnilartotheWorks.ln relationship setof\nChapter 2butwithanadditional keyconstraint indicating thatanemployee\ncanworkinatrnostonedepartrIlent. (Observe thearrowconnecting Employees\ntoWorks_In.)\nFigure 19.11.TheWorks._In Relationship Set\nUsingthekeyconstraint, \\vecantranslate thisElldiagrarn intotworelations:\n\\VorkersC58n, narne,lot,d'id,since)\nDepartrnents( did,dna1nc,budget)\nTheentitysetErnployees andtherelationship set\\iVorks~n arernapped to\nasil.lglerelation, vVorkers. Thistranslation isba\".'Scdonthesecondapproach\ndiscussed inSection2.4.1.", "666": "632 CHAPTER \u00bb9\nNo\\vsuppose elIlployees area,,'3signed parking lotsba.rgedontheirdepartrnent,\nandthatallenlployees inagivendepartrnent are~'h'3signed tothesaInelot.This\nconstraint isnotexpressible vvithrespecttotheER,diagrarIl ofFigure19.1l.\nItisanother exarnple ofanFD:did--:lot.Theredundancy inthisdesigncan\nbeelirninated bydecornposing theVlorkers rela.tion intotworelations:\nvVorkers2( 8sn,narne,did,since)\nDept_Lots (did,lot)\n'rhenewdesignhaslnuchtoreconunend it.VVecanchangethelotsassociated\nwithadepartlnent byupdating asingletupleinthesecondrelation (i.e.,no\nupdateanornalies). \\Vecanassociate alotwithadepartment evenifitcur\u00ad\nrentlyhasnocrnployees, without usingnullvalues(i.e.,nodeletion anornalies).\n\\Vecanaddaneruployee toadepartment byinserting atupletothefirst rela\u00ad\ntionevenifthereisnolotassociated withtheenlployee's departrnent (i.e.,no\ninsertion anornalies).\nExalnining thetworelations Departrnents andDept_Lots, whichhavethesaIne\nkey,werealizethataDepartrnents tupleandaDept_Lots tuplewiththesarne\nkeyvaluedescribe thesarneentity.Thisobservation isreflected intheER,\ncliagrarn showninFigure19.12.\nFigure 19.12 Refined\\Norks_In Relationship Set\nTranslating thisdiagrarn intotherelational rnodelwouldyield:\n\\iVorkers2 (8871\"narne,did,since)\nI)epartrnentsCdid, dnarne,budget,lot)\nItSeClllSintuitive toassociate lots,vithcrnployees; ontheotherhand,theles\nrevealtllat,inthisexarnple lotsarerea.1lya\"ssociated ,\\lithdepartrnents. The\nsubjective pr()c(~ssofEIlrnodeling couldInissthispoint.T'herigorous process\nofnorrnaliza,tion wouldnot.", "667": "SchC'lnaIlejinernc'rd (uulIVOTTTUll Forrns\n19.7.4Identifying EntitySets\nConsider avariantofthelleserves schernausedinearlierchapters. LetRe\u00ad\nservescontainattributes S,B,andD:::1.'3before,indicating thatsailorShas\nareservation forboatBondayD.Inaddition, lettherebeanattribute G\"1\ndenoting thecreditcardtowhichthereservation ischarged. vVeusethisex\u00ad\narnpletoillustrate howFDillfonnation canbeusedtorefineanERdesign.In\nparticular, \\vediscusshowFDinforluation canhelpdecidewhether aconcept\nshouldbernodeled asanentityorasanattribute.\nSuppose every sailor usesauniquecreditcardforreservations. Thisconstra,int\nisexpressed bytheFDS-7-C.Thisconstraint indicates that,inrelation Re\u00ad\nserves,westorethecreditcardrnllnber forasailorasoftenaswehavereserva\u00ad\ntionsforthatsailor,andwehaveredundancy andpotential updateanolnalies.\nAsolution istodeconlpose Reserves intotworelations withattributes SBD\nandSC.Intuitively, oneholdsinforrnation aboutreservations, andtheother\nholdsinfonnation aboutcreditcards.\nItisinstructive tothinkaboutanERdesignthatwouldleadtotheserela\u00ad\ntions.Oneapproach istointroduce anentitysetcalledCredit_Cards, withthe\nsaleattribute cardno,andarelationship setHas_Card associating Sailorsand\nCredit_Cards. Bynotingthateachcreditcardbelongstoasinglesailor,wecan\nInapHas_Card andCredit_Cards toasinglerelation withattributes SC.We\nwouldprobably notrnodelcreditcardnUlnbers asentitiesifourInaininterest\nincardnurnbers istoindicate howareservation istobepaidfor;itsufficesto\nuseanattribute tornodelcardnUlnbers inthissituation.\nAsecondapproach istornakecardnoanattribute ofSailors.Butthisapproach\nisnotverynatural-\" ..\u00b7\u00b7(1sailorlllayhaveseveralcards,andwearenotinterested\ninalloftheln.Ourinterestisintheonecardthatisusedtopayforreservations,\nwhichisbestlnodeled asanattribute oftherelationship Iteserves.\nAhelpfulwaytothinkaboutthedesignproblern inthisexarnple istlHltwe\nfirstlnakecarrinoanattribute ofH,eserves andthenrefinetheresulting tables\nbytakingintoaccount the1\"1)inforrnation. C\\Vhether \\VCrefinethedesignby\naddingcardnotothetableobtained froTIlS<dlorsorbycreating anewtable\n\\vithattributes S'f(}is(1,separate issue.)\n19.8OTHER KINDS O~.,\nD~:PENDENCIES\nFI)sareprobal)l.y thern08tconunon andirnportant kindof(~onstraiIlt fr0III\nthepointofvie\"\\!ofdatabase design. TIowever, thereaxeseveralotherkinds\nofdependencies. Inparticular, thereisa'Vvell-developccl theoryfordatabase", "668": "634 (;HAPTER 19\ndesignllsingrrLultival'ued dependenc'ics andjoindependencies. Bytakingsueh\ndependencies intoaccount, weC,Ulidentifypotential redundancy problenls that\ncannotbedetected usingFDsalone.\n'rhissectionillustrates thekindsofredundancy thatcanbedetected usingII1Ul\u00ad\ntivalued dependencies. OurInainobservation, however, isthatsirnpleguidelines\n(whichcanbechecked usingonlyFDreasoning) cantelluswhether weeven\nneedtoworryaboutcomplex constraints suchas111ultivalued andjoindepen\u00ad\ndencies. Wealsoconunent ontheroleofinclusion dependencies indatabase\ndesign.\n19.8.1Multivalued Dependencies\nSuppose thatwehavearelationwithattributes course,teacher,andbook,which\nwedenoteasCTB.TheIneaning ofatupleisthatteacherTcanteachcourse\nC,andbookBisareccnnmended textforthecourse.TherearenoFDs;the\nkeyisCTB.However, therecolnlnended textsforacourseareindependent of\ntheinstructor. Theinstance showninFigure19.13illustrates thissituation.\n~ofurse .~teache2J book\nGreen..-\nPhysics101 Mechanics\nPhysicslOl Green Optics\nPhysicslOl Brown Mechanics\nPhysics101 Brown Optics\nGreen Mechanics._..\nMath301..\nMath301 Green Vectors--Math301 Green GeometryL..--._ ..._ ........\nFigure19.13 BCNFR.elation withRedundancy ThatIsRevealed byMVDs\nNotethreepointshere:\nII1'herelation sehcrnaCTBisinBCNF;therefore wewouldnotconsider\ndecolnposing itfurtherifwelookedonlyattheFDsthatholdover(JTB.\nIIThereisredundancy. rrhefactthatG\u00b7reencanteachPhysics101 isrecorded\nonceperreeonunendecl textforthecourse.Sirnila.rly, thefactthatOptics\nisatextforPhysics101 isrecorded onceperpotential teacher.\n..T'heredundancy canbeelirninated bydecornposing C1fTBintoCTandCE.\nTheredundaJ1cy inthisexarnple isduetotheconstraint thatthetextsfora\ncourseareindependent oftIleinstructors, whichcannotbeexpressed intenns", "669": "Scherna liefine'lnent an.diVoT1nal FO'T\"rns G35\nofFDs.rrhisconstraint isanexample ofarn'll,ltival'ued dependency, or~1VD.\nIdeally,weshouldrnodelthissituation usingtwobinaryrelationship sets,In\u00ad\nstructors \\vithattributes G1Tandl'extwithattributes CB.Because theseare\ntwoessentially independent relationships, rnodeling themwithasingleternary\nrelationship setwithattributes CTEisinappropriate. (SeeSection2.5.3fora\nfurtherdiscussion ofternaryversusbinaryrelationships.) Giventhesubjectiv\u00ad\nityofERdesign,ho\\vever, wernightcreateaternary relationship. Acareful\nanalysis ofthefvIVDinfonnation wouldthenrevealtheproblern.\nLetRbearelation scheInaandletXandYbesubsetsoftheattributes ofR.\nIntuitively, themultivalued dependency X--+--+Y'issaidtoholdoverRif,\nineverylegalinstance rofR,eachXvalueisassociated withasetofYvalues\nandthissetisindependent ofthevaluesintheotherattributes.\nForInally,iftheMVDX-+-+Yholdsover l~andZ=R-XY,thefollowing\nlllUStbetrueforeverylegalinstance rofFl:\nIftlEr,t2Erandtl.X==t2.X,thentheremustbesornet3Ersuch\nthattl'XY=t3.XYandt2\u00b7Z=t3'Z,\nFigure19.14illustrates thisdefinition. Ifwearegiventhefirsttwotuplesand\ntoldthattheMVDX,-+---+Yholdsoverthisrelation, wecaninferthatthe\nrelationinstance mustalsocontainthethirdtuple.Indeed,byinterchanging the\nrolesofthefirsttwo\ntuples~treating thefirsttuple &'3t2andthesecondtuple\nastl----wecandeducethatthetuplet4mustalsobeintherelation instance.\nLxIYIZ]\nt:B~CI___ 'ntuplet1\nC2____.n_tuplet2\n--'-\"-ablC2.---tuple t:~\nab2CI-...........tuplet4\nFigure 19.14 Illustration ofMVDDefinition\nThistablesuggests another \\vaytothinkaboutlVIVDs: IfX----7-+Yholds\noverIi,then\n1fyz(ax=:r(R)) =1fy(ax=:r(R)) x1fz(ax:::::.:x(Ii)) ineverylegal\ninstance ofR,'foranyvaluexthatappears intheXcolurnnofR.Inother\nwords,consider groupsoftuplesinRwiththesarneX-value. Ineachsuch\ngroupconsider theprojection ontotheattributes lTZ.Thisprojection HUlstbe\nequaltothecross-product oftheprojectiolls ontoYandZ.Thatis,foragiven\nX-value, theY-values andZ-values areindependent. (Frolnthisdefinition itis\neaAsytosecthat ~Y----7-----;0y'l11Ustholdwherlever ..!Y--..~}Tholds.IftheFI)X_...;.", "670": "636\nYholds,thereisexactlyoneY:'valueforagivenX-value, andtheconditions in\nthe~!IVDdefinition holdtrivially. ~rheconverse doesnothold,a.sFigure19.14\nillustrates. )\nReturning toourG't1\"'BexaIllple, theconstraint thatcoursetextsareindepen\u00ad\ndentofinstructors canbeexpressed asG1---+---+T.InterlllSofthedefinition of\nlVIVDs,thisconstraint canbereadasfollo\\vs:\nIf(thereisatupleshowing that)()istaughtbyteacherT,\nand(thereisatupleshowing that)GhasbookBastext,\nthen(thereisatupleshowing that)GistaughtbyTandhastextB.\nGivenasetofFDsand:NIVDs,ingeneral, wecaninferthatseveraladditional\nFDsand:NIVDshold.Asoundandcomplete setofinference rulesconsists of\nthethreeArIllstrong AxioIllSplusfiveadditional rules.Threeoftheadditional\nrulesinvolveonly:NIVDs:\n\u2022MVDComplementation: IfX---+~Y,thenX~---+II~XY.\n\u2022MVD.Augmentation: IfX---+~YandW:2Z,thenWX--+--tYZ.\n\u2022MVDTransitivity: IfX--7->YandY-+--+Z,thenX--+--+(Z-Y).\nAsanexanlple oftheuseoftheserules,sincewehave()--+---+ToverGTB,\nMVDcomplelnentation allowsustoinferthatC-7-+OTB~CTaswell,that\nIS,C---+---+B.Theremaining tworulesrelateFDsandMVDs:\n\u2022Replication: IfX--+Y,thenX--+--+Y.\n\u2022Coalescence: If~y--+---+YandthereisaWsuchthatWnY-iselnpty,\nW---+Z,andY:2Z,thenX-7z.\n()bserve thatreplication statesthateveryFDisalsoanl\\1VT).\n19.8.2FourthNormalForm\nFourthHorrnalfonnisadirectgeneralization ofBeNF.LetRbearelation\nscherna,XandYbenonernpty subsetsoftheattributes ofR,andF'beaset\nofdependencies thatincludes bothFDsandlVIVDs.Rissaidtobeinfourth\nnormal form(4NF), if,foreveryl\\1.VI)-'X',.>----'t }ithatholdsoverR,oneof\nthefollowing staternents istrue:\n\u2022y\"~~yorXIT\n::::::::.R,or\n\u2022Xisasuperkey.", "671": "SchernaIlefinernent andiVorrnal Fen'IlLs 637\nInreadingthisdefinition, itisirnportant tounderstand thatthedeflnition ofa\nkeyhasnotchanged\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-the keyrnustuniquely deterrnine allattributes through\nFDsalone.X---+-;Y'isatrivialMVDifYC.LX\"~Ror.LX\"Y\u00b7::::R;such\nwIVDsalwayshold.\nTherelationCTBisnotin4NFbecause C~->Tisanontrivial MVDandC\nisnotakey.vVecanelirninate theresulting redundancy bydeconlposing CTB\nintocrandCB;eachoftheserelations isthenin4NF.\nrfouse1t1VDinforrnation fully,wenUlstunderstand thetheoryof:NIVDs.IIow\u00ad\never,thefollowing resultduetoDateandFaginidentifies conditions-detected\nusingonlyFD\ninfornlation!~-under whichwecansafelyignoreMVDinforrna\u00ad\ntion.Thatis,usingMVDinformation inaddition totheFDinfornlation will\nnotrevealanyredundancy. Therefore, iftheseconditions hold,wedonoteven\nneedtoidentifyallMVDs.\nIfarelation schemaisinBCNF,andatleastoneofitskeysconsists\nofasingleattribute, itisalsoin4NF.\nAnin1.portant assl.unption isinlplicitinanyapplication ofthepreceding result:\nThesetofFDsidentified thusfaris'indeedthesetofallFDsthatholdoverthe\n'('elation. Thisassulllption isimportant becausetheresultreliesontherelation\nbeinginBCNF,whichinturndepends onthesetofFDsthatholdoverthe\nrelation.\nWeillustrate thispointusinganexalnple. Consider arelation schernaABCD\nandsupposethattheFDA-+BCDandtheMVDB-+-+Caregiven.Consid\u00ad\neringonlythesedependencies, thisrelationschemaappearstobeacounterex\u00ad\nalnpletotheresult.Therelationhasasirnplekey,appearstobeinBCNF,and\nyetisnotin4NFbecauseB..~-+C:causesaviolation ofthe4NFconditions.\nLetustakeacloserlook.\nbCl0:1ell---\ntUP!ti\u00a7-'\n-~tUI?-iet2- bC2([,2d2\nbCl([,2d2--_...tuplet:3\n_..__ ...__ ..-\n:Figure 19.15 ThreeTuples[rornaLegalInstance ofABCD\nFigure19.158ho\\v8threetuplesf1'ornaninstance ofABCDthatsatisfies the\ngivenlVIVI)B--+-+Cr\n,Froluthedefinition ofanlVIVD,giventuplestland\"t2:it\nfollowsthattuplet:3Inustalsobeincluded intheinstaJ1ce. Consider tuples\"t2\nand1:3.FrOlJlthegivenFD A-,B(/1) andthefactthatthesetupleshavethe", "672": "638 (;HAPTER L9\nsame A-value~ weGaIldeducethatCl=C2.Therefore, ,veseethattheFDB---+\nCrnustholdoverilBCD \\V\"henever theFI)A~BCDandtheNIVI) B\u00b7\u00b7_\u00b7-7~(:\nhold.IfB-\u00b7-4()holds~therelationABeDisnotinBeNF(unlessadditional\nFDslllakeBakey)!\nThus,theapparent counterexalnple isreallynotacounterexalllple\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-rather,\nitillustrates theiInportance ofcorrectly identifying allFDsthatholdovera\nrelation. Inthisexarnple, A-\u00bbBCI)isnottheonlyFD;theFDB-+C\nalsoholdsbut\u00b7wa..snotidentified initially. GivenasetofFDsandIvIVI)s,the\ninference rulescanbeusedtoinferadditional FDs(andl\\1VDs); toapplythe\nDate-Fagin resultwithout firstusingthel\\1VDinference rules,weIUUStbe\ncertainthatwehaveidentified alltheFDs.\nInsummary, theDate-Fagin resultoffersaconvenient waytocheckthata\nrelation isin4NF(without reasoning aboutl\\1VDs)ifweareconfident that\nwehaveidentified allFDs.Atthispoint,thereaderisinvitedtogooverthe\nexamples wehavediscussed inthischapterandseeifthereisarelationthatis\nnotin4NF.\n19.8.3JoinDependencies\nAjoindependency isafurthergeneralization ofMVDs.Ajoindependency\n(JD) [><J{R1,...,R'71,}issaidtoholdoverarelationRifR1,...,Rnisa\nlossless-join decolnposition ofR.\nAnMVDX~~YoverarelationRcanbeexpressed asthejoindependency\n[)<J{XV,X(R,--Y)}..Asanexcunple, intheGTBrelation, theMVDC~-+T\ncanbeexpressed asthejoindependency [)<J{Crr,CB}.\nU\u00b7nlikeFDsandl'v1VDs,thereisnosetofsoundandcornplete inference rules\nfor.IDs.\n19.8.4FifthNormalForm\nArelation schcrnaRissaidtobeinfifthnormal form(5NF)if,forevery\n.II)[XJ{.R1.,\u2022\u2022\u2022,Tin}thatholdsoverIl,oneofthefollo\"ving statcrnents is\ntrue:\n\u2022Ili==R,forscnnei,or\n\u2022The.lDisirnpliedbythesetofthoseFDsoverIlin\u00b7whichtheleftsideis\nakeyforR.", "673": "&39\n'Thesecondcondition deserves S(Hneexplanation, since\\vehavenotpresented\ninference rulesforFDsand.00Dstakentogether. Intuitively, \\vernustbeableto\nsho\\vthatthedecolnposition ofRinto{Rl,...)R'TI}islossless-join whenever\nthekeydependencies (FDsinwhichtheleftsideisakeyforR)hold.JI)\nt><J{.RI,..,,Rn}isatrivialJDifRj=RforSaInei;sucha.JDalways\nholds.\n~rhefollowing result,alsoduetoDateandFagin,identifies conditions-H' \u00b7again,\ndetected llsingonlyFDinforlnation---under -whichwecansafelyignoreJD\ninforlnation:\nIfarelation schenlaisin3NFandeachofitskeysconsists ofasingle\nattribute, itisalsoin5NF.\nTheconditions identified inthisresultaresufficient forarelationtobein5NF\nbutnotnecessary. rrheresultcanbeveryusefulinpractice because itallcnvs\nustoconclude thatarelation isin5NF'Withoutever'identifying the!'v1VDs and\nJDsthat'mayholdoveTtherelation.\n19.8.5Inclusion Dependencies\nlVIVDsandJDscanbeusedtoguidedatabase design,aswehaveseen,although\ntheyarelessCOllUllon thanFDsandhardertorecognize andrea..')onabout.In\ncontrast, inclusion dependencies areveryintuitive andquitecornrnon. IIowever,\nthE~ytypically havelittleinfluence ondatabase design(beyond theERdesign\nstage).\nInfonnally, aninclusion dependency isastatcrnent ofthefOlTHthatS0111e\ncohunns of(1,relation arecontained inothercohunns (usually ofasecondre\u00ad\nlation). Aforeignkeyconstraint isanexarnple ofaninclusion dependency;\nthereferring colurnn(s) inonerelation rnustbecontain.ecl intheprirnary key\ncohnnn(s) ofthereferenced relation. Asanother exarnple, if!?andSaretv\\to\nrelations obtained 1)ytranslating t\\VOentitysetsthateveryRentityisalso\nan8erltity,vve\\vollidhaveaninclusion dependency; projecting Ifonitskey\nattributes yieldsarelation conta,ined intherelation obtained byprojecting 8\nonitskeyattributes.\nThernainpointtobearinrnindisthat\\veshouldnotsplitgroupsofattributes\nthatparticipate inaJlinclusion dependency. Forexarnple, if,vehaveaninclu\u00ad\nsion dep(~ndenc'y Al~~Of),\\vhiledecornposing therelation schernacontaining\nA13,\\\\leshouldensurethatatlea\"stoneofthescherna.g obtained inthede\u00ad\nccnnposition contains botJ1Aandf3.()ther\\vise,v.re cannotchecktheinclusion\nclependency .1113~C:/)\u00b7without reconstructing therelation containing A13.", "674": "640 (;If.APTER W\nIvlostinelu.sioIl dependencies inpractice arekelJ-based~ thatis,involveonlykeys.\nForeignkeyconstraints areagoodexalnple ofkey-ba.'3ed inclusion dependencies.\n~A.nE~I{diagralIl thatinvolves ISAhierarchies (seeSection 2.4.4)alsoleadsto\nkey-based inclusion dependencies. Ifallinclusion dependencies arekey-ba,sed,\n\\verarelyhaveto''lorryaboutsplitting attribute gTOUpsthatparticipate in\ninclusion dependencies, sincedecornpositions usuallydonotsplitthepriInary\nkey.N'ote,ho\\vever, thatgoingfn:)1113NFtoBCNFahvaysinvolves splitting\nSOlnekey(ideallynottheprirnary key!),sincethedependency guidingthesplit\nisofthefornl ..x-7..4whereAispartofakey.\n19.9CASESTUDY: THEINTERN'ET SHOP\nR,ecallfroInSection3.8thatDBDudes settledonthefollowing scherna:\nBooks(i~~~n: CHAR(10), title:CHAR(8) ,author: CHAR(80) ,\nqty_iTL.stock: INTEGER, price:REAL,year_published: INTEGER)\nCustolllers( cid:INTEGER, cnaTne: CHAR(80) ,address: CHAR(200))\nOrders(orde.rnum,: INTEGER, .....~sbn:CHAR(.10), cid:INTEGER,\ncardnu'm: CHAR(16), qty:INTEGER, ordeT_date: DATE,ship....date:DATE)\nDBDudes analyzes thesetofrelations forpossible redundancy. TheBooks\nrelation hasonlyonekey,(isbn),andnootherfunctional dependencies hold\noverthetable.Thus,BooksisinBCNF.TheCustorners relation alsohasonly\nonekey,(cid),andnootherfunctional depedencies holdoverthetable.T'hus,\nCustorners isalsoinBCNF.\nDBI)udes hasalready identified thepair (o7'(lerTl,'urr~7 isbn)asthekeyforthe\nOrderstable.Inaddition, sinceeachorderisplacedbyonecustorner onone\nspecificdatewithonespecificcreditcardnurnber, thefollowing threefunctional\ndependencies hold:\nordcrnuTn -_......j.cid,ordernuTrl,-+ order_date,andoTderTru,Tn -7co:rdrHlTn\nTheexpertsatDBDudes conclude thatOrdersisnotevenin3NF.(Canyou\nsee\\vh.y?)Theydecidetoclecornpose ()rdersintothefollc)\\ving t\\VOrelations:\n()rders(Q!..:clcT71'u:rn, c1.:d,order_date, caTdnurtl, a.nd\n()rderlists( ordernurn,i8b ..!.~,qty,8hip~date)\nTheresulting t\\VOrelation,s~ ()rdersand()rderlists, arebothinBCNF',andthe\ndecornposition islossless-join sinceoTcle'rn,'ll'rn isakeyfor(thenew)()rders.The\nr(-~aderisinvitedtocheckthatthisdecolnposition isalsodependency-preserving.\nl?orcornpleteness, ,vegiveth,eS(~LDIJLforthe()rdersandOrderlists relations\nbelow:", "675": "641\nFigure 19.16ERDiagram Reflecting theFinalDesign\nCREATE TABLEOrders(ordernurn INTEGER,\ncid INTEGER,\norder_date DATE,\ncardnum CHAR(16),\nPRIMARY KEY(ordernlllll),\nFOREIGN KEY(cid)REFERENCES Custolllers )\nCREATE TABLEOrderlists (ordernurll INTEGER,\nisbn CHAR(10),\nqty INTEGER,\nship~date DATE,\nPRIMARY KEY(ordernurn, isbn),\nFOREIGN KEY(isbn)REFERENCES Books)\nF'igure19.16shc)\\\\TSanupdated ERdiagrarn thatreflectsthenewdesign.Note\nthatDBDudes couldhavearrivedinunedia,tely atthisdiagrarn iftheyha\"dllla.de\n()rdersanentitysetinsteadofarelationship setrightatthebeginning. Butat\nthattilnetheydidnotunderstand therequirernents cornpletely, anditseeTHed\nnaturaltornodelOrders a.I)arelationship set.Thisiterative refinernent process\nistypicalofreal-life da,tabase designprocesses. AsDBI)udes haslearnedover\ntirne,itisraretoachieveaninitialdesignthatisnotchanged asaproject\nprogresses.\nT'heDBI)udes tea,lllcelebrates thesuccessful cornpletion oflogicaldataJn1,.'3c\ndesignandschernarefinelnent byopening abottleofcharnpagne andcharging\nittoB&:N.Afterrecovering frornthecelebration~ theylIloveontothephysical\ndesignphase.", "676": "642 CHAPTER 19\n19.10REVIEW QUESTIONS\nAnswers tothereview'questions canbefoundinthelistedsections.\n\u2022Illustrate redundancy andtheproblerns thatitca.ncause.Giveexcunples\nofinsert,delete,andnpdateanoInalies. Can'fudlvalueshelpaddressthese\nproblerlls? AretheyacOlnplete solution? (Section 19.1.1)\n\u2022\"VVhatisadecoTnpositio'n andhowdoesitaddress redundancy? What\nproblerlls Inaybecausedbytheuseofdecolupositions? (Sections 19.1.2\nand19.1.3)\n\u2022Definejunctional dependencies. Howarepr'lnLary keysrelatedtoFDs?\n(Section 19.2)\n\u2022V\\ThenisanPDjimplied byasetFofFDs?DefineArmstrong's Axioms,\nandexplainthestatement that\"theyareasoundandcornplete setofrules\nforFDinference.\" (Section 19.3)\n\u2022Whatisthedependency closureF+ofasetFofFDs?Whatistheat\u00ad\ntributeclosureX+ofasetofattributes XwithrespecttoasetofFDsF?\n(Section 19.3)\n\u2022DefineINF,2NF,3NF,andBCNF.Whatisthenlotivation forputtinga\nrelation inBCNF?Whatisthemotivation for3NF?(Section 19.4)\n\u2022Whenisthedecomposition ofarelationschenlaRintotworelationschemas\nXandYsaidtobealossless-join decomposition? Whyisthisproperty\nsoirnportant? Giveanecessary andsufficient condition totestwhether a\ndecc)1nposition islossless-join. (Section 19.5.1)\n\u2022Whenisadecornposition saidtobedepc'ndency-preserving? \\Vhyisthis\nproperty useful?(Section 19.5.2)\n\u2022Describe howwecanobtain a.lossless-join decornposition ofarelation into\nBCNI\"\"\"'.Giveanexanlple toshowthattherernaynotbeadependency\u00ad\nprest~rving decornposition intoBCNF.Illustrate howagivenrelation could\nbedecornposed indifferent waystoarriveatseveralalternative decornposi\u00ad\ntions,anddiscusstheirnplications forclatabc~\"e design.(Section 19.6.1)\nIlIll(jiveancx.:arnple thatillustrates howacollection ofrelations illBCNF\ncouldhaveredundancy eventhougheachrelation, byitself,isfreefronl\nredundancy. (Section 19.6.1)\n\u2022Whatisa.Tninirnal coverforasetofI:(I)s?Describe analgorithrn for\ncornputing therninirnaJ coverofB..S(~tofFI)s,andillustrate itwithan\nexarnple. (Section 19.6.2)", "677": "Sche77~a Refincrnent andNoT'Tnal FOTin8 64:3\n\u2022Describe hovvthealgorithl11 forlossless-join decolnposition intoBCNFcan\nbeadapted toobtainalossless-join, dependency-preserving decornposition\ninto3NF.Describe thealternative synthesis approach toobtaining such\nadecorllposition into3NF.Illustrate bothapproaches usinganexarnple.\n(Section 19.6.2)\n\u2022Discusshowschernarefinernent through dependency analysisandnorrnal\u00ad\nizationcaniInprove scheIna.-') obtained through ER,design.(Section 19.7)\n\u2022Define'Tn'l1,ltival'Ued dependencies, .Joindependencies, andinclusion depen\u00ad\ndencies. Discusstheuseofsuchdependencies fordatabase design.Define\n4NFand5NF,andexplainhowtheypreventcertainkindsofredundancy\nthatBCNFdoesnoteliminate. Describe testsfor4NFand5NFthatuse\nonlyFDs.Whatkeyassumption isinvolved inthesetests?(Section 19.8)\nEXERCISES\nExercise 19.1Brieflyanswerthefollowing questions:\n1.Definethetermfunctional dependency.\n2.Whyaresomefunctional dependencies calledtrivial?\n3.Giveaset.ofFDsfortherelation schemaR(A,B,C,Djwithprilnary keyABunderwhich\nRisin1NFbutnotin2NF.\n4.GiveasetofFDsfortherelation schelnaR(A,B,C,Djwithprilnary keyABunderwhich\nRisin2NFbutnotin3NF.\n5.Consider therelation schelnaR(A,B,OJ,whichhastheFDB~C.IfAisacandidate\nkeyforR,isitpossible forRtobeinBCNF?Ifso,underwhatconditions? Ifnot,\nexplainwhynot.\n6.Suppose wehavearelation schema R(A,B,OJrepresenting arelationship between two\nentitysetswithkeysAand13,respectively, andsuppose thatRhas(aIIlongothers)the\nFDsA..._+Band13-otA.Explain whatsuchapairofdependencies means(i.e.,what\ntheyirnplyabouttherelationship thattherelation nlOdels).\nExercise 19.2Consider arelationRwithfiveattributes ABCDE. Youaregiventhefollc)\\ving\ndependencies: A--tB,Be~B,andBD~A.\n1.ListallkeysforR.\n2.IsRin:3NF?\n3.IsRinBCNF?\nExercise 19.3Consider therelation showninFigure19.17.\n1.l...istallthefunctional dependencies thatthisrelation instance satisfies.\n2.ASSUIlIethatthevalueofattribute Zofthela..<:;trecordintherelation iscluLuged frorH\n23toZ2.Nowlistallthefunctional dependencies thatthisrelation instance satisfies.\nExercise 19.4Assurnethatyouaregivena.relation withattributes ABCD.", "678": "644\nXlYlZl\nXlYlZ2\nX2YlZl\n~r2Yl Z~~'--.\nFigure19.17 Relation forExercise 19.:3.CJHAPTER }g\n1.AsslunethatnorecordhasNULLvalues.\\NriteanSQLquerythatcheckswhether the\nfunctional dependency A---,)0Bholds.\n2.Assulne againthatnorecordhasNULLvalues. \\tVriteanSQLassertion thatenforces\nthefunctional dependency A-+B.\n3.LetusnowaSSUlnethatrecords couldhaveNULLvalues. Repeattheprevious two\nquestions underthisassurnption.\nExercise 19.5Consider thefollowing collection ofrelations anddependencies. Assumethat\neachrelation isobtained through decomposition fromarelation withattributes ABCDEFGHI\nandthatalltheknowndependencies overrelation ABCDEFGHI arelistedforeachquestion.\n(Thequestions areindependent ofeachother,obviously, sincethegivendependencies over\nABCDEFGHI aredifferent.) Foreach(sub)relation: (a)Statethestrongest nonnalfonnthat\ntherelation isin.(b)IfitisnotinBCNF,decompose itintoacollection ofBCNFrelations.\n1.Rl(A.C,B.D,E), A-+13,C-+D\n2.R2(A,B,F), AC-+B,B-+F\n3.R3(A~DJ..D\"\".ofG,G-+H\n4.R4(D,C,H,G),A-~\u00b7tI,I-+A\n5.R5(A.I,C.B)\nExercise 19.6Suppose thatwehavethefollowing threetuplesinalegalinstance ofarelation\nschema Swiththreeattributes ABC(listedinorder):(1,2,:3),(4,2,3),and(5,3,3).\n1.\\Vhichofthefollc)\\\\ring dependencies canyouinferdoes'lUJlholdoverschernaS?\n(a)A-+13,(b)Be---'1A,(c)13..._-,C\n2.Canyouidentify allYdependencies thatholdover5''?\nExercise 19.7Suppose youaregivenarebltion R\\vithfourattributes AB()D.F'or eachof\nthefollowing setsofFDs,assurning thosearetheonlydependencies thatholdforR,dothe\nfollowing: (a)Identify thecandidate key(s)forR.(b)Identify thebestHonnalforBlthatR\nsatisfies(lNF,2NF,:JNF,orBeNF). (c)IfIiisnotinBCNl~\\ decOlnpose itintoasetof\nBCNFrelations thatpreserve thedependencies.\n1.C:-\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7D,C----+A.13C\n2.FJ'-~-fC'.D-->A\n:3.ABC -~fD,D-->A\n4.A-+B.B(} ,.D.A~.C\n5.A13_.......C,AB\u00b7\u00b7\u00b7_\u00b7\u00b7 .\u2022D.C-+A,D\u00b7_\u00b7-+13", "679": "Schernallefincl1H;nt (nulIVorrnal 1:\"~oTn18 645\nExercise 19.8Consider theattribute setIi=ABCDEGH (LudtheFDsetF={A.B\u00b7--+ C:,\nAC--+B:AD---4E,B-----+D,Be--+11,B-!-G}.\n1.Foreachofthefollowing attribute sets,dothefollowing: Cornpute thesetofdepen-\ndenciesthatholdoverthesetandwritedownarninirnal cover.(ii)Narnethestrongest\nnonnal[onnthatisnotviolated bytherelation containing theseattributes. (iii)De\u00ad\nCOlnpose itintoa.collection ofBCNFrelations ifitisIH)tinBeNF'.\n(a)ABC,(b)ABCD,(c)ABCEG, (d)DC:BGII, (e)ACEH\n2.vVhichofthefollowing decOIllpositions ofR=ABCDEG, withthesaInesetofdepen\u00ad\ndenciesF',is(a)dependency-preserving? (b)lossless-join?\n(a){AB,BC,ABDE.EG}\n(b){ABC,ACDE,ADG}\nExercise 19.9LetRbedecOIllposed intoR1,R2,...,Rn.LetFbeasetofFDsonR.\n1.DefinewhatitrlleansforFtobepre8erved inthesetofdecOlllposed relations.\n2.Describe apolynomial-tirne algorithm totestdependency-preservation.\n3.Projecting theFDsstatedoverasetofattributes Xontoasubsetofattributes Yrequires\nthatweconsider theclosureoftheFDs.Giveanexarnple whereconsidering theclosure\nisirnportant intestingdependency-preservation, thatis,considering justthegivenFDs\ngivesincorrect results.\nExercise 19.10Suppose youaregivenarelation R(A,B,C,D).Foreachofthefollowing\nsetsofFDs,assuming theyaretheonlydependencies thatholdforR,dothefollowing: (a)\nIdentify thecandidate key(s)forR.(b)Statewhether ornottheproposed decOlnposition of\nRintosmallerrelations isagooddecolllposition andbrieflyexplainwhyorwhynot.\n1.B--+C,D--+A;decornpose intoBCandAD.\n2.AB-+C,C-~~A,C,--)-D;decompose intoACDandBe.\n~~.A-!-BC,C-+AD;decornpose intoABCandAD.\n4.A-!-B,BC,C'-1D;decornpose intoABandACD.\n5.A--+B,B-+C,C-!-D;decOInpose intoAB,ADandCD.\nExercise 19.11Consider arelation Rthathasthreea\"ttributes ABC.Itisdecornposed into\nrelations R1withattributes ABandR2withattributes Be.\n1.St<ltethedefinition ofalossless-joindecOlnposition withrespecttothisexarnple. Answer\nthisquestion concisely by\\-vritingarelational algebraequation involving R,R1,andH2.\n2.Suppose thatB--+--+C.IsthedecorHposition ofRinto.R!andR2lossless-join? Reconcile\nyour(l.,nswerwiththeobservation thatneitheroftheFDsHInR2 ----'>RInorRInR2--+.H..2\nhold,inlight<;)fthesiInpletestoffering anecessary andsufficient condition forlossless\u00ad\njoindecmnposition intotworelations inSection 15.6.1.\n:3.Ifyouaregiventhefollc}\\\\ring justa.nees ofR1a,nd112,whatcanyousayaboutthe\ninstance ofRfromwhichthesewereobtained? Answer thisquestion bylistingtuples\nthataredefinitely illRandtuplesthata.repossibly\u00b7 inR.\nInstance ofRJ.={(5,l),(6,l)}\nInstance ofR2::::::{(l,8),(1,9)}\nCanyousaythatattribute Bdefinitely isor'isnot.akeyforR?", "680": "646 CHAPTER 19\nExercise 19.12Suppose thatwehavethefollowing fourtuplesinarelation 5'withthree\nattributes ABC:(1,2,:3), (4,2,:3),(5,3,:3), (5,::~A). \\Vhichofthefollowing functional (-+)and\nrIlultivalued (-+--\u00bbdependencies canyouinferdoesnotholdoverrelation S?\n1.A-+13\n2.A_....-}..._,,-}B\n3.Be--,}A\n4.BG-+_..~>A\n5.8-+C\n6.B~'---'oC\nExercise 19.13Consider arelation Rwithfiveattributes ABCDE'.\n1.Foreachofthefollowing instances ofR,statewhether itviolates (a)theFDBe\",,\"-,D\nand(b)theJ\\fVDBe_..-t--+D:\n(a){ }(i.e.,mnptyrelation)\n(b){(0,,2,3,4,5), (2,a,3,5,5)}\n(c){(o,,2,3,4,5), (2,0,,3,5,5), (o,,2,3,4,6)}\n(d){(a,2)~,4,5), (2,0,,3,4,5), (o,,2,3,6,5)}\n(e){(0,,2,3,4,5), (2,0,,3,7,5), (a,2,3,4,6)}\n(f){(o,,2,3,4,5), (2,0,,3,4,5), (0,,2,3,6,5), (o,,2,3,6,6)}\n(g){(a,2,~3,4,5), (0,,2,:3,6,5), (0,,2,3,6,6), (o,,2,3,4,6)}\n2.Ifeachinstance forRlistedaboveislegal,whatcanyousayabouttheFDA-+B?\nExercise 19.14JDsarelllotivated bythefactthatsornetilnes arelation thatcannotbe\ndecoruposed intotwosinaller relations inalossless-join rnanner canbesodeC0111pOsed into\nthreeorrnorerelations. Anexa,rnple isarelation withattributes 8upplier, part,clndJ}Toject,\ndenoted SPJ,withnoFDsorl'vlVDs.TheJD[Xl{SP,PJ,JS}holds.\nFrorntheJD,thesetofrelation scheines SP,PJ,andJSisaIORsless-join decornposition of\nSPJ.Construct aninstance ofHPJtoillustrate thatnotwooftheseschernes suffice.\nExercise 19.15Answerthefollowing questions\n1.Provethatthealgorithrn showninFigure19.4correctly cornputes the::l.ttribute closure\noftheinputattribute setX.\n2.Describe alinear-tirne (inthesizeofthesetofFI)s,wherethesizeofeachFDisthe\nnurnber ofattributes involved) algoritlun forfindingtheattribute closureofasetof\nattributes withrespecttoasetofFDs.Provethatyouralgoritlun correctly COInputes\ntheattribute closureoftheinputattrilnlte set.\nExercise 19.16Letussaythatan'Fl))(-_.,}Yissi'mpleifYisasingleattribute.\n1.Replace theFDAB........,CDl.Jythesrnallest equivalent collection ofsirnpleFDs.\n2.ProvethateveryFD X_...crY\"in(.'LsetofFDsFCetnbereplaced byasetofsirnpleF'Ds\nsuchthatp+isequaltotheclosureofthenewsetofFDs.", "681": "ScherriaRejineTnent andNOT'nial 1?oT7ns 641\nExercise 19.17ProvethatArrnstrong's i-\\xiorns aresoundandcOluplete forFDinference.\nrT'hatis,sh()\\vthatrepeated application ofthesf;ttxiOlllSonasetFofF'Dsproduces eX(lctly\nthedependencies inP+.\nExercise 19.18Consider arelationRwithattributes ABCDE.aLetthefollowing FDsbe\ngiven:A~BC,Be ----'!\"E,andE~DA.Siluilarly, letSbearelation withattributes ABC1DE\nandletthefollo\\ving FDsbegiven:A-+BC,B-+IE,andE----'!\"DA.(Onlythesecond\ndependency differsfrolllthosethatholdoverR.)Youdonotknowwhether orwhichother\n(join)dependencies hold.\n1.IsRinBCNF?\n2.IsRin,1NF?\n3.IsRin5NF?\n4.IsSinBeNF?\n5.IsSin4NF?\n6.IsSin5NF'?\nExercise 19.19LetRbearelation schelnawithasetFofFDs.ProvethatthedecOIll\u00ad\nposition ofRintoHIandR2islossless-join ifandonlyifp+contains HInR2----'!\"R1or\nR1nR2 ----'!\"R2.\nExercise 19.20Consider aschemeRwithFDsFthatisdecOlnposed intoschelnes with\na..ttributes XandY.Showthatthisisdependency-preserving ifF'~(}~xUpy)+.\nExercise 19.21ProvethattheoptiInizatioll ofthealgorithrn forlossless\u00b7\u00b7-join, dependency\u00ad\npreserving decornposition into~)NFrelations (Section 19.6.2)iscorrect.\nExercise 19.22Provethatthe3NFsynthesis algoritlull produces alossless-join decOlnposi\u00ad\ntionoftherelation containing alltheoriginal attributes.\nExercise 19.23Provethatan]\\IlVn.X-+-+Yoverarehltion Rcanbeexpressed a,,')the\njoindependency [Xl{-,YY,X(R-Y)}.\nExercise 19.24Provethat,ifRhasonlyonekey,itisinBCNFifandonlyifitisin~3NF.\nExercise 19.25Provethat,ifRisin3NFandeverykeyisshnple,thenRisinHeNF.\nExercise 19.26Provethesestaternents:\n1.Ifarelation scherneisinBCNFandatlea.stoneofitsl\\.eysconsists of}1singleattrilmte,\nitisalsoin4NF.\n2.Ifarelation scherneisin:3NFandeachkeyhasasingleattribute, itisalsoin5NF'.\nExercise 19.27Give <illalgorithrn fortestingwhether arelation scheme isinBCNF.]'he\n:.llgorithrn shouldl)epolynorniaJ inthesizeofthesetofgivenFDs.('rhesizeisthesurnover\nallFI)softhenurnber ofattributes thata,ppearintheFJ).) Isthere::tpolyuOlnial algorithrn\nfortestingwhether arelation schemeisin:~NF?\nExercise 19.28Give ('UIalgorithm fortesting\\vhether arelation scherne isinBCjNF'. 'I'hf~\naJgorithrn shouldbepolynomial inthesizeofthesetofgivenFI)s.CI'he'size'istheSUlnover\nallFI)softhenurnber ofattributes thatappearintheFD.) Isthereapolynomial algorithrn\nfortestingwhether arelation scherneisin:~NF?\nExercise 19.291)rovethatthealgorithm fordecomposing are1cltion scherna withasetof\nFI)sintoacollection ofBC~NSrelation schenlas asdescriberl inSection19.G.liscorrect(i.e.,\nitproduces acollection ofBCNFrelations, andislossless-join) andterrninates.", "682": "648\nBIBLIOGRAPHIC NOTES(;I'IAPTER 19\nTextbook presentations ofdependency theoryanditsuseindatabase designinclude [3,45,\n501)509,'747J.Goodsurveyarticlesonthetopicinclude[755,415].\nFDs\\vereintroduced in[187],alongwiththeconcept of::3NF,andaximllsforinferring FDs\nwerepresented inP38].BCNFwasintroduced in[188].Theconcept ofalegalrelation instance\nanddependency satisfaction arestudied fonnaUy in[828].FDsweregeneralized toscrnantic\ndataIllodelsin[768].\nFinding akeyisshowntobeNP-COlnplete in[497].Lossless-join decOlnpositions werestudied\nin[28,502,627].Dependency-preserving decorIlpositions werestudiedin[74].[81]introduced\nrninirnal covers.DecOlnposition into:3NFisstudiedby1.81,98]anddecOlnposition intoBCNF\nisaddressed in[742].[412]showstha,ttestingwhether arelation isin~1NFisNP-cOlnplete.\n[253]introduced 4NFanddiscussed decoillposition into4NF.Faginintroduced othernonnal\nforIllsin[254J(project-join nonnalfonn)and[255](doHluin-key nonnalforIll).Incontrast to\ntheextensive studyofvertical decOlnpositions, therehasbeenrelatively littleformalinvesti\u00ad\ngationofhorizontal decompositions. [209]investigates horizontal decoillpositiolls.\nIvIVDswerediscovered independently byDelobel [211],Fagin[253],andZaniolo[789].AxiOlllS\nforFDsandMVDswerepresented in[73}.[593]showsthatthereisnoaxiornatization for\nJDs,although [662]provides anaxioHlatization foramoregeneralclassofdependencies. The\nsufficient conditions for4NFand5NFintennsofFDsthatwerediscussed inSection19.8are\nfrom[205].Anapproach todatabase designthatusesdependency inforrnation toconstruct\nsarnplerelation instances isdescribed in[508,509].", "683": "20\nPHYSICAL DATABASE\nDESIGN ANDTUNING\n--What isphysical database design?\n..Whatisaqueryworkload?\n...Howdowechooseindexes? Whattoolsareavailable?\n..Whatisco-clustering andhowisitused?\n..Whatarethechoicesintuningadatabase?\n..Howdowetunequeriesandview?\n..Whatistheimpactofconcurrency onperforrnance?\n..Howcanwereducelockcontention andhotspots?\n..\"'Thatarepopular database benchnlarks andhowaretheyused?\n...Keyconcepts: Physical database design,database tuning,workload,\nco-clustering, indextuning,tuningwizard, indexconfiguration, hot\nspot,lockcontention, database benchmark, transactions persecond\nAdvicetoaclientwhocornplained al)outrainleakingthrough theroofontothe\ndiningUtble:\"J\\!!ovethetable.\"\n............Architect FrankIJoyd\\\"lright\nTheperfonnance ofa1)131:18oncornrnonly &':lkedqueriesandtypicalupdate\noperations istheultirnate Ineasure ofadatabase desigIl.AI}BAcanirnprove\nperforrnance byidentifying perforrnance bottlenecks andadjusting sorneDBIVlS\npararneters (e.g.,thesizeofthebufferpoolorthefrequency ofcheckpointing)\noraddinghanhvare toelirninate suchbottlenecks. rIhefirststepinachieving\nGi19", "684": "650 CHAPTER 20\ngoodperforlnancc, however, istoInakegooddataba.se designchoices, whichis\nthefocusofthischapter.\nAfterwedesigntheconceptual andexte'rnal scherna ..'3,thatis,createacollection\nofrelations andviewsalong'withasetofintegrity constraints, we.Il1ustaddress\npe1'forlna11c8 goalsthroughphysical database design, inwhichwedesignthe\nphysical sche111a. Asuserrequirernents evolve,itisusuallynecessary totune,\noradjust,all&\"3pectsofadatabase designforgoodperforrnance.\nThischapter isorganized asfollows. Wegiveanoverview ofphysical database\ndesignandtuninginSection 20.1.The1nostirnportant physical designdeci\u00ad\nsionsconcern thechoiceofindexes. Wepresentguidelines fordeciding which\nindexestocreateinSection 20.2.Theseguidelines areillustrated through sev\u00ad\neralexalnples anddeveloped furtherinSections 20.3.InSection20.4,vvelook\ncloselyattheirnportant issueofclustering; wediscusshowtochooseclustered\nindexesandwhether tostoretuplesfron1different relations neareachother(an\noptionsupported bysorneDBMSs). InSection 20.5,weempha..\"3izehowwell\u00ad\nchosenindexescanenablesomequeriestobeanswered without everlookingat\ntheactualdatarecords. Section20.6discusses toolsthatcanhelptheDBAto\nautornatically selectindexes.\nInSection 20.7,wesurveythelnainissuesofdatabase tuning. Inaddition\ntotuningindexes, we111ayhavetotunetheconceptual schema aswellas\nfrequently usedqueryandviewdefinitions. Wediscusshowtorefinethecon\u00ad\nceptualschelnainSection 20.8andhowtorefinequeriesandviewdefinitions\ninSection20.9.Webrieflydiscusstheperforrnance irnpactofconcurrent access\ninSection 20.10.Weillustrate tuningonourInternet shopexarnple inSection\n20.11.\\Yeconclude thechapterwithashortdiscussion ofDBMSbenchrnarks in\nSection20.12;benchrnarks helpevaluate theperfOI'lnanCe ofalternative DBl\\1S\nproducts.\n20.1INTRODUCTION TOPHYSICAI.J DATABASE\nDESIGN\nLikeallothera.spects ofelataba.se design,physical designrnust b(~guidedby\nthenatureofthedata,a,nditsintencled use.Inparticular, itisirnportant tonn\u00ad\nderstand thetypicalworkload th<:ttthedatabase lI1Ustsupport; tlH~vvorklc)ad\nconsists ofarnixofqueriesa.nelupdates. 1Jsers(:tlsohavecertain requirenl(~nts\naboutho\\vfastcert;:linqueriesorllpdat(~s 11111strunorho\\vrnan.ytran.sactions\nrnustbeprocessed persecond. rrhe\\vorkload (l<~scription andusers'perfor\u00ad\nIn(U1C(~reqllirernents aretheba\"sison\\vhichanurnber ofdecisions havetobe\nrnadeduringpl1ysical datab':lse design.", "685": "Physical Dat;abase Design,an,cll1zJ,ni'ltg 651\nr-..\u00b7\u00b7\u00b7\u00b7_\u00b7_,,\u00b7,_\u00b7 .._~.._\u00b7\u00b7\u00b7_\u00b7\u00b7_-. \"_.~_-_.-.-.._-_._ _-~\"\"__ _~_..__..~--\u00b7_l\nIIdentifying Perfornlance Bottlenecks: Allcornrrlercial systeuls pro\u00ad\nIvideasuiteoftoolsforrnonitoring awiderangeofsysteIllparalneters.\n'I'These tOOlS.'usedproperlY\" C,UlhelpidentifyperfOfIna.nc.ebO.ttlenecks and\nsuggestaspectsofthedatabc1..'Se designandapplication codethatneedto\nIbetunedforperforlnance. Forexarnple1\u2022\"vecanasktheDBMStornonitor\nItheexecution ofthedatabase foracertainperiodoftinleandreporton\nithenurnber ofclustered scans,opencursors, lockrequests, checkpoints,\nbufferscans,average waittitneforlocks,andmanysuchstatistics that\ngivedetailed insightintoasnapshot ofthelivesystem.InOracle,areport\ncontaining thisinforlnation canbegenerated byrunning ascriptcalled\nUTLBSTAT. SQLtoinitiatemonitoring andascriptUTLBSTAT. SQLtotermi\u00ad\nnaternonitoring. Thesystemcatalogcontains detailsaboutthesizesof\ntables,thedistribution ofvaluesinindexkeys,andthelike.Theplangen\u00ad\neratedbytheDBMSforagivenquerycanbeviewedinagraphical display\nthatshowstheestimated costforeachplanoperator. Whilethedetails\narespecifictoeachvendor,allInajaI'DBlIISproducts onthemarkettoday\n~rovide asUi~eofsuchtools. __~..\nTocreate a,goodphysical database designandtunethesystenlforperfor\u00ad\nmanceinresponse toevolving userrequirelnents, adesigner HUlstunderstand\ntheworkings ofaDBMS, especially theindexing andqueryprocessing tech\u00ad\nniquessupported bytheDBMS. Ifthedatabase isexpected tobeaccessed\nconcurrently byrnanyusers,orisad'istr'ibuted database, thetaskbeeornes\nlnorecornplicated andotherfeatures ofa,DBl\\1SCaIneintoplay.'iVediscuss\ntheilnpactofconcurrency ondatabase designinSection20.10anddistributed\ndatabases inChapter 22.\n20..1..1Database Workloads\nThekeytogoodphysical designisDTriving atanaccurate description ofthe\nexpectedworkloa.d. Aworkload description includes thefollCJ\\ving:\n1.Alistofqueries(withtheirfrequency, as<'1rc:ttioofallqueries/npdcltes).\n2,Alistofupdates andtheirfrequencies.\n:3.Perfonnanc(~ goalsforeachtypeofqueryandupdate.\nForeachquer.yinthe\\vorklo;:vL vveHUlstidentify\n1\\1II\\Vhichrelations (11'eaccessecl.\n1\\1II\\Vhichattributes aren:~tained (intheSELECT clru.lse).", "686": "652 CHAPTER 20\n\u2022\\Vhichattributes haveselection Ofjoinconditions expressed onthern(in\ntheWHEREclause) (UH:!hovvselective theseconditions arelikelytobe.\nSiInilarly, foreachupdateinthe\\vorkloacl, \\veBlustidentify\n\u2022vVhichattributes haveselection orjoinconditions expressed ontherll(in\ntheWHEREclause)andho\\vselective theseconditions arelikelytobe.\nBThetypeofupdate(INSERT, DELETE, orUPDATE) andtheupdated relation.\n\u2022ForUPDATEcOHnuands, thefieldsthatarernodified bytheupdate.\nR.ellleluber thatqueriesandupdates typically haveparameters, forexarnple, a\ndebitorcreditoperation involves aparticular account nUlnber. rrhevaluesof\ntheseparalneters deterlnine selectivity ofselection andjoinconditions.\nUpdates haveaquerycornponent thatisusedtofindthetargettuples.This\ncOlllponent canbenefitfroInagoodphysical designandthepresence ofindexes.\nOntheotherhand,updates typically requireadditional worktoITlaintain in\u00ad\ndexesontheattributes thatthey111odify. Thus,whilequeriescanonlybenefit\nfroillthepresence ofanindex,anindexrnayeitherspeeduporslowdown\nagivenupdate. Designers shouldkeepthistrade-off inrnindwhencreating\nindexes.\n20.1.2Physical DesignandTuningDecisions\nIrnportant decisions rnadeduringphysical datab&'3e designanddatabase tuning\nincludethefollovving:\n1.Choiceofindexes tocreate:\nII\\Vhichrelations toindexandwhichfieldorcornbination offieldsto\nchooseasindexsearchkeys.\nIIForeachindex,shoulditbeclustered orul1clustered?\n2.Tuningtheconceptual 8chenLa:\nl1liAlternative 'fuJTYnalized 8cherna/): \\Veusuallyhavernorethanoneway\ntodec()1npose aschcluaintoadesiredIlOl'Inal fOITn(BCNFor3NF).\nAchoicecanbernadeonthebasisofperforrnance criteria,.\nIIDen,OT7Tl.alizat'io'n: \\VeInight\\vant toreconsider schernadecolnposi\u00ad\nbonsca.rried Olltfornorrnalization. duringtheconceptual schern.ade\u00ad\nsignprocesstoirnprove theperforrnance ofqueriesthatinvolveat\u00ad\ntributes fr0111several pn:~viously decornposed relations.", "687": "IIl/crvticalpart'itioning: LJndercertaincircurnstances wernight'wantto\nfurtherdecornpose relations toilnprove theperfornlance ofqueries\nthatinvolveonlyafevvattributes.\nIIViC'U1S:\\Veluight'wanttoaddsornevie\\vstonlaskthechanges inthe\nconceptual scherna fr0111users.\n3.QueryandtTansact'ioTl, t'UJLing: Frequently executed queriesandtransac\u00ad\ntionsulightbere\\\\rritten torunfc1..ster.\nInpaTallelordistributed databases, \\vhichwe discussinChapter 22,thereare\nadditional choicestoconsider, such (laSwhether topartition arelation across\ndifferent sitesorwhether tostorecopiesofarelation a,trnultiple sites.\n20.1.3NeedforDatabase Thning\nAccurate, detailed workload infonnation 111Clybehardtocornebywhiledoing\ntheinitialdesignofthesysten1. Consequently, tuningadatabase afterithas\nbeendesigned anddeployed isilnportant---we HlllStrefinetheinitialdesignin\nthelightofactualusagepatterns toobtainthebestpossible perfonnance.\nThedistinction bet\\veen database designanddatabase tuningissoruewhat\narbitrary. Wecouldconsider thedesignprocesstobeoveronceaninitial\nconceptual sche1na isdesigned andasetofindexing andclustering decisions\nisnlade.Anysubsequent changes totheconceptual scherna ortheindexes,\nsay,wouldthenberegarded astuning. Alternatively, wecouldconsider sorne\nrefinernent oftheconceptual scheula(andphysical designdecisions afl'ected by\nthisrefinernent) tobepartofthephysical designprocess.\nvVh,erewedrawthelinebetween designand tuning isnotveryirnpoItant, and\nwesirnplydiscusstheissuesofin(lE:~xselection anddataba ..'3ctuningwithout\nregardtowhenthetuningiscarrier}out.\n20.2\n(;UIDEI.JINES FORINDEXSELECTION\nInconsidering \\vhichindexestocreate;webegin\\\\riththelistofqueries(includ\u00ad\ningqueriestha,ta.ppearaspaTtofupdateoperations). ()bviously, onlyrelations\naccessed bysorTle qu(~ryneedtobeconsidered ascandidates forindexing, and\nthechoiceofattributes toindexisguidedbytheconditions thatappearinthe\nWHEREclausesofthequeriesinthe\\vorkload. 1'hepresence ofsuitable indexes\ncansignifica.,ntly irnprove theevaluation planfor(1,query,EtS\\VesawinChapters\n8and12.", "688": "654 (;HAPTER20\n()neapproach toindexselection istoconsider theUlostirnportant queriesin\nturn,and,foreach,deterrnine \\vhichplantheoptiInizer \\vouldchoosegiven\ntheindexesc:urrently onourlistof(tobecrc(;tted) indexes. Then\\ve consider\n\\vhetherwe canaTriveatasubstantially betterplanbya,clding1110reindexes;if\nso.theseadditional indexesarecandidates forinclusion inourlistofindexes.\nIngeneral, rangeretrievals benefitfroIna13'-f-treeindex,andexact-IHatch.. ,-\nretrievals benefitfrornahashindex.Clustering benefits rangequeries, andit\nbenefits exact-rnatch queriesifseveraldataentriescontainthesaInekeyvalue.\nBeforeaddinganindextothelist,hovvever, \\velnustconsider theirnpactof\nhavingthisindexontheupda,tes inourworkload. As\\venotedearlier,although\nanindexcanspeedupthequerycornponent ofanupdate, allindexes onan\nupdated attribute---{)n anyattribute, inthecaseofinserts Cl.,nddeleteslnust\nbeupdated whenever thevalueoftheattribute ischanged. Therefore, we\nJ.nustsOlnetirnes consider thetrade-off ofslo\\ving sorneupdateoperations in\ntheworkload inordertospeedupsornequeries.\nClearly, choosing agoodsetofindexes foragivenworkload requires anun\u00ad\nderstanding oftheavailable indexing techniques, andoftheworkings ofthe\nqueryoptiruizer. Thefollowing guidelines forindexselection sunnnarize our\ndiscussion:\nWhether toIndex(Guideline 1):TheobviollS pointsareoftenthelnost\nirnportant. Donotbuildanindexunlesssornequeryincluding thequery\ncOlnponents ofupdates benefits froluit.Whenever possible, chooseindexes\nthatspeeduprIlorethanonequery.\nChoice ofSearchKey(Guideline 2):Attributes rnentioned HIa,WHERE\nclause<),reca,ndidates forindexing.\n11I'IAnexact-rnatchselection condition suggests that\\veconsider anirldexon\nt}leselected attributes, ideally, <:-},hashindex.\nIIj\\rangeselection condition suggests thatweconsider a13+-tree(OfISA1/1)\nindexontheselected attrilnltes. j\\B+treeindexis11S1U111ypreferaJ)le to\nanISA1/1index.A.nISA:NIirlclexrnayl)evvorthconsidering iftherelation is\ninfrequently updated, butweassurnethataB-t---treeindexis(lhvayschosen\noveranlSft.\\i\\,1index,forsirnplicity.\nMulti-Attribute Search:Keys(Guideline 3):Indexes\\vith\n Inllitipl(~-attributc\nsea,rchkeysslH)uldl)econsidered inthefollc)\\ving twositu<ltion.s:\nillj\\WHEREclauseincludes conditinns 011Inoret.han on(~attribute ofarela\u00ad\ntion.", "689": "&--.\")'\"')I,_\nIIITheyellilbleindex-only evaluation strategies (i.e.,accessing therelationcan\nbeavoided) forirnportCtnt queries. (Thissituation Gouldleadtoattributes\nbeinginthesCc:lrchkeyeveniftheydonotappearinWHEREclauses.)\nvVhencreating indexesonsearchkeyswit.hrnultiple attributes, ifrangequeries\naxeexpected, becarefultoordertheattributes inthesearchkeytoIna.tchthe\nquenes.\nWhether toCluster (Guideline 4):Atlllostoneindexonagivenrelation\ncanbeclustered, andclustering affectsperfonnance greatly; sothechoiceof\nclustered indexisiInportant.\nIIAsaruleoftlnunb,rangequeriesarelikelytobenefitthe1110StfroIllclus\u00ad\ntering.Ifseveralra,ngequeriesareposedonarelation, involving different\nsetsofattributes, consider theselectivity ofthequeriesandtheirrelative\nfrequency intheworkload whendeciding whichindexshouldbeclustered.\nIIIfanindexenables anindex-only evaluation strategy forthequeryitis\nintended tospeedup,theindexneednotbeclustered. (Clustering Inatters\nonlywhentheindexisusedtoretrievetuplesfr(nlltheunderlying relation.)\nIfashversusTreeIndex(Guideline 5):AB-\u00b7t-treeindexisusuallyprefer\u00ad\nablebecause itsupports rangequeriesaswellasequality queries.Ahashindex\nisbetterinthefollowing situations:\nIIi1Theindexisintended tosupport indexnestedloopsjoin;theindexed\nrelation istheinnerrelation, andthesearchkeyincludes thejoincolurllns.\nInthiscase,theslightilnproveIllent ofahashindexoveraB\u00b7+treefor\nequality self~ctions isrnagnified, because anequality selection isgenerated\nforeachtupleintheouterrelation..\nIIrrllcreisaveryiInportant equality query,andnorangequeries, involving\nthesea.rchkeyattributes.\nBalancing theC~ostofIndexMaintenance (Guideline 6):Afterdrawing\nupa~\\vishlist' ofindexestocreate,consider theirnpactofeachindexonthe\nupdates intl1cvvorkload.\n\u2022IfInaintainlng anindexsl()\\vsdo\\vn frc~quent updateoperations, consider\ndropping theindex.\nIII{eepillrnind, hOvv(~ver, thaJaddinganindexIllay'wellspeedupagiven\nupdateoperation. Forexanlplc, <111indexonenlployec~ IDscouldspeedup\nth(~operaJion ofincrea,'3ing thesalaryofagivenernployee (specified b:yID).", "690": "20.3CHAPTER.20\nBASICEXAMPLES OFINDEXSELECTION\nThefollawing examples illustrate hen\u00a5tochooseindexesduringdataba ..scdesign,\ncontinuing thediscussion frolnChctpter 8,\\vherewe focusedonindexselection\nforsingle-table queries. Theschernas usedintheexarnples arenotdescribed in\ndetail;ingeneral, theycontaintheattributes nalnedinthequeries. Additional\ninforlnation ispresented \"whennecessary.\nLetusbeginwithasilnplequery:\nSELECT E.enaIne 1D.rugI'\nFROM Enlployees E,DepartInents D\nWHERE D.dncune='Toy' ANDE.dno=D.dno\nTherelations rnentioned inthe,queryareEnlployees andDepartnlents, and\nbothconditions intheWHEREclauseinvolveequalities. Ourguidelines suggest\nthatweshouldbuildhashindexes ontheattributes involved. ItseeInsclear\nthatweshouldbuildahashindexonthednaTneattribute ofDepartInents. But\nconsider theequality E.dno=D.dno.Shouldwebuildanindex(hash,ofcoursf~)\nonthednoattribute ofDepartrnents orErnployees (orboth)?Intuitively, we\nwanttoretrieve Departments tuplesusingtheindexondnarnebecause few\ntuplesarelikelytosatisfytheequality selection .D.dnaTne= 'Toy'.1Foreach\nqualifying Departrnents tuple,wethenfindlnatching EInployees tuplesbyusing\nanindexonthednoattribute ofErnployees. So,weshouldbuildanindexonthe\ndnofieldofEn1ployees. (Notethatnothing isgainedbybuilding anadditional\nindexonthednofieldofDepartrnents becauseDepartnlents tuplesareretrieved\nusingthedna:rneindex.)\nOurchoiceofindexes wasguidedbythequeryevaluation planwe\\vanted\ntoutilize.Thisconsideration ofa,potential evaluation pla.nisconnnon while\nrnaking physical designdecisions. U\u00b7nderstanding queryoptirnization isvery\nusefulforphysical design. \"VVeshowthedesiredplal1forthisqueryinFigure\n20.1.\nAsavariantofthisquery,suppose thattheWHEREclauseisrnodified tobe\nWHEREJ).dnarne= 'Toy ~ANDE'.dno=D.dnoANDE'1.0,oge=25.Letusconsider al\u00ad\nternative evaluation plans.()negoodplanistoretrieve Departrnents tuples\nthatsatisfytheselection ondnarneandretrievernatching Ernployees tuplesby\nusinganindexonthednofield;theselection onageisthenappliedon-the-fly.\nTIc)\\vever, unliketheprevious variantofthisCjllcry,vvedonotreallyneedto\nhaveanindexonthednafieldofErnployees if\\vehaveanindex.onage.Inthis\n------_...... _._--\nlThisisonlyaheuristic.Ifdnarneisnotthekey,andwehavenostatistics toverifythiscla.inl.it\nispossible thatseveraltuplessatisfythiscondition.", "691": "Physical Databa8c De,signandTuning\nename\nIndexNestedLoops\ndno:::dno657\nIt\nOdname::::'Toy'\nDepartmentEmployee\nFigure 20.1ADesirable QueryEvaluation Plan\ncasewecanretrieveDepartrnents tuplesthatsatisfytheselection ondnarrte(by\nusingtheindexondname,asbefore), retrieveErnployees tuplesthatsatisfythe\nselection onagebyusingtheindexonage,andjointhesesetsoftuples.Since\nthesetsoftupleswejoinaresrnall,theyfitin111ernory andthejoinInethod is\nunirnportant. Thisplanislikelytobesornewhat poorerthanusinganindexon\ndno,butitisareasonable alternative. rrherefore, ifwehaveanindexonage\nalready (prolnpted bysorneotherqueryintheworkload), thisvariantofthe\nsarnplequerydoesnotjustifycreating anindexonthednofieldofErnployees.\nOurnextqueryinvolves arangeselection:\nSELECT\nFROM\nWHEREE.enan1e, I),dnarne\nElnployees E,Departrnents D\nB.salBETWEEN 10000AND20000\nANDE.hobby='Starups' ANDE.dno=D.dno\nT'hisqueryillustrates theuseoftheBETWEEN operator forexpreSSIng range\nselections. Itisequivalent tothecondition:\n10000::;E.salANDE.sal:S20000\nl~heuseofBETWEEN toexpressrarlgeconditions isreconunended; itlnakesit\ncc1.5ierforboththeuserandtheoptilnizer torecognize bothpartsoftherange\nselection.\nlleturning totheexarnple query,both(nonjoin) selections areontheErnployees\nrelation. Therefore, itisclearthataplaninwhichEluployees istheouter\nrelation andI)epartrnents istheinnerrelation isthebest,asintheprevious\nquery,and\\veshouldbuildahashindexonthednoattribute ofDepartlnents.\nButvvhichindexshouldvvebuildonErnployees? 1\\.13+treeindexon.thesal\nattribute wouldhelpwiththerangeselection, especially ifitisclustered. A", "692": "658 CHAPTER 20\nhashindexonthehobbyattribute \\\\Touldhelp\u00b7withtheequality selection. If\noneoftheseindexesisavailable, wecouldretrieve Ernployees tuplesusingthis\nindex,retrievernatching Departruents tuplesusingtheindexondno~aJldapply\nallrernaining selections andprojections on-the-fly. Ifbothindexesareavailable,\ntheoptirnizer wouldchoosetherno1'eselective indexforthegivenquery;thatis,\nit\\vollldconsider \\vhichselection (therangecondition onsalaryortheequality\nonhobby)ha\",,;fe\\verqualifying tuples.Ingeneral, whichindexisrnoreselective\ndepends onthedata.Ifthereareveryfewpeoplewithsalaries inthegiven\nrangeandrnanypeoplecollectstarnps, theB-t-treeindexisbest.Otherwise,\nthehashindexonhobbyisbest.\nIfthequeryconstants areknown(H,,\"inourexarnple) ~theselectivities canbe\nestiInated ifstatistics onthedataareavailable. Otherwise, asaruleofthurnb,\nanequality selection islikelytobernore selective, andarea.sonable decision\nwouldbetocreateahashindexonhobby.Sornethnes, thequeryconstants\narenotknowIl\",,\u00b7\u00b7----we rnightobtainaquerybyexpanding aqueryonaviewat\nrUIl-tirrle, orwernighthaveaqueryinDynalnic SQL,whichallowsconstants\ntobespecified aswild-card variables (e.g.,%X)andinstantiated atrun-tinle\n(seeSections 6.1.3and6.2).Inthiscase,ifthequeryisveryimportant, we\nlllightchoosetocreateaB+treeindexonsalandahashindexonhobbyand\nleavethechoicetobernadebytheoptirnizer atrun-tirrle.\n20.4CLUSrrERING ANDINDEXING\nClustered indexescanbeespecially iInportant whileaccessing theinnerrelation\ninanindexnestedloopsjoin.Tounderstand therelationship between clustered\nhldexesandjoins,letusrevisitourfirstexarnple:\nSELECT E.enanle, D.rngr\nFROM I;~Inployees E,I)epartrnentsD\nWHERE I).dnalne=uroy~ AND Ii~.clno:=I).dno\n\\Veconcluded thatagoodevaluation planistouseanindexondna:rnetore\u00ad\ntrieve DepartlnE:~nts tuplessatisfying thecondition ondnarneandtofind.rnatch\u00ad\ningErnployees tuplesusinganindexondna.Shouldtheseindexesbeclustenxl?\nG\u00b7ivenourasslunption thatthenUlnl.H~r oftuplessatisfying 1).dnarne:= 'Toy'is\nlikelytobesrnall,\\veshouldbuildanunclustered indexondnanu~. ()nthe\notherIH:ind,Ernployees istheinnerrelation inanindexnestedloopsjoinand\ndnaisnotElcandidate key.'fhissituation isastrongEtrgulnent thattheindex\nonthednofieldofErnployees 8ho111(1beclustered. Infact~bec;:Luse thejoin\nconsists ofrepeatedly posingequ.ality selections CH1thednofield oftheinner\nrelation, thistypeofquer,Yisastronger justification forrnaking tIleindexon\ndnoclustered than (1,sirnple sc~lecti(}n querysuchastheprevious selection on", "693": "Physical Database Designand7;l.lning 659\nhobby.(Ofcourso,factorssuchasselectivities andfrequency ofquerieshaveto\nbetakenintoaccount a\",swell.)\n'rhefollc)\\ving oxaluplc, verysirnilartotheprevious one,illustrates ho\\vclus\u00ad\nteredindexescanbeusedforsort-rnerge joins:\nSELECT E.enarne,D.rngr\nFROM Ernployees E,DepartlTlents D\nWHERE E.hobby='Starnps' ANDE.dno=D.dno\nThisquerydiffersfroIlltheprevious queryinthatthecondition E.hobby-='Starnps i\nreplaces D.dnarne=='Toy'.Basedonthet1.'3sl.unption thattherearefewernploy\u00ad\neesintheToydepartrnent, wechoseindexesthatwouldfacilitate anindexed\nnestedloopsjoinwithDepartlTlents astheouterrelation. Now,letussuppose\nthatrllanyernployees collectstamps. Inthiscase,ablocknestedloopsorsort\u00ad\nrnergejoinBlightbernoreefficient. Asort-rnerge joincantakeadvantage ofa\nclustered B+treeindexonthednoattribute inDepartrnents toretrievetuples\nandthereby avoidsortingDepartrnents. Notethatanunelustered indexisnot\nuseful----since alltuplesareretrieved, performing oneI/Opertupleislikelyto\nbeprohibitively expensive. IfthereisnoindexonthednofieldofErnployees,\nwecouldretrieveErnployees tuples(possibly usinganindexonhobby,especially\niftheindexisclustered), applytheselection E.hobby='Starnps'Oll-the-fly,and\nsortthequalifying tuplesondno.\nAsourdiscllssion hasindicated, whenweretrieve tuplesusinganindex,the\nirnpactofclustering depends onthernunber ofretrieved tuples,thatis,the\nnuruber oftuplesthatsatisf\\rtheselection conditions thatrnatchtheindex.\nAnunclustered indexisjusta.sgoodas(1,clustered indexforaselection that\nretrieves asingletuple(e.g.,anequality selection onacandidate key).Asthe\nllurnber ofretrieved tuplesincreases, theunclustered indexquicklybecoHlcs\nrnoreexpensive thane'venasequential scanoftheentirerelation. Although\nthesequential scanretrieves alltuples,eachpageisretrieved exactly onc(\u00b7~,\nwherea,s apagerIlayberetrieved asoftenasthernunber oftuplesitcontains\nifanunclustered indexisusee!'Ifblockedl/C)isperforrned (asisCOl1nnon),\ntherelativeadvantage ofsequential scanversusanllnclustered indexincreases\nfurther. (Blocked T/C)alsospeedsupaccessusingaclustered index,ofc(nus(~.)\n\\Veillustrate therelationship bet\\veen thenUlnb(~r ofr(~trieved tuples,vicv.red\nasapercentage ofthetotalnurnber oftuplesintherehttioIl, a,ndthecostof\nvariousaccessrnethods in.Figure20.2.vVeassurnethatthequeryisaselection\nonasinglerelation, forsirnplicity. (NotethatthisfigurereflectstheC()stof\nwritingouttheresult: other\\vise~ thelineforseqnential scanweHlldbeflat.)", "694": "660 CHAPTER 20\nCostUnclustered index\nRangeinwhich\nuncl'Ustered indexis\nbetterthansequential\nscanofentirerelation\no\nPercentage oftuplesretrieved\nFigure 20.2TheImpa.ctofClustering\n20.4.1Co-clustering TwoRelations100\nInourdescription ofatypicaldatabase systernarchitecture inChapter g,we\nexplained howarelation isstoredasafileofrecords. Although afileusually\ncontains onlytherecords ofSOIn8onerelation, SCHuesysteIlls allowrecords\nfrornInorethanonerelation tobestoredinasinglefile.rrhedatabase user\ncanrequestthattherecordsfroIlltworelations beinterleaved physically inthis\n111anne1'. ThisdatalayoutissornetiInes referred toasco-clustering thetwo\nrelations. Wenowdiscusswhenco-clustering canbebeneficial.\nAsanexarnple, consider tworelations withthefollowing schernas:\nParts(pid: integer, pnarne:string, cost:integer, 8upplierid: integer)\nAsserllbly\"(part'id: integer, cOT!.!,ponent~d: integer, quantity: integer)\nInthisschernathecO'nl,ponentid fieldofAssernbly isintended tobethepid\nofsornepartthatisusedasacornponent inassernbling thepartwithpid\nequaltopartidoTherefore, theAssernbly tablerepresents al:Nrelationship\nbetween partsandtheirsubparts; apartcanhavernany S11bparts,buteach\npartisthesubpart ofatrnostonepart.In,thePartstable,pidisthekey.For\ncOlnposite parts(thoseassernbled frorIlotherparts,a.sindicated bythecontents\nofAssclnb1y), thecostfieldistakentobethecostofa.sselubling thepartfrorn\nitssubparts.\nSuppose tha.tafrequent queryistofindthe(inllnediate) subparts ofallparts\nsuppliedbyagivensupplier:\nSELECT P.piel,.A.componentid\nFROMPql't'c''J\")AS''''(.'\u00b7\\I'Xll'')I't\" A.(L\" 11:::1..,\\,S..'\",r\"", "695": "Physical Database DesignatutTuning\nWHERE P.piel=A.partid ANDP.supplierid ='Acrne'6ljl\nAgoodevaluation planistoapplytheselection condition onPartsa,nelthen\nretrievernatching Asselnbly tuplesthrongh anindexonthepartidfield.Ideally,\ntheindexonpart'idshouldbeclustered. rrhisplanisrea,,'30rHlbly good.:However,\nifsuchselections areCOHU110n andwe\\.vanttooptirnize thornfurther, ,vecan\nco-cZ'usteT' thetvvotables.Inthisapproach, westorerecordsofthetwotables\ntogether, \\vitheachPartsrecordPfollc)\\ved byalltheAssernbly records ./1such\nthatP.pid=A.partid. Thisapproach improves onstoringthetworelations\nseparately andhaving a,clustered indexonpaTtidbecause itdoesnotneedan\nindexlookuptofindtheA.ssernbly recordsthatrnatchagivenPartsrecord.\nThus,foreachselection query,wesaveafew(typically twoorthree)index\npagel/Os.\nIfweareinterested infindingtheimrnediate subparts ofallparts(i.e.,the\npreceding querywithnoselection onsupplierid) ,creating aclustered indexon\npaTtidanddoinganindexnestedloopsjoinwithAssembly astheinnerrelation\noffersgoodperfonnance. Anevenbetterstrategy istocreateaclustered index\nonthepaTtidfieldofAssernbly andthepidfieldofParts,thendoasort-rnerge\njoin,usingtheindexes toretrieve tuplesinsortedorder.Thisstrategy is\ncomparable todoingthejoinusingaco-clustered organization, whichinvolves\njustonescanofthesetoftuples(ofPartsandAsselnbly, whicharestored\ntogether ininterleaved fashion).\nTherealbenefitofco-clustering isillustrated bythefollowing query:\nSELECT P.pid,A.componentid\nFROMPartsP,Assernbly A\nWHERE P.pid=A.partid ANDP.cost=10\nSuppose thatrnanypartshavecost=10.Thisqueryessentially a,rnonnts to\nacollection ofqueriesinwhichwearegivenaPartsrecordandwanttofind\nrnatching Assernbly records. IfwehaveanindexonthecostfieldofParts,we\ncanretrieve qualifying Partstuples. I~'oreachsuchtuple,wehaNetousethe\nindexonAssernbly tolocaterecordswiththegivenpid.rrheindexaccessfor\nA.ssernbly isavoidedifwehaveaco-clustered organization. (()fcourS8, vvestill\nrequire allindexonthecostattribute ofPartstuples.)\nSuchanoptirnization isespeciftlly irnportant ifwe,vanttotraverse several\nlevelsofthepart-subpart hierarchy..Forexcunplc, aCOnll110Il queryistofind\nthetotaJcostofapart,vvhichrequires ustorep(~atedly carryoutjoinsof\nPa,rts (lIlelAsscrnbly. Incidentally~ if'\\:V(~donotknowthenurnber oflevelsin\nthehierarchy illadVallCf\\ thenUlnber ofjoinsvariesandthequerycannotbe\n(~xpressed inS(~L.Thequerycanbeansvvered byernbedcling anS(~LstaterneIlt", "696": "662 (;IIAPTER 20\nforthejoininsicieaniterative hostlanguage prograrll. fluwtoexpressthequery\nisorthogonal toourlnainpointhere,whichisthatco-clustering isespecially\nbeneficial \\vhenthejoininquestion iscarriedoutveryfrequently (eitherbecause\nitarisesrepeatedly inanilnportant querysuchasfindingtotalcost,orbecause\nthejoinqueryitselfisaskedfrequently).\nTosUIlunarize co-clustering:\nIIIItcanspeedupjoins,inpa,rticular key\u00b7foreignkeyjoinscorresponding to\nl:Nrelationships.\nIIIAsequential scanofeitherrelation becornes slower.(Inourexalnple, since\nseveralAssenlbly tuplesarestoredinbet\\veen consecutive Partstuples,a\nscanofalll:>arts tuplesbecornes slowerthanifPartstuples\\verestoredsep\u00ad\narately. SiInilarly, asequential scanofallAssernbly tuplesisalsoslower.)\nIiAllinserts,deletes,andupdates thatalterrecordlengthsbecorne slower,\nthankstotheoverheads involved inruaintaining theclustering. (Wedo\nnotdiscusstheirnplernentation issuesinvolved inco-clustering.)\n20.5INDEXES THATENABLE\n INDEX--ONLY PLANS\nThissectionconsiders anU111berofqueriesforwhichwecanfindefficient plans\nthatavoidretrieving tuplesfrolnoneofthereferenced relations; instead, these\nplansscananassociated index(whichislikelytobelnuchsrnaller). Anindex\nthatisused(only)forindex-only scansdoesnothavetobeclustered because\ntuplesfronltheindexed relation arenotretrieved.\nThisqueryretrieves thelnanagers ofdepal'truents withatleastoneernployee:\nSELECTD .rugr\nFROM Departrnents I)~F~rnployees E\nWHERE I).dno=E.dno\n()bserve thatnoattributes ofErnployees areretahlcd. If\u00a5lChaveanindexon\nthednofieldofErnployees: tl1eoptirnization ofdoirlganindexnestedloopsjoin\nusinganindex-onl:y searlfortheinnerrelation isapplicable. C;iventhisvariant\nofthequer:y,thecorrect d(-~cision istobuildanuncIusteredindexontll(~dna\nfieldofElfll>loyees, ratherthaIlaclustered index.\nrrhenextquerytakesthisideaastepfurther:\nSELECT ]).rngr,E.eid\nFROM ])epartrnents I),Ernployees E\nWHERE D.dno=E.dno", "697": "&63\nIf\\vehaveanindexonthelinofieldof:Elnployees~we Ganuseittoretrieve\nEU.lployees tuplesduringthejoin(\\vithDepartrnents a\",~thealIterrelation),\nbutunlesstheindexisclustered, thisapproach isnotbeefficient. ()nthe\notherhand,suppose thatvvehaveaB+-treeindexon(dna,e'id).Now allthe\ninforrnation \\veneedaboutanErnployee,s tupleiscontained inthedataentry\nforthistupleintheindex.Wecanusetheindextofindthefirstdataentry\n\\vithagivenelno;alldataentries'withtheSeHnednoarestoredtogether inthe\nindex.(Notethataha'3hindexonthecOlnposite key(dna,eid)cannotbeused\ntolocateanentrywithjustagivendno!)\\\\Tecantherefore evaluate thisquery\nusinganindexnestedloopsjoinwithDepartlnents astheouterrelation and\nanindex-only scanoftheinnerrelation.\n20.6TOOLSTOASSISTININDEXSELEC\"fION\nTherUllnber ofpossible indexestoconsider building ispotentially verylarge:\nForeachrelation, wecanpotentially consider allpossible subsetsofattributes\nasanindexkey;wehavetodecideontheordering oftheattributes intheindex;\nandwealsohavetodecidewhichindexesshouldbeclustered andwhichun\u00ad\nclustered. Manylargeapplications---for exalnple enterprise resource planning\nsysterns~--\u00b7\u00b7create tensofthousands ofdifferent relations, andrnanualtuningof\nsuchalargeschelnaisadaunting endeavor.\nThedifficulty andirnportance oftheindexselection tc'kskrnotivated thedevel\u00ad\nopment oftoolsthathelpdatabase adrninistrators selectappropriate indexes\nforagivenworkload. Thefirstgeneration ofsuchindextuningwizards, or\nindexadvisors, wereseparate toolsoutsidethedatabase engine;theysug\u00ad\ngestedindexestobuild,givenaworkload ofSQLqueries. rfhernaindrawback\nofthesesysterns wasthattheyhadtoreplicate thedatabase queryoptirnizer's\ncostrnodelinthetuningtooltornakesurethattheoptilnizer wouldchoosethe\nsanlCqueryevaluation plansasthedesigntool.Sincequeryoptirnizers cha,nge\nfroInreleasetoreleaseofaconunercial databa.se systern, considerable effortwas\nneededtokeepthetuningtoolandthedatabase optirnizer synchronized. The\nrnostrecent g(~neration oftuningtoolsareintegrated \\viththedatabase engine\nandusethedatabase queryoptiluizer toestirnate th(~costofaworkload given\nasetofindexes, cl,voiding duplication ofthequeryoptirnizer's costrnodelinto\nanexternal tool.\n20.6.1Automatic IndexSelection\n\\{Vecallasetofindexesforagivendatabase scherna.anindexconfiguration.\n\\VeaSSlunethata,queryworkload isasetofqueriesoveradatabc'kse scherna\n'INhereeachqueryhasafrequency ofoccurrence assigned t.oit.(jivenadatabase\nschelnaanda,workload, thecostofanindexconfiguration istheexpected", "698": "664 CHAPTEI{ 2JJ\ncostofrunningthequeriesinthe'workload giventheindexconfiguration\ntakingthedifferent frequencies ofqueriesintheworkloa-d intoaccount. (jiven\nadatabase schclnaandaqueryworkload, wecanno\\vdefinetheproblel11 of\nautomatic indexselection asfindinganindexconfiguration \\vithnlinirnal\ncost.A.sinqueryoptinlization, inpractice ourgoaJistofindagoodindex\nconfiguration ratherthanthetrueoptirnal configuration.\n\\Vhyisautollultic indexselection ahardproblern? Letuscalculate thenUlnber\nofdifferent indexes\\vithcattributes, assurning thatthetablehc),snattributes.\nForthefirstattribute intheindex,therearenchoices, forthesecondattribute\nn~1,andthusfora,cattribute index,thereareoveralln\u00b7(n-1)...(n-'-c+1)=\n(,~!)'different indexespossible. Thetotalnurnber ofdifferent indexeswithupnc.\ntocattributes isc ,2:_!!-_..\"\n'i=l(n-1,).\nForatablewith10attributes, thereare10different one-attribute indexes, 90\ndifferent two-attribute indexes, and30240different five-attribute indexes. For\nacornplex workload involving hundreds oftables,thenurnberofpossible index\nconfigurations isclearlyverylarge.\nTheefficiency ofautornatic indexselection toolscanbeseparated intotwo\ncomponents: (1)thenurnberofcandidate indexconfigurations considered, and\n(2)thenurnberofoptimizer callsnecessary toevaluate thecostforaconfigura\u00ad\ntion.Notethatreducing thesearchspaceofcandidate indexesisanalogous to\nrestricting thesearchspaceofthequeryoptiInizer toleft-deep plans.Inlnany\ncases,theoptirnal planisnotleft-deep, butalllongallleft-deep plansthereis\nusuallyaplanwhosecostisclosetotheoptirnal plan.\nWecaneasilyreducethetiInetakenforautornatic indexselection byreducing\nthenUlnber ofcandidate indexconfigurations ,butthesrnallerthespaceof\nindex.configurations considered, thefartherawaythefinalindexconfiguration is\n[1'0111theoptirnalindexconfigllration. rrherefore, different indextuning\\vizards\nprunethesearchspacedifferently, forexarnple, byconsidering onl:yone-ortwo\u00ad\nattribute indexes.\n20.6.2HowDoIndexThningWizards Work?\nAllindextuning\\vizards s(~arch a,setofcandidate indexes foranindexcon\u00ad\nfiguration '''lithlowestcost.1holsdifferinthespa.ceofcandidate indexcon\u00ad\nfigurations theyconsider aJldhowtheysearchthisspace.\\Vedescribe one\nrepresentative algoritlun; existing toolsiInplernent 'variants ofthisalgorithrn,\nhuttheirirnplernentations havethesanIebasic structun~.", "699": "Physical Databa,se Designand11_ln'ing G65\nr-\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7..-\u00b7\u00b7--- ...----\u00b7\u00b7\u00b7\u00b7\u00b7 ..\u00b7.\u00b7\u00b7....\u00b7\u00b7.-~-\u00b7\u00b7 ..\"..--\u00b7-_................. .....~.--------l\nITheDB2IndexAdvisor. TheDB2IndexAdvisor isatoolforauto-I\nImaticindex\nrecon1nl~ndation givenaworkload ..The\nworkl?adis stored i~I\nthedataba~~e systell1 InatablecalledADVISE_WORKLOAD. ItISpopulated e1-I\nther(1)bySQLstatcrnents 1'1'0111theDB2dynanlic SQLstatelnent cache, .\nacacheforrecently executed SQLstatenlents, (2)withSQLstaternents\nfrol11packages\u00b7 ....--groups ofstatically cornpiled SQLstatenlents, or(3)with\nSQLstatelnents frolIlanonlinemonitor calledtheQueryPatroller. The\nDB2Advisor allowstheusertospecifythelnaximuill arnountofdiskspace\nforne\\vindexesandarnaxirrnul1 tiTneforthecornputation oftherecom\u00ad\nrnended indexconfiguration.\nTheDB2IndexAdvisor consists ofaprograrrl thatintelligently searches\nasubsetofindexconfigurations. Givenacandidate configuration, it\ncallesthequeryoptirnizer foreachqueryintheADVISE_WORKLOAD table\nfirstintheRECOMMEND_INDEXES rnode,wheretheopthnizer recommends\nasetofindexesandstoresthernintheADVISE_INDEXES table.Inthe\nEVALUATE_INDEXES mode,theoptimizer evaluates thebenefitoftheindex\nconfiguration foreachqueryintheADVISE-WORKLOAD table.Theoutputof\ntheindextuningstepisareSQLDDLstatenlents whoseexecution creates\ntherecomrnended indexes.\nGhe\n M~crosoft\n -~Q~~~~er -;~OO~~x\n;:nin;- Wiz~d. Microsoftl\n,pioneered theirnplell1entation ofatuningwizardintegrated withtheI\ndatabase queryoptiInizer. Thel\\1icrosoft TuningvVizardhasthreetuning I\nrnodestha.tperrnittheusertotradeoffrunning tiIneoftheanalysis and !\nnurnber ofcandidate indexconfigurations exarnined: fast,rned-itlm, andI\nthOTOUgh, withfasthavingthelo\\vestrunning tirneaJldthoTo'ugh exalnin\u00ad\ningtheh1rgestnUlnber ofconfigurations. rrofurtherreducetherunning I\ntiIne,thetoolhasasalnpling Inodeinwhichthetuningwizardrandoruly :1'\nsalllpics queriesfronltheinputworkload tospeedupanalysis. Otherpa\u00ad\nnuneters includethelnaxirnurn spaceallowedforthereeornmended indexes, !\nthe.rn~x.iInu~n nurnber ofattributes peri~ldexconsidered, a~dth:.tableson Ii\n\\Vl11C}~Indexescan.begenerated. The ~llcroso~'~' Index ~u.lung\\\\1Izardalso,I\nperunts tablescall,ng,\\vheretheusercanspecIfyanantIcIpated nurnberof;\nirecordsforthetablesinvolved intheworkload. ThisallowsuserstoplanI\nI..\n_f~:t~~_~~~th_of::~_~~abl~~:__.____. ~\"\"\"___\".._\"_.__~,.___\"..__..___.J", "700": "666 CHAPTER 20\nBeforewedescribe theindextuningalgoriUlIn, letusconsider theproblell1 of\nestiInating thecostofaconfiguration. Notethatitisnotfea...sibletoactu\u00ad\nallycreatethesetofindexesinacandidate configuration andthenoptirnize\nthequeryworkload giventhephysical indexconfiguration. Creation ofevena\nsinglecandidate configuration withseveralindexeslIlighttakehoursforlarge\ndatabases andputconsiderable loadonthedatabase systerIlitself.Sincewe\nvvanttoexauline alargenUlnberofpossible candidate configurations, thisap\u00ad\nproachisnotfeasible.\nTherefore indextuningalgorithrIls usually .sim,ulate theeffectofindexes in\nacandidate configuration (unlesssuchindexesalreadyexist).Suchwhat-if\nindexeslooktothequeryoptilIlizer likeanyotherindexandaretakeninto\naccount whencalculating thecostoftheworkload foragivenconfiguration,\nbutthecreation ofwhat-ifindexesdoesnotincurtheoverhead ofactualindex\ncreation. Commercial databa..'3e systelIls thatsupport indextuningwizards\nusingthedatabase queryoptirnizer havebeenextended withamodulethat\npermitsthecreation anddeletion ofwhat-ifindexeswiththenecessary statistics\nabouttheindexes(thatareusedwhenestirnating thecostofaqueryplan).\nWenowdescribe arepresentative indextuningalgorithm. Thealgorithm pro\u00ad\nceedsintwosteps,candidate indexselection andcor~figuration enumeration. In\nthefirststep,weselectasetofcandidate indexestoconsider duringthesecond\nstepasbuilding blocksforindexconfigurations. Letusdiscussthesetwosteps\ninInoredetail.\nCandidate IndexSelection\nWesawintheprevious sectionthatitisiInpossible toconsider everypossible\nindex,duetothehugenUluberofcandidate indexesavailable forlargerdataba.'3c\nschernas. ()neheuristic toprunethelargespaceofpossible indexesistofirst\ntuneeachqueryintheworkload independently andthenselecttheunionof\ntheindexesselected inthisfirststepasinputtothesecondstep.\n:F'oraquery,letusintroduce thenotionofanindexable attribute, whichisan\nattribute whoseappearance inanindexcouldchangethecostofthequery.An\nindexable attribute isanattribute on\\vhichtheWHERE-part ofthequeryh(4'3\nacondition (e.g.,anequality predicate) ortheattribute appearsinaGROUP BY\norORDER BYclauseoftheSC~Lquery.Anadmissible indexforaqueryisan\nindexthatcontains onlyindexable attributes inthequery.\nJIo\\vdoweselectcandidate indexesforanindividual query?()neapproach is\naba.sicellurnenttion ofallindexeswithuptokattributes. \\Vestart\\ivithaU\nindexable attributes assingleattribute candidate ind(~xes, thenaddallcorn-", "701": "[>hysical Database ]Jc8ignandT11ning\nbinations of twoindexable attributes &'3candidate indexes, andrepeatthis\nprocedure untilauser-defined sizethreshold k.'Thisprocedure isobviously\nveryexpensive a.,weaddoveralln+n\u00b7(n-1)+...+n\u00b7(n-1)...(n\u00b7-k+1)\ncandidate indexes, butitguarantees thatthebestindexwithuptokattributes\nisaIl10ngthecandidate indexes. Thereferences attheendofthischapter COIl\u00ad\ntainpointers tofaster(butlessexhaustive) heuristieal searchalgorithrns.\nEnumerating IndexConfigurations\nInthesecondphase,weusethecandidate indexestoenUInerate indexcon\u00ad\nfigurations. Asinthefirstphase,wecanexhaustively enurnerate allindex\nconfigurations uptosizek,thistimecornbining candidate indexes. Asinthe\nprevious phase,moresophisticated searchstrategies arepossiblethatcutdown\nthenumber ofconfigurations considered whilestillgenerating afinalconfigu\u00ad\nrationofhighquality(i.e.,lowexecution costforthefinalworkload).\n20.7OVERVIEW OFDATABASE TUNING\nAftertheinitialphaseofdataba.se design,actualuseofthedatabase provides\navaluable sourceofdetailed information thatcanbeusedtorefinetheinitial\ndesign.Manyoftheoriginala.ssulnptions abouttheexpected workload canbe\nreplaced byobserved usagepatterns; ingeneral, someoftheinitialworkload\nspecification isvalidated, andsomeofitturnsouttobewrong.Initialguesses\naboutthesizeofdatacanbereplaced withactualstatistics frornthesys\u00ad\nterncatalogs (although thisinforrnation keepschanging asthesysternevolves).\nCarefulrnonitoring ofqueriescanrevealunexpected problerlls; foreXaJnple, the\noptirnizer lllaynotbeusingSOIneindexes &'3intended toproduce goodplans.\nContinued database tuningisirnportant togetthebestpossible perforrnance.\nInthissection,weintroduce threekindsoftuning: tun'ing 'inde1;(~8J tun'ingthe\nconceptual scherna, andtuningqueT'ies. OUfdiscussion ofindexselection also\nappliestoindextuningdecisions. Conceptual schcrnaandquerytuningare\ndiscussed furtherinSections 20.8and20.9.\n20.7.1ThningIndexes\nTheinitialchoiceofindexesrnayberefinedforoneofseveralreasons. 'fhe\nsirnplest reeL-sonisthattheobserved \\vorkload revealsthatscnnequeriesand\nupdates considered irnportant intheinitial\\vorkload specification arenotvery\nfrequent. 1'heobserved \\vorkload rnaya1so identi~y SCHnene\\vqueriesandup\u00ad\ndatesthataTeinlportant.The initialchoiceofindexeshastoberevievved in\nlightofthisnewinforrnation. Scnneoftheoriginalin,dexesrnaybedropped and", "702": "668 CHAPTER 20\nnewonesadded.Therea.solling involved issiInilartothatusedintheinitial\ndesign.\nItInayalsobediscovered thattheoptimizer inagivensystenlisnotfinding\nsomeoftheplansthatitvvc1\"sexpected to.Forexaluple, consider thefollowing\nquery,which\\vediscussed earlier:\nSELECT D.Ingr\nFROM Ernployees E,Departulents D\nWHERE\n D.dname=='Toy' ANDE.dno=D.dno\nAgoodplanherewouldbetouseanindexondnarnetoretrieveDepartnlents\ntupleswithdnarne= 'Toy'andtouseanindexonthednofieldofEmployees as\ntheinnerrelation, usinganindex-only scan.Anticipating thattheoptirnizer\nwouldfindsuchaplan,wernighthavecreatedanunclustered indexonthedno\nfieldofErnployees.\nNowsuppose queriesofthisfonntakeanunexpectedly longtimetoexecute. We\ncanasktoseetheplanproduced bytheoptiInizer. (Mostcommercial systerIls\nprovideasimplecOillrnand todothis.)Iftheplanindicates thatanindex-only\nscanisnotbeingused,butthatEmployees tuplesarebeingretrieved, wehave\ntorethinkourinitialchoiceofindex,giventhisrevelation aboutoursystem's\n(unfortunate) lhnitations. Analternative toconsider herewouldbetodropthe\nunclustered indexonthednofieldofEUlployees andreplaceitwithaclustered\nindex.\nSOUleotherCOllllnon lirnitations ofoptiInizers arethattheydonothandle\nselections involving stringexpressions, arithrnetic, ornullvalueseffectively.\nWediscussthesepointsfurtherwhenweconsider querytuninginSection20.9.\nInaddition tore-exarnining ourchoiceofindexes, itpaystoperiodically reor\u00ad\nganizeS(Hneindexes. Forexample, astaticindex,such <he.:;anISAl\\Il index~Illay\nhavedeveloped longoverflow chains.Dropping theindexandrebuilding it..\u00b7\u00b7\u00b7_\u00b7-if\nfeasible, giventheinterrupted accesstotheindexed relation----\u00b7\u00b7can substantially\nirnprove accesstiTHesthrough thisindex.Evenforadynarnic structure such\nasa13+tree,iftheimplernentation doesnotrnergepagesondeletes, space\noccupancy candecrea\"se considerably inSaInesituations. Thisinturnrnakes\nthesizeoftheindex(in pages) largerthannecessary, andcouldincrease the\nheightandtherefore theaccesstilne.Ilebuilding theindexshouldbeconsid\u00ad\nered.Extensive updates toaclustered indexrnightalsoleadtooverflow pages\nbeingallocated, therebydecreasing thedegreeofclustering. Again,rehuilding\ntheindexInaybevvorthwhile.", "703": "Physical [Jatubasc Design(l,'ndTnnin,g 669@\nl?inally, notethatthequeryoptinlizer reliesonstatistics rnaintained inthe\nSystCIllcatalogs. Thesestatistics areupdated only\"til/henaspecialutilitypro\u00ad\ngranlisrun;besuretoruntheutilityfrequently enoughtokeepthestatistics\nreasonably current.\n20.7.2ThningtheConceptual Schema\nInthecourseofdatab&'Se design,\\vernayrealizethatourcurrent choiceof\nrelation SChelllaS doesnotenableusrneetourperforrnance objectives forthe\ngivenvvorkload withany(feasible) setofphysical designchoices. Ifso,\\ve\n11layhavetoredesign ourconceptual scherna(andre-exarnine physical design\ndecisions affected bythechanges wernake).\nWernayrealizethataredesign isnecessary duringtheinitialdesignprocessor\nlater,afterthesysternhasbeeninuseforawhile.Onceadatabase hasbeen\ndesigned andpopulated withtuples,changing theconceptual schernarequires\nasignificant effortintenrlSofrnapping thecontents oftherelations affected.\nNonetheless, itrnaybenecessary torevisetheconceptual schernainlightof\nexperience withthesystern. (Suchchanges totheschemaofanoperational\nsysterllaresometirnes referred toasschema evolution.) \\lVenowconsider\ntheissuesinvolved inconceptual scherna (re)design frornthepointofvie\\vof\nperforrnance.\nrrhernainpointtounderstand isthatOUTchoiceofconcepb.lal 8chernashould\nbegv-idedbyacons'ideration ofthequerflc8and'updates inour'workload\" in\naddition totheissuesofredundancy thatrllotivate nonnalization (whichwe\ndiscussed inChapter 19).Severaloptionsrnustbeconsidered whiletuningthe\nconceptual scherna:\nIlIII\\VelIlaydecidetosettlefora:3NFdesigninsteadofaBCN'Fdesign.\nIIIIftherearetwowaystodecornpose agivenschelnainto3NForBCNF\\our\nchoiceshouldbeguidedbytheworkload.\nIIISornetilnes wernightdecidetofurtherdecornpose arelationthatisalready\n.BC1NF'-'rn:./1 .\nIIIInothersituations, wernightdenorrnalizc. rrhat is~\\vernightchooseto\nreplaceacOllection ofrelations obtained byadec(nnposition frornalarger\nrelation,viththeoriginal(larger)relation, eventhoughitsuffersfrorn80rne\nredundancy problerl1s. Alternatively, wernightchoosetoH.delsornefields\ntocertainrelations tospeedupSCHneirnportant queries, evenifthisleads\ntoaredundant storctgeof80rneinfonnation (anei,consequently, ascherna\nthatisinneither:3NFnorBCNF).", "704": "670 C~IIAPTER 20\nIIThisdiscussion ofnonnalization hasconcentrated onthetechnique ofde\u00ad\nCO'f17JJo8'ition, 'whicharnounts toverticalpartitioning ofarelation. Another\ntechnique toconsider ishorizontal ],Jartit'ion/ing ofarelation, 'which\\vould\nleadtohavingtworelations v'lithidentical schernas. Notethatwearenot\ntalkingaboutphysically partitioning thetuplesofasinglerelation; rather,\n\\ve\\vanttocreatetwodistinctrelations (possibly \\vithdifferent constraints\nandindexesoneach).\nIncidentally, when\\veredesign theconceptual scherna, especially ifwearetun\u00ad\ninganexisting database sche1na, itis\\vorthconsidering whether V'leshould\ncreatevic\\vstornaskthesechanges fronlusersforWhOllltheoriginalschcrllais\n]norenatural. \\\\lediscussthechoicesinvolved intuningtheconceptual scherna\ninSection20.8.\n20.7.3ThningQueriesandViews\nIfwenoticethataqueryisrunning rnuchslowerthanweexpected~ wehaveto\nexarnine thequerycarefully tofindtheproblern. SaInerewriting ofthequery,\nperhaps inconjunction withSCHneindextuning,canoftenfixtheproblern. Sirn\u00ad\nilartuningrnaybecalledforifqueriesonSaIneviewrunslowerthanexpected.\nWedonotdiscussviewtuningseparately; justthinkofqueriesonviewsas\nqueriesintheirownright(afterall,queriesonviewsareexpanded toaccount\nfortheviewdefinition beforebeingoptirnized) andconsider hcnvtotunethern.\nvVhentuningaquery,thefirstthingtoverifyisthatthesysternusestheplan\nyouexpectittouse.Perhaps thesystelllisnotfindingthebestplanfora\nvarietyofrcclsons. SorneCOIllrllon situations nothandled efficiently byrnany\noptinlizers follow:\n..Aselection condition involving nullvalues.\nl1liSelection conditions involving aritlunetic orstringexpressions orconcli\u00ad\ntionsusingtheORconnective. Forexarnple, ifwehaveaconclitionE. age\n=2*]).ageintheWHEREclause,theoptirnizer rnaycorrectly utilizean\navailable indexonE.agebutfailtoutilizeanavailclble indexon1).age.\nR,eplacing thecondition by1;;.age/2=1).age\\vouldreversethesituation.\nIIi1IInability torecognize asophisticated plansuchasanindex-only scanfor\nanaggregation queryinvolving aGROUPBYclause.()fcourse,virtually no\noptirnizer looksforplansoutsidetheplanspacedescribed inChapters 12\nand15,suchcL.snonleft-deep jointrees.Soagood urHl(~rstanding of\u00b7what\nanoptirnizer typically doesisirnportant. Inaddition, thernorea:wareyou\nareofagivensysteur's strengths arrdlirnitations, thebetteroffY01Jarc.", "705": "Physical IJataba.se Dcs'ignand'Tun'ing 611\nIftheoptirnizer isnotSIl1artenoughtofindthebestpla.n(usingaccessInethods\nandevaluation straJegies supported bytheDB.wIS), SOHlesystern.s allo\\vusers\ntoguidethechoiceofaplanbyproviding hintstotheopthnizer; forexalnplc,\nusersrnightbeabletoforcetheuseofaparticular indexorchoosethejoin\norderandjoinrnethod. Auserwhowishestoguideoptirnization inthisInanner\nshouldhaveathorough understanding ofbothoptirnizatioll andthecapabilities\nofthegivenDBNIS.WediscussquerytuningfurtherinSection20.9.\n20.8CHOICES INTUNING THECONCEPTUAL\nSCHEMA\nWenovvillustrate thechoicesinvolved intuningtheconceptual scheIuathrough\nseveralexarnples usingthefollowing schelnas:\nContracts( cid:i~.~eger, s'Upplierid: integer, projectid: integer,\ndeptid:integer, partid:integer, qty:integer, value:real)\nDepartments (did:integer, budget:real,annualreport: varchar)\nParts(pid: integer, cost:integer)\nProjects(jid: integer, rngr:char(20))\n_.- -\nSuppliers (sid:_..~.:nteger, address: char(50))\nFor brevity, weoftenusethecornrnon convention ofdenoting attributes by\nasinglecharacter anddenoting relation schernas byasequence ofcharacters.\nConsider theschernafortherelationContracts, whic.hwedenoteasCSJDPQV,\nwitheachletterdenoting anattribute. TheIneaning ofatupleinthisrelation\nisthatthecontract withcidCisanagreernent thatsupplier S(withsidequal\ntosupplierid) willsupply (~iternsofpartP(withpidequaltopartid)toproject\nJ(withj'idequaltoprojectid) a.'3sociated withdepartrnent D(withdeptidequal\ntodid),andthatthevalueVofthiscontract isequaltovalue.2\nTherearetwoknownintegrity constraints withrespecttoContracts. Aproject\npurdHk')cs agivenpartusingasinglecontract; thus,therecannnot betwo\ndistinctcontracts inwhichthesaIneprojectbuysthesaInepart.Thisconstraint\nisrepresented usingth.eFI).II)----;.(.1.Also,adepartrnent purchases atrnost\nonepartfrolllanygivensupplier. Thisconstraint isrepresented llsingtheI?D\n8D----;.I).Inaddition, ofcourse,thecontract IDCisakey.l\"1herneaning\noftheotherrelations shouldbeobvious, andwedonotdescribe thcrnfurther\nbecause wefocusontheContra.cts rela.tion.\n2Ifthisschema seemscornplicated, notethatreal-life situations oftencallforconsiderably more\ncornplex schema.,,':>!", "706": "672 CHAPTER 4()\n20.8.1SettlingforaWeakerNormalForm\nConsider theContracts relation. Shouldwedeconlpose itintosHlallerrelations?\nLetusseewhatnorrnalfannitisin.'1'hecandidate keysforthisrelationareC\nand.1P.(Cisgiventobeakey~andtIPfunctionally deterrnines C.)Theonly\nnonkeydependency is3D-+P,andPisapri'rneattribute because itispart\nofcandidate keyJP.rrhus,therelation isnotinBC:NF\u00b7\u00b7\u00b7because thereisa\nnonkeydependency- ..\u00b7..\u00b7....butitisin3NF.\nByusingthedependency 8D-tPtoguidethedecornposition, wegetthe\nt\"vosclH~rnas SDPandCSJDQV. Thisdecornposition islossless~butitisnot\ndependency-preserving. lfo\\vever, byaddingtherelation schelneCJP,weob\u00ad\ntainalossiess-join, dependency-preserving decoruposition intoBCNF.Using\ntheguideline thatsuchadecorllposition intoBCNFisgood,wemightdecide\ntoreplaceContracts bythreerelations withschernas CJP,SDP,andCSJDQV.\nHowever, suppose thatthefollowing queryisveryfrequently asked:Findthe\nnurnberofcopiesQofpartPorderedincontract C.'rhisqueryrequires ajoinof\nthedecornposed relations CJPandCSJDQV (orSDPandCSJDQV), wherea..'3\nitcanbeanswered directly usingtherelation Contracts. Theaddedcostfor\nthisquerycouldpersuade ustosettlefora3NFdesignandnotdecompose\nContracts further.\n20.8.2Denormalization\nTherea.'3onsrTIotivating ustosettlefort1weakernorrnalforInlIlcl;Yleadusto\ntakeanevenrnoreextrerne step:deliberately introduce SOlllCredundancy. As\nanexarnple, consider theContracts relation, 'whichisin3NF.Now,suppose\nthatafrequent queryistocheckthatthevalueofacontract islessthan\nthebudgetofthecontracting departruent. \\Velllightdecidetoaddabudget\nfieldBtoContracts. SincedidisakeyforDepartrnents ,\\venowhavethe\ndependency D-+BinContracts, \\vhich InCt1IlSContracts isnotin3NFany\nr11orc. Nonethelf~ss, vVf~rnightchoosetostayvviththisdesignifthernotivating\nqueryissufficiently irnportant. Suchadecision isclearlysubjective andCaInes\natthecostofsignificant redundancy.\n20.8.3ChoiceofDecomposition\nConsider theContracts relation again.Severalchoicesarepossible fordealing\nwiththeredundancy inthisrelation:\nIIiI\\VecanleaveC\\)ntracts asitis::uldacceptthercchu1danc yrassociaJed \\\\\"ith\nitsbeingin:3N:Fratllerthan.BCNF.", "707": "Ph:lp\"ical Database Desiignand ~r1tning 673if\n\u2022\\VeInightdecidethatwewanttoavoidtheanolIlalies resulting froInthisre\u00ad\ndundancy bydeeornposing Contracts intoBC;NFusingoneofthefollowing\nruethods:\n\u00b70__\\Vehavealossless-join decornposition intoPartlnfovvith attributes\nSDPandContractlnfo \\vithattributes CSJDQ\\l. Asnotedpreviously,\nthisdecornposition isnotdependency-preserving, andtornakeitso\n\\vouldrequireustoaddathirdrelation CJP:\\vhosesalepurpose isto\nallowustocheekthedependency JP-+C.\n-\\VecouldchoosetoreplaceContracts byjustPartlnfo andContract\u00ad\nInfoeventhoughthisdecornposition isnotdependency-preserving.\nR,eplacing Contracts byjustPartlnfo andContractlnfo doesnotprevent us\nfrorllenforcing theconstraint JP-+C;itonlymakesthisn10reexpensive. We\ncouldcreateanassertion inSQL-92tocheckthisconstraint:\nCREATE ASSERTION checkDep\nCHECK (NOTEXISTS\n(SELECT*\nFROM Partlnfo PI,Contractlnfo Cl\nWHERE PI.supplierid==CI. suppl'ierid\nANDPI.deptid==CI. deptid\nGROUPBYC1.projectid, PI.partid\nHAVING COUNT(cid)>1 ) )\nThisassertion isexpensive toevaluate because itinvolves ajoinfollowed bya\nsort(todothegrouping). Incornparison, thesysterllcancheckthatJPisa\nprirnary keyfortableCJPbyrnaintaining anindexonJP.Thisdifference in\nintf~grity-checking costistherl1otivation fordependency-preservation. Onthe\notherhand,ifupdates areinfrequent, thisincrcclE;ed costIIlaybeacceptable;\ntherefore, wernightchoosenottornaintain thetableC.JP(andquitelikely,an\nindexalli~;).\nAsanother exarnple illustrating decornposition choices, consider theContracts\nrelation again,Etudsuppose thatwealsohavetheintegrity constraint thata\ndepartrnent usesagivensupplier foratrnostoneofitsprojects: SPCJ --7V.\nProceeding (1\"Sbefore,wehavealossless-join decornposition ofContracts into\nSDPandCSJDQV.\n Alternatively:\\ve couldbeginbyusingthedependency\n8PQ----+VtoguideourdecornpositioIl: andreplaceContracts withSPQVand\nCS.JI)P(~. vVecanthendec(Hnpose CSJI)P(~, guidedby51D-+P,toobtain\nSDPandCS.JD(~.\n\\Venowhavetwoalternative lossless-join decornpositions ofContracts into\nBC:N}\"\\neitherofwhichisdependency-preserving. 'fhefirstalternative isto", "708": "674 (~HAPTER 20\n&\nreplace Contra~~ts\\vith therelations SDPandCS.JDC~V. Thesecondalternative\nistoreplaceit\\vithSPQV,SDP,and(]SJD(~. Theaddition ofCJPHU1kesthe\nseconddeC0111positioll (butnotthefirst)dependency-preserving. Again,the\ncostoflnaintaining thethreerelations CJP, SP(~V,andCSJD(~ (versusjust\nCSJDQV) Illayleadustochoosethefirstalternative. Inthisca..se,enforcing\nthegivenFDsbecornes Inoreexpensive. vVeIllightconsider Ilotenforcing thern,\nbutwethenriskaviolation oftheintegrity ofourdata.\n20.8.4VerticalPartitioning ofBCNFRelations\nSuppose thatwehavedecidedtodecornpose Contracts intoSDPandCSJDQV.\nThesescheruas areinBCNF,andthereisno reason todecornpose thernfurther\nfromanonl1alization standpoint. However, supposethatthefollowing queries\nareveryfrequent:\n\u2022Findthecontracts heldbysupplier S.\n\u2022Findthecontracts placedbydepartrnent D.\nThesequeriesrnightleadustodecompose CSJDQV intoCS,CD,andCJQV.\nThedecornposition islossless, ofcourse,andthetwoil11portant queriescanbe\nanswered byexarnining 111uchsluallerrelations. Another reasontoconsider such\nadec()l11position isconcurrency controlhotspots.IfthesequeriesareCOIllIllon,\nandthernostCOIlunon updates involvechanging thequantity ofproducts (and\nthevalue)involved incontracts, thedecoulposition inlproves perforrnance by\nreducing lockcontention. Exclusive locksarenowsetrnostlyontheCJ(~V\ntable,andreadsonCSandCDdonotconflictwiththeselocks.\nWhenever wedecornpose arelation, wehavetoconsider whichqueriesthe\ndecolnposition rnight adverse~y affect,especially iftheonlyrnotivation forthe\ndecoInposition isiUlproved perforrnance. \"Forexaruplc, ifanother illlportant\nqueryistofindthetotalvalueofcontracts heldbyasupplier, itwouldinvolve\najoinofthedecornposed relations CSandC.J(~V.Inthissituation, wernight\ndecideagainstthedecolnposition.\n20.8.5Horizontal Decomposition\nThusfar,wehaveessentially considered howtoreplacearelation v'lithacol\u00ad\nlectionofverticaldecorupositions. Sornetilnes, itis\\vorthconsidering whethf~r\ntorepla.cearelation witht\\VOrelations thathavethesa.Dleattributes asthe\noriginal relation, ea..ehcontainin.g asubsf'.tofthf~tuplesintb.eoriginal. Intu\u00ad\nitively,thistechnique isuseful\\vhendifferent subsetsoftuplesarequeriedin\nverydistinct ways.", "709": "675\nl'\nForexanlple, different ruleslnaygovernlargecontracts, \\vhicharedefined a~\"\ncontracts withvaluesgreaterthan10,000.(Perhaps, suchcontra<cts havetobe\nawarded through abidding process.) Thisconstraint couldleadtoanUlnber\nofqueriesinwhichContracts tuplesareselected usingacondition oftheforIII\nvalue>10,000.On8waytoapproach thissituation istobuildaclustered\nB+treeindex OIlthevaluefieldofContracts. Alternatively, wecouldreplace\nContracts witht\\VOrelations calledLargeContracts andSrnallContracts, with\ntheobvious 11leaning. Ifthisqueryistheonlylllotivation fortheindex,hori\u00ad\nzontaldecornposition offersallthebenefits oftheindexwithouttheoverhead of\nindexmaintenance. Thisalternative isespecially attractive ifotherirnportant\nqueriesonContracts alsorequireclustered indexes(onfieldsotherthanval'ue).\nIfwereplaceContracts bytworelations LargeContracts andSrnallContracts,\nwecouldr1l8skthischangebydefining aviewcalledContracts:\nCREATE VIEWContracts (cid,supplierid, projectid, deptid,partid,qty,value)\nAS((SELECT*\nFROM LargeContracts)\nUNION\n(SELECT*\nFROM SmallContracts))\nHowever, anyquerythatdealssolelywithLargeContracts shouldbeexpressed\ndirectly onLargeContracts andnotontheview.Expressing thequeryonthe\nviewContracts withtheselection condition value> 10,000isequivalent to\nexpressing thequeryonLargeContracts butlessefficient. Thispointisquite\ngeneral: Although wecanrllth\"kchanges totheconceptual scherllabyadding\nviewdefinitions, usersconcerned aboutperforrnance havetobeawareofthe\nchange.\nAsanother exanlple, ifContracts hadanadditional fieldyeaTandqueriestyp\u00ad\nicallydealtwiththecontracts insorneoneyear,wernightchoosetopa,rtition\nContracts byyear.()fcourse,queriesthatinvolved contracts fron1rnorethan\noneyearrnightrequireustoposequeriesagainsteachofthedecolllposed rela\u00ad\ntions.\n20.9CHOICES INTUNING QUERIES ANDVIEWS\nT'hefirststepintuningaqueryistounderstand theplanusedbytheI)B1-18\ntoevaluate thequery.8ysten1s usuallyprovide sornefacilityforidentifying\ntheplanusedtoevaluate aquery.()nce\\ve understand theplanselected by\nthesystelIl, wecanconsider howtoirnprove perfornu:Ulce. \"\\Vecanconsider a\ndifferent choiceofilHlexesorperhaps co-clustering tworelations forjoinqueries,", "710": "676 C~HAPTER 20\nguidedbyourunderstanding oftheoldplanandabetterphtnthatwewant\ntheDBlVIS touse.ThedetaHsaresinlilartotheinitialdesignprocess.\nOnepoint'worth rnakingisthatbeforecreating ne\"vindexesweshouldconsider\n\\vhether rewriting thequeryachieves acceptable resultswithexisting indexes.\nForexample, consider thefoll()\\ving querywithanORconnective:\nSELECT E.dno\nFROM Ernployees E\nWHERE E.hobby='Stalnps' ORE.age==10\nIf\\vehaveindexesonbothhobbyandage,wecanusetheseindexestoretrieve\nthenecessary tuples,butanoptiInizer ruightfailtorecognize thisopportunity.\nTheoptinlizer rnightviewtheconditions intheWHEREclause &1;)awhole &'3\nnotrnatching eitherindex,doasequential scanofErnployees, andapplythe\nselections on-the-fly. Suppose werewritethequery ElStheunionoftwoqueries,\nonewiththeclauseWHEREE.hobby= 'Starnps\" andtheotherwiththeclause\nWHEREE.agc==10. Noweachqueryisanswered efficiently withtheaidofthe\nindexesonhobbyandage.\nWeshouldalsoconsider rewriting thequerytoavoidsorneexpensive operations.\nforexalnple, including DISTINCT intheSELECT clauseleadstoduplicate elirn\u00ad\nination, whichcanbecostly.rrhus,weshouldornitDISTINCT whenever pos\u00ad\nsible.Forexalnple, foraqueryonasinglerelation, wecanornitDISTINCT\nwhenever eitherofthefollowing conditions holds:\nIIWedonotcareaboutthepresence ofduplicates.\nIIrrheattributes lllentioned intheSELECT clauseincludeacandidate keyfor\ntherelation.\nSOlnetirnes aquery\\vithGROUP BYandHAVING canbereplaced byaquery\nwithout theseclauses,thereby eliminating c1sortoperation. Forext1rnplc, COIl\u00ad\nsider:\nSELECT\nFROM\nGROUPBY\nHAVINGMIN(E.age)\nErnployees E\nE.dno\nE'..}.\"'1()'>;.(no=:::,,~\nThisquer:yisequivalent to\nSELECT\nFROM\nWHEREMIN(E.age)\nErl1ployees E\nE.dno=102", "711": "PhU,'.fical Database ]Jesignand1'lf,n'ing 677\nt\nCornplex queriesareoften\\vritteninsteps,usingaternporary relation. \\\\le\ncanusuallyre\\vritesuchquerieswithoutthetClnporary relation tornakethcrn\nrunfaster.Consider thefollowing queryforcornputi.ng theaverage salaryof\ndepartrnents rnanaged byRobinson:\nSELECT\nINTO\nFROM\nWHERE*\nTernp\nErnployeesE, Depa:rtruents D\nE.dno==D.dno ANDD.rngrnanle='Robinson'\nSELECT T.dno,AVG(T.sal)\nFROM T'clnpT\nGROUPBYT.dno\nThisquerycanberewritten a.s\nSELECT\nFROM\nWHERE\nGROUPBYE.dno,AVG(E.sal)\nElnployees E,Departlnents D\nE.dno==D.dno ANDD.rngrnarne=='llobinson'\nE.dno\nTherewritten querydoesnot111aterialize theinterrnediate relation,Ternpandis\ntherefore likelytobefaster.Infact,theoptimizer mayevenfindaveryefficient\nindex-only planthatneverretrieves Ernployees tuplesifthereisacornposite\nB+\u00b7treeindexon(d'no,sal).Thisexanlple illustrates ageneralobservation: By\nTewriting queriestoavoid'Unnecessary temporaries, wenotonlyavoidcreating\ntheternporary relations, wealsoopenuprnoreopt'im,ization possibilit'ies forthe\noptim,izer toel;plore.\nInSCHnesituations, ho\\vever, iftheoptirnizer isunabletofindagoodplanfora\ncornplex query(typically anestedquerywithcorrelation), itrnaybeworthwhile\ntore\\vritethequeryusingtenlporary relations toguidetheoptirnizer toward\nagoodplan.\nInfact,nestedqueriesareaconunon sourceofinefficiency because luanyopti\u00ad\nrnizersdealpoorlywiththeIn,asdiscussed inSection15.5.v'Vllenever possible,\nitisbettertol:e\\vriteanestedquery\\vithout nestingandacorrelated query\nwithout correlation. Asalreadynotfxl,agoodreforrIlulation ofthequeryrnay\nrequireustointroduce ne\\v,ternporary relations, andtechniques todososys\u00ad\ntenlatically (ideally, tobedonebytheoptirnizer) havebeen\\videlystudied.\n()ftentllough,itispossible tore\\vritenestedqueries,vithout nestingortheuse\nofternpora,ry relations, a\"sillustrated inSection15.5.", "712": "678 CHAPTER $20\n20.10IMPACT OFCONCURRENCY\nInasystemwithIIlaIlYconcurrent users,severaladditional pointsIllUStbe\nconsidered. Transactions obtain locksonthepagestheya,ccess,andother\ntransactions Ina)'beblocked waitingforlocksonobjectstheywishtoaccess.\nvVeobserved inSection1().5thatblocking delays111ustbeIniniInized forgood\nperforrnance andidentified twospecificwaystoreduceblocking:\nIIR,educing thetilnethattransactions holdlocks.\nIIR,edllcing hotspots.\nWenowdiscusstechniques forachieving thesegoals.\n20.10.1 Reducing LockDurations\nDelayLockRequests: Tunetransactions bywritingtolocalprograrn vari\u00ad\nablesanddeferring changes tothedatabase untiltheendofthetransaction.\nThisdelaystheacquisition ofthecorresponding locksandreducesthetimethe\nlocksareheld.\nMakeTransactions Faster: Thesooneratransaction c01npletes, thesooner\nitslocksarereleased. Wehavealready discussed severalwaystospeedup\nqueriesandupdates (e.g.,tUllillgindexes, rewriting queries). Inaddition, a\ncarefulpartitioning ofthetuplesinarelationandits&'3sociated indexesacross\nacollection ofdiskscansignificantly irnprove concurrent access. :B-'orexarnple,\nifwehavetherelation ononediskandanindexonanother, accesses tothe\nindexcanproceed without interfering withaccesses totherelation, atlea\"\"tat\nthelevelofdiskreads.\nReplace LongTransactions byShortOnes:SometiInes, justtooruuch\nworkisdonewithinatransaction, andittakesalongtirneandholdslocksa\nlongtirne.Consider rewriting thetransaction astwoorInore sInall(-~rtrans\u00ad\nactions; holdablecursors(seeSection6.1.2)canbehelpfulindoingthis.The\nadvantage isthateachnewtransaction cornpletes quickerandreleases locks\nsooner. ~rhedisadvantage isthattheoriginal listofoperations isnolongerex\u00ad\necuted atolni(~ally, andtheapplication codeIllustdealwithsituations inwhich\noneorrnoreofthenewtransactions fail.\nBuildaWarehouse: CC)lnplex queriescanholdsharedlocksforalongtirne.\n()ften, howev('~r, thesequeriesinvolvestatistical analysis ofbusiness trendsand\nitisa,cceptable torunthelnonacopyoftheda.tathatisalittleoutofdate.rrhis\nledtothepopularity ofdata?LJaTeho1LBCS, whicharedataba.'3cs thatcornplcnlcnt", "713": "}Jhys'ical Database DesignandTnn'ing 61~\ntheoperational datab&\"c byrnaintaining acopyofdataUSE:xlincornplex queries\n(Chapter 25).H~unning thesequeriesagainstthe\\varehouse relievestheburden\noflong-running queriesfrolntheoperational datal:H1.'3c.\nConsider aLowerIsolation Level:Inrnanysituations, suchasqueriesgen\u00ad\neratingaggregate infonnation orstatistical sununaries, wecanusealo\\verSQL\nisolation levelsuchasREPEATABLE READorREADCOMMITTED (Section 16.6).\nLo\\verisolation levelsincurlowerlockingoverheads, a,neltheapplication pro\u00ad\ngrannner rllustnUlkegooddesigntrade-offs.\n20.10.2 Reducing HotSpots\nDelayOperations onHotSpots:Wealreadydiscussed thevalueofdelaying\nlockrequests. Obviously, thisisespecially irnportant forrequests involving\nfrequently usedobjects.\nOptimize AccessPatterns: ThepatteTnofupdates toarelationcanalsobe\nsignificant. Forexanlple, iftuplesareinserted intotheErnployees relation in\neidorderandwehaveaB+treeindexoneid,eachinsertgoestothelastleaf\npageoftheB+tree.ThisleadstohotspotsalongthepathfroIntheroottothe\nrightrnost leafpage.Suchconsiderations nlayleadustochooseahashindex\noveraB+-treeindexortoindexonadifferent field.Notethatthispatternof\naccessleadstopoorperforrnance forISAMindexesaswell,sincethelastleaf\npagebeCOlIles ahotspot.rrhisisnotaproblcln forhashindexesbecause the\nhashing processrandornizes thebucketintowhicharecordisinserted.\nPartition Operations onHotSpots: Consider adataentrytransaction\nthatappends newrecordstoafile(e.g.,insertsintoatablestoredasaheap\nfile).Instead ofappending recordsone-per-transaction andobtaining alock\nonthehhstpageforeachrecord,wecanreplacethetransaction byseveral\nothertransactions, eachofwhichwritesrecordstoalocalfileandperiodically\nappends abatchofrecordstothernainfile.Whilewedornoreworkoverall,\nthisreducesthelockcontention onthelastpageoftheoriginal file.\n_Asafurtherillustration ofpartitioning, suppose \"\\vetrackthenU111berofre(~ords\ninserted inacounter. Insteadofupdating thiscounteronceperrecord,thepre\u00ad\ncedingapproad,l resultsinupdating severalcounters andperiodically updating\ntheHULincounter. rrhisideacanIJeaclapt(~d tornanyusesofcounters, \\vith\nvaryingdegreesofeffort.ForexaInple, consider acounterthattrackstheIlurn\u00ad\nberofreservations, withtherulethatanc\\vreservation isallowed onl~yifthe\ncounterisbelo\"va,rnaxiullun value.vVecanreplacethisbythreecounters, each\n\\vithone-third theorigina11naxirIlurn threshold, andthreetransactions thatuse\nthesecounters ratherthantheoriginal. \\\\leobtaingreaterconcurrency, but", "714": "680 (;HAPTERQO\nhavetodealwiththecc1..58whereoneofthecounters isatthe111axirnum value\nbutSOHleothercounter canstillbeincrcrnented. 1~hus,thepriceofgreater\nconcurrency isincreased cornplexity inthelogicoftheapplication code.\nChoiceofIndex: Ifarelation isupdated frequently, B+treeindexes can\nbecolneaconcurrency controlbottleneck, becauseallaccesses throughtheindex\nHUlstgothrough theroot.Thus,therootandindexpagesjustbelowitcan\nbec()lne hotspots.IftheDBMSusesspecialized lockingprotocols fortree\nindexes, andinparticular, setsfinc-granularity locks,thisproblenl isgreatly\nalleviated. l\\Ilanycurrentsysteuls usesuchtechniques.\nNonetheless, thisconsideration lllayleadustochooseanISA~1indexinSOllIe\nsituations. Because theindexlevelsofanISAMindexarestatic,\\veneednot\nobtainlocksonthesepages;onlytheleafpagesneedtobelocked.AnISAl\\!l\nindexrnaybepreferable toaB\u00b7+treeindex,forexalllple, iffrequent updates\noccurbutweexpecttherelativedistribution ofrecordsandthenUlnber (and\nsize)ofrecordswithagivenrangeofsearchkeyvaluestostayapproxirnately\nthesaIne.InthiscasetheISAMindexoffersalowerlockingoverhead (and\nreduced contention forlocks),andthedistribution ofrecordsissuchthatfew\noverflow pagesarecreated.\nI-Iashedindexesdonotcreatesuchaconcurrency bottleneck, unlessthedata\ndistribution isveryskewedandlnanydataitenlSareconcentrated inafew\nbuckets. Inthisca..'SC,thedirectory entriesforthesebuckets canbeccnneahot\nspot.\n20.11CASESTUDY: THEINTERNET SHOP\nRevisiting ourrunning casestudy,I)BDudes considers theexpected workload\nfortheB(~N1)00kstore. rrheownerofthebookstore expectsrnostofhisCllS\u00ad\ntornerstosearchforbooksbyISBNnUluber beforeplacinganorder.Placing\nanorderinvolves inserting onerecordintothe()rderstableandinserting one\norlllorerecordsintotheOrderlists relation. Ifasufficient nurnberofbooksis\navaihtble, a,shiprnent isprepared andavaluefortheship.Jlale intheOrderlists\nrelation isset.Inaddition, theavailable quantities ofbooksinstockchanges\nallthetirne,sinceordersareplacedthat;decrease thequantity available and\nnewbooksarrivefrornsuppliers andincrease thequantity available.\nTheDBDudes tearnbeginsbyconsidering searches forbooksbyISBN'.Since\nisbn,isakey~(l,nequality queryonisbnreturnsatrnostonerecord.rrhereforc,\ntospeedupqueries frolllCllstolllers wholookforbooks\"withagivenISBN,\nI)BIJudes decidestobuildanunclustered hashindexonL\"bn.", "715": "]:>hysical jJatabase IJesign,andTuning 681\nNext,itconsiders updates tobookquantities. Tbupdatetheqtll_iTLstock value\nforabook,weIllUStfirstsearchforthebookbyISBN;theindexon'isbnspeeds\nthisup.Sincetheqty_irLstock valueforabookisupdated quitefrequently,\nDBDudes alsoconsiders partitioning theBooksrelation vertically intothefo1\u00ad\n1c)\\vingtworelations:\nBooks(~ty( isbn,qty)\nBookH,(~st( 'isbn,title,author\"price,yeQ.T_IHlblished)\nUnfortunately, thisverticalpartitioning slowsdo\\vnanotherverypopularquery:\nEquality searchonISBNtoretrieve allinfonnation aboutabookno\\vrequires\najoinbetween BooksQty andBooksH,est. SoDBDudes decidesnottovertically\npartition Books.\nDBDudcs thinksitislikelythatcustonlers \"villalsowanttosearchforbooksby\ntitleandbyauthor,anddecidestoaddunclustered hashindexesontitleand\nauthor-these indexesareinexpensive tornaintain because thesetofbooksis\nrarelychanged eventhoughthequantity instockforabookchanges often.\nNext,DBDudes considers theCustorners relation. Acustorner isfirstidenti\u00ad\nfiedbytheuniquecustorner identifaction nurnber. SothernostCOlnrnon queries\nonCustorners areequality queriesinvolving thecustolner identification nurn\u00ad\nber,andDBDudes decid(~stobuildaclustered ha..'3hindexoncidtoachieve\nmaxirnum speedforthisquery.\nl\\!Ioving ontotheOrdersrelation, DBDudes seesthatitisinvolved intwo\nqueries: insertion ofnewordersandretrieval ofexisting orders.Bothqueries\ninvolvetheordcrrl/urn attribute assearchkeyandsoDBDudes decidestohuild\nanindexonit.Whattypeofindexshouldthis be~\"\"\u00b7\"a13+treeorahashindex?\nSinceordernurnbers areassigned sequentially andcorrespond totheorderdate,\nsortingbyonleT\"n'lun effectively sortsbyorderdateaswell.SoDBDudes decides\ntobuildaclustered B-t-treeindex OIlonlernurn. A.lthough theoperational\nrequirernents rncntioned untilno\\vfavorneithera13+treenorahashindex,\nB&N\\vill probably wanttornonitor dailya,ctivities andtheclustered 13+tree\nisabetterchoiceforsuchrangequeries. ()fcourse,this1118ansthatretrieving\nallordersforagivencustorner could beexpensive forcustolllers withInallY\norders,sinceclustering byo'(ylerntlTn precludes clustering byotherattributes,\nSllChascicio\nl'he()rderlists rela,tioninvolves lnostlyinsertions, vvithanoccfLsionaJ updateof\nashiprnent dateoraquerytolistallcOlnponents ofagivenorder.IfOrderlists\niskeptsortedonoT'dcrnvxn, allinsertions areappends attheendoftherelation\nandthusverJrefficient. Aclustered 13+treeindexonoT'dernuTn rnaintains this\nsortorderandalsospeedsupretrieval ofaUiternsforagivenorder.lc)update", "716": "682 CHAPTER~O\nashiprnent date,weneedtosearchforatuplebyoT(le1~rrnmj andisbn.The\nindexonordeT'n'Urn helpshereaswell.Although anindexon(ardern:u,rn, 'isbn)\nwouldbebetterforthispurpose, insertions wouldnotbeasefficient a..,,\\vith\nanindexonjustoTdeT7rurn; DBDudes therefore decidestoindex()rderlists on\njustoTCiern7lrn.\n20.11.1 TuningtheDatabase\nSeveralrnonthsafterthelaunchoftheB&Nsite,DBDudes iscalledinandtold\nthatcustorner enquiries aboutpending ordersarebeingprocessed veryslowly.\nB&Nhasbecorne verysuccessful, andtheOrdersandOrderlists tableshave\ngrownhuge.\nl'hinking furtheraboutthedesign,DBDudesrealizesthattherearetwotypesof\norders:completed orders,forwhichallbookshavealreadyshipped, andpartially\nco'mpleted order'S,forwhichsornebooksareyettobeshipped. l\\IlostcustorIler\nrequests tolookupanorderinvolvepartially corIlpleted orders,whicharea\nsInallfraction ofallorders.DBDudes therefore decidestohorizontally partition\nboththeOrderstableandtheOrderlists tablebyordernu'Tn. Thisresultsin\nfournewrelations: NewOrders, OldOrders, NewOrderlists, andOldOrderlists.\nAnorderanditscornponents arealwaysinexactlyonepairofrelations\u00b7\u00b7\u00b7\u00b7\u00b7 ..\u00b7--and\nwecandeterrIline whichpair,oldornew,byasinlplecheckonordernurn-----\"and\nqueriesinvolving thatordercanalwaysbeevaluated usingonlytherelevant\nrelations. SCHIlequeriesarenowslower,suchasthoseaskingforallofacus\u00ad\ntoruer's orders,sincetheyrequireustosearchtwosetsofrelations. lIowever,\nthesequeriesareinfrequent andtheirperforrnance isacceptable.\n20.12DBMSBENCHMARKING\n~rhusfar,weconsidered ho\\vtoirnprove thedesignofadatabase toobtainbet\u00ad\nterperforrnance. 1\\Sthedatabase grows,however; theunderlying IJB1tlSrnay\nnolongerbeabletoprovideadequate perforrnance, evenwiththebestpossi\u00ad\nbledesign,and\\vehavetoconsider upgrading oursystcrn, typically bybuying\nfasterharchva,re andadditional rnernory. WeIIlayalsoconsider rnigrating our\ndatabase to(1,newDBIVIS.\n\\\\Thenevaluating IJBl'vlSproducts, perforrnal1ce isaniUlportant consideration.\nADBIVIS isacornplex pieceofsofb,va,rc, anddifferent vendors rnaytarget\ntheirsysterns to\\vardcliff'erent 1I1Etrketsegrnents byputting rnoreeffortinto\noptirnizirlg certa,inpartsofthesysternorchoosing different systerndesigns.\nForexc:unple, sornesystcrIls aredesigned toruncornplex queriesefficiently,\nwhileothersaredesigned torunInanysirnpletransactions persecond. \\iVithin", "717": "Physical Database Des'ignandTlln'ing 683\neachcategory ofsystcrIls, therearelnanycornpeting products. Toassistusers\ninchoosing aDBi'vISthatis'wellsuitedtotheirneeds,severalperformance\nbenchmarks havebeendeveloped. Theseincludebenchrnarks forInea.'Hlring\ntheperforlnance ofacertainclassofapplications (e.g.,theTPCbenclnnarks)\nandbenchrnarks forrnecl,.c:;uring howwellaDBIVlSperfOrII1S variousoperations\n(e.g.,the\\Visconsin benchrnark).\nBenchnuuks shouldbeportable, easytounderstand, andscalenaturally to\nlargerproblenl instances. 'rheyshouldII1eaSUre peakperformance (e.g.,trans\u00ad\nactionspersecond,orips)&swellaspTice/perforrnance ratios(e.g.,$/tps)for\ntypicalworkloads inagivenapplication donlain. TheTransaction Processing\nCouncil (TPC)wascreatedtodefinebenchlnarks fortransaction processing\nanddatabase systerns. Otherwell-known benchlnarks havebeenproposed by\nacadelnic researchers andindustry organizations. Benchrnarks thatarepro\u00ad\nprietary toagivenvendorarenotveryusefulforcornparing different systerns\n(although theyrnaybeusefulindeterrnining howwellagivensysternwould\nhandleaparticular workload).\n20.12.1 Well-Known DBMSBenchmarks\nOnline 'Transaction Processing Benchmarks: TheTPC-AandTPC-B\nbenchrnarks constitute thestandard definitions oftheipsand$/tpsmeasures.\nTPC-Arneasures theperfonnance andpriceofacomputer network inaddition\ntotheDBMS,whereas thE~TPC-Bbenclnnark considers theDBMSbyitself.\nThesebencln11arks involveasirnpletransaction thatupdates threedatarecords,\nfrolIlthreedifferent tables,andappends arecordtoafourthtable.A11urnber\nofdetails(e.g.,transaction arrivaldistribution, interconnect rnethod, systern\nproperties) arerigorously specified, ensuring thatresultsfordifferent systenls\ncanberneaningfully cOI11pared. TheT'PC-C benchrna,rk isal110recornplex\nsuiteoftransactional ta.,,'3ksthanTPC-AandTPC-B. Itrnodelsawaxehouse\nthattracksiternssupplied tocustorners andinvolves fivetypesoftransrtctions.\nEachTPC-Ctransaction isrnuchrIloreexpensive thana1'PC-AorTPC-B\ntransaction, a,nelTPC-Cexercises arnuch,videI'rangeofsysterncapabilities,\nsuchasuseofsecondary indexesandtransaction aborts.Itha,,'3Inoreorless\ncOlnpletely replaced 'I'PC-AandrrpC-Basthestandard transaction processing\nbencillnark.\nQueryBenchmarks: '1'he\\Visconsin l)cnchrnark is\\videlyusedfor1neasnr\u00ad\ningtheperforrnance ofsirnplerelational queries. ]'heSet(~ueI'Ybenclunark\nHleasures theperforrnance ofEtsuiteofrJlorecornplex queries,andthe.AS:{A.P\nl)enchrnark rneaBures theperfonnance of(1,Inixed ~Torkloa,d oftransactions1re\u00ad\nlatiol1(l] queries, (lndutilityfUllctions. 'TherrpC-I) benchn.lark isasuiteof\ncornplex S(~I.Jqueriesintended toberepresentative ofthe(Incision-support ap-", "718": "684 CHAPTER 20\nplication dCHuain. 'fhe()LAP(]ouneil alsodeveloped abenehlnark forcornplex\ndecision-support queries, including sor11equeriesthatcannotbeexpressed eas\u00ad\nilyinSQL;thisisintended tornea..'3uresysterIls foronlinea'nalyt'ic ]JTocessing\n(OLAP),\\vhieh wediscussin(~hapter 25,ratherthantraditional S(~Lsys\u00ad\nterns.TheSequoia 2000benchrnark isdesigned tocornpare DBNISsupport for\ngeographic inforrnation systerns.\nObject-Database Benchmarks: 'The001and007benclunarks rneasure\ntheperforrnance ofobject-oriented database systelns. 'rheBuckybenclunark\nrneasures theperforrnance ofobject-relational database systcrns. (Wediscuss\nobject-database systelns inChapter 23.)\n20.12.2 UsingaBenchmark\nBenchrnarks shouldbeusedwithagoodunderstanding ofwhattheyarede\u00ad\nsignedtornea8ure andtheapplication environrnent in\\vhichaDBMSistobe\nused.\\Vhenyouusebenchrnarks toguideyourchoiceofaDBMS, keepthe\nfollowing guidelines inrnind:\nIIHowMeaningful isaGivenBenchmark? Benchrnarks thattryto\ndistillperforrnance intoasinglenunlbercanbeoverlysirnplistic. ADBMS\nisacOlnplex pieceofsoftware usedinavarietyofapplications. Agood\nbenchlnark shouldhaveasuiteoftasksthatarecarefully chosentocovera\nparticular application dornainandtestDBJ\\lISfeatures irnportant forthat\nd01nain.\nIIHowWellDoesaBenchrnark Reflect YourWorkload? Consider\nyourexpected workload andcorupare itwiththebenchrnark. C;ive11101'8\n\\veighttotheperfonnance ofthosel)enchrnark tasks(i.e.,queriesandup\u00ad\ndates)thataresiInilartoirnportant tasksinyourworkload. Alsoconsider\nhowbenclunark nurnbers arernect..sured. Forexarnple, elapsedtirneforin\u00ad\ndividual queriesrnightbernisleading ifconsidered inarnultiuser setting:\nAsysternrnayhavehigherelapsedtirr18sbecause ofslo\\verl/C).Ona1nul\u00ad\ntiuserworkloa,d, givensufficient disksforparallell/C),suchasysternlnight\nolltperfofrn <1SY8t8111'withaleJ\\verelapsedtirne.\nIICreate YourOwnBenchmark: Vendors oftentweaktheirsysterns\ninadhocwaystoobtctingoodnurnbers onirnportant benchrnctrks. fro\ncounter this,createyourownbenc1unark byrnodi(ying standard bench\u00ad\nrnarksslightly orbyreplacing theta,'3k8inf),standard benchrnark \\vith\nsiInilar tct..sl<:sfrarnyourworkload.", "719": "Phys'ical Database DesignandT1uni'ng\n20.13REVIEW QUESTIONS\nAllS\\VerS totherevie\\vquestions canbefoundinthelistedsections.685\nIIvVhataTethecornponents ofa\\vorkload description? (Section 20.1.1)\nII\\Vhatdecisions needtobernadeduringphysical design?(Section 20.1.2)\nIIDescribe sixhigh-level guidelines forindexselection. (Section 20.2)\nII\\\\Thenshould\\vecreateclustered indexes? (Section 20.4)\n..Whatisco-clustering, andwhenshouldvveuseit?(Section 20.4.1)\nIIvVhatisanindex-only plan,andhowdowecreateindexesforindex-only\nplans?(Section 20.5)\nII\\rVhyisautomatic indextuningahardproblern? Giveanexarnple. (Sec\u00ad\ntion20.6.1)\nIIGiveanexarnple ofonealgorithrn forautonlatic indextuning.(Section\n20.6.2)\nIIWhyisdatabase tuningirnportant? (Section 20.7)\nIIHowdowetuneindexes, theconceptual scheula, andqueriesandviews?\n(Sections 20.7.1to20.7.3)\nIIWhatareourchoicesintuningtheconceptual scherna? Whatarethefol\u00ad\nlowingtechniques andwhenshould\\veapplythern:settling foraweaker\nnorrnalforrn,denorrnalization, andhorizontal andvertiacal decornposi\u00ad\ntions.(Section 20.8)\n11vVhatchoicesdo\\vehaveintuningqueriesandvie\\vs?(Section 20.9)\nII\\Vhatistheirnpactoflocking 011databa ..seperforluance? I-Iowcanwe\nreducelockcontention andhotspots?(Section 20.10)\nII1II\\Vhy dO\\~lehavestandaTdized database benclllnarks, and\\vhatconunon\nInetricsareusedtoevaluate datalH:t..'Se systelns? Can;youdescribe afew\npopular database benchrnarks? (Section 20.12)\nEXERCISES\nExercise 20.1Consider thefollowing BCNFschcrna foraportion ofasirnplecorporate\ndatabase (typeinfonnation isnotrelevant tothisquestion andisornitted):\nErnp(e'iq,enarne,addl',sal,age,yT8,deptid)\nDept(did, dnarru~;flooT,[nalget)", "720": "686\nSuppose youknowthatthefollowing queriesarethesixrIlC>\"'itCOUUIlcm queriesinthe\\vorkload\nforthiscorporation andthatallsixareroughly equivalent infrequency andinlportance:\nIIListtheirCIHUn(~,andaddressofeUlployees inauser-specified agerange.\nIIListtheid,naUIe,andaddress ofcrnployees vv'howorkinthedepartHwnt \\vithallser-\nspecified departInent narne.\nIIListtheidandaddress ofelnployees withauser-specified eluployeenanle.\nIIListtheoverallaverage salaryforernployees.\nIIListtheaverage salaryforeInployees ofeachage;thatis,foreachageinthedatal)(1se,\nlisttheageandthecorresponding average salary.\nIIListallthedepartrnent infonnation, ordered bydepartrnent floornurnbers.\n1.Giventhisinfonnation, andassuIning thatthesequeriesarelnoreiluportant thanany\nupdates, designaphysical schernaforthecorporate database thatwillgivegoodperfor\u00ad\nrnancefortheexpected workload. Inparticular, decidewhichattributes willbeindexed\nandwhether eachindexwillbeaclustered indexoranunclustered index.Assuuw that\n13+treeindexesaretheonlyindextypesupported bytheDBMSandthatbothsingle\u00ad\nandnnrltiple-attribute keysarepernlitted. Specify yOllrphysical designbyidentifying\ntheattributes yourecornnlCnd indexing onviaclustered orunclustered 13+trees.\n2.Redesign thephysical schelnaassuIning thatthesetofiInportant queriesischanged to\nbethefollowing:\nIIIListtheidandaddress ofenlployees withauser-specified ernployee narne.\nIIListtheoverallrnaxinHun salaryforeruployees.\nIIIListtheaverage salaryforernployees bydepartnlent; thatis,foreachdeptidvalue,\nlisttherlcpt'idvalueandtheaverage salaryofernployees inthatdepartrnent.\n..ListtheSlunofthebudgets ofalldepartrnents byfloor;thatis,foreachfloor,list\nthefloorandthesum.\nIIAssuInethatthisworkload istobetunedwithanautornatic indextuningwizard.\nOutlinethernainstepsintheexecution oftheindextuningalgorithrn andtheset\nofcandidate configurations thatwouldbeconsidered.\nExercise 20.2Consider thefollo\\ving BCNF'relational scherna foraportionofauniversit.y\ndatabase (typeinfonnation isnotrelevant tothisquestion andisornitted):\nProf(ssno, pnamc,office,age,8ex:,specialt:y. dept-did)\nDept(did,drw:rnc, budget, T//wlLTTI,ajoT8, cha'lT...ssno)\nSuppose youkno\\vthatthefolknving queries (I,rcthefivernostconnnon queriesintheworkloa,d\nforthisuniversity andthatallfivean~roughly equivalent infrequency ::ludiInportance:\n-List then<un~~s, <lges,andofficesofpn)fessors of(1usc~r-specified sex(rnaleorfernale)\nwhohaveallser\"specified resean:h specialty (e.g.,TeC'lLT8i'ue qtLer7JfJTOco3.'ring). Assurne\nthattheuniversity hEtSadiversesetoffacultyrnernbers, rnaking itveryunCOlnmon for\nInorethanafe\\\\!professors tohavethesarne r(~search specialty.\nIIIiListalltitedepartrnent information fordepartrnents ''lithprofessors ina.user-specified\n<lgerange.\nIlListthe<lepartlnent i<l,dep<lrtrnent BaIne,andchaiq)erscmnarne fordepcutrnents ,viti!\nauser-specified nurnber ofmajors.", "721": "Physical Databa,se De.,'rignandT!zlTLing\n..IJistthelowestbudgetforadepartInent intheuniversity.\n..Listalltheinfornultion aboutprofessors \\vhoaredepartlnent chairpersons.f>&7\n'Thesequeriesoccurrunch1norefrequently thanupdates, soyoushouldbuildwhatever in\u00ad\ndexesyouneedtospeedupthesequeries. Ho\\\\'ever, youshouldnotbuildanyunnecessary\nindexes, asupdates willoccur(andwouldbesloweddownbyunnecessary indexes). (jiven\nthisinformation, designaphysical schc1na fortheuniversity database thatwillgivegoodper\u00ad\nfonnance fortheexpected workload. Inparticular, decidewhichattributes shouldbeindexed\nand'whether eachindexshouldbeaclustered indexoranunclustered index.Assulne that\nbothB\u00b7+treesandhashedindexes aresupported bytheDBlVISandthatbothsingle-and\nlImltiple-attribute indexsearchkeysareperrnitted.\n1.Specifyyourphysical designbyidentifying theattributes yourecomlnend indexing on,\nindicating whether eachindexshouldbeclustered orunclustered andwhether itshould\nbeaB+treeorahashedindex.\n2.Assurnethatthisworkload istobetunedwithanautornatic indextuningwizard. Outline\nthernainstepsinthealgorithrn andthesetofcandidate configurations considered.\n3.Redesign thephysical schema, assurning thatthesetofirnportant queriesischanged to\nbethefollowing:\nIIIListthenUlnber ofdifferent specialties covered byprofessors ineachdepartment,\nbydepartment.\nIII,Findthedepartrnent withthefewestrnajors.\nIIFindtheyoungest professor whoisadepartment chairperson.\nExercise 20.3Consider thefollowing BCNFrelational schmna foraportion ofacornpany\ndatabase (typeinforrnation isnotrelevant tothisquestion andisOInitted):\nProject(pno,p'l'o}_narne. pro}_bascdept, ]YT'o}_'mgT, topic,budget)\n:rvianagerC!.Itl..d, rngT.\"narne, rngr...dept,salary,age,sex:)\nNotethateachproject isbasedinsornecleprtrtrnent, eachmanager ise1Ylployed insome\ndepartIllEmt, andthelTu.tnager ofaproject neednotbee1nployed inthesarnedepartrnent\n(inwhichtheproject isba'Sed). Suppose youknowthatthefollowing queriesarethefive\nmostCOHUllon queriesintheworkload forthisuniversity andaJlfiveareroughly equivalent\ninfrequency andi1\"nportance:\nII1IIListtheIH1IlIeS,ages,andsalariesoflnanagers ofauser-specified sex(rnaleorfeluale)\nworking inagivendepartment. Youcanassurnethat,whiletherearernanydeparhnents,\neachdepartInent contains veryfe\\vprojectIlHlnagers.\niIIIIlljstthenarnesof(illprojects withlnanagers whoseagesarem auser-specified range\n(e.g.,younger than:30).\nIii!lListthena\"rnesofalldepartrnents suchthatarnanager IIIthisdeparhnent manages a\nprojectbasedinthisdepartment.\nmI..listthenan1Coftheproject\\'viththel()\\vestbudget.\nI11IIIListthenarrIeS (Jfallmanagers intheSaITICdepartment asagivenproject.\nrI'hesequeriesoccurnIllchInorefrequently thanupdates, soyoushouldbuild\\vhatever in\u00ad\ndexesyouneedtospeedupthesequeries. 110weve1', youshouldnotbuildanyunnecessaT.Y\ninclexes, <.lSupdates \\'lilloccur(a\"nd\\vouldbeslmveddownbyurmccessary indexes). Given", "722": "688\nthisinfonnatioll, designaphysicaJ schelna fortheconlpany database thatwingivegoodper\u00ad\nformance fortheexpected \\vorkload. Inparticular lclc'Ci<lewhichattributes shouldbeindexed\nandwhether eachindexshouldbeaclustered indexoranunclustered index.Assuillethat\nbothB+treesandhashedindexesaresupported bytheDBrvlS, andthatbothsingle-and\nIlluitiple-attribute indexkeysareperruitted.\n1.Specifyyourphysical designbyidentifying theattributes yourecOlIlrIlend indexing on,\nindicating whether eachindexshouldbeclustered orunclustered and\\vhether itshould\nbeaB+treeorahashedindex.\n2.Assunlethatthisworkload istobetunedwithanautornatic indextuningwizard. Outline\nthelnainstepsinthealgorithrn andthesetofcandidate configurations considered.\n3.Redesign thephysical schenu'tassulning thesetofilnportant queriesischanged tobethe\nfollowing:\n\u2022Findthetotalofthebudgets forprojects luanaged byeachrnanager; thatis,list\np'roj_rngr andthetotalofthebudgets ofprojects luanaged bythatmanager, for\nallvaluesofproj_mgT.\n\u2022Findthetotalofthebudgets forprojects managed byeachrnanager butonlyfor\nmanagers whoareinauser-specified agerange.\n\u2022Findthenumber ofmalernanagers.\n\u2022Findtheaverage ageofrnanagers.\nExercise 20.4TheGlobetrotters Clubisorganized intochapters. Thepresident ofachapter\ncanneverserveasthepresident ofanyotherchapter, andeachchapter givesitspresident\nsonlesalary.Chapters keepmovingtonewlocations, andanewpresident iselectedwhen\n(andonlywhen)achapter rnoves.Thisdataisstoredinarelation G(C,S,L,P), wherethe\nattributes arechapters(C),salaries(S),locations (L),andpresidents (P).Queries ofthe\nfollowing fornlarefrequently asked,andyoumU8tbeabletoanswerthernwithout cOluputing\najoin:\"Whowasthepresident ofchapter Xwhenitwasinlocation Y?\"\n1.ListtheFDsthataregiventoholdoverG.\n2.Whatarethecandidate keysforrelation G?\na.WhatHonnalfornlistheschernaGin?\n4.Designagooddatabase scherna fortheclub.(Rernernber thatyourdesign'mnstsatisfy\nthestatedqueryrequirenlent!)\n5.\\\\7hatnonnalfonnisyourgoodscherna in?Giveanexarnple ofaquerythatislikelyto\nrunslc)\\veronthisschemathanontherelation G.\n6.Istherealossless-join, dependency-preserving deCOlTlposition ofGintoBeNF?\n7.Isthereever <:::tgoodreasontoacceptsornething lessthan:3NF'\\vhendesigning aschema\nforctrelaJional da..tabase? Usethisex~unple, ifnecessary addingfurtherconstraints, to\nillustrate youranswer.\nExercise 20.5Consider thefollowing BCNFrelation, whichliststheids,types(e.g.,nuts\norbolts),andcostsofvariousparts,alongwiththemllnber available orinstock:\nParts(pid,pname, cost,n'll.1YLC/.'l)(L'il)\nYouaretoldthatthefollowing t\\\\'oqueriesareextrelnely irnportant:", "723": "IIIFindthetotalnunlber available byparttype,foralltypes.CI'hatis,thesurnofthe\nnunL(l,'vail valueofallnuts,thesumofthenunLuvau valueofallbolts,andsoforth)\nIIIListthe]yidsofpartswiththehighestcost.\n1.Describe thephysical designthatyouwouldchooseforthisrelation. Thatis,whatkind\nofafilestructure wouldyouchooseforthesetofPartsrecords, andwhatindexeswould\nyoucreate?\n2.Suppose yourcustorners subsequently cmnplain thatperformance isstillnotsatisfactory\n(giventheindexesandfileorganization youchoseforthePartsrelation inresponse tothe\nprevious question). Sinceyoucannotaffordtobuynewhardware orsoftware, youhave\ntoconsider aschenlaredesign. Explain howyouwouldtrytoobtainbetterperfonnance\nbydescribing theschernafortherelation(s) thatyouwoulduseandyourchoiceoffile\norganizations andindexesontheserelations.\n3.Howwouldyouranswers tothetwoquestions change, ifatall,ifyoursysteIl1didnot\nsupport indexeswithmultiple-attribute searchkeys?\nExercise 20.6Consider thefollowing BCNFrelations, whichdescribe ernployees andthe\ndepartments theyworkin:\nErnp(eid,sal,did)\nDept.(d'id,location, budget)\nYouaretoldthatthefollowing queriesareextrernely important:\nIIFindthelocation whereauser-specified enlployee works.\nIICheckwhether thebudgetofadepartment isgreaterthanthesalaryofeachernployee\ninthatdepartrnent.\n1.Describe thephysical designyouwouldchooseforthisrelation. Thatis,whatkindofa\nfilestructure wouldyouchoosefortheserelations, andwhatindexeswouldyoucreate?\n2.Suppose thatyourcustollwrs subsequently cOIuplain thatperforrnance isstillnotsat\u00ad\nisfactory (giventheindexes andfileorganization thatyouchosefortherelations in\nresponse totheprevious question). Sinceyoucannotaffordtobuyne\\\\'hardware or\nsoftware, youhavetoconsider aschelnaredesign. Explain howyouwouldtrytoobtain\nbetterperfonnance bydescribing theschernafortherelation(s) thatyouwoulduseand\nyourchoiceoffileorganizations andindexesontheserehltions.\n~3.Suppose thatyourdataba.:;e systern IU1Sveryineff1cient irnplenlentations ofindexstruc\u00ad\ntures.\\Vhatkindofadesignwouldyoutryinthiscase?\nExercise 20.7Consider thefollowing BCNFrelations, whichdescribe departrnents inH,\ncompany andernployees:\nDept(did,dn.arne,location\" managerid)\nEnlp(cid_,sal)\n'YouarE'toldthatthefollovving queriesareextrernely iruportant:\nIlIIIListthenamesandidsofrnanagel's foreachdepartment inauser-specified location., in\nalphabetical orderbydepartuwl1t narne.\nIIIFindtheaventge salaryofernployees whornanage departments inauser-specified loca\u00ad\ntion.You can,kssurnethatnoonernanages nlOrethanonedepa,rtrnent.", "724": "690 C:;HAPTER ~O\n1.Describe thefilestructures andindexesthatyouwouldchoose.\n2.Yousubsequently realizethatupdates totheserelations arefrequent. Because indexes\nincurahighoverhead, canyouthinkofawaytoirnprove perforrnance onthesequeries\nwithout usingindexes?\nExercise 20.8Foreachofthefollowing queries, identify onepossible reasonwhyanopti\u00ad\nInizerIllightnotfindagoodplan.RevvTite thequerysothatagoodplanislikelytobe\nfound.Anyavailable indexesorknownconstraints arelistedbeforeeachquery;assurnethat\ntherelation schelnas areconsistent withtheattributes referred tointhequery.\n1.Anindexisavailable ontheageattribute:\nSELECTE.dno\nFROM Elnployee E\nWHERE E.age=20 ORE.age=10\n2.AB+treeindexisavailable ontheageattribute:\nSELECTE.dno\nFROM Employee E\nWHEREE.age<20 ANDE.age>10\n3.Anindexisavailable ontheageattribute:\nSELECT E.eIno\nFROM Enlployee E\nWHERE 2*E.age<20\n4.Noindexisavailable:\nSELECT DISTINCT*\nFROM Enlployee E\n5.Noindexisavailable:\nSELECT\nFROM\nGROUP BY\nHAVINGAVG(B.sal)\nElnployee E\nE.dno\nE.dno=22\n6.ThesidinReserves isaforeignkeythatreferstoSailors:\nSELECT\nFROM\nWHERES.sid\nSailorsS,Reserves H\nS.sid=R.sid\nExercise 20.9Consider two'waystoCOlupute theHaIneSofelnployees whoearnrnorethan\n$100,000 andwhoseageisequaltotheir rnan~tger)s age.First,anestedquery:\nSELECT\nFROM\nWHEREF~l.en(Hne\nEnlpEI\nEl.sal>100ANDEl.age= (SELECT\nFROM\nWHEREE2.(lge\nErnpE2,DeptD2\nE1.dname =D2.dnaJ.ne\nANDD2.mgr =E2.enarne )\nSecond, aquerythatusesaviewdefinition:", "725": "})hysical\n Dai:abaseDesign andTun;ing t~91\nSELECT\nFROM\nWHERE\nCREATE\u00a31.enarne\nErnpEl,~igrAge A\nEl.dnarue=A.dnarne ANDE1.sal>100ANDE1.age=A.age\nVIEW:WIgrAge(dnan1e, age)\nASSELECTD.dnanw, E.a,ge\nFROM ErrlpE,DeptD\nWHERE ~D.nlgr=E.erli:une\n1.Describe asituation inwhichthefirstqueryislikelytooutperforrn thesecondquery.\n2.Describe asituation inwhichthesecondqueryislikelytooutperfonn thefirstquery.\n3.Canyouconstruct anequivalent querythatislikelytobeatboththesequerieswhen\neveryernployee whoearnsrnorethan$100,000 iseither ~35or40yearsold?Explain\nbriefly.\nBIBLIOGRAPHIC NOTES\n[658]isanearlydiscussion ofphysical database design. [659]discusses theperformance\nimplications ofnormalization andobserves thatdenormalization mayimprove perforrnance\nforcertainqueries. Theideasunderlying aphysical designtoolfrornIBl'vfaredescribed in\n[272].TheNlicrosoft AutoAdrnin toolthatperfonns automatic indexselection according to\naqueryworkload isdescribed inseveralpapers[163,164].TheDB2Advisor isdescribed\nin[750].Otherapproaches tophysical database designaredescribed in[146,639].[679]\nconsiders transaction tuning,whichwediscussed onlybriefly.Theissueishowanapplication\nshouldbestructured intoacollection oftransactions tornaxirnize perfonnance.\nThefollowing booksondatabase designcoverphysical designissuesindetail;theyarereCOIll\u00ad\nrnended forfurtherreading. [274]islargelyindependent ofspecificproducts, although rnaBy\nexcunples arebasedonDB2andTeradata systerl1S. [779]dealsprirnarily withDB2.Shasha\nandBonnetgiveanin-depth, readable introduction todatabase tuning[104].\n[;334]contains severalpapersonbenchrnarking database systerns andhasaccompanying soft-\u00b7\nware.Itincludes articles ontheAS:3AP,SetQuery,'I'PC-A, 'rpC-B, Wisconsin, and001\nbendunarks written bytheoriginal developers. TheBuckybenchrnark isdescribed in[132],\nthe007benchrnark isdescribed in[l:H],andtheT'pe-D benchrnark isdescribed in[7:39].\nTheSequoia 2000bendunark isdescribed in[720].", "726": "21\nSECURITY AND\nAUTHORIZATION\n..Whatarethernainsecurity considerations indesigning adatabase\napplication?\n..WhatIIlechanisms doesaDBNISprovidetocontrolauser'saccessto\ndata?\n..Whatisdiscretionary accesscontrolandhowisitsupported inSQL?\n..Whataretheweaknesses ofdiscretionary accesscontrol? Howare\ntheseaddressed inlnandatory accesscontrol?\n..Whatarecovertchannels andhowdotheycornpromise lnandatory\naccesscontrol?\n..WhatlTIUsttheDBAdotoensuresecurity?\n..Whatistheaddedsecurity threatwhenadatabase isaccessed re\u00ad\nrnotely?\n..Whatistheroleofencryption inensuring secureaccess? Howisit\nusedforcertifying serversandcreating digitalsig11atures?\n..Keyconcepts: security, integrity, availability; discretionary access\ncontrol,privileges, GRANT, REVOKE; rna.ndatory accesscontrol,objects,\nsubjects, security classes,rnultilevel tables,polyinstantiation; covert\nchannels, DoDsecurity levels;statistical databases, inferring secure\ninformation; authentication forreIlloteaccess,securing servers,digital\nsignatures; encyption, public-key encryption. -\nIknowthat'sasecret,forit'swhispered everywhere.\n......\u00b7\u00b7..\u00b7vVilliam Congreve\n692", "727": "SeC1LTity and .A~uthoT'iz'ation\nThedatastoredinaDBNISisoftenvitaltothebusiness interests oftheor\u00ad\nganization andisregarded &1.)acorporate a,,'Sset.Inaddition toprotecting the\nintrinsic valueofthedata,corporations rnustconsider O\\vaystoensureprivacy\nandcontrolaccesstodatathatmustnotberevealed tocertaingroupsofusers\nforvariousre&'3ons.\nInthischapter, \\vediscusstheconcepts underlying accesscontrolandsecu\u00ad\nrityinaDB:N.IS.Afterintroducing database security issuesinSection21.1,we\nconsider twodistinct approaches, called d'iscTetionar~lj andrnandatory, tospec\u00ad\nifyingandlTlanaging accesscontrols. Anaccesscontrol Inechanism isaway\ntocontrolthedataaccessible byagivenuser.Afterintroducing accesscontrols\ninSection 21.2,wecoverdiscretionary accesscontrol,which issupported in\nS(~L,inSection21.3.vVe brieflycovern1andatory accesscontrol, whichisnot\nsupported inSQL,inSection21.4.\nInSection21.6,wediscussSOIneadditional aspectsofdatabase security, such\nassecurity inastatistical database andtheroleofthedatabase adrninistrator.\nWethenconsider SOlneoftheuniquechallenges insupporting secureaccessto\naDBMSovertheInternet, whichisacentralproblern ine-COlllInerce andother\nInternet database applications, inSection21.5.Weconclude thischapterwith\nadiscussion ofsecurity aspectsoftheBarnsandNobblecasestudyinSection\n21.7.\n21.1INTRODUCTION TODATABASE SECURITY\nTherearethreernainobjectives \\vhendesigning asecuredatabase application:\n1.Secrecy: InfoI'rnation shouldnotbedisclosed tounauthorized users.EoI'\nexarnple, astudentshouldnotbeallowedtoexarnine otherstudents' grades.\n2.Integrity: ()nlyauthorized usersshouldbeallowedtoHlodifydata.For\neXHxnplc, students 1Ilaybeallowed toseetheirgrades,yetnotallowed\n(obviously) tornodifythern.\n:3.Availability: Authorized usersshouldnotbedeniedaccess.Forexcunplc,\naninstructor whowishestochangeagradeshouldbeallowedtodoso.\nT'()achievetheseobjectives, aclearandconsistent security policyshouldbe\ndeveloped todescribe \\vhatsecurity Ine::1SU1'eS rnustbeenforced. Inparticular,\nwernu8tdetennine whatpartofthedataistobeprotected andwhichusers\ngetaccessto\\vhichportions ofthedata.Next,thesecurity mechanisrns of\ntheunderlying I)B:JVISandoperating systenl, as\\veUasexternaJ rnechanisHls,", "728": "694 CHAPTER 21\nsuchassecuring accesstobuildings, Illustbeutilizedtoenforcethepolicy.\\Ve\ncrIlphasize thatsecurity rneasures IIlustl)etakenatseverallevels.\nSecurity leaksintheOSornetwork connections cancirCUlnvent databa.se secu\u00ad\nrityrnechanisrns. Forexarnple, suchleakscouldallowanintruder tologonas\nthedatabase acbninistrator, 'withalltheattendant I)BlVISaccessrights.Hurnan\nfactorsareanother sourceofsecurity leaks.:Forexarnple, auserIHaychoosea\npa.ss\\v()l\u00b7d thatiseasytoguess,orauserwhoisauthorized toseesensitive data\nrnayluisuseit.Sucherrorsaccount foralargepercentage ofsecurity breaches.\n\\Vedonotdiscusstheseaspectsofsecurity despitetheirirllportance because\ntheyarenotspecifictodata,base rnanagerllent systelIls; ourIIlainfocusison\ndataba..se accesscontrolrllechanisrns tosupport asecurity policy.\nWeobservethatvie\\vsareavaluable toolinenforcing security policies. The\nviewrnechanisrll canbeusedtocreatea'window' 011acollection ofdatathatis\nappropriate forSOllIegroupofusers.'ViewsallowustoliUlitaccesstosensitive\ndatabyproviding accesstoarestricted version(defined through aview)ofthat\ndata,ratherthantothedataitself.\nWeusethefollowing SCll(~InHS inourexaurples:\nSailors( s'id:integer, snarne:string, rating:integer, age:real)\nBoats(bid:integ~r, bnarne:string, color:string)\nRl~serv~;s( sid:,,~nteger, bid:_...integer, d~y):dates)\nIncreasingly, asdatabase systcrlls becornethebackbone ofe-COlluncrce appli\u00ad\ncationsrequests originate overtheInternet. Thisrnakesitirnportant tobe\nabletoauthenticate ausertothedataba..se systern. A.fterall,enforcing a\nsecurity policythatallowsuserSarntoreadatableandEhnertowritethe\ntableisnotofl11uchuseifS~uncanrnasquerade a\"sEbner.COllversely, weInus!;\nbeabletoassureusersthattheya,reCOIluIlunicating \\vithalegitilnate systern\n(e.g.,therealArnazoll.col11 server,andnotaspurious application intended to\nstealsensitive inforrnation suchasc),creditcardnurl11>cr). vVhilethedetails\nofauthentication areoutsidethescopeofourcoverage, wediscusstherole\nofauthentication (uIdthel)Hsicide;:lsinvolved inSection21.5,aftercovering\ndatabase accesscontrolrnechanisrIls.\n21.2ACCESS CONTROL\ni\\database foranenterprise contains agreatdealofinforrnation andusually\nhassever(.tlgroupsofusers.1\\IJostusersneedtoaccessonl,yasruallpa;rtofthe\ndatabase tocarryouttheirta\",:,ks.J\\l1owing usersunrestricted accesstoallthe", "729": "SecuT'it:lJ ctnd,,4ldlun~ization 6'()I'\"..Q\nt\ndatacanbeundesirable, anda!)Bl\\IlSshouldprovide rnechanisHls tocontrol\naccesstodata.\nADBMSofferstwornainapproaches toaccesscontrol.Discretionary access\ncontrol isba,,\"edontheconcept ofaccessrights,orprivileges, andrnecha\u00ad\nnisrllSforgivinguserssuchprivileges. Aprivilege allowsausertoaccessBorne\ndataobjectinacertainIIlHnIler (e.g.,toreador11lOdify). Auser,vhocreates\nadataba,se objectsuchasatableoravie\\vautornatically getsallapplicable\nprivileges onthatobject.TheD.BMSsubsequently keepstrackofhowthese\nprivileges aregrantedtootherusers,andpossibly revoked, andensuresthatat\nalltirnesonlyuserswiththenecessary privileges canaccessallobject. S(~Lsup\u00ad\nportsdiscretionary accesscontrolthrough theGRANTandREVOKE conunands.\nTheGRANTcOllnnand givesprivileges tousers,andtheREVOKE cornrnand takes\nawayprivileges. Wediscussdiscretionary accesscontrolinSection21.3.\nDiscretionary accesscontrolrnechanisrns, whilegenerally effective, havecertain\nweaknesses. Inparticular, adeviousunauthorized usercantrickanauthorized\nuserintodisclosing sensitive data.Mandatory accesscontrol isbasedon\nsystemwide policiesthatcannotbechanged byindividual users.Inthisap\u00ad\nproacheachdatabal.'3e objectisassigned asecurity class,eachuserisassigned\nclearance forasecurity cla..ss,andrulesareirnposed onreadingandwritingof\ndatabase objectsbyusers.TheDBMSdeterrnines whether agivenusercan\nreadorwriteagivenobjectbasedoncertainrulesthatinvolvethesecurity\nleveloftheobjectandtheclearance oftheuser.Theserulesseektoensure\nthatsensitive datacanneverbe'passedon'toauserwithout thenecessary\nclearance. 'rheSQLstandard doesnotincludeanysupport forrnandatory\naccesscontrol. 'Wediscussrnandatory accesscontrolinSection21.4.\n21.3DISCRETIONARY ACCESS CONTROL\nSQLsupports discretionary accesscontrolthrough theGRANTandREVOKE corn\u00ad\nrnands.TheGRANTcornrnand givesusersprivileges tobasetablesandviews.\n'rhesyntaxofthiscorllrllctnd isH.'I.'3follows:\nGRANTprivileges ONobject TOusers[WITHGRANTOPTION]\nForourpurpo~es objectiseitherabasetableoravie\\-v.SClLrecognizes certain\notherkindsofobjects, butwedonotdiscussthcrn.Severalprivileges canbe\nspecified, including these:\nIIISELECT: Therighttoaccess(read)allcolurnns ofthetablespecified asthe\nobject, including colurnns addedlaterthrough ALTERTABLEcornrnands.", "730": "696 CHAPTER 2l\n\u2022INSERT( colurnn-na'Tne): Therighttoinsertrowsvvith (non-nuU ornon\u00ad\ndefault) valuesinthenaTnedcohnnn ofthetablerHuncdasobject. If\nthisrightistobegra,ntedwithrespecttoallcohunns, including coluulns\nthatrnightbeaddedlater,\\vecansirnplyuscINSERT. 1~heprivileges\nUPDATE( col't/,'rnn-narne) andUPDATE aresirnilar.\nIIIDELETE: 1'hcrighttodeleterowsfrornthetablenarned i:1..Sobject.\n\u2022REFERENCES (col'Urnn-namJe): Therighttodefineforeignkeys(inotherta\u00ad\nbles)thatrefertothespecified cohnnnofthetableobject. REFERENCES\nwithout acolurnn naUIespecified denotes thisrightwithrespecttoall\ncolurnns, including anythatareaddedlater.\nIfauserhasaprivilege withthegrantoption, heorshecanP<:1..')Sittoanother\nuser(withorwithout thegrantoption)byusingtheGRANTconunand. Auser\nwhocreatesabasetableautolnatically hasallapplicable privileges onit,along\nwiththerighttogranttheseprivileges tootherusers.Auserwhocreatesa\nviewhasprecisely thoseprivileges ontheviewthatheorshehasoneveryone\noftheviewsorbasetablesusedtodefinetheview.Theusercreating theview\nInusthavetheSELECT privilege oneachunderlying table,ofcourse,andsois\nalwaysgrantedtheSELECT privilege ontheview.Thecreatoroftheviewhas\ntheSELECT privilege withthegrantoptiononlyifhE~orshehastheSELECT\nprivilege withthegrantoptiononeveryunderlying table.Inaddition, ifthe\nviewisupdatable andtheuserholdsINSERT, DELETE, orUPDATE privileges\n(withorwithout thegrantoption)onthe(single)underlying table,theuser\nautornatically getsthesameprivileges ontheview.\n()nlytheownerofaschernacanexecutethedatadefinition statcrnents CREATE,\nALTER,andDROPonthatschcrna. Therighttoexecutethesestaternents cannot\nbegranted orrevoked.\nInconjullction withtheGRANTandREVOKE cOl1llnands, viewsareanirnportant\ncornponent ofthesecurity rnechanisrns provided byEtrelational J)B~1S. By\ndefining vie\\vsonthebasetables,\\vecanpresentneededinforrnation toauser\n\"whilehidingotherinforrnation thattheusershouldnotbegivenaccessto.For\nexalnple, consider thefollowing viewdefinition:\nCREATE VIEW}\\ctiveSajlors (naJIle,age,day)\nASSELECT S.snarne, S.age,R\"day\nFROM SailorsS,H,eserves }{\nWHERE S.sid =:Il.sidANDS.rating>6\nAuserwhocanaccessActiveSailors 1)11tnotSailorsorR,eserves kno\\vsthe\nnennesofsailorswhohavereservations butcannotfindoutthebidsofboats\nreserved byagivensailor.", "731": "Sec1tTity an:rlAuthorization 697\nRole-Ba.'icd Authorization inSQL:Privileges areassigned tousers\n(authorization 11)s,tobeprecise) inS(~L-92. Intherealworld,privileges\narE~oftenLiSsociatedwith auser'sjoborTolewithintheorganizat;ion ..:Nlany\nDBMSshavelongsupported theconceptofaroleandallowedprivileges\ntobeassigned toroles.I{,olescanthenhegrantedtousersandother\nroles.(Ofcourses, privileges canalsobegranted directly tousers.)l'he\nSQL:1999 standard includes support forroles.R.,oleseanbecreatedand\ndestroyed usingtheCREATE ROLEandDROPROLEeornrnands. Userscan\nbegrantedroles(optionally, \\viththeabilitytoP&'3Stheroleontoothers).\nThestandard GRANTandREVOKE connnands canassignprivileges to(and\nrevokefrom)rolesorauthorization IDs.\nWhatisthebenefitofincluding afeaturethatInanysysterns alreadysup\u00ad\nport?'T'hisensuresthat,overtiIne,allvendorswhocomplywiththestan\u00ad\ndardsupportthisfeature.'rhus,userscanusethefeaturewithoutworrying\naboutportability oftheirapplication acrossDBMSs.\nPrivileges areassigned inSQLtoauthorization IDs,whichcandenoteasin\u00ad\ngleuseroragroupofusers;auserlllUStspecifyanauthorization IDand,in\nInanysysterns, acorresponding password beforetheDBMSacceptsanyC0111\u00ad\nrnanclsfromhirnorher.So,technically, Joe,l'vlichael, andsoonareauthoriza\u00ad\ntionIDsratherthanusernan1esinthefollowing exalllpies.\nSuppose thatuserJoehascreatedthetablesBoats,Reserves, andSailors.\nSenneexarnples oftheGRANTcOllunand thatJoecannowexecute fo11o\\v:\nGRANTINSERT, DELETE ONReserves TOYuppyWITHGRANTOPTION\nGRANTSELECT ONReserves TONlichael\nGRANTSELECT ONSailors TOMichael WITHGRANTOPTION\nGRANTUPDATE (rating) ONSailors TOLeah\nGRANTREFERENCES (bid)ONBoatsTOBill\nYuppyCaJlinsertordeleteIleserves rO\\V8andauthorize SOlneone elsetodothe\nsarne.I\\1ichaelcanexecute SELECT queriesonSailorsandH,eserves, and118can\npassthisprivilege toothersforSailorsbutnotforR,eserves. \\ViththeSELECT\nprivilege, 1-tichael cancreateaviewthataccesses theSailorsandIleserves\ntables(forexarnple, theActiveSailors vic\\v),buthecannotgrantSELECTon\nActiveSailors toothers.\n()rltheotherhand,supposethatIv1ichael cn~atesthefoUo\\ving vie\\v:\nCREATE VIEWYoungSailors (sicl,age,rating)\nASSELECT S.sicl,S.age,S.rating", "732": "698\nFROM\nWHERESailorsS\nS.age<18CHAPTER 21\nTheonlyunderlying tableisSailors,forwhichMichael hasSELECT withthe\ngrantoption.Hetherefore h&'3SELECTwiththegrantoptiononYoungSailors\nandcanpassontheSELECT privilege onYoungSailors toEricandGuppy:\nGRANTSELECT ONYoungSailors TOEric,Guppy\nEricandGuppycannowexecute SELECT queriesontheviewYoungSailors\u00ad\nnote,however, thatEricandGuppydonothavetherighttoexecute SELECT\nqueriesdirectlyontheunderlying Sailorstable.\nMichaelcanalsodefineconstraints basedontheinforrnation intheSailorsand\nReserves tables.Forexarnple, Michael candefinethefollowing table,which\nhasanassociated tableconstraint:\nCREATE TABLESneaky(lnaxrating INTEGER,\nCHECK(maxrating >=\n(SELECT MAX(S.rating)\nFROM SailorsS)))\nByrepeatedly inserting rowswithgradually increasing rnaxrating valuesinto\ntheSneakytableuntilaninsertion finallysucceeds, lVIichael canfindoutthe\nhighest ratingvalueintheSailorstable.Thisexarnple illustrates whySQL\nrequires thecreatorofatableconstraint thatreferstoSailorstopossessthe\nSELECT privilege onSailors.\nReturning totheprivileges granted byJoe,Leahcanupdateonlytherating\ncolulnnofSailorsrows.Shecanexecutethefollowing cornmand, whichsetsall\nratingsto8:\nUPDATE SailorsS\nSET S.rating =8\nIIuwever, shecannotexecutetheseunecOllunand iftheSETclauseischanged\ntobeSETS.age=25,because sheisnotallowed toupdatetheagefield.A\nrnorosubtlepointisillustrated bythefollowing cOIrllnand, whichdecrelnents\ntheratingofall'sailors:\nUPDATE SailorsS\nSET S.ratillg =S.rating-l\nLeahcannotexecutethiscOlInnand becauseitrequires theSELECT privilege 011\ntheIS.Tabngcolurnn aneiLeahdoesnothavethisprivilege.", "733": "/3ecurit:1J and.A'lLthoT\"izat'ion 699\nBillcanrefertothelxidcolurnnofBoatsasaforeignkeyinanother table.For\nexalnple~ BillcancreatetheReserves tablethrough thefollowing cOlnnland:\nCREATETABLER\"eserves(sid INTEGER,\nbidINTEGER,\ndayDATE,\nPRIMARY KEY(bid,day),\nFOREIGN KEY(sid)REFERENCES Sailors),\nFOREIGN KEY(bid)REFERENCES Boats)\nIfBilldidnothavetheREFERENCES privilege onthebidcoh1111nofBoats,he\nwouldnotbeabletoexecutethisCREATE staternent becausetheFOREIGN KEY\nclauserequires thisprivilege. (Asirnilarpointholdswithrespecttotheforeign\nkeyreference toSailors.)\nSpecifying justtheINSERT privilege (sirnilarly, REFERENCES andotherprivi\u00ad\nleges)inaGRANTconlmand isnotthesarneasspecifying SELECT(colurnn-name)\nforeachcolumncurrently inthetable.Consider thefollowing command over\ntheSailorstable,whichhascohllnns sid,snarne,rating,andage:\nGRANTINSERT ONSailors TOJ\\!Iichael\nSuppose thatthisconunand isexecuted andthenacolurnnisaddedtothe\nSailorstable(byexecuting anALTERTABLEcOlIllnand). NotethatMichael\nhastheINSERT privilege withrespecttothenewlyaddedcolurnn. Ifwehad\nexecuted thefollowing GRANTcornrnand, insteadoftheprevious one,Michael\nwouldnothavetheINSERT privilege onthenewcohllnn:\nGRANT INSERT ONSailors(sid), Sailors(sna1ne) ,Sailors(rating),\nSailors(age),TOJ\\!Iichael\nThereisacornplernentary corl1rnand toGRANTthatallov.lsthe\\vithdra:wal of\nprivileges. ThesyntaxoftheREVOKE cOllunand isasfollows:\nREVOKE [GRANT OPTION FOR]privileges\nONobject FROMusers{RESTRICT ICASCADE }\nThecOIlnnand CH,nbeusedtorevokeeitheraprivilege orjustthegrantoption\nonaprivilege (byusingtheoptional GRANTOPTION FORclause). Oneofthe\ntwoa..lternatives, RESTRICT orCASCADE, HUlstbespecified; wesee'whatthis\nchoiceIneaI1Sshortly.\nTheintuition behindtheGRANTcOlnnlHJHl isclear:rrhecreatorofaba\",setable\noravh~\\visgivenallthectppropriate privileges \\vithrespecttoitandisalh)\\ved", "734": "700\ntopassthese\n privileges~\u00b7\u00b7-\u00b7-including therighttopassalongaprivilege,,~,to other\nusers.TheREVOKE comuland is,asexpected, intended toachievethereverse:\nAuserwhoha\",:;grantedaprivilege toanother userrnaychangehisorherlnincI\nand\\vanttowithdraw thegra,nted privilege. 11heintuition behindexactly'what\neffect <::1,REVOKE cornrnand hasisconlplicated bythefactthatauserInaybe\ngranted thesarneprivilege rnultiple tilnes,possibly bydifferent users.\n\\Vhenauserexecutes aREVOKE cornmand withtheCASCADE keyword, theeffect\nisto\\vithdraw theIHunedprivileges orgrantoptionfroInallusers\\vhocurrently\nhold tlH~seprivileges solelythrough aGRANTcOllunand that\"va,,')previously\nexecuted bythesallIeuserwhoisnowexecuting theREVOKE cOl1nnand. If\ntheseusersreceived theprivileges withthegrantoptionandpasseditalong,\nthoserecipients inturnlosetheirprivileges asaconsequence oftheREVOKE\ncOIurnand, unlesstheyreceived theseprivileges through anadditional GRANT\ncomIuand.\nWeillustrate theREVOKE cOllllnand through severalexamples. First,consider\nwhathappens afterthefollowing sequence ofeornmands, whereJoeisthe\ncreatorofSailors.\nGRANTSELECT ONSailorsTOArtWITHGRANTOPTION\nGRANTSELECT ONSailorsTOBobWITHGRANTOPTION\nREVOKE SELECT ONSailorsFROMArtCASCADE(crecuted byJoe)\n(executed byArt)\n(executed byJoe)\nArtlosestheSELECT privilege onSailors,ofcourse.ThenBob,whoreceived\nthisprivilege fromArt,andonlyArt,alsolosesthisprivilege. Bob'sprivilege\nissaidtobeabandoned whentheprivilege froInwhichitwasderived(Art's\nSELECT privilege withgrantoption,inthisexarnple) isrevoked. vVhenthe\nCASCADE keyword isspecified, allabandoned privileges arealsorevoked (pos\u00ad\nsiblycausingprivileges heldbyotheruserstobecOlneabandoned andthereby\nrevoked recursively). IftheRESTRICT keyword isspecified intheREVOKE corll\u00ad\nmctnd,thecornrnand isrejected ifrevoking theprivileges justfrorntheusers\nspecified inthecOIllluand vvouldresultinotherprivileges becorning abandoned.\nConsider thefollowing sequence, asanother exarnple:\nGRANTSELECT ONSailorsTOArtWITHGRANTOPTION\nGRANTSELE\"cT ONSailorsTOBobWITHGRANTOPTION\nGRANTSELECT ONSailorsTOBobWITHGRANTOPTION\nREVOKE SELECT ONSailorsFROMArtCASCADE(e:recuted byJoe)\n(e:tecuted byJoe)\n(e.Tfc'uted byArt)\n(e~cecuted byJoe)\n.ilSbefore,ArtlosestheSELECT privilege onSailors. ButvvhataboutBob?\nBobreceived thisprivilege fronlArt,buthe(:llsoreceived it:independently", "735": "8ec'u'rity and..4nthoTization 701\n(coincidentally, directly fro111Joe).SoBobretainsthisprivilege. Consider a\nthirdeXa,lllple:\nGRANTSELECT ONSailorsTOArtWITHGRANTOPTION\nGRANTSELECT ONSailorsTOAxtWITHGRANTOPTION\nREVOKE SELECT ONSailorsFROMArtCASCADE(executed byJoe)\n(executed byJoe)\n(e:l;ecuted byJoe)\nSinceJoegranted theprivilege toArttwiceandonlyrevoked itonce,does\nArtgettokeeptheprivilege? AspertheSQLstandard, no.EvenifJoe\nabsentmindedly grantedthesaIneprivilege toArtseveraltirnes,hecanrevoke\nitwithasingleREVOKE cOIlunand.\nItispossible torevokejustthegrantoptionona,privilege:\nGRANTSELECT ONSailorsTOArtWITHGRANTOPTION (executed byJoe)\nREVOKE GRANTOPTION FORSELECT ONSailors\nFROMArtCASCADE (executed byJoe)\nThiscOlnmand wouldleaveArtwiththeSELECT privilege onSailors,butArt\nnolongerhasthegrantoptiononthisprivilege andtherefore cannotpassiton\ntootherusers.\nTheseexarnples bringouttheintuition behindtheREVOKE cOillllland, and\ntheyhighlight thecOlllplex interaction between GRANTandREVOKE cOlnnlands.\nWhenaGRANTisexecuted, aprivilege descriptor isaddedtoatableofsuch\ndescriptors Inaintained bytheDElVIS.Theprivilege descriptor specifies the~ol\u00ad\nlowing:thegrantoroftheprivilege, thegTarrteewhoreceivestheprivilege, the\ngr-antedprivilege (including thenarneoftheobjectinvolved), andwhether the\ngrantoptionisincluded. Whenausercreatesatableorviewand'autornati\u00ad\ncally'getscertain privileges~ aprivilege descriptor withsystem, a.'Sthegrantor\nisenteredintothistable.\nrrheeffectofaseriesofGRANTcornrnands canbedescribed interrnsofan\nauthorization graphin which thenodesareusers......-technically~ theyareau\u00ad\nthorization IDs\u00b7..\u00b7--andthearcsindicate .howprivileges arepassed.Thereisan\narcfron1(thenodefor)user1.touser2ifuser1.executed aGRANTcOIIunand\ngivingaprivilege touser2;thearcislabeled\\viththedescriptor fortheGRANT\ncOIlllnand. AGEANTcOIlnnand hasnoeffectifthesaIneprivileges ha.vealready\nbeengrantedtotheSeHnegranteebyth.esarnegrantor. Thefollowing sequence\nofCOnllllcUlds illustrates thesernantics ofGRANTandREVOKE connnands when\nthereisacycleintheauthorization graph:\nGRANTSELECT ONSailorsTO.ArtWITHGRANTOPTION\nGRANTSELECT ONSa.ilorsTOBobWITHGRANTOPTION(e:r:e.c'U,ted byJoe)\n(e;1;(~c'lded byArt)", "736": "702\nGRANTSELECT ONSailors TOAxtWITHGRANTOPTION\nGRANTSELECT ONSailors TOCalWITHGRANTOPTION\nGRANTSELECT ONSailors TOBobWITHGRANTOPTION\nREVOKE SELECT ONSailors FROMi-\\rtCASCADEellAP'I'E,R$21\n(e:ceC1tted bllBob)\n(e:r:ec1lted bl/Joe)\n(cJ;eclded byCal)\n(executed byJoe)\nTheauthorization graphforthisexarnple isshowninFigure21.1.Notethat\nvveindicate hovvJoe,thecreatorofSailors,acquired theSELECT privilege fror11\ntheDBlVISbyintrodtIcinga8ysternnodeanddravving anarcfroInthisnode\ntoJoe'snode.\n~:~~/\njystem, Joe,SelectonSailo\",Yes)\n(JO~rt, SelectonSailo\",Yes)\n_../\n(Art.Boh.SelectonSailors,Yes)\n(Joe,Cal.SelectonSailors.Yes)\n/\" (Bob.Art,SelectonSailors.Yes)\n0:/ (Cal,Bo;;:-;elecl onSailo\",~)Bob\nFigure 21.1Example Authorization Graph\nAsthegraphdearlyindicates, Bob'sgranttoArtandArt'sgranttoBob(ofthe\nscl.lneprivilege) createsacycle.Bobissubsequently giventhesaIneprivilege\nbyCal,whoreceived itindependently froInJoe.AtthispointJoedecidesto\nrevoketheprivilege hegranted Art.\nLetustracetheeffectofthisrevocation. 1'hearc[raInJoetoArtisrenlov(,~d\nbecause itcorresponds tothegranting actionthatisrevoked. Allrernaining\nnodeshavethefollowing property: 1fnodeNhasanotdgo'ing aTelabeledwith\napT'iv'ilege, thereisapathfTorntheSysternnodeto'nodeNin'whicheachaTC\nlabelcontains thesanteprivilege phiSthegrantopt'ion.Thatis,anyrernaining\ngranting actionisjustified byaprivilege received (directly orindirectly) frorn\ntheSystern. Theexecution ofJoe'sREVOKE conllnand therefore stopsatthis\nPOiIlt,\\vith everyone continuing toholdtheSELECT privilege onSailors.\nrrhisresult rn~.tyseenlnnintuitive because Artcontinues tohavetheprivilege\nonlybecause hereceived itfr0111Bob,andatthetiInethatBobgranted the\nprivilege toArt,hehadreceived itonlyfrornArt.Although Bobacquired the\nprivilege through Calsubsequentl~y, shouldwenotundotheeffectofhisgrant", "737": "toArtvvhenexecuting Joe'sREVOKE cOlInlland? 'rheeffectofthegrantfrorn\n\"-\" '\"\nBobto,Artis'notundoneinSCJL.IneffecLifauseracquires aprivilege rnultiple\ntilnesfrolIldifferent grantors, S(~Ltreatseachofthesegrantstotheuser<he;\nhavingoccurred befoTethatuserpa\"c;sedontheprivilege tootherusers.This\niInplcrnentation ofREVOKE isconvenient in111anyreaJ-\\vorld situations. .For\nexanlple,ifalIl.anager isfiredafterpassingonsorneprivileges tosubordinates\n(vvholnayinturnhavepassedtheprivileges toothers), vvecanensurethat\nonlythernanager's privileges arerernoved byfirstredoingalloftheIllanager's\ngranting actionsandthenrevoking hisorherprivileges. Thatis,Vleneednot\nrecursively redothesubordinates' granting actions.\nToreturntothesagaofJoeandhisfriends, letussuppose thatJoedecides\ntorevokeCal'sSELECT privilege a..,well.Clearly, thearcfrornJoetoCal\ncorresponding tothegrantofthisprivilege isrerIloved. ThearcfrorHCalto\nBobisreilloved aswell,sincethereisnolongerapathfronlSystelIltoCal\nthatgivesCaltherighttopasstheSELECT privilege onSailorstoBob.The\nauthorization graphatthisinterrnediate pointisshowninFigure21.2.\nE=0\n1-(SY<tem, Joe,SelectonSailoe<, Ye<)\n(o~) (~\n\"''--'-''~'/\n(Art,Bob,SelectonSailors,Yes)\n(Bob,Art,SelectonSailors,Yes)\nCal\nFigure 21.2Example Authorization GraphduringRevocation\nrrhegraph 110Vv'contains t~lOnodes(ArtandBob)forvvhiehthereareoutgoing\narcs\\vithlabelscontaining theSELECT privilege onSailors; therefore, these\nusershavegranted thisprivilege. lInwever, although eachnodecontains a,n\nincorning arccarrying thesaIneprivilege, then:;isno.suchpathjnnnSystern\ntoeitherofthesenodes;sotheseusers'righttogranttheprivilege lUh'Sbeen\nabandonecL \"\\\\letherefore rernovetheoutgoing arcsaswell.Ingeneral, these\nnodesrnighthaveotherarcsincident ontheIn,butinthisexarnplc, theynow\nhavenoincident arcs.Joeisleftastheonlyuser\\vith theSELECT privilege on\nSailors;ArtandBobhavelosttheirprivileges.", "738": "704 CHAPTER 2J\n21.3.1(;rantandRevokeonViewsandIntegrity Constraints\n1\"'!heprivileges heldbythecreatorofavie\\\\!(\\vitllrespecttothevie\\v)change\novertiInecbSheorshegainsorlosesprivileges ontheunderlying tables.Ifthe\ncreatorlosesaprivilege held'withthegrantoption,usersvvho\"veregiventhat\nprivilege ontheviewloseitas\\vell.'ThereareSOlHOsubtle&-spectstotheGRANT\nandREVOKE conunands vvhentheyinvolve vicV\\1sorintegrity constraints. \\;Ye\nconsider senneexarnples thathighlight thefolloV\\Ting irnportant points:\n1.AviewInaybedropped because aSELECT privilege isrevoked froInthe\nuserwhocreatedthevie\\~r.\n2.Ifthecreatorofavie\"vgainsadditional privileges ontheunderlying tables,\nheorsheautornatically gainsadditional privileges ontheview.\n3.Thedistinction between theREFERENCES andSELECT privileges isirnpor\u00ad\ntanto\nSuppose thatJoecreatedSailorsandgaveMichael theSELECT privilege onit\nwiththegrantoption,andJ\\!Iichael thencreatedtheviewYoungSailors and\ngaveErictheSELECT privilege on\u00b7youngSailors. Ericnowdefinesaviewcalled\nFiIl(~YoungSailors:\nCREATE VIEWFineYoungSailors (naIne,age,rating)\nASSELECT S.snarne, S.age,S.rating\nFROM YoungSailors S\nWHERE S.rating>6\n\\Vhathc1.1>pens if.JoerevokestheSELECT privilege onSailorsfrolnl\\1icha,el?\nlV1ichael nolongerhastheauthority toexecutethequeryusedtodefineYoung\u00ad\nSa,ilorsbecausethedefinition referstoSailors. rrherefore, thevieV\\!YoungSailors\nisdropped (Le.,destroyed). Inturn,Fine'{oungSailors isdropped as\\vell.Both\nviewdefinitions axerernoved fr0111thesystclncatalogs; evenif(1,rerIlorseful Joe\ndecidestogiveba,ckthe SELECT privilege onSailorstol\\;1ichael, thevicV\\Tsare\ngonea11drnustbecreatedafreshiftheyarerequired.\nOnaInorehappynote,suppose tllateverything proceeds asjustdescribed until\nEricdefines\n I~'\\ineYoungSailors; tJleu,insteadofrevoking theSELECT privilege\nonSailorsfrorllI\\:lichael, .Joedecidestoalsogivel\\'Echctel theINSERT privilege\n011Sailors. l\\!Iichael's privileges onth(~vievvYoungS(tilors areupgraded to\\vhat\nhe\\vould 11<'lVeifhe\\-veretocreatethevie\\vno'll!. lI(~therefore acquires the\nINSERT privilege on'YourlgSailors asVilCd1.(Notethatthisvie\"visupdatal)le.)\n\\~nlat ab(nltEri(~? IIisprivileg(~s axeUn(Jlfu1g(:~d.\n\\Vh(~ther ()l'll.ot.lVIicllael 11::18tlleINSERT privilege 011\\roungSailors withthe\ngra11t()ptionclel)encls 011\\vhether ornot.JoegiveshirntheINSERT I)rivilege OIl", "739": "70~\nSailors\\viththegrantoption.'Ibunderstand thissituation, consider Ericagain.\nIflVIiehael hastheINSERT privilege onYoungSailors withthegrantoption,he\ncanpassthisprivilege toEric.EriccouldtheninsertrovvsintotheSailorstable\nbecause insertsonYC}llngSailors areeffected byrnodifying theunderlying base\ntable,Sailors. Clearly, vvedonot\\vantl\\:1ichaeltobeabletoauthorize Ericto\nrnakesuchchanges unless:I\\JIichael hastheINSERT privilege onSailorswiththe\ngrantoption.\nrrheREFERENCES privilege isverydifferent froIlltheSELECT privilege, kk\"the\nfollowing exarIlple illustrates. Suppose thatJoeisthecreatorofBoats..Hecan\nauthorize another user,say,Freel,tocreateH,eserves withaforeignkeythat\nreferstothebidcolurnnofBoatsbygiving ~'redtheREFERENCES privilege with\nrespecttothiscolulnn. ()ntheotherhand,ifFredhastheSELECT privilege on\nthebidcolurnnofBoatsbutnottheREFERENCES privilege, Fredcannotcreate\nR.eserves withaforeignkeythatreferstoBoats.IfFredcreatesR,eserves with\naforeignkeycolunlllthatreferstobidinBoatsandlaterlosestheREFERENCES\nprivilege onthebidcolurnnofboats,theforeignkeyconstraint inReserves is\ndropped; however, theR,eserves tableisnotdropped.\nTounderstand whytheSQLstandard chosetointroduce theREFERENCES priv\u00ad\nilegeratherthantosiInplyallowtheSELECT privilege tobeusedinthissit\u00ad\nuation,consider whathappens ifthedefinition ofIteserves specified theNO\nACTIONoptionwiththeforeign key------.-Joe, theownerofBoats,Inaybepre\u00ad\nventedfromdeleting arowfronlBoatsbecause arowinReserves referstothis\nBoatsrow.GivingFred,thecreatorofReserves, therighttoconstrain updates\nonBoatsinthisrnanner goesbeyond.siInplyallowing hinltoreadthevalues\ninBoats,vvhichisallthattheSELECT privilege authorizes.\n21.4MANDATORY ACCESS CONTROL\nDiscretionary accesscoutrollnechanislns, whilegenerally effective, havecertain\n\\veaknesses. Inparticular theyaresusceptible toTrojanh07'seschelnes whereby\nadeviousunauthorized usercantrickanauthorized userintodisclosing sensi\u00ad\ntivedata.Forexalnple, supposethatstudent rrrickyDick\\Va.nt8tobreakinto\nthegradetablesofinstructor ]).'ustinJustin.IJickdoesthefollowing:\nIIIlIlIecreatesanc\\vtablecalledlVlineAlIlVIine andgivesINSERT privileges\nonthistahleto.Justin(whoisblissfully una\\vare ofaJlthisattention, of\ncourse).\nlI!lIerllodifies thecodeofSOllIeI}BlVISapplication thatJllstinusesoftento\ndo(Lcoupleofadditional things:first,readthe(jradestel-ble, Ctlldnext,\n\\vritetheresultinto IVIineAl1~'1ine.", "740": "706 CHAPTER ~1\nThenhesitsbackandwaitsforthegradestobecopiedinto:NfineAllNlinc and\nlaterundoestheIllodifications totheapplication toensurethatJustindoes\nnotsOlnehow findoutlaterthathehasbeencheated. Thus,despitetheDB~1S\nenforcing alldiscretionary accesscontrols\u00b7\u00b7.,.-\u00b7--only Justin's authorized code,vas\nallowedtoaccessGrades ....\u00b7..\u00b7\u00b7....sensitive dataisdisclosed toanintruder. 1:'hefact\nthatDickcouldsurreptitiously modifyJustin's codeisoutsidethescopeofthe\nDB1/IS's accesscontrolrnechanisrn.\nNIandatory accesscontrolmeehanisrns areairnedataddressing suchloopholes in\ndiscretionary accesscontrol. 1\"hepopular rllodelformandatory accesscontrol,\ncalledtheBell-LaPadula Illodel,isdescribed intenllSofobjects (e.g.,tables,\nviews,rows,columns), subjects (e.g.,users,prograrlls), security classes, and\nclearances. Eachdataba..'3e objectisa..'3signed asecurityclass,andeachsubject\nisassigned clearance forasecurity class;wedenotetheclassofanobjector\nsubjectAasclass(A).Thesecurity classesinasysterllareorganized according\ntoapartialorder,withamostsecureclassandaleastsecureclass.for\nsirnplicity, weassumethattherearefourclasses:topsecTet(T8),secret(8),\nconfidential (C),andunclassified (U).Inthissystem,T8>S>C>U,where\nA>BrneansthatclassAdataismoresensitive thanclassBdata.\nTheBell-LaPadula modelimposes tworestrictions onallreadsandwritesof\ndatabase objects:\n1.SimpleSecurity Property: SubjectSisallowedtoreadobject0only\nifclass(8)>class(()).Forexarllple, auserwithTSclearance canreada\ntablewithCclearance, butauserwithCclearance isnotallowedtoread\natablewithTSclassification.\n2.*-Property: SubjectSisallowed towriteobject0onlyifclass(S)<\nclass(O). Forexarllple, auserwithSclearance canwriteonlyobjectswith\nSorTSclassification.\nIfdiscretionary a,ccesscontrols arealsospecified, theserulesrepresent addi\u00ad\ntionaJrestrictions. Therefore, toreadorwriteadataba.'3e object,auserlllUst\nhavethenecessary privileges (obtained viaGRANTcornrnands) andthesecurity\nclassesoftheuserandtheobjectrnustsatis(ythepreceding restrictions. Let\nusconsider howsuchaInandator~y controlrnech.an.isrn lui.ghth.avefoiled1'ricky\nI)ick.rfheGradestablecouldbeclassified aBS,.Justincouldbegivenclearance\nforS,and'Il'ickyDi.ckcouldbegivenalowerclearance (Cf).Dickcancreate\nobjectsofonlyC!orlc)\\verclassification; sothetablel\\!IineAl1ivline canhaveat\nInos1,theclassification (}.\\Vhentheapplication prograrIl running onbehalfof\n..Justin(andtherefore\\vith clearance S)triestocopy(iradesinto1\\1ineAllIVline,\nitisnotallowedtodosobecause\nclas,s(1\\llineAlllvfrin,e) <class(applicat'ion), a.nel\nthe*-Property isviolated.", "741": "SeC'UT'ity andAuthorization\n21.4.1Multilevel Relations andPolyinstantiation7Q7\nrroapplyInandatory accesscontrolpoliciesinarelational DBMS, asecurity\nclf:1SSmustbeac;sig11ed toeachdataba...sc object. Theobjectscanbeatthe\ngranularity oftables,rows,orevenindividual colurnnvalues.LetusassU111e\nthateachrowisa9signed asecurity class.Thissituation leadstotheconcept\nofamultilevel table,whichisatablewiththesurprising property thatusers\nwithdifferent security clearances seeadifferent collection ofrowswhenthey\naccessthesarnetable.\nConsider theinstance oftheBoatstableshowninFigure21.3.UserswithS\nandTSclearance getbothrowsintheanswerwhentheyasktoseeallrowsin\nBoats.AuserwithCclearance getsonlythesecondrow,andauserwith[J\nclearance getsnorows.\nI.bid.,bnameJcolorI\nSeclJ,:citYClass.\n[~ ~~~::J~;:wnE-\u00b7\u00b7..._-.\n-S-=-C---\nFigure21.3AnInstance B1ofBoats\nTheBoatstableisdefinedtohavebidastheprirnary key.Suppose thatauser\nwithclearance Cwishestoentertherow(101,Picante, Scarlet,0).Wehave\nadilemrna:\n\u2022Iftheinsertion isperlnitted, twodistinct rowsinthetablehavekey101.\n\u2022Iftheinsertion isnotpennitted becausethepriInary keyconstraint isvio\u00ad\nlated,theusertryingtoinsertthenewrow,whoha...')clearance C,caninfer\nthatthereisaboatwith{rid==101whosesecurity classishigherthanC.This\nsituation cOlnpromises theprinciple thatusersshouldnotbeabletoinfer\nanyinfonnation aboutobjectsthathaveahighersecurity classification.\nThisdilerrlllla isresolved byeffectively treatingthesecurity cla..ssification aspart\nofthekey.rrhus,theinsertion isallo\\vedtocontinue, andthetableinstance is\nrnodified asshowninFigure21.4.\nIbidIbna'meIcolorI\nSecurity-'Class I\nl(:i'T.'--'Salsa fled .\n--,\u00a7\n101Picante Scarlet C1---------+------ ....--.___._----+-------102Pinto Brown C---_.... . _---\nFigure21.4Insta.nce 131afterInsertion", "742": "708 CHAPTER 21\nlJsers\\vithclearance Cor[1seejusttherowsforPicanteandPinto,butusers\nwithclearance Sor1'8seeallthreennvs.Thetworo\\vswithbid=1()1can\nbeinterpreted inoneoft'wo\\vays: onlytherc)\\v\\vith thehigher cla..~sification\n(Salsa,withclassification 8)a,ctually exists,orbothexistandtheirpresence is\nrevealed tousersaccording totheirclearance level.Thechoiceofinterpretation\nisuptoapplication developers andusers.\nThepresence ofdataobjectsthatappeartohavedifferent valuestousers\n\u00a5lithdifferent clearances (forexarnple, theboatwithb'id101)iscalledpolyin\u00ad\nstantiation. Ifweconsider security classifications associated \\~lithindividual\ncolurnns, theintuition underlying polyinstantiation canbegeneralized ina\nstraightforward rnanner~ butSOIneadditional detailsInustbeaddressed. \\I\\le\nrelnarkthatthernaindrawback ofrnandatory accesscontrolschelnes istheir\nrigidity; policiesaresetbysysteIlladrninistrators, andtheclassification 1necha\u00ad\nnisrnsarenotflexibleenough. Asatisfactory cornbination ofdiscretionary and\nrnandatory accesscontrols isyettobeachieved.\n21.4.2CovertChannels, DoDSecurity Levels\nEvenifaDElVISenforces thernandatory accesscontrolschenlejustdiscussed,\ninforrnation canflowfrornahigherclassification leveltoalowerclassification\nlevelthrough indirect rneans,calledcovertchannels. Forexanlplc, ifatrans\u00ad\nactionaccesses dataatrnorethanonesiteinadistributed DBI\\1S,theactions\natthetvvosites1nustbecoordina,ted. TheprocessatonesiterTlayhavea\nlowercleara.nce (say,C)thantheprocessatanother site(say,S),andboth\nproceSSE~S havetoagreetocOllnnit beforethetransaction canbeconunitted.\nThisrequirernent canbeexploited topassi11fo1'rnatio11 withanSclassification\ntotheprocesswitha()clearance: Thetransaction isrepeatedly invoked, and\ntheprocess\\viththeC:clearance alwaysagreestocOlIllnit, whereas theprOCf~SS\nwiththe8clearance agreestoconunit ifitwantstotranslnit a1bitanddoes\nnotagreeifit~rantstotransrnit a0l)it.\nInthis(adrnittedly tortuous) lIlanllcr, infonnation withan,9clearance can b(~\nsenttoaprocesswithaC:clearance asastrea111ofbits. 1~hiscovertcllannel is\nanindirect violation oftheint(~ntbehindthe*-Propert.y. Additional exarnples\nofcovertchannels canbefoundreadilvinstatistical dataJ)t:lses, vvhichvvecliscuss,j\n.\"S'.')!6'\"2\" Inkcetlon ....,.\".'.\nDBrv1Svendors recently startedirnplcrnenting rnandatory accesscontrolrnech\u00ad\naniSlns(although theyaTenotpart:oftheS(~Lstanc!<trcl) because thelJnit(:~(l\nStatesl)epartnlent ofJ)efense(1)01))requires suchsupportforitssystelns.TlH~\nDol)requirernents canbedescribed interrnsofsecurity levels ./1~,13,CI,E1JJd\nD.of\\vhich./1isthe1J10stsecureand1)isthelC<l,stsecure.", "743": "SeC'llTity and..4ntluJ1\"ization 709\nCurrent\n SysteIlls:ColnuilereiaIR,DBIvISs areavt\\ilable thatsupportdis\u00ad\ncretionary controlsattheC21evelandrnandat.ory controlsattheBJlevel.\nIf3:NIDB2,Inforruix, ivIierosoft SQLServer,Oracle8,andSybaseASEan\nsupport SQL'sfeatures fordiscretionary clccesscontroLIngel1eral, they\ndonotsupport lnandatory a.ccesscontrol; Ora,cleoffersaversio:noftheir\nproduct withsupport forrnandatory accesscontrol.\nLevelCrequires support fordiscretionary accesscontrol. Itisdivided into\nsublevels ClandC:2;C2alsorequires SOll1Cdegreeofaccountability through\nprocedures such 3,.':3loginverification andaudittrails.LevelBrequires sup\u00ad\nportforlnandatory accesscontrol. Itissubdivided intolevelsBl,B2,and\nB3.Level132additionally requires theidentification andclirnination ofcovert\nchannels. LevelB3additionally requires 11laintenance ofaudittrailsandthe\ndesignation ofasecurity administrator (usually, butnotnecessarily, the\nDBA).LevelA,themostsecurelevel,requires an1athernatical proofthatthe\nsecurity rnechanisrn enforces thesecurity policy!\n21.5SECURITY FORINTERNET APPLICATIONS\nWhenaDBMSisaccessed frornasecurelocation, wecanrelyuponashnple\npassword rnechanisrn forauthenticating users.IIowever, suppose ourfriend\nSarnwantstoplaceanorderforahookovertheInternet. rrhispresents sorne\nuniquechallenges: Salnisnotevenaknownuser(unlessheisarepeatcus\u00ad\ntonler). Fron1Alnazon's pointofview,wehaveanindividual askingforabook\nandofferingtopaywithacreditcardregistered toSaln,butisthisindividual\nreallySarn?f'rcnnSarn'spointofview,heseesafornlaskingforcreditcard\ninforrnation, butisthisindeedalegitirnate partofArnazon's site,andnota\nrogueapplication designed totrickhi1l1intorevealing hiscreditcardnurnber?\nTlhisexarnple illustrates theneedforarnoresophisticated approach toauthen\u00ad\ntication thanasirnplepass\"Vvord rnechanisrn. Encryption techniques provide\nth(-,~foun,dation forrnodern authentica,tion.\n21.5.1Encryption\nThebasicide(\\' b(~hindencryption istoapplyanencryption algorithrn tothe\ndata,usingauser-specified orIJBA-SI)Ccified encryption key.Theoutputof\nthealgorithrn istheen.cryptexl versionofth(~data.ThereisaJsoa,decryp\u00ad\ntionalgorithrrL \u00b7whichta,kestheencryptc\"d dataand (:1,decryption keyas\ninputandthenreturnstheoriginaldata.\\Vithont thecorn:~ctdecryption key~\nthedecryption aJgoritll111prod ucesgibl)crish.rrhe (~llcrypti(nl andclecryption", "744": "710 ()HAPTER 2~1\nr-'-'\" ---------\u00b7--\u00b7--\u00b7----\u00b7----\u00b7- ..\u00b7\u00b7-\u00b7\u00b71\nIDESandAES:TheDESstandard,. adopted in1977,hasa56-biten-!\nIcryption key.Overthne 1COII:tputers havebecome sora\",tthat,in1999 1'I!!.I(1,special-purpose chipandanetworkofPCswereusedtocra{:kDl~S in\n!underaday.Thesystern W~l.'3testing245biHion keyspersecondw,hen\nthecorrectkey\"va,.\"fonnd!Itisestirnated thataspecial~pu.rpose hE:trdware\ndevicecanbebuiltforundera1l1iUioIldollarsthatcancrackDESinunder\nfourhours.Despite growing concerns aboutitsvulnerability, DESisstill\nwidelyused.In2000,asuccessor toDES,calledtheAdvanced Encryp\u00ad\ntionStandard (AES), W&'3adopted asthenew(syrrunetric) encryption\nstandard. AEShasthreepossible keysizes:128,192,and256bits.\\\\lith II\na128bitkeysize,thereareover3 .1038possibleAESkeys,whichison\ntheorderof1024Inorethanthenumber of56-bitDESkeys.Asslllnethat\nwecouldbuildaconlputer fa.'3tenoughtocrackDESin1second. ThisJ\nCOIllputer would.cornpnte forabout149trillionyearstocracka128-bit\n~.=:..~~ (Experts thinktheuniverse islessthan20billionyearsold.)_\nalgorithrns thernselves areassunled tobepublicly known,butoneorbothkeys\naresecret(depending upontheencryption scheme).\nInsymmetric encryption, theencryption keyisalsousedasthedecryption\nkey.TheANSIDataEncryption Standard (DES),whichhasbeeninuse\nsince1977,isawell-known exarnple ofsyllunetric encryption. Itusesanen\u00ad\ncryption algorithrn thatconsists ofcharacter substitutions andpernlutations.\nrrhenlainweakness ofsynunetric encryption isthatallauthorized usersrnust\nbetoldthekey,increasing thelikelihood ofitsbecorning knowntoanintruder\n(e.g.,bysirnpleInllnanerror).\nAnother approach toencryption, calledpublic-key encryption, ha.l;)becorne\nincrea.'3ingly popular inrecentyears.Theencryption scheniCproposed by\nHjvest,Sharnir, andAdlernan, calledRSA,isawell-known exarnple ofpublic\u00ad\nkeyencryption. Eachauthorized userhasapublicencryption key,known\ntoeveryone, andaprivatedecryption key,knownonlytohiniorher.Since\nthepriv<ltedecryption keysarekno\\lllnonlytotheirowners, theweakness of\n1)ESisavoided.\nAcentralissueforpublic-key encryption isho\\vencryption anddecryption\nkeysarechosen. Technically, public-key encryption algorithrns relyonthe\nexistence ofone-way functions, whoseinversesarecornplltationally veryhard\ntodeterrnine. rrheI1SAalgoritllIn, forexaJnple, isbasedontheobservation\nthat,although checking vvhether agivennurnber isprirneiseasy,deterrnining\ntheprirnefactorsofanonpriIne nurnber isextrernely hard.(I)eterlnining the", "745": "Sec'lL'f'ity and\",4'llthoT'izat'ion 71J\nWhyRSAWorks: Theessential pointofthescherneisthatitiseasyto\ncompute dgivene,1>,andq,butve'r.lJhardtocornpute dgivenjusteand\nL.Inturn,thisdifficulty depends OIlthefactthatitishardtodeterlnine\nthepriInefactorsofL,\",r11ichhappentobepandq.A\ncavcat:Factoring\niswidelybelieved tobehard,butthereisnoproofthatthisisso.Nor\nisthereaproofthatfactoring istheonlywaytocrackI\\SA;thatis,to\nCU11111 dfrollleandL.\nprirnefactorsofanurnberwithover100digitscantakeyearsofCPlJtirneon\nthefastestavailable COIllputers today.)\nWenowsketchtheideabehindtheR,SAalgorithrn, ~lssurning thatthedata.to\nbeencrypted isanintegerI.Tochooseanencryption keyandadecryption\nkeyforagivenuser,wefirstchooseaverylargeintegerL,largerthanthe\nlargestintegerwewilleverneedtoencode.1WethenselectanUl1lber easthe\nencryption keyandcornpute thedecryption keydbasedoneandL;howthis\nisdoneiscentraltotheapproach, asweseeshortly. BothLandearel1lade\npublicandusedbytheencryption algorithrn. However, diskeptsecretandis\nnecessary fordecryption.\nIITheencryption function is8\nIIThedecryption function is1IemodL.\nSdmodL.\nvVechooseLtobetheproduct oft,vlOlarge(e.g.,1024-bit), distinct prirne\nnurnbers, 11*q.1\"heencryption keyeisarandornly chosennlunber between\n1andLthatisrelatively prirneto(p\"~-1)*(q-1).Thedecryption keydis\ncornputed suchthatd*e=1mod((p-1)*(q-1)).Ciiventhesechoices, results\ninnurnber theorycanbeusedtoprovethatthedecryption function recovers\ntheoriginal ruessage frorllitsencrypted version.\nAveryirnportant property oftheencryption anddecryption algoritluns isthat\ntherolesoftheencryption anddecryption keyscanbereversed:\ndecrypt( el,(encrypt( c,I)))=I==decTypt(c,(cru:rypt( el,I)))\nSinceIn.anyprotocols relyonthisproperty, \\vehenceforth sirnplyrefertopub\u00ad\nlicaTldprivatekeys(sincebothkeysCHJ1beusedforencryption as\\'lellas\ndecryption) .\nLAmessage th':ltistobeencrypted isdecomposed intoblockssucht.hateachblockcanbetreated\n'L.Sanintegerlesstha.nL.", "746": "..,..,')\nt ..,,-, (;HAPTER 2*1\n\\Vhilewe introduced encryption inthecontextofauthenticatioll, \\VCnotethat\nitisafundaIIlental toolforenforcing\n seeurity.ADBNIS canuseencrlJ1Jt'lon to\nprotectinforrnation insituations wherethenorrnalsecurity rnechanisrns ofthe\nDBlVISarenotadequate. Forexarnple, anintruder rnaystealtapescontaining\nSOUICdataortapaconunu.nieation line.Bystoringandtransrnitting datain\nanencrypted forIn,theDBNlSensuresthatsuchstolendataisnotintelligible\ntotheintruder.\n21.5.2Certifying Servers: TheSSLProtocol\nSuppose \\veassociate apublickeyandadecryption key\"vithAlnazon. Any\u00ad\none,say,userSa,rl1,cansendAlnazon anorderbyencrypting theorderusing\nArnazon's publickey.()nlyArnazon candecrypt thissecretorderbecause the\ndecryption algorithrn requires Arnazon's privatekey,knownonlytoArnazon.\nThishingeson8arn'sabilitytoreliably findoutArnazon's publickey.Anum\u00ad\nberofcornpanies serveascertification authorities, e.g.,Verisign. Arnazon\ngenerates apublicencryption keyeA(andaprivatedecryption key)andsends\nthepublickeytoVerisign. Verisign thenissuesacertificate toArnazon that\ncontains thefollowing inforrnation:\n(VeTi8ig'r'l\" Arnazoin, htl;P8://w'U)w.arnazon. corn,eA)\nThecertificate isencrypted usingVerisign'sown(pTivatekey,whichisknown\nto(i.e.,storedin)Internet Explorer, Netscape Navigator, andotherbrowsers.\nvVhen8an1carnestotheAnulzon siteandwantstoplaceanorder,hisbrowser,\nrunning theSSLprotocol,2askstheserverfortheVerisign certificate. The\nbro\\vser thenvalidates thecertificate bydecrypting it(using\u00b7Verisign's public\nkey)andchecking thattheresultisacertificate withtheHaIneVerisign, and\nthattheURL itcontains isthatoftheserveritistalkingto.(Notethatan\natternpttoforgeacertificate \\villfailbecause certificates areencrypted using\nVerisign'sprivatekey, Vilhiehisknc)\\vnonlytoVerisign.) Next,thebrovvser\ngenerates (1,randc)lnsession key,encrypt itusingArnazon's publickey(\\vhieh\nitobtained frornthevalidated certificate aneltherefore trusts),andsendsitto\nthe1\\rn(lzon server.\nFrornthispointon,theArnazon serverandthebrowser canuseth.csession\nkey(whichbothknowandareconfident tliatonlytheyknow)anda/3Y'fnrnetric\nencrypticHl protc)collike AESorIJEStoexchangc~ securely encrypted rnessages:\nl\\Jlessages areencrypted bythesenderaneldecrypted bythereceiver usingthe\nsa,HIesessionkey.rrheencrypted Inessages travelovertheInternet andrnaybe._-__--_ .._.-----\n:2Abrowser usestheSSLprotocol ifthetclrgetlJHl..ibeginswithhttps.", "747": "8eC'lJ,1\"ity and.AnthoT'ization 113\nintercepted, buttheycannotbedecrypted withoutthesessionkey.Itisuseful\ntoconsider \\vhy\\veneedasessionkey;afterall,thebro\\vser couldsirnplyhave\nencrypted 8a1n'soriginalrequestusingArnazon '8publickeyandsentitsecurely\ntotheArnazon server.Thereasonisthat,withoutthesessionkey,theArnazon\nserverhasno\"'laytosecurely sendinfonnation backtothebro\\vser. Afurther\nadvantage ofsessionkeysisthatsyrnrnetric encryption iscOlnputationally nluch\nfasterthanpublickeyencryption. Thesessionkeyisdiscarded attheendof\nthesession.\nThus,8aIncanbeassuredthatonlyAlnazon canseetheinforrnation hetypes\nintothefonnshowntohirnbytheAIuazon serverandtheinforrnation sent\nbacktohilninresponses froIntheserver. However, atthispoint,r\\rnazon\nhasnoassurance thattheuserrunning thebrowser isactually Sanl,andnot\nSOlneone whohasstolenSarn'screditcard.l-'ypically, rnerchants acceptthis\nsituation, whichalsoariseswhenacustoIner placesanorderoverthephone.\nIfwewanttobesureoftheuser'sidentity, thiscanbeaccoIuplished byaddi\u00ad\ntionally requiring theusertologin.Inourexarnple, 8arn11lUStfirstestablish\nanaccount withAlnazon andselectapassword. (Stun'sidentity isoriginally\nestablished bycallinghilnbackonthephonetoverifytheaccount inforrnation\norbysending elnailtoanelnailaddress; inthelattercase,allweestablish is\nthattheowneroftheaccount istheindividual withthegivenclnailaddress.)\nWhenever hevisitsthesiteandAnlazon needstoverifyhisidentity, AInazon\nredirects hinltoaloginfo1'1nafter'usingSSLtoestablish asessionkey.'rhe\npaE;sword typedinistransrnitted securely byencrypting itwiththesessionkey.\n()nercrnaining drawback inthisapproach isthatArnazon nowkno\\vsSarn's\ncreditcardnlunber, andhernusttrustAlnazon nottornisuseit.TheSecure\nElectronic Transaction protocol addresses thislirnitation. Everycustolner\nrnustnnwobtainacertificate, withhisorherownprivateandpublickeys,\nandeverytransaction involves theAlnazon server,thecust(nner's browser, and\ntheserverofatrustedthirdparty,suchasVisaforcreditcardtransactions.\nr:Chebasicideaisthatthebro\"vser encodes non-credit caTdinforrnation using\nAInazon's publickeyandthecreditca.rdinfonnation usingVisa'spublickeyand\nsendsthesetotheAJnazon servc:~r,whichfor\"vards thecreditcardinforrnation\n(whichitcannotdecrypt) totheVisaserver.IftheVisct servera,pproves the\ninforrnation, thetransa,ction goesthrough.\n21.5.3DigitalSignatures\nSuppose tllat,Elnlcr,whoworksforArnazoIl, a,ndBetsy,\\vho\\\\forksforIVlcCjnlw\u00ad\nlIill,need toCOlllll1Unicate \\vitheachotheraboutinventory. Publickeyencryp\u00ad\ntioncanbeusedt()createdigitalsignatures forrnessages. rrhatis,rnessages", "748": "714 CHAPTER 2l\ncanbeencoded insuchawaythat,ifElIneI'getsaInessage supposedly fr(nTI\nBetsy,hecanverifythatitisfronlBetsy(inaddition tobeingabletodecrypt\nthernessage) and,further,provethatitisfroInBetsyatMcGraw-lIill, evenif\nthell1cssage issentfroInaIIotrnail account whenBetsyistraveling. Sirnilarly,\nBetsycanauthenticate theoriginator ofInessages frolnEllner.\nIfEllnerencrypts Inessages forBetsyusingherpublickey,andvice-versa,\ntheycanexchange inforrnation securely butcannotauthenticate thesender.\nSorueone whowishestoirnpersonate Betsycoulduseherpublickeytosenda\nrnessage toEIrner,pretending tobeBetsy.\nAcleveruseoftheencryption sche111e, however, allowsEllnertoverifywhether\nthernessage wasindeedsentbyBetsy.Betsyencrypts thernessage usingher\nprivatekeyandthenencrypts theresultusingElrner'spublickey.WhenEllner\nreceives sucha111essage, hefirstdecrypts itusinghisprivatekeyandthen\ndecrypts theresultusingBetsy'spublickey.rrhisstepyieldstheoriginal un\u00ad\nencrypted rnessage. FllrtherInore, Ehnercanbecertainthatthernessage was\ncomposed andencrypted byBetsybecause aforgercouldnothaveknownher\nprivatekey,andwithout itthefinalresultwouldhavebeennonsensical, rather\nthanalegible111essage. 1~\\lIther, because even E~lrnerdoesnotknowBetsy's\nprivatekey,BetsycannotclairnthatEhnerforgedtheruessage.\nIfauthenticating thesenderistheobjective andhidingthernessage isnotim\u00ad\nportant, wecanreducethecostofencryption byusingamessage signature.\nAsignature isobtained byapplying aone-way function (e.g.,ahashingschelne)\ntothernessagc andisconsiderably sInaHer. \\Veencodethesignature asinthe\nbasicdigitalsignature approach, andsendtheencoded signature together with\nthefull,unencoded 111cssage. rrherecipient canverifythesenderofthesigna\u00ad\ntureasjustdescribed, andvalidatetheI11essage itselfbyapplying theonc-\\vay\nfunction andcOlnparing theresultwiththesignature.\n21.6ADDITIONAL ISSUESREI.JATED TOSECURITY\nSecurity isa,l)roadtopic,andourcoverage isnecessarily lirnited. 'rhissection\nbrieflytouchesonsorneadditional irnportant issues.\n21.6.1RoleoftheDatabase Administrator\nrrhedatabase (l,chninistrator (IJBA)playsanirnportant roleinenfol'c:ing the\nsecurity-related aspectsofi:1dataJ>ase design.Inconjunction withtheo\\vners\nofthedata,theI)BAaJsoCOlltributes todeveloping asecurity policy.TheI)BA\nhasasp(~ciali:1,ccount, \\vhichwecallthesystenl account~ (l,ndisresponsible", "749": "SeC1l7\u00b7o;zty and.A'ntho'rizaL\u00b7ion\nfortheoverallsecurity ofthesysteru. Inparticular ~theDBA.dealswiththe\nfollo\\ving:\n1.Creating NewAccounts: EachnewuserorgroupofusersBlustbe\nassigned anauthorization IDandapaA'3s\\vord. Notethatapplication pro\u00ad\ngraInsthataccessthedatabase havethesaIneauthorization IDastheuser\nexecuting theprograill.\n2.Mandatory Control Issues: IftheDB~'fSsupports rnandatory control\u00b7-\u00b7\u00b7\u00b7\u00ad\nS0111ecustornized systeIns forapplications \\vithveryhighsecurity require\u00ad\nrnents(forexarllple, rnilitary data)provide such support~-the DBAlllUst\nassignsecurity classestoeachdatabase objectanda..'3signsecurity clear\u00ad\nancestoeachauthorization IDinaccordance withthechosensecurity pol\u00ad\nICY\u00b7\nTheDBAisalsoresponsible forrnaintaining theaudittrail,whichisessen\u00ad\ntiallythelogofupdates withtheauthorization ID(oftheuserexecuting the\ntransaction) addedtoeachlogentry.ThislogisjustaIninorextension of\nthelogmechanislll usedtorecoverfromcrashes. Additionally, theDBAlllay\nchoosetornaintain alogofallactions, including reads,perfornled byauser.\nAnalyzing suchhistories ofhowtheDBMSwasaccessed canhelpprevent se\u00ad\ncurityviolations byidentifying suspicious patterns beforeanintruder finally\nsucceeds inbreaking in,oritcanhelptrackdownanintruder afteraviolation\nh&\"beendetected.\n21.6.2Security inStatistical Databases\nAstatistical database contains specificinforrnation onindividuals orevents\nbutisintended toperlnitonlystatistical queries. Forexarnple, if\\vernailltained\nastatistical database ofinforrna,tion aboutsailors, wewouldallowstatistical\nqueriesaboutaverageratings, rnaxirnurn age,andsoon,butnotqueriesabout\nindividua.l sailors.Security insuchdataJxtses posesnevvprobleurs because itis\npossible toinferprotected inforrnation (such Cl\"S(1,sailor'srating)frornans\\vers\ntoperrnitted statistical queries. Suchinference opportunities represent covert\nchannels thatcancornprornise thesecurity policyofthedatabase.\nSuppose thatsailor Sn(~akyPeteVlantstokncrwtheratingof.A.clrniral Ho1'n\u00ad\ntooter ~thec~st~elned chairrnarl ofthesailingclu1),andhappens tokno\\vthclt\nIIorntooter istheolclestsailorinthe(Jub.Pete repeat(~dly (18ksqueriesofthc~\nforln\"'IIow'InClnysailorsaTetherewhoseageisgreaterthan..x,:?\"forvaxious\nva.1uesof..\\'\",untilthe(UIS\\Veris1.(}bviously, thissa,iIorislIorntooter, th(~\noldestsailor.Notethat eachofthesequeriesis(J,valiclstatistical queryand\nisperrnitt(~d. Letthevalueof..xatthisPOilltbe,say,fi5.~Peteno\\vasksthe\n(lller:y,\"'vVhatistll(\u00b7~nraxirnurn ratingofallsailors\\vhoseageisgreaterthan", "750": "716 (:HAPTER \u00b7121\n65'1\" f\\gain~thisqueryispennitted becauseitisastatistical query.However,\ntheans\\vertothisqueryrevealsJ101'ntooter's ratingtoPete,andthesecurity\npolicyofthedataba.se isviolated.\nOneapproach topreventing suchviolations istorequirethateachqueryrnust\ninvolveat1e(1.'3tS01nelnininuull nUluber, say,N,ofl'()\\VS.vVitharea.sonable\nchoiceofN,Pete\\vouldnotbeabletoisolatetheinforrnation about1101'ntooter,\nbecause thequeryabouttherna.xinUUll ratingwouldfail.rrhisrestriction,\nhc)\\vever, iseasytooverCOIne. Byrepeatedly (1.'3kingqueriesoftheforIII,'\"How\nruanysailorsaretherevvhoseageisgreaterthan..Y?\"untilthesystenlrejects\nonesuchquery,Peteidentifies asetofNsailors,including Florntooter. Letthe\nvalueof~Yatthispointbe55.Novv,Petecanasktvvoqueries:\nIII\"vVhatistheSlUlloftheratingsofallsailorswhoseageisgreaterthan\n557\"SinceNsailorshaveagegreaterthan55,thisqueryisperrnitted.\n\u2022\"WhatistheSUIlloftheratingsofallsailors,otherthanl1orntooter, whose\nageisgreaterthan55,andsailorPete?\"Sincethesetofsailorswhoserat\u00ad\ningsareaddedupnowincludes PeteinsteadofHorntooter, butisotherwise\nthesallle,thernunber ofsailorsinvolved isstillN,andthisqueryisalso\npennitted.\n171'olntheanswers tothesetwoqueries, say,AlandA2,Pete,whoknowshis\nrating,caneasilycalculate Horntooter's ratingasAl~A2+.Pete'8rating.\nPetesucceeded because heWcU3abletoasktwoqueriesthatinvolved Illanyof\nthesarnesailors. 'Thenurnber ofrowsexalnined incorllrnon bytwoqueries\niscalledtheirintersection. IfaliInit\\veretobepla,cedonthealIlount of\nintersection perrnitted bet\\veen anyt-wo queriesissuedbytheSi::uneuser,Pete\ncouldbefoiled.Actually, atrulyfiendish (andpatient) usercangenerally find\noutinforruation aboutspecificindividuals evenifthesystcrnphtcesa,rniniruurn\nnUlnberofro\\vsbound(N)andarnaxirnurn intersection bound(1\\1)onqueries,\nhutthen1.11n])erofqlleriesrequired todothisgro\\vsinproportion toNfA!.\"Ve\ncantrytoadditionally lirnitthetotalnUlnbe1' ofqueriesthatauserisallowed\ntoaslcbutt\\VOuserscouldstillconspire tobreachsecurity. ByIl1aintaining\nalogofallactivity (including rectcl-on1y ac(,~esses), suchquerypatterns canbe\ncletected, icleallybeforeasecurity violation occurs.Thisdiscussion shouldrnake\nitcleaT~however, thatsecurity instatistical databases isdifficult toenforce.\n21.7DESIGN CASf:STUDY: THEINTERNET STORE\n\\VereturntoourcasestudyandourfriendsatDBI)udes toconsider security\nissues.'Therearethreegroupsofusers:custolners, ernl>loyees, a.ndtheovvner\nofthel>ookshop.(()fcourse,thereisalsothedatal)ase adrninistrator ~who", "751": "SeC'lIT'ityaTidA'ldhorizaJion 717\nlutsuniversal accesstoalldataandisresponsible forregularoperation oftlle\ndatabase systcrTl.)\n<:.,' ,\nThe()\\vnerofthestorehasfullprivileges onalltables.Custorners canquerythe\nBookstableandplaceordersonline,buttheyshouldnothaveaccesstoother\ncustonH=~rs' recordsnortootherc11storne1'8' orders.DBDudes restricts access\nint\\VO\u00b7ways.First,itdesignsasilnple'VVebpagewithseveralfonussirnilarto\nthepageshc}\\vninFigure7.1inChapter 7.rrhisallo\\vscusto1ners tosubrnit\nas111allcollection ofvalidrequests without givingtho1ntheabilitytodirectly\naccesstheunderlying DB1JfSthrough anSQLinterface. Second, I)B.Dudes uses\nthesecurity features ofthe.DB1\\\u00b7IStoli111itaccesstosensitive data.\nrIhe\\vebpage allowscustorners toquerytheBooksrelation byISBNnU111bcr,\nnarneoftheauthor,andtitleofaboolcThewebpage alsohastwobuttons.\nThefirstbuttonretrieves alistofallofthecustolIler's ordersthatarenot\ncompletely fulfilled yet.l'hesecondbuttondisplays alistofallcornpleted\nordersforthatcustorner .Notethatcustolllers cannotspecifyactualSQL\nqueriesthroughtheWebbutonlyfillinSCHnepararneters inaforn1toinstantiate\nanautonlatically generated S(~Lquery.Allqueriesgenerated through fonll\ninputhaveaWHEREclausethatincludes thecidattribute valueofthecurrent\ncusto1ner, andevaluation ofthequeriesgenerated bythetwobuttons requires\nknowledge ofthecustolller identification nUlnber. Sinceallusershavetolog\nontothewebsite beforebrowsing thecatalog, thebusiness logic(discussed\ninSection 7.7)lllust1naintain stateinforrnation aboutacustoDler (i.e.,the\nCllstorner identification nUlnber) duringthecustorner's visittothewebsite.\n~rhesecondstepistoconfigurEl, thedatabase tolirnitaccessaccording toeach\nusergroup'sneedtoknow.DBI)udes createsaspecialcustomer accountthat\nhasthefollowing privileges:\nSELECT ONBooks,New()rders, ()ldOrders, NewOrderlists, OldOrderlists\nINSERT ONNew()rders, ()Ic:H)rders, New()rderlists, ()ld()rderlists\nErnployees shouldbeabletoacidncvvbookstothecatalog, upda,tethequantity\nof(Lbookinstock,revisecustorner ordersifrlecessary, andupdateallcustorner\ninforrnation e:cceptthecreditcard'inforInation ..Infa,ct,ernployees shouldnot\nevenbeabletoseeacustorner's creditcardnurnber. 1]lcreforc,DBDucles\ncreatesthefoUcnving vic\\v:\nCREATE VIEWC\\lstornerlnfo (cid,cnarnc,address)\nASSELECT (~.cid,C.cnaJTlE\\ C.(l.cldress\nFROMCllstolners C\nI)BI)udes givestheemployee account thefollc)\\ving privileges:", "752": "718 (~HAP'TER ~l\nSELECT ONCllstolnerlnfo~ Books~\nNe\\vOrders, ()Id()rders~N e\\v(}rcler lists~Old()rderlists\nINSERT ONCllstornerlnfo, Books,\nNc\\vOrders, 01dC)rders, Ne\\vOrderlists~ ()ldOrderlists\nUPDATE ONCustolnerInfo, Books,\nNew()rders, OldOrders, Nevv()rderlists, Old()rderlists\nDELETE ONBooks,NewOrders, Old()rders~ NewOrderlists, ()ldOrderlists\nObserve thaternployees canrnodifyCustornerlnfo andeveninserttuplesinto\nit.Thisispossible becausetheyhavethenecessary privileges, andfurther,the\nviewisupdatable andinsertable-into. \\Vhileitseernsrea.sonable thatelllployees\ncanupdateacustorner's address, itdoesscelnoddthattheycallinsertat1lple\nintoCllstornerlnfo E~venthoughtheycannotseerelatedinfonna.tion aboutthe\ncustorner (i.e.,creditcardnurnber) intheCllstorners tahle.Thereasonfor\nthisisthatthestorewantstobeabletotakeorders 1'1'0111first-tirne custorners\noverthephonewithout askingforcreditcardinforrnation overthephone.\nErnployees caninsertintoCustornerlnfo, effectively creating anewCustoillers\nrecordwithout creditcardinforluation, andcustorners cansubsequently provide\nthecreditcardnurnber through aWebinterface. (Obviously, theorderisnot\nshipped untiltheydothis.)\nInaddition, therearesecurity issueswhentheuserfirstlogsontothewebsite\nusingthecllstolner identification nUlnber. Sending thenUlnber unencrypted\novertheInternet isasecurity hazard,andasecureprotocol suchasSSLshould\nbeused.\nCornpanies sucha.sCyberCash andDigiCash offerelectronic conunerce pay\u00ad\nrIlcntsolutions, eveninclu.ding electronic cash.Discussion ofhoy\\!toincorporate\nsuchtechniques intothewebsiteareoutsidethescopeofthisbook.\n21.8REVIEW QUESTIONS\n..l\\.nS\\~lerS totherevic\\vquestions canbefounelinthelistedsections.\n91!\\\\That (J..retIle1n,ainobjectives indesigning asecuredatal)ase application?\nExplain thete1'rns,seCT'CCY,'integrity, availalrddy, and(lldhcn,tication. (Sec\u00ad\ntion21.1)\nISExplain tlH~tenns8ccur'ity policy,'UHl8cc'u'l'ily TrlcchaILisnl aridho\\vtllCy\narerelated.(Section 21.1)\nl1li\\\\Thatisth(~Blainiele;,1.behinddisc'rct'ion,aT,1j acces.'con!;T'Ol? vVhatisthe\nideabehind Trl.,(1,'ruiaf,oT;ij accesscon,troT? vVhataretherelativ(~ rneritsof\nthes(~ tv\u00b7/C)approaches? (Section 21.2)", "753": "IIDescribe theprivileges recognized inS(~L?Inparticular, describe SELECT,\nINSERT, UPDATE, DELETE, andREFERENCES. Foreachprivilege, indicate\n\\vhoacquires itautornatical1y onagiventable.(Section 2103)\nIII-Io\\varetheO\\VIH~rSofprivileges identified? Inparticular, discuss atLtho\u00ad\nrizlrt;ion ID8and'{\"ole8.(Section 21.3)\nI'l\\\\Thatisanauthorizat'ion graph?Explain S(~L'sGRANTandREVOKE eOl11\u00ad\nIIHHldsinterrnsoftheireffectonthisgraph.Inparticular, discuss\\vhat\nhappens whenuserspassonprivileges thattheyreceivefrornsorneone else.\n(Section 2103)\nIIDiscussthedifference between havingaprivilege onatableandonavie\\v\ndefined overthetable.Inparticular, howcanauserhaveaprivilege\n(say,SELECT) overaview'without alsohavingitonallunderlying tables?\n\\'Tho11111sthaveappropriate privileges onallunderlying tablesoftheview?\n(Section 21.3.1)\n111vVhatareobjects,subjects, 8eCl.Ir'ity classes,andcleaTances inrnandatory\naccesscontrol? IJiscusstheBell-LaPadula restrictions intennsofthesecon\u00ad\ncepts.Specifically, definethesirnpleseC1LTity pr'Operty andthe*-pToperty.\n(Section 21.4)\nIIWhatisaTrojanhorseattackandhowcanitcOlnprornise discretionary\naccesscontrol? Explain howlnandatory a,ccesscontrolprotects against\nTrojanhorseattacks. (Section 21.4)\nJl1IIWhatdothetennsrnult'ilevf;l tableandpolyinstantiation rnean?Explain\ntheirrela.tionshi p,a,ndho\\,rtheyariseinthecontextoflnandatory access\ncontrol.(Section 21.4.1)\nIii\\'ThatarecovertChJlrrnels andhowcantheyarisev\\Thenbothdiscretionary\nandluandatory accesscontrols areinplcl,ce?(Section 2104;.2)\nIIDiscusstheI)oDsecurity levelsfordatabase systclns. (Section 21.4.2)\nIiIilExplain why(tsirnplepEtssword rnechanisrn isinsufficient forauthentica\u00ad\ntionofusers\"\\vho<.lccessadataba ..\"crenJotely, say,overtheInternet. (Sec\u00ad\ntion21.5)\nIllll\\VhatisthedifferellC(~ between sy'tnrnctTic a,lldpublic-key en,(~r'ypti()n? C.;ive\nex:.unples of1Nell-kncJWll encryption algoritluns ofbothki.lldsov\\lhatisthe\nrnain\\veakilcss ofsynunetric encryption andho'Vvisthisaddressed inpublic\u00ad\nk(~:yencryption? (Section 21.5.1)\nII1)i8c118sthechoiceofencrYIltion anddecryption keysinpublic-key en.cryp\u00ad\ntioncHIdhowtheyarellsedtoc~ncryptanddecrypt dattLExplain therole\nof()'nC-'luay !u.'ncti(Jr/,.'i. vVhatH.ssurance do\\veh.avethattheH,SA SC;heln(~\n(:;:'1,nno1,becornprornised? (Section 21.5.1)", "754": "720 C~HAPTER 21\nII\\:\\Thatarecert'ificat'ion attthorities and\\vhyarethey nE~eded? Explain ho\\v\ncert'ificates areissuedtositesandvalidated byH,bro\\vser usingtheSSL\nTJrotocol: discusstheroleofthesession key.(Section 21.5.2)\nIIIfauserconnects toasiteusingtheSSLprotocol, explain\\vhythereisstill\naneedtologintheUSCI'.Explain theuseofSSLtoprotectpass\\vords and\nothersensitive infonnation beingexchal1ged. vVhatisthesecureelectTolu:C\ntransaction pTOtoCO[? vVhatistheaddedvalueoverSSL?(Section 21.5.2)\nIIAd'i.qital/:rignat'UTe facilitates secureexchange ofrnessages. Explain what\nitisandhowitgoesbeyondsirnplyencrypting rnessages. Discusstheuse\nofrnessage signat'UTes toreducethecostofencryption. (Section 21.5.3)\nII\\:Vhatistheroleofthedataba\"se achninistrator withrespecttosecurity?\n(Section 21.6.1)\nIIDiscusstheadditional security loopholes introduced instatistical databases.\n(Section 21.6.2)\nEXERCISES\nExercise 21.1Brieflyanswerthefollowing questions:\n1.Explain theintuition behindthetworulesintheBell-LaPadulamodel forrnandatory\naccesscontrol.\n2.Giveanexarnple ofhowcovertchannels canbeusedtodefeattheBell-LaPadula rnodel.\n;3.Giveanexarnple ofpolyinstantiation.\n4.Describe ascenario inwhichrnandatory accesscontrols prevent abreachofsecurity that\ncannotbeprevented through discretionary controls.\n5.Describe ascen:'Lrio inwhichdiscretionary accesscontrols arerequired toenforceaseCll\u00ad\nritypolicythatcannotbetmforced usingonlymancl<ttory controls.\n6.IfaDBNISalreadysupports discretionary andJnandatory accesscontrols, isthereaneed\nforencryption '?\n7.Explain theneedforeachofthefollowing lirnitsinastatistical database systern:\n(a)Amaxirnurn onthemunber of(pl(~riesauserca.Jl PoS(~.\n(b)ArninirnUln onthemunber oftuplesinvolved inans\\vering aquery.\n(c)Amaximurn ontheintersection oft\\voqueries (Le.)onthenumber oftuplesthat\nbothqueriesexarnine).\n8.Explain theuseofanaudittrail,''lithspecialreference toastatistical database system.\n9.\\,VllatistheroleoftheDBA\\vithrespecttosecurity?\n10.Describe AESanditsrelationship toDES.\n11.\\?\\'hatispublic-key encryption? Howdoesitdifferfrorntheencryption approach taken\nintheDataEncryption Standard (DES)~andin\\vhatwaysisitbetterthanDES?", "755": "SeCllTity and\"\"4'uthorizat'ion 721\n12.Explain hmvacompany offering services ontheInternet coulduseencryption-based\ntechniques tolllakeitsorder-entry processsecure.DiscusstheroleofDES,A.ES,SSL,\nSET,anddigitalsignatures. Searchthe\\tVebtofindoutIllOreaboutrelatedtechniques\nsuchaselectronic cash.\nExercise 21.2YouaretheDBAfortheVeryFine ToyCornpany andcreatearelation called\nEmployees withfieldsenam,e, dept,and Sala1~1j. Forauthorization reasons, youalsodefine\nviewsEmployeeN allIes(withena:rneastheonlyattribute) andDeptInfo withfieldsdeptand\navgsalary. Thelatterliststheaveragesalaryforeachdepartrnent.\n1.Showtheviewdefinition statements forEnlployeeN amesandDeptlnfo.\n2.Whatprivileges shouldbegrantedtoauserwhoneedstoknowonlyaveragedepartn1ent\nsalaries fortheToyandCSdepartments?\n3.Youwanttoauthorize yoursecretary tofirepeople(youwillprobably tellhill1whornto\nfire,butyouwanttobeabletodelegate thistask),tocheckonwhoisanelllployee, and\ntocheckonaveragedepartment salaries. Whatprivileges shouldyougrant?\n4.Continuing withthepreceding scenario, youdonotwantyoursecretary tobeableto\nlookatthesalariesofindividuals. Doesyouranswertotheprevious question ensurethis?\nBespecific: Canyour secret~ry possibly findoutsalariesofsomeindividuals (depending\nontheactualsetoftuples)\", orcanyoursecretary alwaysfindoutthesalaryofany\nindividual hewantsto?\n5.Youwanttogiveyoursecretary theauthority toallowotherpeopletoreadtheEUlploy\u00ad\neeNames view.Showtheappropriate conI111and.\n6.Yoursecretary definestwonewviewsusingtheEnIployeeNarnes view.Thefirstiscalled\nAtoRNamesandsimplyselectsnamesthatbeginwithaletterintherangeAtoR.The\nsecondiscalledHowManyNan1es andcountsthenumber ofnarnes.Youaresopleased\nwiththisachievement thatyoudecidetogiveyoursecretary therighttoinserttuplesinto\ntheEnlployeeN an1esview.Showtheappropriate cOllunand anddescribe 'whatprivileges\nyoursecretary hasafterthiscornrnand isexecuted.\n7.Yoursecretary allowsToddtoreadtheErl1ployeeNarnes relation andlaterquits.You\nthenrevokethesecretary's privileges. \\Vhathappens toTodd'sprivileges?\n8.Giveanexarnple ofaviewupdateonthepreceding schelnathatcannotbeilllplernentecl\nthrough updates toErl1ployees.\n9.Youdecidetogoonanextended vacation, andtornakesurethaternergencies canbe\nhandled, youwanttoauthorize yourbossJoetoreadandmodifytheErnplo~yees relation\nandtheErIlployeeNalnes relation (andJoelllustbeableto(leleg(:lte authority, ofcourse,\nsinceheistoofarupthemanagernent hierarchy tottctually doany\\vork).Showthe\nappropriate SQLstaternents. CanJoereadtheDeptlnfo view?\n10.Afterreturning frornyour(wonderful) vacation, youseeanotefromJoe,indicating that\nheauthorized hissecretary fvliketorea,dtheErnployees relation. You\\vanttorevoke\nf\\like's SELECT privilege onErnployees, butyoudonot\\vanttorevoketherightsyou\ngavetoJoe,eventeruporarily. CanyoudothisinSQL?\n11.LateryourealizethatJoehasbeenquitebusy.HehasdefinedaviewcalledAllNarnes\nusingtheviewErnployeeN (lIneS,definedanother relation caJledStaffNarnesthatheha..s\naccessto(butyoucannotaccess), andgivenhissecretary f\\1iketherighttoreadfrom\ntheAllNanH:~s vicw.l\\like haspassedthisrightontohisfriendSusan.You d(~cidethat,\nevenatthecostofannoying .Joe1)yrevoking Borneofhisprivileges, yousirnplyhave\ntotakf~awayTvIike(\\,ndSusarl's rightstoseeyourdata.\\VhaJ, REVOKEstaternent \\vould\nyouexecute? 'VVhatrightsdoesJoehaveonErnployees afterthisstaternent isexecuted?\n\\Vha..tviewsaredropped asaconsequence?", "756": "", "757": "22\nPARALLEL AND\nDISTRIBUTED DATABASES\n...Whatisthernotivation forparallelanddistributed DBMSs?\n...Whatarethealternative architectures forparalleldatabase systellls?\n...Howarepipelining anddatapartitioning usedtogainparallelism?\n...Howaredataflow concepts usedtoparallelize existingsequential code?\n...Whatarealternative architectures fordistributed DBMSs?\n...Howisdatadistributed acrosssites?\n...Howcanweevaluate andoptimize queriesoverdistributed data?\n...Whatarethenleritsofsynchronous vs.asynchronous replication?\n...Howaretransactions Inanaged inadistributed environment?\n..Keyconcepts: parallel DBNISarchitectures; perfonnance, speed\u00ad\nupandscale-up; pipelined versusdata-partitioned parallelism, block\u00ad\ning;partitioning strategies; dataflow operators; distributed DB11S\narchitectures; heterogeneous systernsj gateway protocols; datadistri\u00ad\nbution,distributed catalogs; sernijoins, datashipping; synchronous\nversusasynchronous replication; distributed transactions, locknlan\u00ad\nagcrnent, deadlock detection, two-phase ccnnlnit, Presurned Abort\nNornanISanisland, f~ntireofitself;everyTnanISapIeceofthe\ncontirlcnt, apartofthernain.\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7...JohnDonne\n725", "758": "C~HAPTER 2~\nInthischapter \"velookattheissuesofp:u-allelislll ariddata,distribution ina\nIJBlvIS. VVebeginbyintroducing parallelanddistributed database systcrIls in\nSection22.1.InSection 22.2~wediscussaJternative hardwa,re configurations for\naparallelDBI\\lIS.InSection22.:3,\\ve introduce theconcept ofdatapartitioning\nandconsider itsinfluence onparallelqueryevaluation. InSection22.4,wesho\\v\nho\\vdatapartitioning canbeusedtoparallelize severalrelational operations.\nInSection 22.5,\\veconclude ourtreatrnent ofparallelqueryprocessing witha\ndiscussion ofparallelqueryoptirnization.\n'Therestofthechapter isdevoted todistributed databases. vVepresentan\novervievv ofdistributed databases inSection 22.6.\\Vediscusssornealterna\u00ad\ntivearchitectures foradistributed DBMSinSection 22.7anddescribe options\nfordistributing datainSection 22.8.vVedescribe distributed catalog rnan\u00ad\nagernent inSection 22.9,theninSection 22.10,wediscussqueryoptirnization\nandevaluation fordistributed databases. InSection22.11,wediscussupdating\ndistributed data,andfina.lly,inSections 22.12to22.14wedescribe distributed\ntransaction ruanagernent.\n22.1IN\"TRODUCTION\nvVehavethusfarconsidered centralized database rnanageruent systerns inwhich\nallthedataisluaintained atasinglesiteand&ssluned thattheprocessing of\nindividual transactions isessentially sequential. Oneofthemostirnportant\ntrendsindata.bases istheincreased useofparallel evaluation techniques and\ndata,distribution.\nAparallel database system seekstoirnprove perforruance through paral\u00ad\nlelization ofvariousoperations, suchasloadingdata,building indexes, and\nevaluating queries. Although data,IIH1Ybestoredinadistributed fa\"shionin\nsuchasystcrn, thedistribution isgoverned. solelybyperfon.nance considera\u00ad\ntions.\nInadistributed database systenl, data,isphysically storedacrossseveral\nsites,andea,chsiteistypically rnanaged bya1)13lV18capable ofrunning il1\u00ad\ndependent ofthe01:11e1'sites.rrhelocation ofdataitenlSandthedegreeof\nautonorny ofiJldividual siteshaveasignificctllt irnpa,ctonaJlaspects ofthe\ns)'stern, including c111eryoptirnization andprocessing, concurrency control, and\nrecovery. IncontnLst toparalleldatal)ases, thedistribution ofdataisgoverned\nbyfactorssuchcL'3locaJownership andiIlcreasccl a,vailability, inaddition to\nperforlnance issu(~s.\n\\VhileparaJlelisrrl is1110tivated l)yperforlnculc~c~ consideratiolls, sev(,~ra]distinct\nissuesrnotivate data,clistriblltioIl:", "759": "Par-alZel andDist'rilnl,ted IJatabascs 727\n~\nlIBIncreased AvailabHity: Ifasitecontaining arelation goesdovvn,the\nrelation continues tobeavailableifacopyisInaintained atanother site.\nMDistributed AccesstoData:Anorganization Inayhavebranches in.\nseveralcities.Although analysts rnayneedtoaccessdatacorresponding to\ndifferent sites, 1NCusuallyfindlocalityintheaccesspa,tterns (e.g.,abank\nlnanager islikelytolookuptheaccounts ofcustorners atthelocalbranch),\nandthislocalitycanbeexploited bydistributing thedataaccordingly.\nIIAnalysis ofDistributed Data:Organizations \\vanttoexa\"rnine allthe\ndataavailable tothern,evenwhenitisstoredacrossrnultiple sitesand\nonlllultiple databc6'3c systerns. Support forsuchintegrated accessinvolves\nnlanyissues;evenenabling accesstowidelydistributed datacanbea\nchallenge.\n22.2ARCHITEC\"rURES FORPARALLEL DATABASES\nThebasicideabehindparalleldatabases istocarryoutevaluation stepsinpar\u00ad\nallelwhenever possible, andtherearernanysuchopportunities inarelational\nDBJ\\lIS;databases represent oneofthelnostsuccessful instances ofparallel\ncornputing.\n~\nciJ\nSHARED NOTHING SHARED MEMOR'( SHARED DISK\nFigure22.1PhysicaJ Architectures forParallel Da.tabase Systems\nl~hreeluainarchitectures havebeenproposed forbuilding para.11elDBIVISs. In\nashared-IuerIlory SystCIll,Inultiple CPU\u00b7sareattached toaninterconnection\nnet\\vork [Lndc;an[l,ccess (1,cornrl1on regionofrnainlnelilory. Ina.shared-disk\ns:ysten.1, c(l,chCPUhasaprivaternelnory anddirectaccesstoalldisksthrough\naninterconnection nehvork. Ina,shared-nothing systerl1:eac:hCPTJhaBlocal\nrnainlnelnory anddiskspace,butnotwoCP1Jscanaccessthesarnestorage\narea;allcOHununication betvveen CP1Jsistllrough a11etwork connection ..rrhe\nthreearchitectures areillustrated inFigure22.1.", "760": "728 (~HAPTER 22;\nITheshared-rnernory architecture isclosertoaconventional rnachine, andIllany\nconunercial database systerns havebeenportedtosharedlnernory platfornlS\n\\vithrelative ea\",\":ic. C~oInrnunication overhead islow ~because lnainrncIIlory can\nbeusedforthispurpose, andoperating systernservices canbeleveraged to\nutilizetheadditional CPl:Js.Although thisapproach isattractive forachieving\nrnoderate paranelisln\u00b7\u00b7\u00b7\u00b7\u00b7~\u00b7\u00b7a fewtensofCPlJScanbeexploited inthisfashion~\nInernory contention bec01nes abottleneck asthenurnber ofCPUsincreases.\nrfheshared-disk architecture facesasirnilarproblcrn because largea1110nnts of\ndataareshipped through theinterconnection network.\nThebasicproblern withtheshared-111Crrlory andshared-disk architectures isin\u00ad\nterference: AsInoreCPUsareadded,existing CPUsaresloweddovvnbecause\noftheincreased contention formClllory accesses andnetwork bandwidth. Ithas\nbeennotedthatevenanaverage1percentslowdown peradditional CPU1nea11S\nthatthernaxirnum speed-up isafactorof37,andaddingadditional CPlJsac\u00ad\ntuallyslowsdownthesystern; asystenlwith1000CPUsisonly4percent as\neffective asasingle-CPUsystern! Thisobservation hasrllotivated thedevelop\u00ad\nrnentoftheshared-nothing architecture, whichisnowwidelyconsidered tobe\nthebestarchitecture forlargeparalleldatabase systems.\nrrheshared-nothing architecture requires rnoreextensive n~organization ofthe\nDBNIScode,butithasbeenshowntoprovide linearspeed-up, inthatthe\ntilnetakenforoperations decreases inproportion totheincrease inthenUlnber\nofCPlJsanddisks,andlinearscale-up, inthatperforrnance issustained if\nthenurnber ofCPUsanddisksareincreased inproportion tothearnount of\ndata.Consequently, ever-rnore-powerful paralleldatabase systcrns canbebuilt\nbytakingadvantage ofrapidlyirnproving perforrllance forsingle-CPU systelns\nandconnecting asrnanyCPUsasdesired.\nSpeed-up andscale-up areillustrated inFigure22.2.'Thespeed-up curvesshow\nhow,forafixeddatabase size,Inoretransactions canbeexecuted l)crsecond\nbyaddingCPUs.1118scale-up curvesshovvhovvaddingInorcresources (inthe\nforlnofCPlJs)enablesustoprocesslargerproblerns. rrhefirstscale-up graph\nIncasures thenurnberoftransactions executed persecondastheclatabase sizeis\niucTec'lsed and th(~nurnber ofCPlJsiscorrespondingly inCr(~(lsed. Arlalternative\n\\ivaytoIneasure scale-up istoconsider thetirneUtkenpertransaction (kSr1101'e\nCPTJsaTeaddedtoprocessanincreasing nurnber oftransactions persecond;\nthegoalhereistosustaintheresponse tirnepertransaction.\n22.3\n PARAI~l~EL QUERY EVALUATION'\nInthis s(~ction, vve(liscusspH,rallel evaluation ofarelational queryinaI).lHvlS\n\\\\'ith (1,slutred-nothing\n architccture.\\Vhile itisI)Ossibl(\\, toconsicler para11el", "761": "PaTallel and[}i.stTibuted Databa8es 729\n$\nSPEED-UP\nLinearspeed-up (ideal)\nSublinearspeed-up\n#ofCPUsSCALE-UP withDBSIZE\nLinearscale-up (ideal)\nSllblint~ar scale-up\n#ofCPUs,database sizeSCALI':-I]P with#KACTSiSEC\nSublinear scale-up\nLinearscale-up (ideal)\n#ofCPUs,#transactions persecond\nFigure22.2Speed-up andScale-up\nexecution ofrnultiple queries, itishardtoidentify inadvance whichqueries\nwillrunconcurrently. Sotheernphasis hasbeenonparallelexecution ofasingle\nquery.\nArelational queryexecution planisagraphofrelational algebraoperators,\nandtheoperators inagraphcanbeexecuted inparallel. Ifoneoperator\nconsurnes theoutputofasecondoperator, wehavepipelined parallelism\n(theoutputofthesecondoperator isworkedonbythefirstoperator assoonas\nitisgenerated); ifnot,thetwooperators canproceed esseptially independently.\nAnoperator issaidtoblockifitproduces nooutputuntil'ithasconSUllled all\nitsinputs. Pipelined parallelisrn islirnitedbythepresence ofoperators (e.g.,\nsortingoraggregation) thatblock.\nInaddition toevaluating different operators inparallel, wecanevaluate each\nindividual operator inaqueryplaninaparallel fashion. rrhekeytoevaluating\nanoperator inpa,rallel istopartition theinputdata;\\vecanthenworkon\neachpartition inparallel andcornbine theresults. Thisapproach iscalled\ndata-partitioned parallel evaluation. Byexercising sornecare,existing\ncodeforsequentially evaluating relational operators canbeportedeasilyfor\ndata-partitioned parallel evaluation.\nAllinlportant observation, '\\vhichexplains vvhyshaxed-nothing paralleldataba\",;c\nsystelns havebeenverysuccessful, isthatdatabase queryevaluation isvery\naxncll<tble todata-partitioned parallelevaluation. Thegoalistonlinirnize elata,\nshipping b:ypaTtitioning thedata,lndstructuring thealgoritluns todolnostof\ntheproc(\\'ssing atindividual processors. (\\\\lelIsePTOCCS80T torefertoa.CPU\ntogether vvrithitslocaldisk.)\n\\VenOVil (~onsid(~r elatapaxtitioning andpa.rallelization ofexistingoperator evaJ\u00ad\nuationcod(\\'illrnoredetail.", "762": "730 CHAPTER 22\n22.3.1DataPartitioning\nPartitioning alargedata..'Scthorizontally acrossseveraldisksenablesustoex\u00ad\nploittheI/Obanchvidth ofthedisksbyreadingandwritingthelninparallel.\nrrhereareseveral\\vaystohorizontally partition arelation.vVe canassigntuples\ntoprocessors inaround-robin fashion, \\vecanusehashing, orwecana..'Ssign\ntuplestoprocessors byrangesoffieldvalues.Iftherearenprocessors, the'ith\ntupleisassigned toprocessor 'irnodninround-robin partitioning. Recall\nthatround-robin partitioning isusedinRAIDstoragesystelTIS (seeSection9.2).\nInhashpartitioning, ahashfunction isappliedto(selected fieldsof)atuple\ntodeternline itsprocessor. Inrangepartitioning, tuplesaresorted(con\u00ad\nceptually), andnrangesarechosenforthesortkeyvaluessothateachrange\ncontains roughlytheSalTIenurnber oftuples;tuplesinrangeiareassigned to\nprocessor i.\nRound-robin partitioning issuitable forefficiently evaluating queriesthatac\u00ad\ncesstheentirerelation. Ifonlyasubsetofthetuples(e.g.,thosethatsatisfy\ntheselection condition age=20)isrequired, hashpartitioning andrangepar\u00ad\ntitioning arebetterthanround-robin partitioning because theyenableusto\naccessonlythosedisksthatcontain rnatching tuples.(Ofcourse,thisstate\u00ad\nmentassumes thatthetuplesarepartitioned ontheattributes intheselection\ncondition; ifage=20isspecified, thetuplesmustbepartitioned onage.)If\nrangeselections suchas15<age<25arespecified, rangepartitioning issu\u00ad\nperic)!'toha.'3hpartitioning because qualifying tuplesarelikelytobeclustered\ntogether onafewprocessors. Ontheotherhand,rangepartitioning canlead\ntodataskew;thatis,partitions withwidelyvaryingnumbers oftuplesacross\npartitions ordisks.Skewcausesprocessors dealingwithlargepartitions to\nbecorneperfonnance bottlenecks. Hashpartitioning hastheadditional virtue\nthatitkeepsdataevenlydistributed evenifthedatagrowsandshrinksover\ntirne.\nToreduceske\\vinrangepartitioning, theluainquestion ishowtochoosethe\nrangesbywhichtuplesaredistributed. ()neeffective approach istotakesarn\u00ad\npIesfronleachprocessor, collectandsortallsarnples, anddividethesortedset\nofsamples intoequallysizedsubsets. Iftuplesaretobepartitioned onage,\ntheagerangesofthesarnpled subsetsoftuplescanbeusedastheba,,5isfor\nredistributing theentirerelation.\n22.3.2Parallelizing Sequential Operator Evaluation Code\nAnelegantsoflvvare architectnre forparallelI)BlVISs enablesustoreadilypar\u00ad\nallelizeexisting codeforsequentially evaluating arelational oI>crator. 1\"he\nbasicideaistouseparallel da.tastrearrlS. Strea,rIls (frorndifferent disksor", "763": "]JaTallelarulDistTilntted Databases 731\ntheoutputofotheroperators) areInerged cl..Sneededtoprovidetheinputs\nforarelational operator, andtheoutputofanoperator issplita.5neededto\nparallelize subsequent processing.\nA.parallelevaluation planconsists ofadataflow network ofrelational, luerge,\nandsplitoperators. 1'hernergeandsplitoperators shouldbeabletobuffer\nSOlnedataandshouldbeabletohalttheoperators producing theirinputdata.\n11heycanthenregulate thespeedoftheexecution according totheexecution\nspeedoftheoperator thatconSUlues theiroutput.\nAswewillsee,obtaining goodparallel versions ofalgorithllls forsequential\noperator evaluation requires carefulconsideration; thereisnoluagicformula\nfortakingsequential codeandproducing aparallelversion. Gooduseofsplit\nand111ergeinadataflow software architecture, however, cangreatlyreducethe\neffortofimplementing parallelqueryevaluation algorithms, asweillustrate in\nSection22.4.3.\n22.4PARALLELIZING INDIVIDUAL OPERATIONS\nThissectionshowshowvariousoperations canbeimplemented inparallel in\nashared-nothing architecture. Weassurnethateachrelation ishorizontally\npartitioned acrossseveraldisks,although thispartitioning mayormaynotbe\nappropriate foragivenquery.Theevaluation ofaquerymusttaketheinitial\npartitioning criteriaintoaccountandrepartition ifnecessary.\n22.4.1BulkLoading andScanning\nvVebeginwithtwosilupleoperations: scanning arelationandloadingarelation.\nPagescanbereadinparallelwhilescanning arelation, andtheretrieved tuples\ncanthenbelnerged, iftherelation ispartitioned acrossseveraldisks.More\ngenerally, theideaalsoc:lpplieswhenretrieving alltuplesthatIncetaselection\ncondition. Ifha'Shing orrangepartitioning isused,selection queriescanbe\nanswered bygoingtojustthoseprocessors thatcontainrelevant tuples.\nAsirnilarobservation holdsforbulkloading. Further, ifarelation ha..\"asso\u00ad\nciatedindexes, anysortingofdataentriesrequired forbuilding theindexes\nduringbulkloc:;tdingcanalsobedoneinparallel(seelater).", "764": "732 (;HAPTER 2;2\n22.4.2Sorting\nAsirnpleideaistoleteachCPTJsortthepartoftherelationthatisonitslocal\ndiskandthenrnergethesesortedsetsoftuples.r:rhedegreeofparallelisHl is\nlikelytobelirnitedbythernerging phase.\nAbetterideaistofirstredistribute alltuplesintherelation usingrange par\u00ad\ntitioning. Forexarnple, ifwewanttosortacollection ofernploy-ee tuplesby\nsalary~salaryvaluesrangefroIH10to210,andwehave20processors, wecould\nsendalltupleswithsalaryvaluesintherange10to20tothefirstprocessor,\nallintherange21to30tothesecondprocessor, andsoon.(Priortotheredis\u00ad\ntribution, whiletuplesaredistributed acrosstheprocessors, \\vecannotassurne\nthattheyaredistributed according tosa1aryranges.)\nEachprocessor thensortsthetuples&'3signed toit,usingsornesequential sorting\nalgorithrn. Forexaluple, aprocessor cancollecttuplesuntilitslllemory isfull,\nthensortthesetuplesandwriteoutarun,untilallincolning tupleshavebeen\nwrittentosuchsortedrunsonthelocaldisk.rrheserunscanthenbernerged\ntocreatethesortedversionofthesetoftuplesassigned tothisprocessor. The\nentiresortedrelation canberetrieved byvisitingtheprocessors inanorder\ncorresponding totherangesassigned tothenlandsirnplyscanning thetuples.\nThebasicchallenge inparallelsortingistodotherangepartitioning sothat\neachprocessor receives roughlytheSi::Ullerunnberoftuples;otherwise, aproces\u00ad\nsorthatreceives adisproportionately largenurnber oftuplestosortbecornes a\nbottleneck andlirnitsthescalability oftheparallelsort.()negoodapproach to\nrangepartitioning istoobtainasarnpleoftheentirerelation bytakingsarnples\nateachprocessor thatinitially contains partoftherelation. The(relatively\nsrnall)sarupleissortedandusedtoidentify rangeswithequalnUlllbers oftu\u00ad\nples.Thissetofrangevalues,calledasplitting vector, isthendistributed to\nallprocessors andusedtorangepartition theentirerelation.\nAparticularly irnportant application ofparallelsortingissortingthedataen\u00ad\ntriesintree-structured indexes. Sortingdataentriescansignificantly speedup\ntheprocessofbulk-loading anindex.\n22.4.3Joins\nInthissection, \\veconsider ho\\vthejoinoperation canbeparallelized.\\Ve\npresentthebasicideabehindtheparallelization andillustrate theuseofthe\nrnergeandsplitoperators described inSection 22.:3.2. vVefocusonparallel\nhashjoin,\\vhichis\\videlyuseel,and\"briefly outlin(~howsort-rnerge joinca,n", "765": "jJ(Jrallel ftnd[J\"stT\"ibuted Databases 733\n10\nbesirnilarly parallelized. ()therjoinalgorithniS canbeparallelized (lA'S\\veIl,\nalthough notaseffectively'\" asthes(~t\\vo algoritlnns.\nSuppose that'we\\vanttojointworelations. say,1-1and13,ontheageattribute.\nvVeaSSUIllCthattheyareinitially distribl.lted acrossseveraldisksinsenne\\vay\nthatisnotusefulforthejoinoperation; thatis,theinitialpartitioning isnot\nbasedonthejoina.ttribute. '1'hel)ctsicidea.forjoiningAandBinparallel is\ntodecornpose thejoinintoacollection ofksrnnllerjoins.vVecandecornpose\nthejoinbypartitioning both/1andBintoacollection ofklogicalbuckets\norpartitions. Byusingthesarnepartitioning function forbothj!andB,\\ve\nensurethattheunionoftheks1nallerjoinscOlnputes thejoinofAandB;this\nideaissi1nilartointuition behindthepa..rtitioning phaseofasequential hash\njoin,described inSection 14.4.3.Because AandBareinitially distributed\nacrossseveralprocessors, thepa,rtitioning stepitselfcanbedoneinparallelat\ntheseprocessors. Ateachprocessor, alllocaltuplesareretrieved andhashed\nintooneofkpartitions, withthesalIiehashfunction usedatallsites,ofcourse.\nAlternatively, wecanpartition AandBbydividing therangeofthejoinat\u00ad\ntributeageintokdisjointsubranges andplacing.AandBtuplesintopartitions\naccording tothesubrange towhichtheiragevalues belong. Forexanlple, sup\u00ad\nPOs(~that\\vehave10processors, thejoinattribute isage,withvaluesfroln0to\nIOO.Assurlling uniforrl1 distribution, AandBtupleswith0<age<10goto\nprocessor 1,10<age<20gotoprocessor 2,andsoon.Thisapproach islikely\ntobe1110resusceptible thanhashpartitioning todataskew(i.e.,thenumber\noftuplestobejoinedcanvarywidelyacrosspartitions), unlessthesubranges\narecarefully deterrnined; wedonotdiscusshowgoodsubrange boundaries can\nbeidentified.\nI-Iavingdecided onapartitioning strategy, wecanassigneachpartition toa\nprocessor andcarryoutalocaljoin,usinganyjoinalgorithrl1 wewant:at\neachprocessor. Inthiscase,thenUIIlber ofpartitions k:ischosentobeequal\ntothenUlnber ofprocessors navailabl(~ forcarrying outthejoin~andduring\np;:utitioning, eachprocessor sendstuplesintheithpartition toprocessor ,l.\nAfterpartitioning, eachprocessor joinstheAandBtuplesassigned toit.\nEachjoinprocessexecutes s(~quential joincodea.Jldrecfdves input..4.and13\ntuplesfroroseveralprocessors; arnergeoperator lnergesallincorning Atuples,\nandanother rnergeoperator rnergesallincorning 13tuples.Depending on110\\V\n\\vc\\vant tC)distribute theresultofthejoinof./1and[3,theoutputofthejoin\nprocess rl1aybesplitintoseveraldatastrealIlS. rI'henet\\vork ofoperators for\nparalleljoinissho\\vninFigur(~22.:3.Tosirnplify thefigure,\\veassurllethatthe\nproc.essors doingthejoinaredistinct frorntheprocessors that.initially contain\ntuplesofAand[3andsho\\vonlyfourprocessors.", "766": "734\niC~HAprrER 42\nFigure 22.3Dataflow Network ofOperators forParallel Join\nIfrangepartitioning isused,thisalgorithrn leadstoaparallelversionofasort\u00ad\nmergejoin,withtheadvantage thattheoutputisavailable insortedorder.If\nhashpartitioning isused,weobtainaparallelversionofahashjoin.\nImproved ParallelHashJoin\nAhash-based refinernent oftheapproach offersiJuproved perforruanee. rrhe\nruainobservation isthat,ifAandBareverylargeandthenurnberofpartitions\nkischosentobeequaltothenurnber ofprocessors n,thesizeofeachpartition\n111aystillbelarge,leadingtoahighcostforeachlocaljoinatthenprocessors.\nAnalternative istoexecutethesrnallerjoinsAi!XlHi,fori=1...k,one\naftertheother,but\\vith eachjoinexecuted inparallel usingallprocessors.\nThisapproa,ch allowsustoutilizethetotalavailable ruainrueruory atall'n\nprocessors ineEl.chjoinAi!Xl13iandisdescribed inrnoredetailasfollcJ\\vs:\n1.Ateachsite,applyahashfunction hItopartition theAandBtuples\natthissiteintopartitions i=1...k.LetAbethesrnallerrela,tion. 1'he\nnurnber ofpaJtitions kischosensuchthateachpartition of..4fitsintothe\naggregate orcornbined rnernory ofallnprocessors.\n2.For'i=1...k,processthejoinoftheithpartitions ofAandB.To\ncornpute .A.'i[Xl13i,dothefollcnving ateverysite:\n(a.)i\\pplyasecondhashfunction 12,2toallAituples.todetennine \\vhere\ntheyshouldbejoinedandsendtuple f;tositeh2(t).\n(b)AsA.;.tuplesEl.rrivetobejoined,addthclntoanin-rnernory hash. tabh~.", "767": "7B5\n(c)After all~4itupleshavebeendistributed, applyh2toHituplesto\ndeterrnine \\\\Theretheyshouldbejoinedandsendtuplettositeh2(t).\n(d)..AsB'ituplesHJTivetobejoined,probethein-rnernory tableof..4i\ntuplesandoutputresulttuples.\nThelIseofthesecondhashfunction h2ensuresthattuples (L1'e(rIloreorless)\nuniforrnly distributed acrossallnprocessors participating inthejoin.This\napproach greatlyreducesthecostforeachofthesrnallerjoinsandtherefore\nreduces theoveralljoincost.()bserve thatallavailable processors arefully\nutilized, eventhoughthesrnallerjoinsarecarriedoutoneaftertheother.\nThereaderisinvitedtoadaptthenehvork ofoperators showninFigure22.3\ntoreflecttheiInproved paralleljoinalgorithrn.\n22.5PARALLEL QUERY OPTIMIZATION\nInaddition topa.rallelizing individual operations, wecanobviously execute dif\u00ad\nferentoperations inaqueryinparallelandexecute rnultiple queriesinparallel.\nOptirnizing asinglequeryforparallel execution hasreceived rnoreattention;\nsysterus typically optirnize querieswithout regardtootherqueriesthatmight\nbeexecuting atthescuuetilne.\nrrwokindsofinteroperatioll parallelisrn canbeexploited withinaquery:\nIITheresultofoneoperator canbepip(\u00b7~lined intoanother. Forexalnple,\nconsider aleft-deep planinwhichallthejoinsuseindexnestedloops.The\nresultofthefirst(Le.,thebottollunost) joinistheouterrelation tuples\nforthenextjoinnode.Astuplesareproduced bythefirstjoin,theycan\nbeusedtoprobetheinnerrelation inthesecondjoin.T'heresultofthe\nsecondjoincansirnilarly bepipelined intothenextjoin,andso011.\nI!IIIwiultipleindependent operations ca,rlbeexecuted concurrently. Forexarn\u00ad\npIe,consider a(bush~y)planinvilhichrelations AandI3arejoined,relations\n(7andDarejoined,andtheresultsofthesetwojoinsarefinallyjoined.\n(;learly, thejoinofJland13canbeexecuted conculTcntly withthejoinof\nC:anciD.\nA.noptirnizer thatseekstoparallelize queryevaluation ha.stoconsider several\nissues,andweOl11~youtlinethernainpoints.Thecostofexecuting individual\noperations inparaJlel (e.g.,pcLrallel sorting) obviollsly differsfrornexecuting\nthern s(~quentjally, andtIleoptirnizer shouldestirnate operation costsaccord\u00ad\ningly.", "768": "736 (;HAPTER;22\nNext,theplanthatreturnsanswers quickest Inaynotbetheplan\\viththe\nlea,,'3tcost.Forex,unple, thecostofA.[)<JBplusthecostofCrxJDplusthe\ncostofjoiningtheirresultsrnaybernorethanthecostofthecheapest left-deep\nplan.I-Iowever, thetitnetakenisthetitneforthe1noreexpensive of..4t><lB\nand()[)<J1)plusthetitnetojointheirresults. TlhistirHelnaybelessthan\nthetirnetakenbythecheapest left-deep plan.Thisobservation suggests that\naparallelizing optirnizer shouldnotrestrictitselftoleft-deep treesandshould\nalsoconsider bVJshytrees,whichsignificantly enlargethespaceofplanstobe\nconsidered.\nFinally, anurnber ofpararneters, suchasavailable bufferspaceandthenUl1.1\u00ad\nbel'offreeprocessors, areknownonlyatrun-tirne. rrhiscomnlent holdsina\nrnultiuser environrnent evenifonlysequential plansareconsidered; arnultiuser\nenvironrnent isasirnpleinstance ofinterquery parallelisrn.\n22.6INTRODUCTION TODISTRIBUTED DATABASES\nAsweobserved earlier,datainadistributed database systernisstoredacross\nseveralsites,andeachsiteistypically rnanaged byaDBMSthatcanruninde\u00ad\npendent oftheothersites.Theclassical viewofadistributed database systern\nisthatthesystcrnshouldrnaketheirnpactofdatadistribution transparent.\nInparticular, thefollowing properties areconsidered desirable:\nIIIDistributed DataIndependence: lJsersshouldbeabletoaskqueries\nwithout specifying wherethereferenced relations, orcopiesorfragrnents\noftherelations, arelocated. Thisprinciple isanaturalextension ofphys\u00ad\nicalandlogicaldataindependence; vvediscussitinSection 22.8.Further,\nqueriesthatspanrnultiple sitesshouldbeoptirnized systcrnatically ina\ncos1,-basedrnanner, takingintoaccount COllllnunication costsanddiffer\u00ad\nencesinlocalcornpntation costs.vVediscussdistributed queryoptirniza\u00ad\nLioninSection22.10.\nIIDistributed 'Iransaction Atolnicity: lJsersshouldbeableto1,\\r1'ite\ntransactions thataccessandupdatedataatseveralsitesjustastheyvvould\n1,\\rritetransEl,ctions overpurelylocaldata.Inpa,rticular, theeffectsof(1.\n1:rans(1.cti011 acrosssitesshouldcontinue tobeatornic;thatis,allchanges\npersistifthetranS<lction cOllnuits andnonepersistifitaborts.\\Vediscuss\nthisdistributed transaction processing inSections 22.11, 22.1:~,and22.14.\nAJthough rnostpeoplewouldagreethattheseproperties areingeneralclesir\u00ad\na,blc~,incertainsitu::ttions, suchaswhensitesareconlH~cted byct810-wlong\u00ad\ndistance network, these properti(~s arenotefficiently achievable. Indef\\'d,ithas\n1:\",Y'\u00b7\u00b7\u00b7\u00b70\u00b7\u00b7\u00b7\\\u00b7it\u00b7l\u00b7\u00b7'\u00b71\u00b7\u00b7.r1\",\\',\u00b7,\u00b7t\u00b7:\"S\u00b7' ':.1)\"1)1\u00b7\u00b711r \"'1\u00b7\u00b7,t\"\u00b7lt\u00b7)\u00b7l1\"1':,)\":.)..,.,:..\u00b7t\u00b7\u00b7\u00b7,s\u00b7\" ....\\t )CC11d.lbuce ,Vl.\" V\\.lcn ~I,C,eUC'g<.)d,..J<.IS..11)11.C<', ilcsepIOpCl ,IC\"ellCno,\neven dcsiral)l(~. l]leargurnerlt essentiaJly isthattheadrninistrative overheacl", "769": "[)arnllelaTLdDistribtlted Database,s 7~37\nt\nofsupporting asysternvvithdistributed dataindependence andtransaction\natornicitY' ....\u00b7..\u00b7\u00b7\u00b7ineffect 1coordinating allactivities acrossallsitestosupport the\nviewofthewholeasaunifiedcollection ofdata--is prohibitive ,overandabove\nI)B:NlSperfo1'rnanc8 considerations.\n}(eepthesererna\"rks aboutdistributed databases inrninda.'3,vecoverthetopic\ninrno1'edetailintherestofthischapter. Thereisnorealconsensus on\\vhatthe\ndesignobjectives ofdistributed databases shouldbe,andthefieldisevolving\ninresponse tousers1needs.\n22.6.1TypesofDistributed Databases\nIfdataisdistributed butallserversrunthesarneDBMSsoftware,. wehavea\nhomogeneous distributed database system. Ifdifferent sitesrununder\nthecontrolofdifferent DB:NISs, essentially autonorllously, andareconnected\nsOlllehow toenableaccesstodatafromrnultiple sites,wehaveaheteroge\u00ad\nneousdistributed database system, alsoreferred toasamultidatabase\nsystem.\nThekeytobuilding heterogeneous systelTIS istohavewell-accepted standards\nforgateway protocols. Agateway protocol isanAPIthatexposes DBl\\1S\nfunctionality toexternal applications. Examples includeODBCandJDBC(see\nSection6.2).Byaccessing database serversthrough gateway protocols, their\ndifferences (incapability, datafonnat, etc.)arernasked, andthedifferences\nbetween thedifferent serversinadistributed systemarebridged toalarge\ndegree.\nC;ateways arenotapanacea, however. Theyaddalayerofprocessing thatcan\nbeexpensive, andtheydonotcornpletely rllcL.\"kthedifferences arllongservers.\nForeXfunplc, aserverIllaynotbecapableofproviding theservices required for\ndistributed transaction rnanagernent (seeSections 22.13and22.14),andeven\nifitiscapable, standardizing gateway protocols allthe\\vaydowntothislevel\nofinteraction poseschallenges thathavenotyetbeenresolved satisfactorily.\nDistributed datarnanagcrnent, inthefinalanalysis, cornesat(1significant cost\ninterulSofperforrna\"ncc ,software cOlllplexity, andadrninistration difficulty.\nrrhisobservation isespecially trueofheterogeneous SystCIllS.\n22.7DISTRIBUTED DBMSARCHITECTURES\nThreealternative approctches areuSf~dtoseparat,e functionality acrossdifferent\nDBIV'IS-related processes; tllesealternative distributed ])131VI8axchitectures ar(~\nca,lled()Zient-S'eTvcT, C/ollaborat'ing SeTver,and ]\\;JiddZe'wo/t'(~.", "770": "738 CHAPTER t2\n22.7.1Client-Server Systems\nAClient-Server systelIlhasoneorrno1'eclientprocesses andoneorrnore\nserverprocesses, andaclientprocesscansendaquerytoanyoneserverprocess.\nClientsareresponsible foruser-interface issues,andserversrnanagedataand\nexecutetransactions. Thus,aclientprocesscouldrunonapersonal cornputer\nandsendqueriestoaserverrunning ona11lainframe.\nThisarchitecture hasbecorneverypopular forseveralreasons. First,itisrel\u00ad\nativelysinlpletoirnplernent duetoitscleanseparation offunctionality and\nbecause theserveriscentralized. Second, expensive serverrnachines arenot\nunderutilized bydealingwithlllundane user-interactions, whicharenowrel\u00ad\negatedtoinexpensive clientmachines. Third,userscanrunagraphical user\ninterface thattheyarefamiliar with,ratherthanthe(possibly unfalniliar and\nunfriendly) userinterface ontheserver.\nWhilewriting Client-Server applications, itisinlportant toremember the\nboundary between theclientandtheserverandkeepthecommunication be\u00ad\ntweentherllasset-oriented aspossible. Inparticular, opening acursorand\nfetching tuplesoneatatimegenerates manyrnessages andshouldbeavoided.\n(Evenifwefetchseveraltuplesandcachethemattheclient,rnessages 11lUSt\nbeexchanged whenthecursorisadvanced toensurethatthecurrentrowis\nlocked.) Techniques toexploitclient-side caching toreducecomlnunication\noverhead havebeenstudiedextensively, although wedonotdiscussthemfur\u00ad\nther.\n22.7.2Collaborating ServerSystems\nThe(;lient-Server architecture doesnotallowasinglequerytospanrnultiple\nserversbecause theclientprocesswouldhavetobecapable ofbreaking such\naqueryintoappropriate subqueries tobeexecuted atdifferent sitesandthen\npiecingtogether theanswerstothesubqueries. Theclientprocessvvouldthere\u00ad\nforebequitecOlnplex, anditscapabilities wouldbegintooverlapwiththe\nserver;distinguishing between clientsandserversbecornes harder.EliIninating\nthisdistinction leadsustoanalternative totheClient-Server architecture: a\nCollaborating Serversystenl. \\VecanlUl,veacollection ofdatab::lse servers,\neachcapable ofrunning tra,nsactions againstlocaldata,whichcooperatively\nexecutetransactions spanning rnultiple servers.\n'\\Vhenaserverreceives a,querythatrequires accesstodataatotherservers,it\ngenerates appropriate subqu(~ries tobeexecuted byoth(~rserversandputsthe\nresultstogether toCOIllpute HJlSvVers totheoriginal query.Ideally,thedecorn-", "771": "Parallel andDist'rib1lted IJatabases 739\nposition ofthequeryshouldbedoneusingcost-based optinlization, takinginto\naccount thecostofnetwork COlnnlunication as\\vella.slocalprocessing costs.\n22.7.3Middleware Systems\nTheMiddle\\\\Tare architecture isdesigned toallowasinglequerytospanrnul\u00ad\ntipleservers,without requiring alldatabase serverstobecapable ofrnanaging\nsuchnlulti-site execution strategies. Itisespecially attractive whentryingto\nintegrate severallegacysysterns, whosebasiccapabilities cannotbeextended.\nTheideaisthatweneedjustonedatabase servercapable ofrnanaging queries\nandtransactions spanning nlultiple servers;therenlaining serversneedtohan\u00ad\ndleonlylocalqueriesandtransactions. Wecanthinkofthisspecialserveras\nalayerofsoftware thatcoordinates theexecution ofqueriesandtransactions\nacrossoneormoreindependent database servers; suchsoftware isoftencalled\nmiddleware. Themiddleware layeriscapable ofexecuting joinsandother\nrelational operations ondataobtained frolntheotherserversbut,typically,\ndoesnotitselfmaintain anydata.\n22.8STORING DATAINADISTRIBUTED DBMS\nInadistributed DBMS, relations arestoredacrossseveralsites.Accessing a\nrelation storedatarenlotesiteincursmessage-passing costsand,toreduce\nthisoverhead, asinglerelation lnaybepartitioned orfragrnented acrossseveral\nsites,withfragrnents storedatthesiteswheretheyaremostoftenaccessed or\nreplicated ateachsitewheretherelation isinhighdemand.\n22.8.1Fragmentation\nFragrnentation consists ofbreaking arelation intosrnallerrelations orfrag\u00ad\nrnentsandstoringthefragrnents (instead oftherelation itself),possibly at\ndifferent sites.Inhorizontal fragmentation, eachfragrnent consists ofa,\nsubsetofTOWSoftheoriginal relation. Invertical fragluentation, eachfra.g\u00ad\nrllentconsists ofasubsetofcol'Urnns oftheoriginal relation. IIorizontal and\nverticaJ fragrnents areillustrated inFigllre22.4.\nTypically, thetuplesthatbelongtoagivenhorizontal fragrnent areidentified\nbyaselection query;forexarnple, crnployee tuplesBlightbeorganized into\nfragrnents b~ycity,\\vithallenlployees in(1,givencityassigned tothesaniefrag\u00ad\nrnent.rThehorizontal fragrnent showninFigure22.4corresponds toChicago.\n\",storingfragrncnts inthedata,l)E\\..se siteatthecorresponding city,\\vea,chieve\n.:alityof\nreferencc',Chicago datais1n08tlikelytobeupdated (tnelqueried", "772": "740 (;HAPTEll 42\nr-!\n~----ITID eid Dame city iage sal\nII\nItl 53666 Jones Madras !18I35\nIt2 53688 Snlith Chicago 18 32\nI~....~.......................\nt3 53650 Sluith Chicago 19 48\nI . ,.\nt4 53831 Madayan Bombay 11.I20IJ.........-- r-,\u00b7_\u00b7\u00b7\u00b7\u00b7_-\nIt5 53832 Guldu BOlnbay 12!IJ20\n..,................_-\n\"'.._.. /f\nVertkalFragment Horizontal Fragment\nFigure 22.4Horizontal andVertical Fragmentation\nfronlChicago, andstoringthisdatainChicago rnakesitlocal(andreduces\ncornrnunication costs)fornlostqueries. Sinlilarly, thetuplesinagivenver\u00ad\nticalfragrnent areidentified byaprojection query.Thevertical fragrnent in\nthefigureresultsfrornprojection onthefirsttwocolumns oftheernployees\nrelation.\n\\;Vhenarelation isfragrnented, welllustbeabletorecovertheoriginal relation\nfronlthefragrnents:\n\u2022Horizontal Fragmentation: Theunionofthehorizontal fragments rnust\nbeequaltotheoriginal relation. Fragrnents areusuallyalsorequired tobe\ndisjoint.\nIIIVertical Fragrnentation: 'Thecollection ofvertical fragrnents shouldbe\nalossless-join deccnnposition, ~lSperthedefinition inChapter 19.\n1'0ensurethat (1,vertical fragrnentation islossless-join, systeuls oftenassigna\nuniquetupleieItoeachtupleintheoriginal relation~ asshowninFigure22.4,\nandattachthisidtotheprojection ofthetupleineachfragrnent. Ifwethinkof\ntheoriginal relation a.scontaining anaddit.iC)11al tuple-id fieldthatisa.key,this\nfieldisaddedtoeachvertical fragrnent. Such ~Ldecol11position isguaranteed to\nbelossless-join.\nIngeneraJ~ arelation canbe(horizontally orvertically) fragrnented, a.ndeach\nr(~sulting fragrnent canbefurtherfragnlented. Forsirnplicity ofexposition, in\ntherestofthischapter, ,ve(LSSllnH~thatfragrnents arenotrecursively parti\u00ad\ntionedinthisrnanner.", "773": "ParallelandIJistT'ilndcd Databases\n22.8.2Replication741\nReplication Incausthat\"westoreseveralcopiesofarelation orrelation frag\u00ad\nrnent.Anentirerelation canberepliccltecl atoneorrnoresites.Sirnila,rly, one\nor1110refragrncnts ofarelationcanbereplicated atothersites.Forexarnple, if\narelationR isfragrnented into1?1,R2, andR:3,therenlightbejustonecopy\nofIll,vvhereas R2isreplicated attwoothersitesand li,~>'isreplica.,t:ed atall\nsites.\nThernotivation forreplication istwofold:\n\u2022Increased Availability ofData:Ifasitethatcontains areplicagoes\ndown,wecanfindthesarnedataatothersites.Sirnilarly, iflocalcopiesof\nrerlloterelations areavailable, wearelessvulnerable tofailureofCOllnnu\u00ad\nnication links.\n\u2022FasterQueryEvaluation: Queries canexecute fasterbyusingalocal\ncopyofarelation insteadofgoingtoarernotesite.\nThetwokindsofreplication, calledsynchronous andasynchronous replication,\ndifferprirnarily inhowreplicas arekeptcurrentwhentherelation isrnodified\n(seeSection22.11).\n22.9DISTRIBUTED CATALOG MANAGEMENT\nKeeping trackofdatadistributed acrossseveralsitescangetcornplicated. \\tVe\nrnustkeeptrackofhowrelations arefragrnented andreplicated------that is;how\nrelation fragrnents aredistributed acrossseveralsitesand,vherecopiesoffrag\u00ad\nrnentsarest()red~\"-----in addition tothelIsuaJseherna, authorization, andstatisti\u00ad\ncalinforrnation.\n22.9.1NamingObjects\nIfarelation isfragruented andreplicated, wernustbeabletouniquely identif\\r\neachreplicaofea,chfragnlent. Cjenerating suchuniquenarnesrequires sorne\ncare.If\\veuseaglobalnarne-server toa.ssignglobally uniquenarnes,local\na,utonornJ liscornprornised; we'want(usersat)eachsitetobeableto<h'3sign\nnarnestolocalobjects\\vithout reference tonanH:~Ssysternwide.\nTheusualsolution. tothenaTningproblenl istousenarnesconsisting ofseveral\nfields.1;'01'excunplc, wecouldhELve:", "774": "742 CHAPTER ~2\nIIIAlocalTULTnCfield,'whichistheHaIIleassigned locallyatthesite\\vhere the\nrelation iscrea,ted. T\\voobjectsatdifferent sitescouldhavethesaInelocal\nnarne,butt\\yOobjectsatagivensitecannothavethesaInelocalnarne.\nIIIAbiTths'lt:efield,vvhichidentifies thesitewheretherelation \\v~1..screctted,\nandwhereil1fofrnation isruaintained aboutallfragruents andreplicas of\ntherela.tion.\nThesetwofieldsidentify arelation uniquely; wecallthecornbination aglobal\nrelation nanle.Toidentifyareplica(ofarelation orarelation fragnlent) ,we\ntaketheglobalrelationnarneandadda'tcplica-'id field;wecallthecornbination\naglobalreplica narrle.\n22.9.2CatalogStructure\nAcentralized systerncatalogcanbeusedbutisvulnerable tofailureofthesite\ncontaining thecatalog. Analternative istornaintain acopyofaglobalsystem\ncatalog,which describes allthedataateverysite.Although thisapproach\nisnotvulnerable toasingle-site failure,itcomprornises siteautonorny, just\nlikethefirstsolution, because everychangetoalocalcatalogrnustnowbe\nbroadcast toallsites.\nAbetterapproach, whichpreserves localautonoruy andisnotvulnerable toa\nsingle-site failure,wasdeveloped intheIt*distributed database project, which\nwa..'Sasuccessor totheSysterl1 R,projectatIBlV!.Eachsiteruaintains alocal\ncatalogthatdescribes allcopiesofdatastoredatthatsite.Inaddition, the\ncatalogatthebirthsiteforarelation isresponsible forkeepingtrackofwhere\nreplicas oftherelation (ingeneral, offragnlents oftherelation) arestored.In\nparticular, aprecisedescription ofeachreplica's contents\"\"\"\"''''a listofcolurl1ns\nforavertical fragrnent oraselection condition forahorizontal fragruentis\nstoredinthebirthsitecatalog. \\Vhenever anewreplicaiscreatedorareplica\nisrnovedacrosssites,theinforrnation inthebirthsitecatalogfortherelation\nHUlstbeupdated.\nTolocatearelation, thecatalog;atitsbirthsitelnustbelookedup.rrhis\ne.ataloginforrnation canbeca.,chedatothersitesforquickeraccess,butthe\ncachedinforrnation Inaybecolueoutofdateif,forcxarnple, afragrnent is\nrnoved. \\rYevvoulddiscover thatthelocallycachedinforrnation isoutofdate\nwhen\\veuseittoaccesstherelation, andatthatpoint,werll11stupdatethe\ncacheb.ylookingupth(~catalogatthebirthsiteoftherelation. (Thebirthsite\nofarelation isrecorded ineachlocalcachethatdescribes therelation, andthe\nbirthsiteneverchanges, eveniftherelation isrnoved.)", "775": "Parallel andDis!;r'ibll!;ed Database8\n22.9.3Distributed DataIndependence743\nDistributed dataindependence lueansthc.ttusersshouldbeableto\\vritequeries\n\\vithout regardtoho\\varelation isfragrnented orreplicated; itistherespon\u00ad\nsibilityoftheDB:NIStocornpute therelation a~sneeded(bylocating suitable\ncopiesoffragrnents, joiningthevertical fragrnents, andtakingtheunionof\nhorizontal fragn1cnts).\nInparticular, thisproperty irnpliesthatusersshouldnothavetospecifythe\nfullnalneforthedataobjectsaccessed while evaluating aquery.Letusseeho\\v\nuserscanbeenabled toaccessrelations without considering howtherelations\naredistributed. Thelocalnarneofarelation inthesystelncatalog (Section\n22.9.1)isreallyac01l1bination ofa'Usernarneandauser-defined relationnarne.\n'Userscangivewhatever namestheywishtotheirrelations, without regardto\ntherelations createdbyotherusers.Whenauserwritesaprograrn orSQL\nstatelnent thatreferstoarelation, heorshesirnplyusestherelation narne.\nTheDBMSaddstheusernarnetotherelation narnetogetalocalnarne,then\naddstheuser'ssite-idasthe(default) birthsitetoobtainaglobalrelation\nnarne.Bylookinguptheglobalrelation narne---inthelocalcatalogifitis\ncachedthereorinthecatalogatthebirthsite-\u00b7the I)Bl\\;IScanlocatereplicas\noftherelation.\nAuserIl1aywanttocreateobjectsatseveralsitesorrefertorelations created\nbyotherusers.Todothis,ausercancreatea,synonym foraglobalrelation\nnarne'llsinganSQL-style cOl1unand (although suchacorl1rnand isnotcurrently\npartoftheSQL:1999 standard) andsubsequently refertotherelation using\nthesynonyrn. Foreachuserknownatasite,theDBl\\lSrna.intains atableof\nsynonynls aspartofthesysterncatalogatthatsiteandusesthistabletofind\ntheglobalrelation narne.Notethatauser'sprograrl1 runsunchanged evenif\nreplicas oftherelation arerlloved,because th(~globalrelation narne ISnever\nchanged untiltherelation itselfisdestroyed.\nlJsersrnay\\vanttorunqueriesagctinst specific replicas, especially ifasyn\u00ad\nchronous replication isused.Tosupport this,thesynonyrn Inechanisrn can\nbeadapted toalsoallo\\vuserstocreatesynon.yrl1S forglobalreplica, 11aJ.IH~S.\n22.10DISTRIBUTED QUERY PROCESSING\n\\Vefirstdiscusstheissuesinvolved inevaluating relational algebraoperations\ninadistrilnlted datal)ase through exalnples andthenoutlinedistributed query\noptiInization. Consider thefollowing t\\VO n\u00b7~lations:", "776": "744 (;lIAPTEH 22\nSailors(s'id: integer, snanu?:string, rating:integer, age:real)\nReserves (sid:int~~ger 1l)'i(~.::~ntege:~, day:~~te,rnalne: string)\nr\\SinC:hapter 14,assurnethateachtupleofR.eserves is40byteslong,tha.ta\nIH'lgecanhold100Reserves tuples,andthat\u00a5lChave1000pagesofsuchtuples.\nSirnilarly, assurnethateachtupleofSailorsis50byteslong,thatapagecan\nhold80Sailorstuples,andthat\\vehrrve500pagesofsuchtuples.\n1'0estiInate thecostofanevaluation strategy, inaddition tocounting the\nnurnberofpageIjC)s,\\veBlustcountthenurnher ofpagessentfrorHonesite\ntoanother because corllrIlunication costsareasignificant cornponent ofoverall\ncostinadistributed database. \\Vernustalsochangeourcostrnodeltocount\nthecostofshipping theresulttuplestothesitewherethequeryisposedfrOIn\nthesitewheretheresultisassernbled! Inthischapter, wedenotethetilne\ntakentoreadonepagefromdisk(ortowriteonepagetodisk)as1;elandthe\ntiInetakentoshiponepage(fromanysitetoanother site)as1;s.\n22.10.1 Nonjoin QueriesinaDistributed DBMS\nEvensirnpleoperations suchasscanning arelation, selection, andprojection\nareaffected byfragrnenta.tion andreplication. Consider thefollowing query:\nSELECT S.age\nFROM SailorsS\nWHERE S.rating>;3ANDS.rating<7\nSuppose thattheSailorsrelation ishorizontally fragruented, withalltuples\nhavingaratinglesstha,n5atShanghai andalltupleshavingaratinggreater\nthan5atrrokyo.\nTheDBl\\/IS nn.lstanswerthisquerybyevaluating itatbothsitesandtaking\ntheunionoftheans\\vers. IftheSELECT clausecontained AVG(S.age),COln\u00ad\nbiningtheaJ1S\\VerS couldnotbedonebysirnplytakingtheunion\u00b7\u00b7\u00b7-\u00b7\u00b7\u00b7\u00b7the DBlV1S\nrnustcornpute theSUInandcountofagevaluesatthetwositesandusethis\ninfonna,tion tocornpute theaverage ageofallsailors.\nIftheWHEREclausecontained justthecondition 5'.rating>6,ontheother\nha,ud,theI)BI\\/ISshouldrecognize thEttthisquerycouldbeansvvered byjust\n...tr[\"kexecutIng Ita j,.nyo.\nAs::ulother exarnple, suppose thattheSailorsrelation, werevertically frag\u00ad\n11lented, \\viththe8'idandrai'ingfieldsatSha.nghai a,ndthe8naUlCandage\nfieldsatrrokyo. Nofieldisstoredatbothsites.1]lisvertical fragrnentcttion", "777": "Parnllel andDistTilnded [)atllbases....,4.-\n(&l:~)\nwouldtherefore bealossydecornposition, exceptthatafieldcontaining the\nidofthecorresponding Sailorstupleisincluded bytheDB~fSinbothfrag\u00ad\nlnents!N'o\\v,theI)BrvIShastoreconstruct theSailorsrelation byjoiningthe\nt\\VOfraglnents ontheCOHllllon tuple-id fieldandexecute thequeryoverthis\nreconstructed relation.\nFinally, suppose thattheentireSailorsrelation \\verestoredatbothShanghai\nand ~rokyo. \\lVecouldansweranyoftheprevious queriesbyexecuting itat\neitherSha,nghai orTokyo.vVhereshouldthequerybeexecuted? Thisdepends\nonthecostofshipping theanswertothequerysite(whichrnaybeShanghai,\nTokyo,orSOllIeothersite)aswellasthecostofexecuting thequeryatShanghai\nandatTokyo ...._\u00b7..\u00b7\u00b7thelocalprocessing costslnaydifferdepending onvvhatindexes\nareavailable onSailorsatthetwosites,forexaluple.\n22.10.2 JoinsinaDistributed DBMS\nJoinsofrelations atdifferent sitescanbevery (~xpensive, andwenowconsider\ntheevaluation optionsthatIIlUstbeconsidered inadistributed environrnent.\nSuppose thattheSailorsrelation werestoredatLondon, andtheIleserves\nrelation werestoredatParis.Weconsider thecostofvariousstrategies for\ncOlnputing Sailor'S [X]Reserves.\nFetchAsNeeded\nWecoulddoapage-oriented nestedloopsjoininLoudon withSailorsasthe\nouter,andforeachSailorspage,fetchallReserves JH:tgesfrornParis.Ifwe\ncachethefetchedIleserves pagesinLondon untilthejoiniscornpk~te, pages\narefetchedonlyonce,butaSSU111ethatH,eservcs pagesarenotcached,justto\nseehowbadthingscanget.(Thesituation cangetrnuchworseifvveusea\ntuple-oriented nestedloopsjoin!)\nrrhecostis500idtoscanSailorsplus,foreachSailorspage,thecostofseallning\nandshipping allofH,eserves, vvhichis1000(td+ts).1'hetotalcostistherefore\n500td+500,OOO(td+is).\nInadditicHl, ifthequerywasnotsllbrnittccl attheLondon site,\\ryernustadd\nthecostofshipping theresulttothequerysite;thiscostdepends onth(~size\noftheresult.Because sidisakeyforSailors,thenurnber oftuplesintheresult\nis100,000 (thernunber ()ftuplesinIlcserv(~s) andeachtupleis40+50=90\nbyteslong;thus4000/DO=44resulttuplesfitonapage~andtheresultsize\nis\n100,OOO/44=227~~ pages.rrhecostofshipping theanswertoanother site,if\nnecessary, is227:3t,,,.IntIlerestofthissection, weassurnethatthequeryis", "778": "746 CHAPTER 22\nposedatthesitewheretheresultiscomputed; ifnot,thecostofshipping the\nresulttothequerysiteBlustbeaddedtothecost.\nInthisexarnple, observethat,ifthequerysiteisnotLondon orParis,the\ncostofshipping theresultisgreaterthanthecostofshipping bothSailors\nandIleserves tothequerysite!Therefore, itwouldbecheaper toshipboth\nrelations tothequerysiteandCOlllpute thejointhere.\nAlternatively, wecoulddoanindexnestedloopsjoininLondon, fetching all\nInatching Reserves tuplesforeachSailorstuple.Suppose wehaveanuncIus\u00ad\nteredhashindexonthesidcolurnn ofIleserves. Because thereaTe100,000\nIleserves tuplesand40,000Sailorstuples,eachsailorhasonaverage 2.5reser\u00ad\nvations. Thecostoffindingthe2.5Ileservations tuplesthatlllatchagiven\nSailorstupleis(1.2+2.5)td'assluning 1.2l/Ostolocatetheappropriate\nbucketintheindex.Thetotalcostisthecostofscanning Sailorsplusthe\ncostoffindingandfetching nlatching Reserves tuplesforeachSailorstuple,\n500td+40,000(3.7td+2.5ts)'\nBothalgorithIns fetchrequired Reserves tuplesfromaremotesiteasneeded.\nClearly, thisisnotagoodidea;thecostofshipping tuplesdominates thetotal\ncostevenforafastnetwork.\nShiptoOneSite\n\\VecanshipSailorsfromLondontoParisandcarryoutthejointhere,ship\nReserves toLondonandcarryoutthejointhere,orshipbothtothesite\\\\There\nthequerywasposedandcornpute thejointhere.Noteagainthatthequery\ncouldhavebeenposedinLondon, Paris,orperhaps athirdsite,say,Tirnbuktu!\n11hecostofscanning andshipping Sailors,savingitatParis,thendoingthe\njoinatParisis500(2td+ts)+4500td,assurning thattheversionofthesort\u00ad\nrnergejoindescribed inSectionItt.l0isusedandwehaveanadequate nurnber\nofbufferpages.IntherestofthissectionweaSSUIncthatsort-Inerge joinis\nthejoinrnethod usedwhenbothrelations areatthesaInesite.\nThecostofshipping Ileserves <lJlddoingthejoinatLondonis1000(2t(1 -+-t,c;)+\u00ad\n4500td\u00b7\nSenlijoins andBloomjoins\nConsider thestrategy ofshipping Ileserves toLondo.l1andcornputing thejoin\natLondon. SOln(~tuplesin(thecurrentinst;-l,llCe of)H,cserves donotjoin\u00a5lith\nan.ytuplein(thecurrentinstaJ1Ce of)Sailors. IfViecouldsorneho\\v identify", "779": "ParallelandDistT'ib'tded Databases 747\nReserves tuplesthatareguaranteed nottojoin ~NithanySailorstuples,we\ncouldavoidshipping thern.\nT,,\u00b7votechniques, Se1n'ijo'ln and Bloo1r~ioin, havebeenproposed forreducing\nthenumber oflleserves tuplestobeshipped. Thefirsttechnique iscalled\nSemijoin. Theideaistoproceed inthreesteps:\n1.AtLondon, cornpute theprojection ofSailorsontothejoincolurnns (in\nthiscasejustthesidfield)andshipthisprojection toParis.\n2.AtParis,cornpute thenatural joinoftheprojection received frornthe\nfirstsitewiththeR,eserves relation. l'heresultofthisjoiniscalledthe\nreduction ofR,eserves withrespecttoSailors. Clearly, onlythoseRe\u00ad\nservestuplesinthereduction willjoinwithtuplesintheSailorsrelation.\nTherefore, shipthereduction ofReserves toLondon, ratherthantheentire\nReserves relation.\n3.AtLondon, cornpute thejoinofthereduction ofR,eserves withSailors.\nLetuscompute thecostofusingthistechnique forourexample joinquery.\nSuppose wehaveastraightforward irnplernentation ofprojection basedonfirst\nscanning Sailorsandcreating atelnporary relation withtuplesthathaveonly\nansidfield,thensortingthetemporary andscanning thesortedternporary to\neliminate duplicates. Ifweassurnethatthesizeofthesidfieldis10bytes,\nthecostofprojection is500\"tdforscanning Sailors, plus100tdforcreating\ntheternporary, plus400ldforsortingit(intwopasses), plusIOOtc!forthefinal\nscan,plus100ldforwritingtheresultintoanothertcrnporary relation; atotalof\n1200f;d. (Because sidisakey,noduplicates needbeelirninated; iftheoptiInizer\nisgoodenoughtorecognize this,thecostofprojection isjust(500+100)td.)\nThecostofcornputing theprojection andshipping ittoParisistherefore\n1200ld+100l,';.Thecostofc(nnputing thereduction ofR.eserv8s is~~.(100.+\n10(0)==~330(}t(j,assurning thatsort-rnerge joinisused.crhecostdoesnot\nreflectthattheprojection ofSailorsisalreadysorted;thecost\\voulddeerca.,se\nslightlyiftherefinedsort-Inerge joinexploited this.)\n\\Vhatisthesizeofthereduction? IfeverysailorholdsatlC<L5tonereservation,\nthereduction includes everytupleofR,eserves! Theeffortinvested inshipping\ntheprojection andreducing lleserves isatotalwaste.Indeed,because ofthis\nobserva.ticHl ,\\iVCnotethatSernijoin isespecially usefulinconjunction \\vitha\nselectiol1 ononeoftherelations.F()r exarnplc ,ifW(~\\vanttocornpute thejoin\nofSailorstupleswitharal'inggreaterthan8\\viththelleserves rela.tion, the\nsizeoftheprojection on8'idfen'tuplesthatsatisfytheselection \\vouldbejust\n20percent oftIleoriginal projection, thatis,20pages.", "780": "748 C~HAprrEIl ~2\nLetusnuwcontinue theexarnple join,'withtheassurnption that\\vehavethe\nadditional selection on'r'(rt'ing.(Thecostofcornputing theprojection ofSailors\ngoesde)\\vnabit,thecostofshipping itgoesdo\\\\rnto20ts,andthecostofthe\nreduction ofF{,eser\\fPS alsogoesde)\\vnalittle,but\\veignorethesereductions for\nsirnplicity.) \\Veassurnethat;only20percentoftheR,eserves tuplesareincluded\ninthereduction, thankstotheselection. lIencc1thereduction contains 200\npages,andthecostofshipping itis200ts.\nFinally,atLondon, thereduction ofI{eserves isjoinedwithSailors,atacost\nof~3\u00b7(200+500)=21100td. Observe thatthereareover6500pageI/Osversus\nabout200pagesshipped, usingthisjointechnique. Incontrast, toshipR,eserves\ntoLondon anddothejointherecostsIOOOisplus4500td. \\Vithahigh-speed.\nnetwork, thecostofSernijoin Illayben10rethanthecostofshipping Reserves\ninitsentirety, eventhoughtheshipping cost,itselfisrnuehless(200tsversus\nIOOOts)\u00b7\nThesecondtechnique, calledBloomjoin, isquitesirnilar.Theluaindifference\nisthatabit-vector isshipped inthefirststep,insteadoftheprojection of\nSailors.Abit-vector of(SOIlICchosen)sizekiscOlnputed byhashing eachtuple\nofSailorsintotherange0tok-IandsettingbititoIifseHnetuplehashesto\ni,and0otherwise. Inthesecondstep,thereduction ofReserves iscOlnputed\nbyhashing eachtupleoflleserves (usingthesidfield)intotherange0tok--1,\nusingthesanlehashfunction usedtoconstruct thebit-vectoranddiscarding\ntupleswhosehashvalueicorresponds toa0bit.Because noSailorstuples\nhashtosuchani,noSailorstuplecanjoinwithanyR,eserves tuplethatisnot\ninthereduction.\n111ecostsofshipping abit-vector andreducing R,eserves usingthevectorare\nlessthanthecorresponding costsinSernijoin. ()ntheotherhand,thesizeof\nthereduction ofIteserves islikelytobelargerthaninSernijoin; so,thecosts\nofshipping thereduction andjoiningit'withSailorsarelikelytobehigher.\nLetusestirnate thecostofthisapproach. rrhecostofcornputing thebit\u00ad\nvectorisessentially thecostofscanning Sailors, \\vhichis500td.rrhecostof\nsending thebit-vector depends onthesize\\vechooseforthebit-vector, 'which\niscertainly sInaJlerthanthesizeoftheprojection; vvetakethiscosttobe201:8,\nforconcreteness. Thecostofreducing Reserves isjustthecostofscanning\nH,eserves, lOOOl'd. T'hesizeofthereduction ofR<eserves islikelytobeabout\nthesaIne Eh'3oralittlelargerthanthesizeofthereduction intIleScrnijoin\nclpproach; instea,dof200,\\vewilltaketllissizetobe220pages.(\\VeaSSUIne\nthattheselection onSailorsisincluded, topennitadirectcOInparison \\viththe\ncostofScrnijoin.) 'I'hecostofshipping thereduction istherefore 220ts'1'he\ncostofthefinaljoinatLondon is:3.(500+220)==2160td.", "781": "J)arallelandIJiBtTib'lded [)tdabases 749\nrrhus,incornparison toSernijoin! theshipping costofthisapproach isabout\ntheSaIl1t\\although itcouldbehigherifthebit-vector vverenotasselective\n(1.';theprojection ofSailorsintennsofreducing Reserves. 'Typically, though,\nthereduction oflleserves isnol110rethan10to20percent largerthanthe\nsizeofthereduction inSClnijoin. Inexchange forthisslightlyhighershipping\ncost,Bloornjoin achieves asignificantly lowerprocessing cost:lessthan:370Cltd\nversusrnorethan6500tdforSClnijoin. Indeed, Bloornjoin hasalo\\verI/C)\ncostandalowershipping costthanthestrategy ofshipping allofR,eserves to\nLondon! Thesenurnbers inclicatewhy Bloollljoin isanattractive distributed\njoinrnethod; butthesensitivity ofthernethodtotheeffectiveness ofbit-vector\nhashing (inreducing Reserves) shouldbekeptinrnind.\n22.10.3 Cost-Based QueryOptimization\n\\Vehaveseenhowdatadistribution canaffecttheinlplernentation ofindividual\noperations, suchasselection, projection, aggregation, andjoin.Ingeneral, of\ncourse,aqueryinvolves severaloperations, andoptirnizing queriesinadis\u00ad\ntributed database posesthefollowing additional challenges:\n\u2022CornrIlunication costslllUStbeconsidered. Ifwehaveseveralcopiesofa\nrelation, weHlllStalsodecidewhichcopytouse.\n\u2022Ifindividual sitesarerununderthecontrolofdifl'erent DBl\\JlSs, theau\u00ad\ntonolnyofeachsiteHUlstberespected whiledoingglobalqueryplanning.\n(~ueryoptiInization proceeds essentially asinacentralized DBMS,asdescribed\ninChapter 12,withinforrnation aboutrelations atrernotesitesobtained fron1\nthesystelncatalogs. ()fcourse,therearenlorealternative lllethods toconsider\nforeachoperation (e.g.,consider thenewoptions fordistributed joins),and\nthecostrnetricruustaccount forcornrnunication costsas\\vell,buttheoverall\nplanning processisessentially unchanged ifwetakethecostrnetrictobethe\ntotalcostofalloperations. (If\\veconsider response tilne,thefactthatcertain\nsubqueriescanbecarriedoutinpclrallelatdifferent sites\\vouldrequireusto\nchangetheoptirnizer ,1,8perthediscussion inSection22.5.)\nIntheoverallplan,localrnanipulatiol1 ofrelations atthesitewheretheyare\nstored(tocorllpute aninterrnediate relationtobeshipped elsewhere) isencap\u00ad\nsulatedintoa:sugge8ted localplarl.Theoverallplanincludes severalsuchlocal\nplans,\\vhichwe canthinkofassubqueriesexecuting atdifferent sites.\\:Vhile\ngenerating theglobalplan,thesuggested localplansproviderecilistic costes\u00ad\ntirnates forthecornputatioll oftheinterrnediate rehltions; thesuggested local\nplansareconstructed bytheoptirnizer rnainlytoprovidetheselocalcostesti\u00ad\nIuates.Asiteisfreetoignorethelocalplansuggested toitifitisabletofind\nacheaper planbyllsing InorE~currentinfonnation inthelocalcatalogs. l'hus,", "782": "750 C~HAPT'ER 22\nsiteautoncllny isrespected intheoptirnizaJion andevaluation ofdistributed\nquenes.\n22.11UPDATING DISTRIBUTED DATA\nTheclassical viewofadistributed DB:tvISisthatitshouldbehavejustlikea\ncentralized DBNISfroulthepointofvievvofauser;issuesarisingfrolndistribu\u00ad\ntionofdatashouldbetransparent totheuser,although, ofcourse,theyrnu8t\nbeaddressed attheirnplernentation level.\nvVithrespecttoqueries, thisvievvofadistributed DBIVISIneansthatusers\nshouldbeabletoaskqueries\\vithout worrying abouthowand\"\\vhererelations\narestored;wehavealreadyseentheirnplications ofthisrequirernent onquery\nevaluation.\nvVithrespecttoupdates, thisviewrneansthattransactions shouldcontinue\ntobeatornicactions, regardless ofdatafragrnentation andreplication. In\nparticular, allcopiesofarnodified relation mustbeupdated beforethernodi\u00ad\nfyingtransaction cornn1its. Werefertoreplication withthissernantics assyn\u00ad\nchronous replication; beforeanupdatetransaction cOHllnits, itsynchronizes\nallcopiesofrnodified data.\nAnaltE:~rnative approach toreplication, calledasynchronous replication, has\ncornetobewidelyusee1ineornrnercial distributed DBlVISs. Copiesofarnodified\nrelation areupdated onlyperiodically inthisapproach, andatransaction that\nreadsdifferent copiesofthesarnerelation rnayseedifferent values. T'hus,\nasynchronous replication cornprolnises distributed dataindependence, butit\ncanbeiInplernented 1110reefficiently thansynchronous replication.\n22.11.1 Synchronous Replication\nTherearetwo1)3sictechniques forensuring thattransactions seethesennevaJue\nregardless of\\vhich copyofanobjecttheyaccess.Inthefirsttechnique, called\nvoting, atnulsaction Inust\\vrite H\"lnajority ofcopiestornodify a,llol)ject <:lJld\nreadatlea\"stenoughcopiestornakesurethatoneofthecopiesiscurrent. For\nexanlple, ifthere<-:tre10copiesand7copiesare\\vrittenbyupdatetransactions,\nthenatleast/.1copiesrnustberead.Eac:hcopyhasaversionnurnber, and\nthecopy\\viththehighestversionrllunber iscurrent. Thistechnique isnotat\u00ad\ntra,ctive inrnostsituations because reading aJlol)jectreqllires readingrnultiple\ncopies;inrnostapplications, objectsarereadrnuch1n01'efrequently than thc~y\nareupdated, and\nf'~fficientperfonnance onrecvlsisveryirnportant.", "783": "I)aT'fLllel andIJistT'ib'ILted !Jai:abascs 751\nInthesecondtechnique, calledread-any write-all, toreadanobject,atraJ1S\u00ad\nactioncanreadanyone copy,butto\\vTiteanobject,itInust\\vriteallcopies.\nR,eadsarefast,especially ifwehavealocalcopy,but'writesareslo\\ver,relative\ntothefirsttechnique. 1\"'histechnique isattractive vvhenreadsarernuchrnore\nfrequent thanvvrites,anditisusuallyadopted forirnplernenting synchronous\nreplication.\n22.11.2 Asynchronous Replication\nSynchronous replication COinesatasignificant cost.Beforeanupdatetransac\u00ad\ntioncancorn1'nit, itrnustobtainexclusive locksonall\ncopies\u00b7\u00b7\u00b7c1.SSUlning thatthe\nread-any write-all technique isused\u00b7\u00b7\u00b7\u00b7ofrnodified data.Thetransaction Inay\nhavetosendlockrequests torernotesitesand\\vaitforthelockstobegranted,\nandduringthispotentially longperiod,itcontinues toholdallitsotherlocks.\nIfsitesorconnnunication linksfail,thetransaction cannotcOInrnituntilallthe\nsitesatwhichithasrnodified datarecoverandarereachable. Finally, evenif\nlocksareobtained readilyandtherearenofailures, connnitting atransaction\nrequires severaladditional rnessages tobesentaspartofacOTnrn'it protocol\n(Section 22.14.1).\nForthesereasons, synchronous replication isundesirable orevenunachievable\nin111anysituations. Asynchronous replication isgaining inpopularity, even\nthoughitallowsdifferent copiesofthesaIneobjecttohavedifferent valuesfor\nshortperiodsoftinlC.Thissituation violatestheprinciple ofdistributed data\nindependence; users11Ulstbeawareofwhichcopytheyareaccessing, recognize\nthatcopiesarebrought up-to-date onlyperiodically, andlivewiththisreduced\nlevelofdataconsistency. Nonetheless, thisseeInstobeapractical C0l11pr0l11ise\nthatisacceptable inrnanysituations.\nPrimary SiteversusPeer-to-Peer Replication\nA.synchronous replication C01nesint\\VOflavors.Inprimary siteasynchronous\nreplication, onecopyofarelation isdesignated theprimary orluaster COP)T.\nH.eplicas oftheentirerelation orfragrnents oftherelation C(lJlbecreatedat\nothersites;thesea,resecondary copies,andunliketIlepriInary copy,theycan\u00ad\nnotbeupdated ..l\\..conUIlon InecllallislIl forsettingupprhnary andsecondary!\ncopiesisthatOsersfirstregister orpublish therelation atth(-~priruaxy site\naXlclsubs(~quently subscribe toafragrnent ofaregistered relation fron1another\n(secondary) site.\nInpeer-to-peer as)rnchronous replication~ 111()rethanonecopy(although per\u00ad\nhapsrIot(11)canbedesignated asupdatable, thatis,a1'naste1'copy.Inaddition\ntopropagating changes, aconflict resolution strat(~gy Inusi';beusedtodeal", "784": "752 C~HAP'TER ~2\nwithconflicting CIH:ulges Inadeatdifferent sites.Forexarnplc, .Joe'sagernay\nbechanged to~i5atonesiteandto38atanother. \\Vhichvalueis\u00b7correct'?\n:NIanyluoresubtlekindsofconflicts canariseinpeer-to-peer replication, andin\ngeneralpeer-to-peer replication leadstoadhocconflictresolution. Sennespe\u00ad\ncialsituations in\\vhichpeer-to-peer replication doesnotleadtoconflicts arise\nquite ()ften~andinsuchsituations peer-to-peer replication isbestutilized. For\nexalnple:\n\u2022Each1nasterisallo\\vedtoupdateonlyafragrnent (typically ahorizontal\nfrag1nent) oftherelation, andanytwofragrnents updatable bydifferent\n!llasters aredisjoint. Forexcunple, itrIlaybethatsalariesofGerrnan erll\u00ad\nployeesareupdated onlyinFrankfurt, andsalariesofIndianernployees are\nupdated onlyin1\\1adras, eventhoughtheentirerelation isstoredatboth\nFrankfurt andMadras.\n\u2022Updating rightsareheldbyonlyonernasteratatillIe.Forexample, one\nsiteisdesignated abackuptoanother site.Changes attheIuastersite\narepropagated toothersitesandupdates arenotallowedatothersites\n(including thebackup). But,iftheIuastersitefails,thebackupsitetakes\noverandupdatt~s arenowperrnitted at(only)thebackupsite.\n\\Vewillnotdiscusspeer-to-peer replication further.\nImplementing Primary SiteAsynchronous Replication\nTheInainissueinirnpler11enting prilnary sitereplication isdeterrnining how\nchanges totheprirnary copyarepropagated tothesecondary copies.Changes\nareusuallypropagated intwosteps,calledCalJtl1:re andApply.Changes rnade\nbycOHnnitted transactions totheprirnary copyares()Jnehow identified during\ntheCapture stepandsubsequently propagated tosecondary copiesduringthe\nApplystep.\nIncontrast tosynchronous replication~ atransacti.on thatrnodifies areplicated\nrelation directly locksandchanges onlytheprirnary copy.Itistypically C0111\u00ad\nrnittedlongbeforetheApplystepiscarriedout.Systcrnsvary considerably\nintheirilnplernentation ofthesesteps.\\Vepresentanovervic\\v ofsenneofthe\nalternatives.\nCapture\nrrlleCapture stepisilnplerIlented usingoneoftwoapproaches. Inlog-based\nCaptU1'(,\\thelogluainta,inecl forrecovery purposes isusedtogenerate arecord\nofupdates. B(lsicall~Yj \\vhenthelogtailiswrittentostablestorage, alllog", "785": "recordsthataffectreplicated relations c1realso-writtentoaseparate change\ndatatable(eDT). Sincethetransaction thatgenerated theupdatelogrecord\nluaystillheactivewhentherecordis\\vritten totheCDrT,itmaysubsequently\nabort.lJpdate logrecordswritten bytransactions thatsubsequently abort\n1l1UStl)ercrnoved fror11theeDTtoobtainastrearllofupdates due(only)to\nconlln,itted transactions. Thisstreanlcanbeobtained aspartoftheCapture\nsteporsubsequently intheApplystepifconunit logrecordsareaddedto\ntheeDT;forconcreteness, vveaSSUlnethatthecornruitted updatestrealllis\nobtained a.~partoftheCapture stepandthattheCDTsenttotheApplystep\ncontains onlyupdatelogrecordsofcorl1ruitted transactions.\nInprocedural Capture, aprocedure autornatically invoked bytheDBlVlSor\nanapplication progra,lIl initiates theCapture process, whichconsists typically\noftakingasnapshot oftheprirnary copy.Asnapshot isjustacopyofthe\nrelation asitexistedatsorneinstantintirne.(Aprocedure thatisautoluatically\ninvokedbytheDENIS,suchastheonethatinitiates Capture, iscalledatrigger.\nvVecovered triggers inChapter 5.)\nLog-based Capture hasas111alleroverhead thanprocedural Capture and,be\u00ad\ncauseitisdrivenbychanges tothedata,resultsinaslua11erdelaybetween the\ntirnetheprirnary copyischanged andtheti111ethatthechangeispropagated\ntothesecondary copies.(Ofcourse,thisdelayalsodepends onho\\vtheApply\nstepisimplelnented.) Inparticular, onlychanges arepropagated, andrelated\nchanges (e.g.,updates totwotableswithareferential integrity constraint be\u00ad\ntweenthern)arepropagated together. Thedisadvantage isthatilnpleluenting\nlog-based Capture requires adetailed understanding ofthestructure ofthelog,\nwhichisquitesysternspecific. Therefore, a\u00b7vendorcannoteasilyiInplernent\nalog-based Capture rnechanisrn that,viIIcapture clulnges rnadetodata.in\nanother vendor's DB1\\1S.\nApply\nfI'heApply steptakesthechanges collected bytheCapture step,vvhichare\nintheCDTtableorasnapshot, andpropagates 1,h81ntothesecondary copies.\nThisc:anbedoneb:yhavingtheprirnary sitecontinuously sendtheCDTor\nperiodically requesting (thelatestportion of)thecrrrora,snctpshot frorH\ntheprirnary site.Typically, eachsecondary siterunsacopyoftheJ\\pply\nprocessand'pulls'thechanges intheeDTfronltheprirnary siteusingperiodic\nrequests. Theinterval l)(~t\\veen suchrequests canbecontrolled byatilneror\nauser ~sappliccl,tion prograrl1. ()ncethechanges areavail(1)le atthesecondary\nsite,theycanbeapplieddirectly tothereplica.", "786": "754 CHAPTER 12\nInsornesysterns, thereplicaHeednotbejustafrag1Ilent oftheoriginal relation~\nitcanbeaviewdefinedusing SQL, andthereplication rnechanisrn issufficiently\nsophisticated to11laintain suchaviewatareillotesiteincrementally (byreeval\u00ad\nuatingonlythepartofthevie\\vaffected bychanges recorded intheCI)T).\nLog-ba..f.3ed Capture inconjunction withcontinuous Applyrninirnizes thedelay\ninpropagating changes. Itisthebestcor11bination insituations wherethe\nprimary andsecondary copiesarebothusedaspartofanoperational DBlVIS\nandreplicasmustbeascloselysynchronized withtheprinlary copyaspossi\u00ad\nble.Log-based Capture withcontinuous Applyisessentially alessexpensive\nsubstitute forsynchronous replication. Procedural Capture andapplication\u00ad\ndrivenApplyofferthe11l0Stflexibility inprocessing sourcedataandchanges\nbeforealtering thereplica;thisflexibility isoftenusefulindatawarehousing\napplications wheretheabilityto'clean'andfiltertheretrieved datais1110re\nimportant thanthecurrency ofthereplica.\nDataWarehousing: AnExample ofReplication\nCornplex decision support queriesthatlookatdatafromIllultiple sitesarebe\u00ad\ncomingveryinlportant. Theparadigrn ofexecuting queriesthatspanr11ultiple\nsitesissirnplyinadequate forperfornlance reasons. Onewaytoprovidesuch\ncomplex querysupport overdatafrolnrllultiple sourcesistocreateacopyof\nallthedataatSaIneonelocation andusethecopyratherthangoingtothein\u00ad\ndividual sources. Suchacopiedcollection ofdataiscalledadatawarehouse.\nSpecialized systelIls forbuilding, rnaintaining, andquerying datawarehouses\nhavebecolneirnportant toolsinthernarketplace.\nDatavvarehouses canbeseenasoneinstance ofasynchronous replication, in\n'whichcopiesareupdated relatively infrequently. '\\Vhenwetalkofreplica\u00ad\ntion,\\vetypically rIlCal1copiesInaintained underthecontrolofasingleDBlVIS,\n\\vhereaswith data\\varehousing, theoriginaldatarnaybeondifferent sofhvare\nplatforrns (including databa\",'Sc systerns andasfilesysterIls) andevenl)clongto\ndifferent organizations. Thisdistinction, 110\\VeVer, islikelytobecoine blurred\na.'3vendors adoptluore'open'strategies toreplication. Forexarnple, sorne\nproducts alreadysupport theIJlaintenance ofreplicasofrelations storedinone\nvendor's DB~\u00b71Sinal10ther vendor's I)BlVIS.\nvVe110tethatdatawarehousing involves rnorethanjustreplication. vVediscuss\notheraspectsofdatawarehousing inChapter 2.5.", "787": "Parallel aTLd\nDii8b~ib1LtedDataba8e8\n22.12DISTRIBUTED TRANSACTIONS7~5\nInadistributed DBlvIS,agiventransaction issubrnitted atSOIneonesite,but\nitcanaccessdataatothersites &')well.Inthischapter werefertotheactivity\nofatransaction atagivensiteasasubtransaction. VVhenatransaction\nissubrnitted atS0111esite,thetransaction rnanager atthatsitebreaksitup\nintoacollection ofoneorrnorosubtransactions thatexecuteatdifferent sites,\nsubrnits thelntotransaction rnanagers attheothersites,andcoordinates their\nactivity.\n\\\\1enowconsider ~lSpectsofconcurrency controlandrecovery thatrequiread\u00ad\nditional attention because ofdatadistribution. AswesawinChapter 16,there\naremanyconcurrency controlprotocols; inthischapter, forconcreteness, we\nassurnethatStrict2PL'withdeadlock detection isused.Wediscussthefollow\u00ad\ningissuesinsubsequent sections:\n\u2022Distributed Concurrency Control: Howcanlocksforobjectsstored\nacrossseveralsitesbemanaged? Howcandeadlocks bedetected ina\ndistributed database?\n\u2022Distributed Recovery: Transaction atomicity lllUStbeensured-\u00b7---when a\ntransaction commits, allitsactions, acrossallthesitesatwhichitexecutes,\nrnustpersist. Si111ilarly, whenatransaction aborts,noneofitsactionsmust\nbeallowedtopersist.\n22.13DIS\"fRIBUTED CONCURRENCY CONTROL\nInSection22.11.1, wedescribed t\\VOtechniques forirnplernenting synchronous\nreplication, andinSection22.11.2, \"vodiscussed varioustechniques forirllple\u00ad\nrnenting asynchronous replication. rrhechoiceoftechnique deterrnines which\nobjectsaretobelocked. Whenlocksareobtained andreleased isdeterrnined\nbytheconcurrency controlprotocol.vVe nowconsider howlockandunlock\nrequests areirnplcrnented inadistributed envirorllnent.\nLockrnanagernent canbedistributed acrosssitesinrnanyways:\nIICentraliz,ed: Asinglesiteisinchargeofhandling lockandunlockrequests\nforallobjects.\n!IIIlPriulary Copy:()necopyofeachobjectisdesignated theprirnclry copy.\n.i\\.llrequests tolockorunlockacopyofthisobjectarehandled bythelock\nrnanager atthesite\\vheretheprirnary copyisstored,regardless ofwhere\nthecopyitselfisstored.", "788": "75G (;HAPTER 22\nIIFullyDistributed: R,equests tolockorunlockacopyofanobjectstored\natasitearehandled bythelocklnanager atthesite\"wherethecopyis\nstored.\nThecentralized schelneisvulnerable tofailureofthesinglesitethatcontrols\nlocking. Theprirnary copyscherneavoidsthisproblern, butingeneral, reading\na,nobjectrequires cornrnunicatiollwith t\\VOsites:thesitevvheretheprirnary\ncopyresidesandthesite\"wherethecopytobereadresides. Thisproblern\nisavoided inthefullydistributed 8che1nc, because lockingisdoneatthesite\nwherethecopytobereadresides. However, \\vhilewriting, locksrnustbeset\natallsiteswherecopiesarernoclified inthefullydistributed schclne, whereas\nlocksneedbesetonlyatonesiteintheothertwoschernes.\nClearly, thefullydistributed lockingscherneisthe1110stattractive schelneif\nreadsaremuchmorefrequent thanwrites,asisusuallythecase.\n22.13.1 Distributed Deadlock\nOneissuethatrequires specialattention whenusingeitherpriluary copyorfully\ndistributed lockingisdeadlock detection. (Ofcourse,adeadlock prevention\nschernecanbeusedinstead,butwefocusondeadlock detection, whichiswidely\nused.)Asinacentralized DBMS, deadlocks rnustbedetected andresolved (by\naborting sornedeadlocked transaction).\nEachsiternaintains alocalwaits-for graph,andacycleinalocalgraphindicates\na,deadlock. lIowever, then~canbeadeadlock evenifnolocalgraphcontains\nacycle.Forexarnple, suppose thattwosites,AandB,bothcontain copies\nofobjects01and02,andthattheread-any write-all technique isused. I~l,\nwhichwantstoread()1andwrite02,obtainsanSlockon01andanXlock\non02atSiteA,thenrequests an..Xlockon02atSiteB.T2,which\\vants\ntoread02andwrite01,rneanwhilc, obtainsanSlockon02andan..xlock\non01atSiteB,thenrequests anXlockon()1atSiteA..A.sI~'igure22.5\nillustrates, 7~2iswaitingforTlaJ,SiteA.andTliswaitingforT2atSite13;\nthus,\\vehaveadeadlock, \\vhichneithersitecandetectbasedsolelyonitslocal\nwaits-for graph.\nTodetectsuchdeadlocks, adistributed deadlock detection algoritlun rnust\nbeused.\\VedescTil)e threesuchalgoritluns.\nThefirstalgorithrn,\\vhich iscentralized, consists ofperiodically sendingall10\u00ad\ncalwaits-for graphstoonesitethatisresponsible forglobaldeadlock detection.\nAtthissite,theglobaJ\\va-its-for graphisgenerated bycOlubinin.g allthelocal\ngraphs;thesetofnodesistheunionofnodesinthelocalgraphs,andthereis", "789": "]JaTallelandDi8trilnded Databases 7fJ7\nGlobalWaits-for Graph\nFigure 22.5Distributed Deadlock\nanedgefrornonenodetoanother ifthereissuchanedgeinanyofthelocal\ngraphs.\nThesecondalgorithrn, whichishierarchical, groupssitesintoahierarchy. For\ninstance, sitesr11ightbegrouped bystate,thenbycountry, andfinallyintoa\nsinglegroupthatcontains allsites.Everynodeinthishierarchy constructs\nawaits-for graphthatrevealsdeadlocks involving onlysitescontained in(the\nsubtreerootedat)thisnode.Allsitesperiodically (e.g.,every10seconds) send\ntheirlocalwaits-for graphtothesiteresponsible forconstructing thewaits\u00ad\nforgraphfortheirstate.Thesitesconstructing waits-for graphsatthestate\nlevelperiodically (e.g.,everyminute) sendthestatewaits-for graphtothe\nsiteconstructing thewaits-for graphfortheircountry. Thesitesconstructing\nwaits-for graphsatthecountry levelperiodically (e.g.,every10rninutes) send\nthecountry waits-for graphtothesiteconstructing theglobalwaits-for graph.\nThisschemeisbasedontheobservation thatl110redeadlocks arelikelyacross\ncloselyrelatedsitesthanacrossunrelated sites,anditputs1110reeffortinto\ndetecting deadlocks acrossrelatedsites.Alldeadlocks areeventually detected,\nbutadeadlock involving twodifferent countries J.naytakeawhiletodetect.\nThethirdalgorithrn issirllple:Ifatransaction waitslongerthanSOInechosen\ntinle-out interval, itisaborted. Although thisalgorithrll rnaycausernany\nunnecessary restarts, theoverhead ofdeadlock detection is(obviously!) low,\nandinaheterogeneous distributed database, iftheparticipating sitescannot\ncooperate totheextentofsha,ringtheir\\va,its-for graphs,itrnaybetheonly\noption.\nAsubtlepointtonotewithrespecttodistributed deadlock detection isthat\ndelaysinproI5agating localinforrnation rnightcausethedeadlock detection\nalgorithr11 toidentify 'deadlocks' thatdonotreallyexist.Such situations~\ncalledphantoln deadlocks~ leadtounnecessary aborts.Forconcreteness, we\ncliscussthecentralized algorithrn, although thehierarchical algorithrn suffers\nfr0111theSe1Ineproblern.", "790": "758 (;HAPI'ER 2'2\nConsider arnodificatioll oftheprevious exarnple. Asbefore,thetwotransac\u00ad\ntions\\vaitforeachother,generating thelocal\\vaits-for graphsshowninFigure\n22.5,andthelocalvvaits-for graphsaresenttotheglobaldeadlock-detection\nsite.IIo\\vever, 7'2isnowaborted for1'ea..,;on8otherthandeadlock. (Forex\u00ad\narnple,T2rnayalsobeexecuting atathirdsite,'whereitreadsanunexpected\ndatavalueanddecidestoabort.).Atthispoint,thelocalwaits-for graphshave\nchanged sothatthereisnocycleinthe'true'global\\vaits-for graph.l-Io\\vever,\ntheconstructed globaJwaits-for graph\\villcontainacycle,and7'1Inaywellbe\npickedasthevictirn!\n22.14DISTRIBUTED RECOVERY\nRecovery inadistributed DBJVISisrnorecornplicated thanInacentralized\nDBMSforthefollowing reasons:\nl1liNewkindsoffailurecanarise:failureofCOlnnlunication linksandfailure\nofaremotesiteatwhichasubtransaction isexecuting.\nl1liEitherallsubtransactions ofagiv(~ntransaction IuustccnnlnitornoneHUlst\nconlnlit, andthisproperty IIlustbeguaranteed despiteanycOIllbination of\nsiteandlinkfailures. T'hisguarantee isachieved usingacommit proto\u00ad\ncol.\nAsinacentralized DBMS, certainactionsarecarriedoutaspartofnorrnal\nexecution toprovidethenecessary infonnation torecover fro111failures. Alogis\nrnaintained ateachsite,andinaddition tothekindsofinforrnation rnaintained\ninacentralized DB11S, actionstakenaspartofthecOlInnit protocol arealso\nlogged. TheInostwidelyusedconunit protocol iscalledTUJO-Phase Cornmit\n(2PC).Avariantcaned21JCwithPrcsurncd Abort,whichwediscussnext,hc'k'3\nbeenadopted asanindustry standard.\nInthissection, wefirstdescribe thestepstakenduringnonnalexecution, con\u00ad\ncentrating onthecOHnnit protocol, andtJlendiscussrecovery fron1failures.\n22.14.1 NormalExecution andCommit I>rotocols\nI)uringDonnalexecution, eachsiternaintains alog,andtheactionsofasub\u00ad\ntransaction are~.oggedatthesite\\vhereitexecutes. Theregularloggingactivity\ndescribed inChapter 18iscarriedoutand,inaddition, aeornnlit protocol is\nfollc)\\ved toensurethatallsubtra,nsa.ctions ofagiventransaction eithercOIrnnit\norH,bortuniforrnly. 1'hetransacticHl rnanager atthesitevvhcl'ethetransaction\n()riginat(~cl iscalledthecoordinator forthetransaction; transaction Inanagers\natsites \\vh(~l'eitssubtraJ1Sactiol1S execute are ca.11(~dsubordinates (\\vithre\u00ad\nspecttothecoordinatioll ofthistransaction).", "791": "ParallelandDistTilnlted ]Jatabases 7~9\n\\Veno\\vdescribe theTwo-:Pha'5e Cornmit (2PC) protocol~ intennsofthe\nrnessa,ges exchanged andthelc)grecordsvlritten. \\Vhentheuserdecidesto\ncornrnit atransactioll~ theconunit cOIrunand issenttothecoordinator forthe\ntransaction. Thisinitiates the2PC;protocol:\n1.Thecoordinator sendsapreparernessage toeachsubordinate.\n2.\\'Thenasubordinate receives aprepare rnessage~ itdecides\\vhether toabort\norcornrnit itssubtransaction. Itforce-writes anabortorprepare log\nrecord,andthensendsa.nooryesrnessage tothecoordinator. Notethat\napreparelogrecordisnotusedinacentralized DB.l\\;lS;itisuniquetothe\ndistributed cornrnit protocol.\n3.Ifthecoordinator receives yeslnessages fr0IIIallsubordinates, itforce\u00ad\nwritesacornmit logrecordandthensendsacornrnitrnessage toallsub\u00ad\nordinates. Ifitreceives evenonenornessage orreceives noresponse fronl\nSOHlesubordinate foraspecified titne-out interval, itforce-writes anabort\nlogrecord,andthensendsanabortInessage toallsubordinates.1\n4.vVhenasubordinate receivesanabortInessage, itforce-writes anabortlog\nrecord,sendsanackInessage tothecoordinator, andabortsthesubtrans\u00ad\naction.Whenasubordinate receives acornrnitrnessage, itforce-writes a\ncOl1nnit logrecord,sendsanackrnessage tothecoordinator, andcorrunits\nthesubtransaction.\n5.Afterthecoordinator hasreceived ackrnessages frornallsubordinates, it\nwritesanendlogrecordforthetransaction.\n1:'henarne T'llJO-]J}ULSC(7ornTnit reflectsthefactthattworoundsofrnessages\nareexchanged: firstavotingphase,thenatennination pha..se,bothinitiated\nbythecoordinator. ffhebasicprinciple isthatanyofthetransaction tnan\u00ad\nagel'Sinvolved (including thecoordinator) canunilaterally a,bortatransaction,\n\\vhereas therernust beunanirnity toconuuit atransaction, vVhenarnessage\nisserltin2PC,itsignalsadecision bythesender.Toensurethatthisdecision\nsurvives acrashatthesender's site,thelogr(~corddescribing thedecision is\nahvaysforcedtostablestoragebeforethernessage issent.\n;\\transaction isofIicially cornrnitted atthetirnethecoordiIlator '8cOllnnit log\nrecordreachesstablestorage. Subsequent failurescannotaffecttheoutcorne of\nthetransaction; itisirrevocaJ)ly corrunitted. Logrecords\\vritten torecordthe\nconnnit protocol actionscontainthetypeoftherecord, tlH~tn.lllsaction iel,and\ntheidentity ofthecoordiu;:ltor. i\\coordinator's conunit orabortlogrecord\nalsocontains theidentities ofthesubordinates.\n1Asa,noptilnizationJthecoordinator neednotsendabortmeSS;:lges {;osubordinates whovotedno,", "792": "760 (';IIAPTER, ~2\n22.14.2 RestartafteraFailure\nvVhenasiteCOUlesbackupafteraerao.sh,\\veinvoke arecovery processthat\nreadsthelogandprocesses alltransactions executing theconunit protocol at\nthetirneofthecnlsh.Thetransaction rnanager atthissitecouldhavebeenthe\ncoordinator forSOUleofthesetransactions andasubordinate forothers.Wedo\nthefollo\u00a5ling intherecovery process:\n\u2022IfvvehaveacornInitorabortlogrecordfortransaction T,itsstatusisclear;\nweredoorundo1\"\\respectively. Ifthissiteisthecoordinator, whichcan\nbedeterrnined froru tl1(~cOlTllnit orabortlogrecord,wernustperiodically\nresend\u00b7-,\u00b7-because therernaybeotherlinkorsitefailuresinthesystem~~~\"-a\ncom/n7,itorabortrnessage toeachsubordinate untilwereceiveanack.After\nwehavereceived acksfrornallsubordinates, wewriteanendlogrecordfor\nT.\n\u2022Ifwehaveaprepare logrecordforTbutnoconunit orabortlogrecord,\nthissiteisasubordinate, andthecoordinator canbedetennined froIn\ntheprepare record. Werllustrepeatedly contactthecoordinator siteto\ndetermine thestatusofT.Oncethecoordinator responds witheither\ncOlurnit orabort,wewriteacorresponding logrecord,redoorundothe\ntransaction, andthenwriteanendlogrecordforT.\n\u2022Ifwehavenoprepare, cOllunit, orabortlogrecordfortransaction T,\nTcertainly couldnothavevotedtoconnuit beforethecrash;sowecan\nunilaterally abortandundoTandvvriteanendlogrecord.Inthiscase,\nwehavenowaytodetennine whether thecurrentsiteisthecoordinator\norasubordinate for1'1.flowever, ifthissiteisthecoordinator, itrnight\nhavesentapreparernessage priortothecrEL.'3h,andifso,othersitesrnay\nhavevotedyes.Ifsuchasubordinate sitecontacts therecovery processat\nthecurrentsite,wenowknowthatthecurrentsiteisthecoordinator for\nT,andgiventhatthereisnocOllnnit orabortlogrecord,theresponse to\nthesubordinate shouldbetoabort71\n\u2022\n()bserve that,ifthecoordinator siteforatransaction I'fails,subordinates who\nvotedyescannotdecide\\vhether toconunit orabort ~runtilthecoordinator\nsiterecovers; \\vesaythatl'isblocked. Inprinciple, theactivesubordinate\nsitescouldcOl1nnunicate arnongthelIlselves, andifatlccL.'3toneofthelIlcontains\nanabortorcoinrnit logrecordforT,itsstatusbecornes globally known. 1\"0\nconununicate arnongthernselves, allsubordinates nlustbetoldtheidentity of\nth(~othersubordinates atthetitne th(~yaresentthe]Jrcpa:reInessage. llowever,\n2PCisstillvlllnerable tocoordinator failuredurirlgrecovery because evenifall\nsubordinates votedyes,thecoordinator (-whoalsoha,savote!)rnayhavede\u00ad\ncidedtoaJ)ortrr,andthisdecision cannotbedetennined untilthecoordinator\nsi1,erecovers.", "793": "Parallel a1ul[Jistrilnded Database8 791\n\\Vecovered howasiterecovers fro111acrash,but\\vhat shouldasitethatis\ninvolved inthecOIIunitprotocol doifasitethatitiscornrl1unicating withfails?\nIfthecurrentsiteisthecoordinator, itshouldshnplyabortthetransaction.\nIfthecurrentsiteisasllbordina,te~ andithasnotyetresponded tothecoor\u00ad\ndinator's prepaT(;lnessage, itcan(andshould)abortthetransaction. Ifitisa\nsubordinate andhasvotedyes,thenitcannotunilaterally abortthetransac\u00ad\ntion,anditcannotcOIUlnit either;itisblocked. Itlnustperiodically contact\nthecoordinator untilitreceives areply.\nFailures ofCOffilnunication linksareseenbyactivesitesasfailureofothersites\nthattheyarecomnlunicating with,andtherefore thesolutions justoutlined\napplytothiscaseas\\-vell.\n22.14.3 Two-Phase Commit Revisited\nNowthatweexamined howasiterecovers frolllafailure,andsawtheinter\u00ad\nactionbetween the2PCprotocol andtherecovery process, itisinstructive to\nconsider how2PCcanberefinedfurther. Indoingso,wearriveatamoreef\u00ad\nficientversionof2PC,butequallyirnportant perhaps, weunderstand therole\nofthevariousstepsof2PCruoreclearly.Consider threebasicobservations:\n1.l'heackrnessages in2PC an~usedtodetennine whenacoordinator (or\ntherecovery processatacoordinator sitefollowing acrash)can'forget'\naboutatransaction T.lJntilthecoordinator knowsthatallsubordinates\nareawareofthecornrnitorabortdecision forT,itIIlustkeepinforrnation\naboutTinthetransaction table.\n2.Ifthecoordinator sitefailsaJtersendingout]J'repoxernessages butbefore\nwritingacornrnit orabortlogrecord,whenitcornesbackup,it1Utsno\ninf'orruatiol1 abolltthetransaction's connnitstatuspriortothecrash.IInv.l\u00ad\never,itisstillfreetoabortthetransaction unilaterally (beca,use ithasnot\n\\vrittcnaconunit record,itcanstillcastanovoteitself).Ifanother site\ninquires aboutthestatusofthetransaction, therecovery process, aswe\nhaveseen,responds \\vithanabortrnessage. Therefore, intheabsence of\ninforrnation, atransaction ispres'luned toh..aveaborted.\n:3.Ifasubtnlnsaction doesnollIHlates, ithasnochanges toeitherredoor\nundo:inothervvords.itscornrnit orabortstatusisirrelevant.\n'l'hefirsttvvool)servations suggestseveralrefinernents:\nm\\VhenacoordirlCltor (tbortsatnl,nsa,cticHl T',itcanundo ~randrerl10veit\nfronlthetransaction tableirnrrlediately. Afterall\\rernoving ~rfrornthe\ntableresultsina'noinforrnatioI1' statewithrespecttoT,andthedefault", "794": "762 CHAPTER 62\nresponse (toanenquiryaboutT)inthisstate,\\vhichisabort,isthecorrect\nresponse foranaborted transaction.\n\u2022Bythesametoken,ifasubordinate receives anabortInessagc, itneednot\nsendanacklnessage. rrhecoordinator isnotwaitingtohearfrornsubor\u00ad\ndinatesaftersending anabor't111essage! If,forSOlnerea...\")on,asubordinate\nthatreceives aprepflrcmessage (andvotedyes)doesnotreceiveanabort\norcornm,itInessage foraspecified tirne-out interval, itcontacts thecoordi\u00ad\nnatoragain.Ifthecoordinator decidedtoabort,thereInaynolongerbe\nanentryinthetransaction tableforthistransaction, butthesubordinate\nreceivesthedefaultabortnlessage, whicllisthecorrectresponse.\n\u2022Because thecoordinator isnotwaiting tohearfroulsubordinates after\ndeciding toabortatransaction, thenamesofsubordinates neednotbe\nrecorded intheabortlogrecordforthecoordinator.\n\u2022Allabortlogrecords (forthecoordinator aswellassubordinates) can\nsimplybeappended tothelogtail,insteadofdoingaforce-write. After\nall,iftheyarenotwrittentostablestorage beforeacrash,thedefault\ndecision istoabortthetransaction.\nThethirdbasicobservation suggests SOlneadditional refinements:\n\u2022Ifasubtransaction doesnoupdates (whichcanbeeasilydetected bykeep\u00ad\ningacountofupdatelogrecords), thesubordinate canrespond toaprepare\n111essage fromthecoordinator withar'eadermessage, insteadofyesorno.\nThesubordinate writesnologrecordsinthiscase.\n\u2022vVhenacoordinator receives areaderlnessage, ittreatstheInessage asayes\nvote,butwiththeoptiInization thatitdoesnotsendanylnoremessages\ntothesubordinate, because thesubordinate's cornlnit orabortstatusis\nirrelevant.\n\u2022Ifallsubtransactions, including thesllbtransaction atthecoordinator site~\nsendareaderluessagc, wedonotneedthesecondphaseoftheconunit pro\u00ad\ntocol.Indeed,\\\\'ecansirnplyrernovethetransaction frolHthetransaction\ntable:\\vithout \\vritinganylogrecordsatanysiteforthistransaction.\n1lH~T'wo-Phasc Cornrnit protocol withtherefinernents discussed inthissection\niscalledTwo-Phase Commit withPresurned Abort.\n22.14.4 Three ...PhaseCommit\nAcornlnitprotocol caIledThree-Phase Conlrnit (3PC)canavoidblocking\nevenifthecoordinator sit(~failsduringrecovery. T'hebasicideaisthat,\\vhen", "795": "Parallel andDistrilnded Databases 763\nthecoordinator sendsoutprel)arcrnessages andreceivesyesvotes\u00a31'0111allsub\u00ad\nordinates, itsendsallsitesapTccomrrl-it message, ratherthanacornrnitrnessage.\n\\\\Thenasufficient l1Ulllber ..\u00b7\u00b7....\u00b7\u00b7....morethanthelIlaxinlulll nUlnber offailuresthat\nnlustbehandled\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7of ackshavebeenreceived, thecoordinator force-writes a\ncornrn\u00b7itlogrecordandsendsacornmitlnessage toallsubordinates. In3PC,\nthecoordinator effectively postpones thedecision tocornrnit untilitissure\nthatenoughsitesknowaboutthedecision tocorn111it; ifthecoordinator sub\u00ad\nsequently fails,thesesitescanC0l11111Unicate witheachotheranddetectthat\nthetransaction rnustbecorllrnitted-conversely, aborted, ifnoneofthernhas\nreceived aprecomrnit rnessage-'-without waitingforthecoordinator torecover.\nrrhe3PCprotocol ilnposes asignificant additional costduringnormalexecution\nandrequiresthatCOlnrIlunication linkfailuresdonotleadtoanetwork partition\n(wherein sornesitescannotreachsomeothersitesthrough anypath)toensure\nfreedo111 fronlblocking. Forthesereasons, itisnotusedinpractice.\n22.15REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\n\u2022Discussthedifferent rnotivations behindparallelanddistributed databases.\n(Section 22.1)\n\u2022Describe thethreelllainarchitectures forparallel DBMSs. Explain why\ntheshared-memory and shaT'(~d-disk approaches sufferfrOlllinterference.\nWhatcanyousayaboutthespeed-up andscale-up oftheshared-nothing\narchitecture? (Section 22.2)\n\u2022Describe anddifferentiate pipelined parallelism anddata-partitioned paral\u00ad\nlelism.(Section 22.3)\n\u2022Discussthefollowing techniques forpartitioning data:round-Tobin, hash,\nandrange.(Section 22.3.1)\nIIExplain howexisting codecanbeparallelized byintroducing splitand\nrnerrJCoperators. (Section 22.3.2)\n11IIDiscuss huwcadIofthefollowing operators canbeparallized usingdata\npartitionipg: scanning, sorting, joiTL.Cornparc theuseofsortingversus\nhashing forpartitioning. (Section 22.4)\n11IIIvVhatdo\\veneedtoconsider inoptilllizing queriesforparallelexecution?\nDiscussinteroperation parallelislll, left-dcc~p treesversusbushytrees,and\n(~ostestirnation. (Section 22.5)", "796": "-(\"4I'):'\n\u2022\n..\n..\n..\n..\n..\n..\n\u2022\n..\n..\n\u2022\n\u2022CIIAPTER 2~\nDefinethetennsdisiribtded data itbde1JendeTU~e anddistribttted transaction\natryrnicitll. .ATetheseconcepts sllpported incurrenteornrnercial systerns?\n\\Vhynot?\\\\Thatisthedifference bet\\veen hornogeneoclls andheteTogeneOtls\ndistributed databa\",'3es? (Section 22.6)\nDescribe thethreelllainarchitectures fordistributed DB~'lSs. (Section 22.7)\n1\\relation canbedistributed byjraglnent'ing itorrcplicat'ing itacross\nseveralsites.Explain theseconcepts andho\\vtheydiffer.Also,distinguish\nbetween }un'1;zontal andverticalfragrnentation. (Section 22.8)\nIfarelation isfraglnented andreplicated, eachpartition needsaglobally\nuniquenalnecalledtheTclat'ion narnc.Explain howsuchglobalnaInes\narecreatedandtheInotivation behindthedescribed approach tonarning.\n(Section 22.9.1)\nExplain howrnetadata aboutsuchdistributed dataisrnaintained inadis\u00ad\ntr'ibuted catalog.(Section 22.9.2)\nDescribe anauling schernethatsupports distributed dataindependence .\n(Section 22.9.3)\nWhenprocessing queriesinadistributed DBlVlS,thelocation ofpartitions\noftherelation needstobetakenintoaccount. Discussthealternatives\nwhenjoiningtwo two relations thatresideondifferent sites.Inparticular,\nexplainanddescribe thernotivation behindtheSernijoin andBloornjoin\ntechniques. (Section 22.10.2)\nWhatissuesrnustbeconsidered inoptirnizing queriesoverdistributed data,\ninaddition towherethedataislocated? (Section 22.10.3)\n\\\\7hatisthedifference bet\\veen synchronous asynchronous replication? Why\nhasasynchronous replication gainedinpopularity? (Section 22.11)\nDescribe the'ootingandTead-a'ny 'l1J'rite-all approaches tosynchronous repli\u00ad\ncation.(Section 22.11.1)\nSurnruarize thepeer-lo-peer and]JTinul,Ty siteapproaches toasynchronolls\nrepliccLtion. (Section 22.11.2)\nInprirnary sitereplication, changes totheprirnary copyInustbepropa\u00ad\ngatedtosecondary copies.vVhatisdoneintheCaph.lT'c andApplysteps?\nDescribe log-based andproceri'ttrnl approaches toCapture andcornpare\ntheln.VVhatarethevariations inscheduling theApplystep?Illustrate the\nuseofasynchronolls replication inadatavi.larehouse. (Section 22.11.2)\n\\Vhatisa8'ubtrans(u.:t'io'n? (Section 22.12)", "797": "jJo,rallelandD'i.stributed Database8 765\nit\nII\\'Thatarethechoicesforrnanaglng locksinadistributed DBrvIS? (Sec\u00ad\ntion22.13)\nIiDiscussdeadlock detection inadistributed datab<:1Se. Contr&')t thece1lLrnl\u00ad\n'ized,hierarchical, andtirne-o'ut approaches. (Section 22.13.1)\nIII\\\\Thyisrecovery inadistributed l.)BlVISrIlorecornplicated tha.nIIIacen\u00ad\ntralizedsystern? (Section 22.14)\nIII\\\\Thatisaconnnit protocoland\\vhyisitrequired inadistributed database?\nDescribe andC01npa.1\"e T'wo-fJhasc a11dThree-Phase Cornn1it. \\Vhatis\nblocking, andhowdoestheThree-Pha,,')e protocol prevent it?vVhyisit\nnonetheless notusedinpractice? (Section 22.14)\nEXERCISES\nExercise 22.1Givebriefanswers tothefollowing questions:\n1.Whatarethesiruilarities anddifferences between parallelanddistributed database rnan-\u00b7\nagement systerns?\n2.Wouldyouexpecttoseeaparallel database builtusingawide-area network? \\Vould\nyouexpecttoseeadistributed database builtusingawide-area network? Explain.\n3.Definetheterms8cale--'Up andspeed-up.\n4.Whyisashared-nothing architecture attractive forparalleldatabase systerns?\n5.Theideaofbuilding specialized hardware torunparalleldatabase applications received\nconsiderable a+t.ionbuthasfallenoutoffavor.Cornrnent onthistrend.\n6.\\\\Thatareth,(Lntages ofadistributed D131\\1[8overacentralized DBNIS?\n7.Brieflydescr nndcornpare theClient-Server andCollaborating Serversarchitectures.\nttingServersarchitecture, \\vhenatransaction issubrnitted totheDBIVIS,\nhowitsactivities atvarioussitesarecoordinated. Inparticular, describe\n.saction managers atthedifferent sites,theconcept of8ubtransacf:ions,\n_ceptofd'i.5tributed tTan.saction atO'lnicity.8.IntheCollal\nbrieflydew'\ntherole(l\nandthe,\nExercise 22.2Givebriefa,nswers tothefollmving questions:\n1.I)efinethetenusfragrnentat'ion andrcpl'icah 0T/\"intennsofwheredataisstored.\n2.\\\\'11(1'isthedifference behveen synclrrorwu8 anda,synchTo'TWU8 replication?\na.Define thetern1distrilndcd dataindependence. \\Vha.tdoesthisInean'with respectto\nquer:ying ane!updating datainthepresence ofdatafragrnentation andn::plication?\n4.C:onsieh:~r the'uot:ingBJ1dn::ad-anywriic-all techniques forirnplementing synchronous\nreplication.\\\\rhat aretheir respectiv(~ l>rosandcons?\n5.C;iveanc)Verview ofhenvasynchronous replication can1)('irnplernented. Inparticular:\nexplainthetennsCaptun:'andApply.\n6.\\VIHttisthedifference between log-based andprocedural irnplernentatiOlls ofcapture?\n7.\\VllYisgivingdatabase objcc:tsuniquenamesrnorecennplicated inadistributed DB~IS?", "798": "766 CHAP'TER 42\n8.Describe acatalogorganization thatpennitsanyreplica(ofanentirerelation orafrag\u00ad\nrnent)tobegivenauniquenam,eandprovides thenanling infrastructure required for\nensuring distributed dataindependence.\n9.Ifinfonuation fi'Olllrenlotecatalogs iscachedatothersites,whathappens ifthecached\ninfoflllation becOInes outdated? Howcanthiscondition bedetected andresolved?\nExercise 22.3Consider aparallelDB,lVISin\\vhicheachrelation isstoredbyhorizontally\npartitioning itstuplesacrossalldisks:\nErnployees(eid: integer, did:integer, .sal.'real)\nDepartlnents(~'id: integer, Tngrid:integer, budget:integer)\nTherngT\"idfieldofDepartInents isthee'idofthemanager. Eachrelation contains 20-byte\ntuples,andthesalandbudgetfieldsbothcontain unifonnly distributed valuesintherange\noto1rnillion. TheEnlployees relation contains 100,000 pages,theDepartrnents relation\ncontains 5,000pages,andeachprocessor has100bufferpagesof4,000byteseach.Thecostof\nonepageI/Oistel,andthecostofshipping onepageists;tuplesareshipped inunitsofone\npagebywaiting forapagetobefilledbeforesending arnessage frmnprocessor 'itoprocessor\nj.'Therearenoindexes, andalljoinsthatarelocaltoaprocessor arecarriedoutusing\nasort-rnerge join.Assurne thattherelations areinitially partitioned usingaround-robin\nalgorithlll andthatthereare10processors.\nForeachofthefollowing queries, describe theevaluation planbrieflyandgiveitscostintenns\noftelandts.Youshouldcornpute thetotalcostacrossallsitesaswellasthe'elapsed time'\ncost(i.e.,ifseveraloperations arecarriedoutconcurrently, thetirnetakenisthernaxilnurn\novertheseoperations).\n1.Findthehighestpaidernployee.\n2.Findthehighestpaidemployee inthedepartrnent withd'id55.\n3.Findthehighestpaidernployee overalldepartnHmts withlJ'ndgetlessthan100,000.\n4.Findthehighestpaidenlployee overalldepartlnents withbudgetlessthan ~300,000.\n5.Findthea;verage salaryoveralldepartnrents withbudgetlessthan ~300,OOO.\n6.Findthesalariesofallrnanagers.\n7.Findthesalaries ofallrnanagers whorn::mage adepartrnent withabudgetlessthan\n300,000 andeaTllrnorethan100,000.\n8.Printtheeidsofallelnployees, ordered byincreasing salaries. Eachprocessor isconnected\ntoaseparate printer,andtheanswercanappearasseveraJsortedlists,cadIprinter] by\nadifferent processor, aslongaswecanol)tainafullysortedlistbyconcatenating the\nprinted lists(insorneorder).\nExercise 22.4Consider thesaInescenario asinExercise 22.:3,except 1.h;':1ttherelations are\noriginally partitioned usingrangepartitionirlg onthesalandfnulgetfields.\nExercise 22.5Repeat Exercises 22.~)and22.4\\vith(i)1processor, ,1nd(ii)lelOprocessors.\nExercise 22.6COllsicler theErnployees (-uHIDepartments relations descril)cd inEx.(~rcise\n22.~3.rIheyarenowstoredinadistributed DBl\\!lSwithallofEluployees storedatNaples\n<'lndallofDepartlnents storedatBerlin.Therearcnoindexes ontheserelations. 'rhecostof\nvariousoperations isasdescribecl inExercise 22.:3.Consider thequery:", "799": "Parallel andDi8trib1Lted Databases\nSELECT *\nFROM EInployees E)Dcpartrncnts D\nWHEREE.eid =I).Ingrid7t)7\n'ThequeryisposedatDelhi,andyouaretoldthatonly1percent ofernployees areIIlanagers.\nFindthecostofanswering thisqueryusingeachofthefollowing plans:\n1.ShipDepartrnents toNaples,cornpute thequeryatNaples,thenshiptheresulttoDelhi.\n2.ShipErnployees toBerlin,cornpute thequeryatBerlin,thenshiptheresulttoDelhi.\n3.COInpute thequeryatDelhibyshipping bothrelations toDelhi.\n4.COlnpute thequeryatNaplesusingBloOlnjoin; thenshiptheresulttoDelhi.\n5.Compute thequeryatBerlinusingBloornjoin; thenshiptheresulttoDelhi.\n6.Cornpute thequeryatNaplesusingSernijoin; thenshiptheresulttoDelhi.\n7.COInpute thequeryatBerlinusingSernijoin; thenshiptheresulttoDelhi.\nExercise 22.7Consider youranswers inExercise 22.6.Whichplanll1inin1izes shipping\ncosts?Isitnecessarily thecheapest plan?Whichdoyouexpecttobethecheapest?\nExercise 22.8Consider theErnployees andDepartments relations described inExercise\n22.3.Theyarenowstoredinadistributed DBMSwith10sites.TheDepartInents tuplesare\nhorizontally partitioned acrossthe10sitesbydid,withthesamenUInber oftuplesassigned\ntoeachsiteandnoparticular ordertohowtuplesareassigned tosites.TheEmployees tuples\naresirnilarly partitioned, bysalranges,withsalS;100,000assigned tothefirstsite,100,000<\nseLL::;200,000 assigned tothesecondsite,andsoOIl.Inaddition, thepartition sal:S100,000\nisfrequently accessed andinfrequently updated, anditistherefore replicated ateverysite.\nNootherEU1ployees partition isreplicated.\n1.Describe thebestplan(unlessaplanisspecified) andgiveitscost:\n(a)Cornpute thenaturaljoinofEnlployees andDepartlnents byshipping allfragrnents\noftheslImllerrelationtoeverysitecontaining tuplesofthelargerrelation.\n(b)Findthehighestpaidernployee.\n(c)Findthehighestpaidclnployee withsalarylessthan100,000.\n(d)Findthehighestrn1idernployee withsala,1'ybetween 400,000 and500,000.\n(e)'Findthehighestpaidclnployee withsalarybetween 4fjO,OOO and550,000.\n(f)Findthehighestpaidrnanager forthosedepartnwnts storedatthequerysite.\n(g)Findthehighestpajdlnanager.\n2.ASSU111ing thesarne(taUldistribution, describe thesitesvisitedandthelocksobtained\nforthefoll()\\ving updatetransactions, a\",:;surnillg that8ynchTono'u8 replication isusedfor\nthereplication ofErnployees tuples\\vithsal::s100,(}(}{):\n(a)Giveeinployees withsalarylessthan100,000 a10percent raise,withaInaxirnurn\nsaJaryof100,000 (i.e.,theraisecannotincre;:lse thesalarytornorethan100,(00).\n(b)Giveallernployees <110percent raise.Theconditions oftheoriginal partitioning\nofElnployees IIluststillbesatisfied aftertheupdate.\na.AssuIning thesaInedatadistribution, describe thesitesvisitedandthelocksobtained\nforthefollowing updatetransactions, a..ssurning thatrL8ynchTOn01./.,8 replication isusedfor\nthereplication ofErnployees tupleswithsal:S100,000.", "800": "768 CHAPTER:22\nForallernployees \\vithsalarylessthanlOOlOOO givethem 1110percent raiscl\\vith\narnaxirmun salaryof100/)00.\nGiveanernployees a10percent raise.Aftertheupdateisconlpleted~ theconditions\noftheoriginal partitioning ofEluployecs rnuststillbesatisfied.\nExercise 22.9Consider theEInployees cUll:1.DepartInents tahlesfrOluExercise 22.:3.Youarc\n;;1DBAandyouneedtodecideho\\vtodistribute theset\\VOtablesacross t\\VOsites,IVlanilaand\nNairobi. YourD131\\:18supports onlyunclustered 13+treeindexes. Youhaveachoicebetween\nsynchronous andasynchronous replication. 1\"'01'eachofthefollowing scenarios, describe hmN\nyouwoulddistribute thenlandwhatindexes youwouldbuildateachsite.Ifyoufeelthat\nyouhaveinsufficient inforrna.tion to1nakeadecision, explainbriefly.\n1.HalfthedepartInents arelocatedinIVlanila(l,lldtheotherhalfaTeinNairobi. Departrnent\ninformation, including thatforernployees inthedepart1nent, ischanged onlyatthesite\nwherethedepartrnent islocated, butsuchchanges arequitefrequent. (Although the\nlocation ofadepart1nent isnotincluded intheDepartrnents schclna, thisinforrnation\ncanbeobtained frornanother table.)\n2.Halfthedepartrnents arelocatedin1VlanilaandtheotherhalfareinNairobi. Departrnent\ninformation, including thatforerrlployees inthedepartrnent, ischanged onlyatthesite\nwherethedepartrnent islocated, butsuchchanges areinfrequent. F'inding theaverage\nsalaryforeachdepartrnent isafrequently askedquery.\n~3.Halfthedepartlnents arelocatedinIvlanilaandtheotherhalfareinNairobi. Ernployees\ntuplesarefrequently changed (only)atthesitewherethecorresponding departrrlent islo\u00ad\ncated,buttheDepart1nents relation isaJulOstneverchanged. Finding agivenernployee's\nrnanager isafrequently askedquery.\n4.Halfthee1nployees workinl'vlanilaandtheotherhalf\\vorkinNairobi. E1nployees tuples\narefrequently changed (only)atthesitewheretheywork.\nExercise 22.10Suppose thattheErnployees relation isstoredinl\\1adison andthetuples\nwithsal~1.00,000 arereplicated atNe\\vYork.Consider thefollowing threeoptions forlock\nrnanagernent: alllocksHuulaged atas'inglf.~site,say,1VIilwaukee; prvirnaTy copywithl'vladison\nbeingtheprimary forErnployees; andfullydi8tTilnded. Foreachofthelockrnanagernent\noptions, explainwhatlocksareset(andatwhichsite)forthefollowing queries. Alsostate\nfrornwhichsitethepageisreac1.\n1.AqueryatAustinwantstoreadapageofErllployees tuples\\vithsals:50,()OO.\n2.AqtteryatI\\lfadison wantstoreadapageofE1nployees tuples\\vithsals:50,000.\n3.AqueryatNe\\v',/'orkwantstore;:ldapageofEnlployees tuples\"vithsal:::;50,000.\nExercise 22.11Brieflyanswerthefollcnving questions:\n1.C\\Hnpare therelative rneritsofcentralized andhierarchic;:tl deadlock detection inadis\u00ad\ntril)lIted I)BI\\/IS.\n2.\\iVhatisapha:ntorn de(ullock? Giveanexarnple.\n:3.(.;iv(~anexample ofadistributed D131\\-'18\\viththreesitessuchthatnohvoloc;::d\\vaits-for\ngraphsrevealadeadlock, :vetthereisaglobaldeadlock.\n4.C;onsider thefollowing rnoclification to;:I,localwaits-for gn1ph:AddaneVilnode'1:':1:1,and\nforever.vtrans;:lc:tion 7:/thatiswaitingforalockat;:ulOther sib~,addtheedge'Ii 7~';I:t.\nA.lso;:lch.lHJledge T~':d--+Tiifatr;::lHSi:lction executing atanother siteiswaiting forTi\ntorelease ;:1lockatthissite.", "801": "J)arallelandDislI'ib'ulc:d Dato,ba8C8 7tiqf\nIfthereis,1cycleinthe11lodiHed localWEtits-for gra.phthatdoesnotinvolve 7:~xt ~\nwhatcallyouconclude? Ifeverycycleinvolves T~~:rt.,whatcanyouconclude?\nSuppose thateverysiteisassigned auniqueinteger \\Vhenever thelOC!:l}\nwaits-for graphsuggests thatthereBlightbeaglobaldeadlock, sendthelocalwaits\u00ad\nforgraphtothesitewithtIlenexthighersite\"\"id.At thatsite,combine thereceived\ngraph\"viththelocal\\vaits-fc)[ grap,h.Ifthiscornbined graphdoesnotindictl.t:e a\ndeadlock, shipitontothenextsite,awlsoon,untileitheracleadlock isdetected\norwearebackatthesitethatoriginated thisroundofdeadlock detection. Isthis\nscheuwguaranteed tofindaglobaldeadlock ifoneexists?\nExercise 22.12Tirnestarnp-based concurrency controlschernes canbeusedinadistributed\nDBivIS,butwerllustbeabletogenerate globally unique, rllonotonicaJly increasing tirnestarnps\nwithout abiasinfavorofanyone site.Oneapproach istoa,...':\\signtimestrunps atasinglesite.\nAnother istousethelocalclocktiTneandtoappendthesite-iei. Athirdscherne istousea\ncounter ateachsite.COIllpare thesethreeapproaches.\nExercise 22.13Consieler therIlultiple-granlllarity lockingprotocol described inChapter 18.\nInadistributed DB?vIS, thesitecontaining therootobjectinthehierarchy canbecmne a,\nbottleneck. Youhireadatabase consultant whotellsyoutornodifyyourprotocol toallow\nonlyintention locks OIltherootandirnplicitly grantallpossible intention lockstoevery\ntransaction.\n1.Explain whythisrnodification \\vorkscorrectly, inthattransactions continue tobeable\ntosetlocksondesiredpartsofthehierarchy.\n2.Explain howitreducesthedemand ontheroot.\n3.Whyisthisideanotincluded aspartofthestandard rllultiple-granularity lockingprotocol\nforacentralized DBTvlS?\nExercise 22.14Brieflyanswerthefollowing questions:\n1.Explain theneedforacornmit protocol inadistributeclDIJf'vIS.\n2.Describe 2PC.Besuretoexplaintheneedforforce-writes.\n;3.vVhyarench:HlCssages required in2PC?\n4.vVhatarethedifferences between 2PC;and2PCwithPresulTled Abort?\n5.Giveanexarnple execution sequence suchthat2PCcHId2PC'withPresurned Abort:\ngenerate anidentical sequence ofactions.\n6.Give ('UIexarIlple execution sequence suchthat2PC;and2PC,;withPresuIl1ed Abort\ngenerate different sequences ofactions.\n7.\\Vhatistheintuition behirHI:3PC?\\:VhatareitsfH'08andconsrelativeto2PC?\n8.Suppose th.<1tasitegetsnoresponse frorniJ.nother sitefor<'1longtiITle.C;anthefirstsite\ntellwhether .theconnecting linkhasfailedortheothersitehasfailed?Howissucha\nfailurehandled?\n9.Suppose thatthecoordinator inclucles alistofaUsubordinates intheIn'f'-]UJ,'T'CInessage.If\nthc~coordinator failsaJtersendingouteitheranabcrdorCOTT1Jnitrnessage, callyousuggest\na\\va,Yforactivesitestoterrninate thistra.nsaction without wajting f<)I'thecoordinator\ntorecover? Assurnf~ thatsonlebutnotalloftheabortorcornrt1:it rnessages frOlnthe\ncocn'clinator arelost.", "802": "770 C~HAPTER 2&2\nIIISuppose that2PCwithPresuIl1ed AbortisusedasthecOInmit protocol. Explain how\nthesystmllrecovers froInfailureanddealswithaparticular transaction Tineachofthe\nfollowing cases:\n(a)Asubordinate siteforTfailsbeforereceiving apreparernessage.\n(b)Asubordinate siteforTfailsafterreceiving apTcparcrnessage butbeforernaking\nadecision.\n(c)Asubordinate siteforTfailsafterreceiving apreparelnessage andforce-writing\nanabortlogrecordbutbeforeresponding tothepl'eparernessage.\n(d)Asubordinate siteforTfailsafterreceiving apreparemessage andforce-writing a\nprepare logrecordbutbeforeresponding tothepreparelnessage.\n(e)Asubordinate siteforTfailsafterreceiving aprepare rnessage, force-writing an\nabortlogrecord,andsending anovote.\n(f)Thecoordinator siteforTfailsbeforesending apreparelnessage.\n(g)Thecoordinator siteforTfailsaftersending apreparelllCssage butbeforecollecting\nallvotes.\n(h)Thecoordinator siteforTfailsafterwritinganabortlogrecordbutbeforesending\nanyfurtherrnessages toitssubordinates.\n(i)Thecoordinator siteforTfailsafterwritingacomrnitlogrecordbutbeforesending\nanyfurtherrnessages toitssubordinates.\n(j)Thecoordinator siteforTfailsafterwritinganendlogrecord.Isitpossible forthe\nrecovery processtoreceiveaninquiryaboutthestatusofTfrolllasubordinate?\nExercise 22.15Consider aheterogeneous distributed DBMS.\n1.Definethetermsmultidatabase systemandgateway.\n2.Describe howqueriesthatspanmultiple sitesareexecuted inarnultidatabase systern.\nExplain theroleofthegateway withrespecttocataloginterfaces, queryoptirnizatiOll,\nandqueryexecution.\n3.Describe howtransactions thatupdatedataatrnultiple sitesareexecuted inalllulti\u00ad\ndatabase systern. Explain theroleofthegateway withrespecttolockrnanagernent,\ndistributed deadlock detection, Two-Phase COllnnit, andrecovery.\n4.SChell1aS atdifferent sitesinallnI1tidatabase systernareprobably designed independently.\nT'hissituation canleadtosemantic heterogeneity; thatis,unitsofrneasure rnaydiffer\nacrosssites(e.g.,inchesversuscentirneters), relatiolls containing essentially theSaIne\nkindofinfonnation (e.g.,eIllployee salariesandages)rnayhaveslightlydifferent schernas,\nandsoon.vVhatilnpactdoesthisheterogeneity haveontheenduser?Inparticular,\nCOllunent ontheconcept ofdistributed data,independence insuchasystcrIl.\nBIBLIOGRAPHIC NOTES\n\\Vorkonparallel algorithrns forsortingandvariousrelational operations isdiscussed inthe\nbibliographies forChapters 1:3and14.Ourdiscussion ofparalleljoinsfollows[220],andour\ndiscussion ofparallel sortingfollows [22~3].De\\VittandC,raymakethecasethatforfuture\nhighperfornuHlce database systeuls, parallelisnl willbethekey[221].Scheduling illparallel\nclata,b;:lse systenls isdiscusserl in[522).[49G]contains ,1goodcollection ofpapersonquery\nprocessing inptlrallel daUthase systems.", "803": "})aTallel andDistributed Databases 771\nt\nTextbook discussions ofdistributed databa..C)\u20acs include[78,144,580].Goodsurveyarticlesin\u00ad\nclude[85],whichfocuses OIlconcurrency control; [637],whichisaboutdistributed databases\ningeneral; and[785],whichconcentrates ondistributed queryprocessing. TwoInajaI'projects\nintheareawere8DD-1[636]andR*[777].Fragmentation indistributed databases isconsid\u00ad\neredin[157,207].Replication isconsidered in[11,14,137,239,238, 388, ~385, :~35,552,600].\nForgoodoverviews ofcurrenttrendsinasynchronous replicatioll, see[234,709,772].Papers\nonviewmaintenance mentioned inthebibliographic notesofChapter 21arealsorelevant\ninthiscontext. Olstonconsiders techniques fortradingofperformance versusprecision ina\nreplicated environment [571,572,573].\nQueryprocessing inthe8DD-1distributed database isdescribed in[88].Oneofthenotable\naspectsof8DD-1queryprocessing wastheextensive useof8emijoins. Theoretical studies\nofSemijoins arepresented in[83,86,414].Queryprocessing inR*isdescribed in[667].\nTheR*queryoptimizer isvalidated in[500];muchofourdiscussion ofdistributed query\nprocessing isdrawnfromtheresultsreported inthispaper.Queryprocessing inDistributed\nIngresisdescribed in[247].Optimization ofqueriesforparallel execution isdiscussed in\n[297,323,383]. Franklin, Jonsson, andKossman discussthetrade-offs between queryshipping,\nthemoretraditional approach inrelational databases, anddatashipping, whichconsists of\nshipping datatotheclientforprocessing andiswidelyusedinobject-oriented systerns [284].\nAgoodrecentsurveyofdistributed queryprocessing techniques canbefoundin[450].\nConcurrency controlinthe8DD-1distributed database isdescribed in[91].Transaction man\u00ad\nagement inR*isdescribed in[547].Concurrency controlinDistributed Ingresisdescribed in\n[714].[740]provides anintroduction todistributed transaction rrlanagement andvariousno\u00ad\ntionsofdistributed dataindependence. Optimizations forread-only transactions arediscussed\nin[306].Multiversion concurrency controlalgorithrlls basedontimestamps wereproposed in\n[620].Tirrlestamp-ba.;;ed concurrency controlisdiscussed in[84,356].Concurrency control\nalgorithms basedonvotingarediscussed in[303,318,408,452,732].Therotating prirnary\ncopyschemeisdescribed in[538].Optimistic concurrency controlindistributed databases is\ndiscussed in[660],andadaptive concurrency controlisdiscussed in[488].\nTwo-Phase Commit wasintroduced in[466,331].2PCwithPresumed Abortisdescribed in\n[546],alongwithanalternative called2PCwithPresum.ed Cornmit. Avariation ofPresumed\nCornrrlit isproposed in[465].Three-Phase COlnrrlit isdescribed in[692].Thedeadlock\ndetection algorithnls inR*aredescribed in[567].Manypapersdiscussdeadlocks, forexaInple,\n[156,243,526,632].[441]isasurveyofseveralalgoritluns inthisarea.Distributed clock\nsynchronization isdiscussed by[464]. [3~33]arguesthatdistributed clataindependence isnot\nalwaysagoodidea,cluetoprocessing andadlninistrative overheads. TheARIESalgorithrl1\nisapplicable fordistributed recovery, butthedetailsofhowrnessages shouldbehandled are\nnotdiscussecl in[544].Theapproach takentorecovery inSDD-1isdescribed in[4~3].[114]\nalsoaddresses distributed recovery. [444]isasurveyarticlethatdiscusses concurrency control\nandrecovery indistributed systerIls. [95)contains severalarticlesonthesetopics.\nIVlultidatabase systerns arediscussed in[10,IV3,230,2:31,242,476, 485,519,520,599,641,\n765,797];sec[112,486,684]forsurveys.", "804": "23\nOBJECT -DATABASE\nSYSTEMS\n..Whatareobject-databa,,~'3e systerlls andwhatnewfeatures dothey\nsupport?\n..vVhatkindsofapplications dotheybenefit?\n(..\\Vhatkindsofdatatypescanusersde.fine?\n(..\"Vhatareabstract datatypesandtheirbenefits?\n..\\\\Thatistypeinheritance andwhyisituseful?\n..Whatistheirnpactofintroducing objectidsinadatabase?\n...Howcanweutilizethenewfeatures indatabase design?\ni\"'\"Whatarethenewimplelncntation challenges?\n..\\VhatdifFerentiates object-relational andobject-oriented DBIvISs?\n...Keyconcepts: user-defined datatypes,structured types,collection\ntypes;dataabstraction, rnethocls, encapsulation; inheritance, early\nandlatebinding ofrnethods, collection hierarchies; objectidentity,\nreference types,shallowanddeepequality\nwithJosephM.HeHerstein\n[!n,'l'ucT'sily ofC:fal!~foTT1,'iaB cTkeley\n--YOllknovvInyInethods, \\~l(ttson. A.pplytheIn.\nArthurConan])oyle,TheA1CTl1.0'iT8 ofShe'dock 1lolro,c;8\n772", "805": "()bject-Database Systc1Tl'/3 77~3\nH.{-~lational datalx:hse systeros support asruaU,fixedcollection ofdatatypes\n(e.g.,integers, dates,strings),\\vhich h&9provenadequate fortrcLClitional appli\u00ad\ncationdOHHlins suchasadruinistrative dataprocessing. IntHanyapplic<ltion\ndornains, hO'wever, rnuch1noreeornplex kindsofdataBlustbehandled. I\"rypi_\ncallythiscornplex datahasbeenstoredinOSfilesysterns orspecialized data\nstructures, ratherthanina\nDB.tvIS.Exanlples ofdornains vvithcOJ.uplex data\nincludecornputer-aided designandrnodeling (CA.D/CAlvf.), rnultilnedia repos\u00ad\nitories,anddocurnent Hl8.Jlagernent.\nAsthearnountofdatagrows,theluanyfeatures offeredbyaDBIvISfor exarIl\u00ad\npIe,reduced application developnlent tilne,concurrency controlandrecovery,\nindexing support, andquerycapabilities\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7becorue increasingly attractive and,\nultirnately,necessary. Tosupport suchapplications, aDBNISHUlstsupport\ncornplex datatypes.()bject-oriented concepts strongly influenced effortsto\nenhance database support forcornplex dataandledtothedeveloprnent of\nobject-database systelus, \\vhichwediscussinthischapter.\nObject-database systerlls havedeveloped alongtwodistinct paths:\nIIObject-Oriented Database Systems: Object-oriented database sys\u00ad\nternsareproposed asanalternative torelational systerlls andareainled\natapplication dornains wherecODlplex objectsplayacentra,}role.1'he\napproach isheavilyinfluenced byobject-oriented prograrllrlling languages\nandcanbeunderstood asanatternpt toaddDBMSfunctionality toa\nprograunning language environrnent. The()bjectDatabase :M:anagenlcnt\nGroup(()DMG) hasdeveloped astandard ObjectDataModel(ODM)\nandObjectQueryLanguage (OQL), whicharetheequivalent ofthe\nS(~I..Istandard forrelational database systerns.\nl1liObject-Relational ])atabase Systenls: ()bject-relational database s.ys\u00ad\nternsca,nbethought ofasanatternpt toextendrelational databa ...scsysterns\n\"liththefunctionality necessary tosupport abroader classofapplications\nand,innlEUl~Y '\\THY-S,provide abridgebetween therelational andobject\u00ad\noriented paTadiguls. 1'he SC~I.I:1999standard extends S(~Ltoincorporate\nsupport fortheol)ject-relationaJ rnode1ofdata.\n\\Veuseclcronyuls forrelational, object-oriented, andobject-relational datrtbase\nrnanagernent systerns(RDBMS, OODBMS, ORJDBMS). Inthischapter,\nvvefocus 011()HI)B~ilSs andernphasize ho\\vtheycanbevie\\ved CbSadevelop\u00ad\nrnentofHJ)B1\\18s,ratherthan CbSanentjrely different paradigrn, asexernplified\nl)ytheevolution ofSCJL:1999.\nvVeconcentrate ondeveloping thefUlldarnental concepts ratherthan presc~nt\u00ad\ningS(~L:1999; sorn(~ofthefeatures \\vediscussaxenotinc.luded inSC}L:1999.", "806": "774 CjHAPTER 2at\nNonetheless, \\;\\lehavechosentoernpha\",<:;ize concepts relevant toSQL:1999and\nitslikelyfutureextensions. vVealsotrytobeconsistent withSCJL:1999for\nnotation, although weoccasionally divergeslightlyforclarity.Itishnportant\ntorecognize thatthernainconcepts discussed areCOIlllTIOn toboth()llDBJ\\;ISs\nand()()DBNISs; wediscusshowtheyaresupported intheODLjOQL standard\nproposed for()ODB)\\t[Ss inSection23.9.\nRDB1\\JIS vendors, including IBIVI,Inforrnix, and()racle,areaddingOIl-DBMS\nfunctionality (tovarying degrees) intheirproducts, anditisinlportant to\nrecognize howtheexisting bodyofknowledge aboutthedesignandinlple\u00ad\nrnentation ofrelational databa'3es canbeleveraged todealwiththeOrtDBMS\nextensions. Itisalsoilnportant tounderstand thechallenges andopportunities\ntheseextensions presenttodatabase users,designers, andirnplernentors.\nInthischapter, Sections 23.1through 23.6introduce object-oriented concepts.\nTheconcepts discussed inthesesections areCOlunlon tobothOODBMSs and\nORDBJVISs. Webeginbypresenting anexample inSection23.1thatillustrates\nwhyextensions totherelational rnodelareneededtocopewithsomenew\napplication dornains. 'Thisisusedasarunning exarnple throughout thechapter.\nWediscusstheuseoftypeconstructors tosupport user-defined structured data\ntypesinSection23.2.Weconsider whatoperations aresupported onthesenew\ntypesofdatainSection23.3.Next,wediscussdataencapsulation andabstract\ndatatypesinSection23.4.Wecoverinheritance andrelatedissues,suchas\nrnethod bindingandcollection hierarchies, inSection23.5.Wethenconsider\nobjectsandobjectidentity inSection 2~3.6.\nvVeconsider howtotakeadvantage ofthenewobject-oriented concepts todo\nOI{DBMS database designinSection23.7.InSection23.8,wediscuss SOHle\nofthenewirnplernentation challenges posedbyobject-relational systerns. We\ndiscuss()I)LandOQL,thestandards forOODBMSs, inSection23.9,andthen\npresentabriefcornparison of()R,DBMSs andOC)DBwISs inSection2;t10.\n23.1MOTIVATING EXAMPLE\nAsaspecificexarnple oftheneedforobject-relational systcrlls, wefocusona\nnewbusiness dataprocessing probler.n thatisbothharderand(inourview)\nrnorcentertaining thanthedollarsandcentsbookkeeping ofprevious decades.\nToday,cornpanies inindustries suchasentertainruent areinthebusiness of\nsellingbits;theirbasiccorporate assetsarenottangible products, butrather\nsoftwa.1'c artifacts suchasvideo(l,ndaudio.\n\\Veconsider thefictional DinkyEntertaiurnent Corupa,ny, alaxgcIIollywood\nconglornerate whoserllctin(\\'ssetsareacollection ofcartoon characters, espe-", "807": "()b.ject-IJatabasc Systern8 775\nj}\nciallythecuddlyandinternationally beloved IIerbert the\\VarIll. Dinkyha..s\nseveralIIerbert the\\Vornlfihns, rnanyofwhichareshownintheaters around\ntheworldatanygiventiTne.Dinkyalsornakesagooddealofrnoney licensing\nHerbert's irnage,voice,andvideofootageforvariouspurposes: actionfigures,\nvideogaInes,product endOrSelllents, andsoon.I)inky's database isusedto\nlnanage thesalesandleasingrecordsforthevariousIIerbert-related products,\n&l)wella..sthevideoandaudiodatathatrnakeupIIerbert's lllanyfilIns.\n23.1.1NewDataTypes\nThebasicproblern confronting Dinky's database designers isthattheyneed\nsupport forconsiderably richerdatatypesthanisavailable inarelational\nDBMS:\nIIUser-defined datatypes:Dinky's assetsincludeHerbert's iIllage,voice,\nandvideofootage, andthesernustbestoredinthedatabase. Tohandle\nthesenewtypes,weneedtobeabletorepresent richerstructure. (SeeSec\u00ad\ntion23.2.)Further, weneedspecialfunctions tornanipulate theseobjects.\nJiorexample, wemaywanttowritefunctions thatproduce acOlnpressed\nversionofanirnageoralower-resolution image.Byhidingthedetailsofthe\ndatastructure through thefunctions thatcapturethebehavior, weachieve\ndataabstract'ion, leadingtocleanercodedesign.(SeeSection 23.4.)\n..Inheritance: Asthenurnber ofdatatypesgrows,itisirnportant totake\nadvantage ofthecornrnonality between different types.:Forexarnple, both\ncOInpressed irnagesandlower-resolution irnagesare,atSOlnelevel,just\nilnages. Itistherefore desirable toinheritsomefeatures ofiluageob\u00ad\njects\\vhiledefining (andlaterInanipulating) cOInpressed irnageobjects\nandlower-resolution irnageobjects. (SeeSection 2~j.5.)\n!IllObjectIdentity: GiventhatseHneofthenewdatatypescontainvery\nlargeinstances (e.g.,videos), itisiInportant nottostorecopiesofobjects;\ninstead, weIllUStstoreTejerence8, orpo'inleTs, tosuchobjects. Inturn,\nthisunderscores theneedforgivingobjectsauniqueobjectidentity, vvhich\ncanbeusedtoreferor'point'tothelnfrornelsewhere inthedata.(See\nSection2:3.6.)\nFlowlnight\\veaddress theseissuesinanIlI)BNIS? \\Vecouldstoreilnages,\nvideos,andsoonCh')BLC)Bs incurrentrelational syst(~lns. Abinarylarge\nobject(BLOB) isjustalong8trea1nofbytes,andtheDBNIS's support\nconsists ofstoringandretrieving BLC)Bsinsucharnannerthatauserdoesnot\nhavetoworryaboutthesizeoftheBLC)B;a13LC}Bcanspanseveralpages,\nunlikeatnulitional attribute. Allfurtherprocessing oftheBLC)Bhastobe\ndonebytheuser'sclpplication progranl, inthehostlanguclge in\\vhichthe", "808": "776 (;lIAPTER ~3\nTheSQL/MM Standard: SQL/Nl:Nl isaneillerging standard thatbuilds\nuponSQL:1999's newdatatypestodefineextensions ofSQL:1999 that\nfacilitate handling ofcoruplex InultiInedia datatypes.SQL/lv!NI isarnul\u00ad\ntipartstandard. Part1,\nSClL/rvUvfFl'arne\\vork, identifies theSQL;1999\nconcepts thatarethefoundation forSQLj1VllVI extensions. Eachofthe\nrelnaining partsaddresses aspecifictypeofccnnplex data:FullText,\nSpatial, StillImage, andDataMining. SQL/lVllVi anticipates that\nthesel1e\\vcoruplex typescanbeusedincolurnns oftables ck')fieldvalues.\n.. ..\n1\".....\nLargeObjects: SQL:1999 includes anewdatatypecalledLARGEOBJECT\norLOB,withtwovariaJ1ts calledBLOB(binarylargeobject)andCLOB(char\u00ad\nacterlargeobject). Thisstandardizes thelargeobjectsupport foundin\nlnanycurrent relational DBMSs. LOBscannotbeincluded inpriruary\nkeys,GROUPBY,orORDERBYclauses. rrheycanbecornpared llsingequa.l\u00ad\nity,inequality, andsubstring operations. ALOBhasalocator thatis\nessentially auniqueidandallowsLOBstobernanipulated without exten-. .sIvecopYIng.\nL()Bsaretypically storedseparately froInthedatarecordsinwhosefields\ntheyappear. 1BlY1DB2,InforInix, Microsoft SQLServer,Oracle8,and\nSybaseASEallsupport LOBs.\nSQLcodeisernbedded. Thissolution isnotefficient because weareforcedto\nretrieve allBLOBs inacollection evenifrnostofthe111couldbefiltt~redout\noftheansvverbyapplying user-defined functions (withintheI)B1118).Itisnot\nsatisfactory frornadataconsistency standpoint either,because theselnantics\nofthedatanowdepends heaNilyonthehostla,nguage application codeand\ncannotbeenforced bytheI)BlVfS.\nAsforstructured typesandinheritance, thereissiInplynosupport inthe\nrelational Dlodel. VVeareforcedtoIna.pdata'withsuchcOlnplex structure\nintoacollection offlattables.(vVesawexarnples ofsuchrnappings \"vhen\\ve\ndiscussed thetnlJlS1ation frorHElldiagrarns vvithillheritance torelations in\nC:hapter 2.)\nrrhisapplication clearlyrequires features notavailable intherelational Inode1.\nAsanillustration ofthesefeatures, Figure2:3.1presents S(~L:1999 :DDLstate\u00ad\nrnentsforal)OrtionofDinky's()HJ)I31VIS sehelnausedinsubsequent excunples.\nAlthoughthe1)})Lisverysirnilartothatofatraditional relational systeru,\nSOln(~irnportant distinctions highlight thene\\v datarnodeling capabilities of\n,Ul()JII)B1VlS. J\\quickglanceatthel)DLstaternents issufficient fornow;we\nstudythenlindetailinthenextsection, afterpresenting S0111eofthebasic", "809": "()b.ject-1Jatabase 8ystenM)\nconcepts thatoursanlpleapplication suggests areneededinanext-generation\nl)BrvlS.\n1.CREATE TABLEFralnC\\'3\n(}rarneno integer, 'iTrulgejpeg_image, categoT'Y integer)~\n2.CREATE TABLECategories\n(c'idinteger, narnetext 1If:aSL.pricc float, c01n:rncnts text);\n:3.CREATE TYPEtheater _tAS\nROW(tnointeger, n,arnetext,addresstext,phonetext)\nREFISSYSTEM GENERATED;\n4.CREATE TABLETheaters OFtheater _tREFistidSYSTEM GENERATED;\n5.CREATE TABLENowshowing\n(jilnLinteger, theaterREF(theater..,t)SCOPErrheaters, startdate,\nenddate);\n6.CREATE TABLEFilIns\n(filrnnointeger, l/if;letext,staTsVARCHAR(25) ARRAY[10]),\ndirectortext,budgetfloat);\n7.CREATE TABLECountries\n(narnctext,boundary polygon, population integer, language text);\nFigure 23.1SQL:1999 DDLStaternents forDinkySchema\n23.1.2Manipulating theNewData\nThusfar,wedescribed thenewkindsofdatathatrnustbestoredintheDinky\ndatabase. Wehavenotyetsaidanything abouthowtousethesenevvtypes\ninqueries, soletusstudytwoqueriesthatI)inky's database needstosupport.\nThesyntaxofth(~queriesisnotcritical; itissufficient tounderstand whatthey\nexpress. v\\lereturntothespecifics ofthequeries' syntaxlater.\n()urfirstchallenge COIn8SfrorntheC~logbreakfast cerealcornpany. Clogpro\u00ad\nducesacerealcalledI)elirios anditvvantstoleaseanirnageofIIerbert thE:~\n\\\\TorIninfrontofasunrisetoincorporate intheI)elirios boxdesign. Aquery\ntopresent (1,collection ofpossible irnages(uldtheirle<ls8pricescanbeex.pressed\ninSC~L-like syntaxasinI4'iglln~2:3.2.I)inkyhasanUJn1>er ofrnethodsvvritten\ninanirnperative language like.Jnvaa,ndregistered \\viththedatal)Clse systern.\nThese lIH~thods canbeusedinqueriesinthesallIewayasbuilt-ill Hletllods,\nsuchas=. ,--~,<,>,areusedinarelational language likeS(~L.1'hethwrnb\u00ad\nnailIJlethod intheSelect clausf~produces asrnaUversionofitsfull-size input:\nbnnge. rrhei:L8'il'nri.se rnethod isaboolean function thatanalyzes anirnage\nandreturnstr'ueiftheinHtgecontains asun.rise; theis_h(Tbcrt Inethod returns\nh\"u.ciftheirnag(~contains apicture ()fl1erbert. rrhequeryproduces thefrarl1c", "810": "778 (jHAPTER 23\ncode nUlnber~ irnagethurnbnail, andpriceforallframesthatcontainHerbert\nandasunrise.\nSELECT F.fnuneno, thulnbnail(F.irnage), C.lease_price\nFROM FralnesF,Categories C\nWHERE F.category =C.cidANDis.Bllnrise(F.irnage) ANDisJlerbert(F.inlage)\nFigure 23.2Extended SQLtoFindPictures ofHerbert atSunrise\nThesecondchallenge carnesfroInDinky's executives. TheyknowthatDelirios\nisexceedingly popular inthetinycountry ofA.ndorra, sotheywanttolIlake\nsurethatanumberofHerbertfilInsareplayingattheaters nearAndorra when\nthecerealhitstheshelves. Tocheckonthecurrentstateofaffairs,theexecu\u00ad\ntiveswanttofindthe11aInesofalltheaters showing Herbert fihnswithin100\nkilorneters ofAndorra. Figure23.3showsthisqueryinanSQL-like syntax.\nSELECT\nFROM\nWHEREN.theater\u00b7\u00b7--> na1ne,N.theater- >address, F.title\nNowshowing N,FilrnsF,Countries C\nN.film=F.filrnno AND\noverlaps(C.bollndary, radius(N.theater-> address, 100))AND\nC.narne::::: 'Andorra' AND'Herbert theWorm' =F.stars[l]\nFigure23.3Extended SQLtoFindHerbert FilmsPlaying nearAndorra\nThetheaterattribute oftheNowshowing tableisareference toanobjectin\nanother table,whichhasattributes narne, addr'(~88, andlocation. Thisobject\nreferencing allowsforthenotation N.theater-> narneandN.theater ..\u00b7\u00b7\u00b7>address,\neachofwhichreferstoattributes ofthetheater _tobjectreferenced inthe\nNowshowing rowN.Thestarsattribute ofthetUrnstableisasetofnarnesof\neach[ibn'sstars.Ther'O,(1'i'u,8nlethodreturnsacirclecentered atitsfirstargu\u00ad\nlllentwithradiusequaltoitssecondargurnent. ~rheoverlaps rnethod tests\nforspatialoverlap. Nowshowing andFilrnsarejoinedbytheequijoin clause,\n\\vhileNowshowing andCountries arejoinedbythespatialoverlapclause.The\nselections to'Andorra' andfiInlscontaining 'Herbert thevVorrn'cornplete the\nquery.\nrrhcsetwo\nobject-relational queriesaresirnilartoSQL-92queriesbutheLveSOlllC\nunusual features:\nl1liUser-Defined Methods: User-defined abstract typesarernanipulated\nviatheir1nethods, forexalnple, i.'Lhcrbert (Section 23.2).\nIIOperators forStructured Types: A.longwiththestructured types\navailable inthedeLtarnodel,()R,DBMSs providethenaturalInethods for\nthosetypes.Forexarnple, theARRAYtypesupports thestandard array", "811": "()bject-Database SYStC1718 779\nIi>\noperation ofaccessing anarrayelenlent byspecifying theindex; I?~stars[l]\nreturnsthefirstelernent ofthearrayinthestaTscohllnnoffilmF(Sec\u00ad\ntion23.:3).\n11IIIOperators forReference Types: Reference typesaredereferenced via.\nanarrow(---\u00bbnotation (Section 23.6.2).\nIbsuuullarize thepointshighlighted byour1110tivating exanlple, traditional\nrelational systenls offerliInitedflexibility inthedatatypesavailable. Datais\nstoredintablesandthetypeofeachfieldvalueislirnitedtoasiulpleatornictype\n(e.g.,integerorstring),withasl11all,fixedsetofsuchtypestochoosefrarn.\nThislirnitedtypesysterncanbeextended inthreeInainways:user-defined\nabstract datatypes,structured types,andreference types.Collectively, we\nrefertothesenewtypes &'Scomplex types.Intherestofthischapter, we\nconsider howaDBl\\!IScanbeextended toprovidesupport fordefining new\ncomplex typesandrnanipulating objectsofthesenewtypes.\n23.2STRUCTURED DATATYPES\nSQL:1999 allowsuserstodefinenewdatatypes,inaddition tothebuilt-intypes\n(e.g.,integers). InSection5.7.2,wediscussed thedefinition ofnewdistinct\ntypes.Distinct typesstaywithinthestandard relational model,sincevaluesof\nthesetypesrnustbeatornic.\nSQL:1999 alsointroduced twotypeconstructors thatallowustodefinenew\ntypeswithinternaJ structure. ~rypesdefinedusingtypeconstructors arecalled\nstructured types. Thista.kesusbeyondtherelational model,sincefield\nvaluesneednolongerbeatornic:\n11IIIRDW(n1Il,...,nnt,n):Atyperepresenting arow,ortuple,ofnfields\\vith\nfields 11,1,...,Tl'noftypesLl,...,\"tnrespectively.\nIIbaseARRAY[iJ):Atyperepresenting anarrayof(upto)ibase-type\niterns.\nThetheater _ttypeinFigure23.1illustrates the IH~\\VROWdatatype.In\nSQL:1999, theROWtypehetS().,specialrolebecause everytableisacollection of\nro\\vs ...\u00b7..\u00b7everytableisasetof1'o\\vsora.rnultiset ofrc)\\vs.Valuesofothertypes\ncanappearonlya..sfieldvalues.\nThestaT/.,fieldoftableFilrnsillustrates thene,vARRAYtype.Itisanarrayof\nupto10elernents, ea.chof\\vhichisoftypeVARCHAR(25). Notethat10isthe\nrnaxirnurn nurnberofel(~rnents inthearray;a.t<lnytiTne,thearray (unlik(~,say,", "812": "780 (-~..;-.?').JHAPfER ~)\nSQL:1999Structured DataTypes: Severalconunercial systenls~ in\u00ad\ncludingIBw!DB2,Infonnix tTDS,andOracle9isupport theROWand ARRAY\nconstructors. rrhelistof,bagof,andsetoftypeconstructors are:notin\u00ad\ncludedinS(~L:1999. Nonetheless, cOIlunereiaJ systerIls support sorneof\ntheseconstructors tovarying degrees. ()raclesupports nestedrelations\nandarrays,butdoesnotsupport fullycornposing theseconstructors. In\u00ad\nfOI'rnixsupports thesetof,hagof,andUstofconstructors andallowsthern\ntobecornposed. Support inthisareavaries\\videlyacrossvendors.\ninC)cancontainfewerelenlcnts. SinceSQL:1999 doesnotsupport rnultidi\u00ad\nInensional arrays,vectorrnightha,vebeenarnoreaccura,te narneforthearray\nconstructor.\nThepoweroftyP(~constructors cornesfroInthefactthattheycanbecornposed.\nThefollowing rowtypeconta,ins afieldthatisanarrayofatInost10strings:\nROW(filrnno: integer, staT's:VARCHAR(25) ARRAY[10])\nTherowtypeinSC~L:1999 isquitegeneral; itsfieldscanbeofanySQL:1999\ndatatype.Unfortunately, thearra.ytypeisrestricted; elernents ofanarray\ncannotbearraysthcrnselves. Therefore, thefollowing definition isillegal:\n(integer ARRAY[5])ARRAY[10]\n23.2.1Collection Types\nS(~L:1999supports onlytheROWa,nelARRAYtypeconstructors. OtherCOUUllon\ntypeconstructors include\nIIIlistof(base): A.typerepresenting <:1,sequence ofbase-t~ype itcrllS.\nIisetof(base):.l\\type rer)l'(~senting asetofbase-type HeIns.Setscannot\ncontainduplicate elen1cn1,8.\nIIbagof(base): j\\typerepresentin.g a,bagorrnv,ltisct ofbase-type iterns.\nTypesllsinglistof, ARRAY,bagof,orsetofastheoutennost typeconstructor\na.resornetirnes referred toa,scollection typesorbulkdatatypes.", "813": "()b)ect-Databa,se Sy,steIns 781\nt\n~rhelackofsupport forthesecollection typesisrecognized asaweakness of\nSQL:1999's support forcornplex objectsanditisquitepossiblethatSODleof\nthesecollection types\"'lillbeaddedinfuturerevisions oftheSQLstandard.1\n23.3OPERATIONS ONSTRUCTURED DATA\nrIheI)131V18provides built-in Inethods forthetypesdefinedusingtypecon\u00ad\nstructors. Theselnethods areanalogous tobuilt-inoperations suchasaddition\nandrIlultiplication foratcnnictypessuchasintegers. Inthissectionwepresent\ntheIllethods forvarioustypeconstructors andillustrate ho\\vSC~Lqueriescan\ncreateandrnanipulate values\\vithstructured types.\n23.3.1Operations onRows\nGivenaniteul riwhosetypeisROW(n1t 1,...,TLntn),thefieldextraction rnethod\nallo\\vsusto~l,ccessanindividuaJfieldnkllsingthetraditional clotnotation\n'i.nk.Ifro\\vconstructors arenestedinatypedefinition, dotsrnaybenestedto\naccessthefieldsofthenestE\"drow;forexarnple i.'fLk.n1/. Ifwehaveacollection\nofrows,thedotnotation givesusacollection asaresult.:Forexarnple, ifiis\nalistofrows,i.nkgivesusalistofitcrnsoftypetTl;ifiisasetofrows,i.nk\ngivesusasetofiternsoftypetn.\n[This rH~ste(l-dot notation isoftencalledapathexpression, because itde\u00ad\nscribesapaththrough thenestedstructure.\n23.3.2()peratiolls onArrays\nArraytypessupport an'alT<lYindex'rnethod toallow11serstoaccessarray\niternsata,particular offset.A.postfix'squarebracket' syntaxisusuallyused.\nSincethenuruberofelernents canv<try,thereisanoperator (CARDINALITY) that\nreturnsthenU1nbe1' ofelerIlents illtl1E~array.'1'hevaria,hle nurnl)erofelernents\nalsorn.otivates anoperator toC:Ollcatenate t\\VOarrays. rrh(~following exanlple\nillustrates theseoperations onS(~L:1999arr(\\ys.\nSELECT F.fillnIlo, (F.staTs II['Brando', 'Pacino'])\nFROMFilrnsF\nWHERE CARDINALITY(F.stars) <:3AND\nF.stars[l]::::::'Iledford'\n1According toJinltvlelton, theeditoroftheSQL:19DD standard, thesecollection types'l}/erecon\u00ad\nsidered forinclusion butomitted because sorneproblt\u00b7mls withtheirspecifications werediscovered too\nlateforcorrection intheSQL:1999timc-fr;lrne.", "814": "782 CHAPTER 33\nForeachfibnwithRedford ctSthefirststar2andfe\"werthanthreestars,the\nresultofthequerycontains thefihn'8arrayofstarsconcatenated \\viththe\narraycontaining thetwoelcrnents 'Brando' and'Pacino'. Observe ho\\\\ravalue\noftypearray(containing BrandoandPacino) isconstructed through theuse\nofsquarebrackets intheSELECT clause.\n23.3.3Operations onOtherCollection Types\nAlthough onlyarraysaresupported inSQL:1999, futureversions ofSQLare\nexpected tosupportothercollection types,andweconsider whatoperations are\nappropriate overthesetypesofdata.providesuchoperations. Ourdiscussion\nisillustrative andnotIneanttobecOlnprehensive. Forexarnple, onecould\nadditionally allowaggregate operators count,surn,avg,rna.T,andrnintobe\nappliedtoanyobjectofacollection typewithanappropriate basetype(e.g.,\nINTEGER). ()necouldalsosupport operators fortypeconversions. ForexaInple,\nonecouldprovide operators toconvert arnultiset objecttoasetobjectby\nelirninating duplicates.\nSetsandMultisets\nSetobjectscanbecornpared usingthetraditional setmethods c,~,=,:2, ~.\nAnitelnoftypesetof(faa)canbecornpared withanitelnoftypefaausing\ntheErnethod, asillustrated inFigure23.3,whichcontains thecornparison\n'.fferberttheWO'T\"rn'EF.stars.T\\vosetobjects(havingelernents ofthesaIne\ntype)canbecornbined toforIlIanewobjectusingtheu,n,and---operators.\nEachoftheInethods forsetscanbedefinedforInultisets, takingthenUlnber of\ncopiesofelernents intoaccount. TheUoperation silnplyaddsupthenurnber\nofcopiesofanelernent, thenoperation countsthelessernU1nbel' oftirnesa\ngivenelernent appears inthetwoinputrnultisets, Etuel_.subtracts thenurnber\nofti1nesagivene1ernent appears inthesecondlnultiset frornthenUlnber of\ntinlesitappears inthefirstInultiset. Forexarnplc, usingrnultiset scrnantics\nU({1 2 2\u00b72}{22')}')--'{I')2 2 2 2 ,-)}.r1({\"12')'2'}{')')')}')-{22}',.I\",\" , . ,,t) ..- , .....\"\",d, I.,,.....,,.....,.....,t.J--'.' ,d,11C\n({1,2,2,2L {2,2,~3}) =={1,2}.\nLists\nl'raditiona.l listoperations include head,\\vhichreturnsthefirstele1nent; tail,\nvvhichreturnsthelistobtained byrCIIloving thefirstelernent; prepend, which\n--_._ .\n2Notethatthefirste1crnent inanSQLarra.yhasindexvaJue1(not0,<:lAoSinsorneIanguH,ges).", "815": "()b.iect-Database 8ysterns\ntakesanelcrnent andinsertsit(1.Sthefirstelernent inalist;andappend,which\nappends onelisttoanother.\n23.3.4QueriesOverNestedCollections\n\\Veno\\vpresent SOHleexar11ples toillustrate ho\\vrelcltions thatcontainnested\ncollections canbequeried, usingSQLsyntax.Inparticular, extensions ofthe\nrelational rnodelwithnestedsetsandrnultisets havebeen\\videlystudiedand\n\\vefocusonthesecollection types.\n\\Veconsider avariantoftheFihIISrelation fromFigure23.1inthissection,\nwiththestaTsfielddefinedasasetof (VARCHAR [25]),ratherthananarray.\nEachtupledescribes afilrn,uniquely identified byfilrnno,andcontains aset\n(ofstarsinthefilrn)a..'3afieldvalue.\nOurfirstexarnple illustrates howwecanapplyanaggregate operator tosucha\nnestedset.Itidentifies filrnswithr11or8thantwostarsbycounting thenurnber\nofstars;theCARDINALITY operator isappliedonceperFilnIstuple. ~~\nSELECT F.filmno\nFROM FilrnsF\nWHERE CARDINALITY(F .stars)>2\nOursecondqueryillustrates anoperation calledunnesting. Consider the\ninstance ofFilrnsshowninFigure23.4;wehaveolnittedthedirecloTandbudget\nfields(included intheFilnlsschenHlinFigure23.1)forsimplicity. Aflatversion\nofthesaIneinforrna.tion isshowninFigure23.5;foreachfilrnandstarinthe\n\u00a3ibn,wehaveatupleinFilrns_flat.\n--r-----\u00b7-\u00b7 .._--.--:..---;]star's ...\n~~,-\n98 Casablanca {Bogart, Bergluan}\n54 EaTthvVorrnsAreJuicy{Herbert, vVanda}\n['\u00b7\u00b7---\u00b7\u00b7--\u00b7\u00b7\u00b7--\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7---\u00b7-1--\u00b7-\u00b7--\u00b7---\u00b7-------fil'mno title\nFigure23.4ANestedRelation, Films\n1\"11efollc)\\ving quer,rgenerates theinstance ofFihns~flat frcnnFihns:\nSELECT FJilrnno,F.title,SASstar\nFROMFilrnsF,F.starsASS\n3SQL:1999doesnotsupport setorrnultiset values,aswenotedearlier.Ifitdid)itwouldbenatural\ntoallowtheCARDINALITY operator tobeappliedtoaset-vaJuc tocountthenUluber ofelernents; we\nhaveusedtheoperator inthisspirit.", "816": "784\n\"Figure 23.5APlat Version,Films~fla,t\nThevariable Fissuccessively boundtotUI>lesinFilrns.andforeachvaluev . J\nofI?,thevaTiable Sissuccessively boundtothesetinthestaTsfieldof.F'.\nConversely, weInay\"vanttogenerate theinstance ofF'ilrnsfrornFilIns_fiat. We\ncangenerate theFilrnsinstance usinga,generalized fonnofSQL'8GROUP BY\nC011struct, asthefollowing queryillustrates:\nSELECT F.fihnno, F.title,\nseLgen(F.star)\nFROM Fihns.Jlat F\nGROUP BYF.fihnno, F.title\nThisoxaluplc introducE~s (1,ne'woperator seLgen, tobeusedwithGROUPBY,\nthatrequires sorneexplanation. TheGROUP BYclausepartitions theFihnsJlat\ntablebysortingonthe.filTn:noattribute; alltuplesinagivenpartition havethe\nsanlefilrnno(andtherefore thesarnetitle).Consider thesetofvaluesinthestar\ncohunnof(1,givenpartition. InanSC~L-92 query,thissetrnustbesurnluarized\nbyapplying anaggregate operator suchasCOUNT.Nowthatweallowrelations\ntocontainsetsasfieldvalues, however, \\vecanreturnthesetofstaTvaluesas\nafieldvalueinasingle anSWE~rtuple;theans\\vertuplealsocontains thefihnno\nofthecorresponding partition. rrheset-genoperator collectsthesetofstar\nvaluesinapaTtition andcreatesaset-valued object.Thisoperation iscalled\nnesting. vVecanirnagine shnihtrgenerator functions forcreating Inuitise1's,\nlists.andsoon.IIo\\vever, suchgenerators arenotincluded inSQL:1999.\n23..4ENCAPSULATION ANDADTS\nConsicler theFnunestableofFigure2:3.1.ItlUlsacolun111 ,zrnageoftype\njpeg~image, vlhichstoresa,cOlnpressed iUHlgerepresenting asinglefrarneofa\nfihn.I'he jpeg_image tYI)CisnotoneoftheDBlVIS's l>uilt-in typesand\\VEtS\nd(~fined 1)yauserfortheI)inkyapplication tostoreilna,gedatacornpressed\nllsingth(~ JPEC;stanclard. Asanother exarllple, theCountries tabledefinedin\nLine7ofFigure2:3.1h;:lSacolurnn boundaT'Y oft,ypepolygon, \\v111chcontains\nr(~presentations oftheshapesofcountries' outlines onavvorldrnap.", "817": "()b,ject:-Database Syst:en18\n.Allowing userstodefinearbitrary nc\\vdatatypesisakeyfeatureof()RDBf\\,1Ss.\n'1\"heDBrvlSalh:)\\vsuserstostoreandretrieve objectsoftypejpeg_image, just\nlikeanobjectofanyothertype,suchasinteger. No\\vatornicdatatypes\nusuallyneedtohave t~ype-specific operations definedbytheuser'whocreates\nthern.Forexanlple~ onernightdefineoperations onanirnagedatatypesuch\na\"scompress, rotate, shrink, andcrop.rrheccnnbination ofanatolIlicdata\ntypeanditsassociated rnethods iscalledanabstract datatype,or,A,DT.\nTraditional S(~LCOlneswithbuilt-in ..l\\DTs,suchasintegers (-withthea\",ssoci\u00ad\natedarithnletic rnethods) orstrings(withtheequality~ cornparison, andLIKE\nlllethods). Object-relational systerns includetheseADT'sandalsoallowusers\ntodefinetheiro\\vnADTs.\nThelabelabstract isappliedtothesedatatypesbecause thedatabase systerIl\ndoesnotneedtoInlOWhowanAD1~'s dataisstorednorho\\vtheADT'srneth\u00ad\nodswork.Itrnerelyneedstoknow\\vhatrnethods areavaila,ble andtheinput\nandoutputtypesforthernethods. I-EdingADTinternals iscalledencapsu\u00ad\nlation.4Notethatevenina.relational systern, atolnictypessuchasintegers\nhaveassociated rnethods thatencapsulate the1n.Inthecaseofintegers, the\nstandard Inethods fortheADTaretheusualaritlunetic operators andCOll1\u00ad\nparators. Toevaluate theaddition operator onintegers, thedatabase systenl\nneednotunderstand thelawsofaddition itl11erelyneedstoknowhowto\ninvoketheaddition operator's codeandwhattypeofdatatoexpectinreturn.\nInanobject-relational systenl,theSilllplification duetoencapsulation iscritical\nbecause ithidesanysubstantive distinctions between datatypesandallowsan\nOR,DB1VIS tobeiInplernented \\vithout anticipating thetypesandrnethods that\nusersInightwanttoadd.Forexarnple, (l,ddingintegers andoverlaying irnages\ncanbetreatedunifonnly bythesystern, vviththeonlysignificant distinctions\nbeingthatdifferent codeisinvokedforthet\\VOoperations anddifferently typed\nobjectsareexpected tobereturned froIllthatcode.\n23.4.1Defining Methods\nrroregister arH~\\Vrnethod forauser-defined datatype,usersrnust\\vritethe\ncodeforthenlcthodandtheninfor1nthedatalHlse systcrI1abouttheInethod.\n'rhecod.etobe\\i\\rritten depends onthelanguages supported bytheDBlVIS\nand,possibly, theoperating systerHinquestion. ForeXC1ruple, theOHI)Bl\\;IS\nInayhandleJa\\ta, co(h,~intheLinuxoperating systern. Inthiscase,thelnet,hod\ncodenlu,stbe\\vritten iIIJavaandcOlnpiled intoa.Javabytecode filestoredin.\naLinuxfiles~vsteln. 'ThenanSC~L-st~yle luethod registration eOllunand isgiven\ntothe()I:ll)Bl\\/lS sothatitrecognizes thenc~\\vrnethod:\n4SOlueOIlIJBivISs actually refertoAryl'sasopaque typesbeca,use theyareenci::tpsula.ted a,nd\nhenceonecannotseetheirdetails.", "818": "786 CHAPTER ~:3\nr:-'\"-_._-\"\".,.- -._- ,-~-------.\nPackaged ORDBMS Extensions: Developing asetofuser-defined\n.typesandrnethods foraparticular application\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-say, iInagemanagement\u00b7,\u00b7,\u00b7,,\u00b7\nIcaninvolveasignificant aIIlountofworkanddornain-speeific expertise. As\naresult,mostORDBMS vendorspartnerwiththirdpartiestosellprepack-\nagedsetsofADrrsforparticular domains. Inforn1ix callstheseextensions\nDataBlades, OraclecallsthelnDataCartridges, IBNIcallsthernDB2Ex\u00ad\ntenders,andsoon.Thesepackages includetheADT11lethod code,DDL\nscriptstoautomate loadingtheADTsintothesystem,andinsomecases\nspecialized accessmethods forthedatatype.Packaged ADTextensions are\nanalogous totheclasslibraries available forobject-oriented programIning\nlanguages: Theyprovideasetofobjectsthattogether addressaCOlnnlon\ntask.\nSQL:1999 hasanextension calledSQL/MIVI thatconsists ofseveralinde\u00ad\npendent parts,eachofwhichspecifies atypelibraryforaparticular kind\nofdata.TheSQL/MM partsforFull-Text, Spatial,StillIillage,andData\nMiningareavailable, ornearingpublication.\nCREATE FUNCTION is_sunrise(jpeg_image) RETURNS boolean\nASEXTERNAL NAME'/a/b/c/dinky.class' LANGUAGE 'java';\nThisstatenlent definesthesalientaspectsofthelllethod: thetypeoftheasso\u00ad\nciatedADT,thereturntype,andthelocation ofthecode.Oncethemethodis\nregistered, theDBNISusesaJava,virtuallnachine toexecutethecode5.Fig\u00ad\nure23.6presents anUlnber ofrnethod registration cOllllnands forourDinky\ndatabase.\n1.CREATE FUNCTION thumbnail(jpeg_image) RETURNS jpeg_image\nASEXTERNAL NAME'/a/b/c/dinky.class' LANGUAGE 'java';\n2.CREATE FUNCTION is_sunrise(jpeg_image) RETURNS boolean\nASEXTERNAL NAME'/a/b/e/dinky.class' LANGUAGE 'java';\n3.CREATE FUNCTION isJnerbert(jpeg_image) RETURNS boolean\nASEXTERNAL NAME'/a/b/c/dinky.class' LANGUAGE 'java';\n4.CREATE FUNCTION radius(polygon, float) RETURNS polygon\nASEXTERNAL NAME'/a/b/c/dinky.class' LANGUAGE 'java';\n5.CREATE FUNCTION overlaps (polygon, polygon) RETURNS boolean\nASEXTERNAL NAME'/a/b/c/dinky.class' LANGUAGE 'java';\nFigure 2:1.6IVlethod H.,egistration Conunands fortheDinkyDa.taha ..se\n._--_.\n51nthecaseofnon-portable cOIl1piled codewritten, forexample, ina,language likeC++\" .....\u00b7\u00b7\u00b7the\nD131v18usestheoperating; system's dynamic linkingfacilitytolinkthemethod codeintothedataba ..se\nsystemsothatitcanbeinvoked.", "819": "()bject-Database Systerns 787\n~\nrrypedefinition statelnents fortheuser-defined atornicdatatypesintheDinky\nschernaaregiveninFigure23.7.\n1.CREATE ABSTRACT DATATYPEjpeg_image\n('inte'rnallength =VARIABLE, input=jpeg~n, output=jpeg_out);\n2.CREATE ABSTRACT DATATYPEpolygon\n(internallength =VARIABLE, input=polyjn,01LtP'Ut==poly_out);\nFigure23.7AtomicTypeDeclaration Commands forDinkyDatabase\n23.5INHERITANCE\nWeconsidered theconcept ofinheritance inthecontext oftheER,modelin\nChapter 2anddiscussed howERdiagrarns withinheritance 'weretranslated\nintotables.Inobject-database systems, unlikerelational systerns, inheritance\nissupported directlyandallowstypedefinitions tobereusedandrefinedvery\neasily.Itcanbeveryhelpfulwhenmodeling similarbutslightlydifferent classes\nofobjects. Inobject-database systerns, inheritance canbeusedintwoways:for\nreusingandrefining typesandforcreating hierarchies ofcollections ofsirnilar\nbutnotidentical objects.\n23.5.1Defining TypeswithInheritance\nIntheDinkydatabase, wernodelrnovietheaters withthetypetheater .._t.\nDinkyalsowantstheirdatabase torepresent anewrnarketing technique inthe\ntheaterbusiness: thetheater-cafe, whichservespizzaandotherrnealswhile\nscreening movies. rrheater-cafes requireadditional inforrnation toberepre\u00ad\nsentedinthedatabase. Inparticular, atheater-cafe isjustlikeatheater,but\nhasanadditional attribute representing thetheater's IIlenu.Inheritance allows\nustocapture this'specialization' explicitly inthedatabase designwiththe\nfollowiIlg DDLstaternent:\nCREATE TYPEtheatercafe_t UNDERtheater_t (rn,enutext);\nThisstaternent createsanewtype,theatercaf e_t,whichhasthesarneat\u00ad\ntributes andrnethods <:l.Stheater _t,plusoneEtdditional attribute rnenuoftype\ntext.lVlethocl,s definedontheater_ ..tapplytoobjeetsoftypetheatercafe_t,\nbutnotvieeversa.vVesa~ythattheatercaf e_tinherits theattributes and\nrnethods oftheater _t.\nNotethattheillherita,nce rnechanisrll isnotrnerelyarnacrotoshorten CREATE\nstaternents. Itcreatesanexplicit relationship inthedataba ..sebetween th(~\nsubtype (theatercafe_t) andthesupertype (theater _t):Anobjectofthe", "820": "788 CJHA.prrElt 23\ns'ublypc isalsoconsidered tobeanobjectoftheB'Upert:lJpe. Thistreatlnent\nIneansthatan.yoperations thi:ttapplytothesupertype (nlcthods as\\venas\nqueryoperators, suchasprojection orjoin)alsoapplytothesubtype. 1:'hisis\ngenerall.y\u00b7 expressed inthefollo\\ving principle:\nTheSubstitution Principle: C~ivenasupertype A.andasubtype\nJj,itisalwayspossible tosubstitute anobjectoftypeBintoalegal\nexpression vvrittenforobjectsoftypeA,without producing typeerrors.\nThisprinciple enableseasycodereusebecause queriesandInethodswritten for\nthesupert)rpe canbeappliedtothesubtype vlithout I1lodification.\nNotethatinheritance canalsobeusedforatc)luictypes,inaddition toro\\v\ntypes.Givenasupertype image_t withrnethods title(),\nnurnber._of_colors(),\nandd'isplay(), wecandefineasubtype thumbnail_image_t forslllallirnages\nthatinherits thernethods ofimage_to\n23.5.2BindingMethods\nIndefining asubtype, itissornetiInes usefultoreplacearnethod fortheSll\u00ad\npertype withanewversionthatoperates differently onthesubtype. Consider\ntheimage_t typeandthesubtype jpeg_image_t frorHtheDinkydatabase.\nlJnfortunately, thedisplay() rnethod forstandard .iInagesdoesnotworkfor\nJPEGirnages, whicharespecially cOlnpressed. Therefore, increating type\njpeg_image_t, wewriteaspecialdisplay() rnethod forJPEGiruagesandreg\u00ad\nisteritwiththedatabase systernusingtheCREATE FUNCTION cOIIuuand:\nCREATE FUNCTION\n di8play(jpeg~image) RETURNS jpeg_image\nASEXTERNAL NAME'/a/b/c/jpeg.class' LANGUAGE 'java.';\nIlegistering ane\\vrnethod \\viththesarneHeHneasanaIelrnethod iscalled\noverloading theluethod narne.\nBecause ofover1oading~ thesysternInustunderstand 'whichrnethod isintended\nina,particular expression. Forexarnple, whenthesysternneedstoinvokethe\ndisplay()rnethod onanobjectoftypejpeg....image_t,itusesthespecialized\ndisplayrnethocL 'VIlcnitneedstoinvokedisplayonanobjectoftypeimage __t\nthatisnototherwise subtyped, itinvokesthestandard displayInethod. The\nprocess ofd(~ciding whichrnethod toinvokeiscalledbinding thernethod to\ntJICol)ject.Incerta.insituations, thisbinding CHJlbedone\\vhen(tIlexpn~ssiorl is\npaTsed(earlybinding), butinother cct.~esthe1n08tspecifictypeofHJlobject\nC(1,nnotbeknownuntilrl.ln-tinle, sothernethod cannotbel)ounduntilthen\n(latebinding) .Latebirlding fa,cilties acIdflexibility butcanrnakeitharder", "821": "()bject-\nDat;aba8c8y8terIL8 7~9\nfortheusertorea)f:;onabouttheInethods thatgetinvoked foragivenquery\nexpreSSIon.\n23.5.3Collection Hierarchies\nTypeinheritance wasinvented forobject-oriented progranuning languages, and\nourdiscussion ofinheritance uptothispointdifferslittle\u00a3rolnthediscussion\noneInightfindinabookonanobject-oriented language suchasC++orJava.\nI-I()\\vever, because database systerns providequerylanguages overtabulardata\nsets,thelnechanisnls fronlprogrannning languages areenhanced inobject\ndatabases todealwithtablesandqueriesaswell.Inparticular, inobjeet\u00ad\nrelational systelIls, wecandefineatablecontaining objectsofaparticular\ntype,such &'-;theTheaters tableintheDinkysehenla. Givenanewsubtype,\nsuchastheatercafe_t, wewouldliketocreateanother tableTheater_cafes to\nstoretheinforrnation abouttheatercafes.But,whenwritingaqueryoverthe\nTheaters table,itissornetirnes desirable toar;;kthesaInequeryovertherrhe\u00ad\nater_cafestable;afterall,ifweprojectouttheadditional C01UlllI1S, aninstance\noftheTheater_cafestablecanberegarded asaninstance oftheTheaters table.\nR,atherthanrequiring theusertospecify aseparate queryforeachsuchtable,\nwecaninfonnthesysternthatanewtableofthesubtype istobetreated as\npartofatableofthesupertype, withrespecttoqueriesoverthelattertable.\nInourexalnple, wecansay\nCREATE TABLEThea,ter_Cafes OFTYPEtheatercafe ....tUNDERTheaters;\nThisstaternent tellsthesysternthat qu(~riesovertheTheaters tableshould\nactually berunoveralltuplesinboththerrheaters andrrheater_Cafestables.In\nsuchcases,ifthesubtype definition involves rnethod overloading, late-binding\nisusedtoensurethattheappropriate rnethods arecalledforeachtuple.\nIngeneral, t11.eUNDERchl11secanbeusedtogenera,te anarbitrary treeofta\u00ad\nbles,called (1,collection hierarchy. (~ueries overaparticular tal)leTinthe\nhierarchy arerunoveralltuplesinrranditsdescendants. Sornetirnes, auser\nrnaywant thequerytonUlolllyonrrandnotonthedescencl<tnts; additiona1\nsyntax,forexaInple, thekey\\vord ONLY,canbeusedinthequery's FROMclause\ntofl,chievethiseffect.\n23~6\nOBJJ1:Cl-'S, OIDS,ANDREFERENCE TYPES\nInobject-elatabase systerns, dataobjectscanbegivenanobjectidentifier\n(aid),\\vhichissotnevaluethatisuniqueinthedatabase acrosstirne.The", "822": "790 CHAP1'ER 243\nr----- ~-\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-_-.-................ -------..... .-----... I\nIOIDs:IBNlDB2,Inforul..ix lJDS,andOracle9isupport REFtypes. I\nL--._. .__ ._..__.. .----_~ ____ ___ .\nDBl\\iISisresponsible forgenerating aidsandensuring thatanoididentifies an\nobjectuniquely overitsentirelifetillle. InSOHlesystenls, alltuplesstoredin\nanytableareobjectsandautornatically assigned uniqueoids;inothersystenls,\nausercanspecifythetablesfor'whichthetuplesaretobec1ssigned aids.Often,\ntherearealsofacilities forgenerating oidsforlargerstructures (e.g.,tables)as\nwellasslnallerstructures (e.g.,instances ofdatavaluessuchasacopyofthe\ninteger5ora.TPEGilnage).\nAnobject's aidcanbeusedtorefertoitfromelsewhere inthedata.Anoid\nhasatypesimilartothetypeofapointerinaprogralnll1ing language.\nInSQL:1999 everytupleinatablecanbegivenanaidbydefining thetable\ninternlSofastructured typeanddeclaring thataREFtypeisassociated with\nit,a,'3inthedefinition oftheTheaters tableinLine4ofFigure23.1.Contrast\nthiswiththedefinition oftheCountries tableinLine7;Countries tuplesdo\nnothaveassociated aids.(SQL:1999 alsoassigns'oids'tolargeobjects: This\nisthelocatorfortheobject.)\nREFtypeshavevaluesthatareuniqueidentifiers oraids.SQL:1999requires\nthatagivenREFtypemustbeassociated withaspecifictable.Forexalnple,\nLine5ofFigure23.1definesacohllnn theateroftypeREF(theater_t).The\nSCOPEclausespecifies thatiternsinthiscolurnnarereferences torowsinthe\nrrheaters table,whichisdefinedinLine4.\n23.6.1NotionsofEquality\nThedistinction between reference typesandreference-free structured types\nraisesanother issue:thedefinition ofequality. TwoobjectshavingthesaIne\ntypearedefinedtobedeepequalifandonlyif\n1.Theobjects <1,1'eofatolnictypeandhavethesaInevalue.\n2.Theobjectsareofreference typeandthedeepeq'l.lalsoperator istruefor\nthetworeforenced objects.\n;3.rrheobjectsareofstructured typeandthedeepeqtlal.soperator istruefor\nallthecorresponding subparts ofthetwoobjects.\nTwoobjectsthathavetheSaJllCreference typearedefinedtobeshallow equal\nifbothrefertothesaIneobject(i.e.,bothreferences usethesaUleaid).T'he", "823": "()b.ject-Database Systen18 791\ndefinition ofshallow equality canbeextended toobjectsofarbitrary typeby\ntakingthedefinition ofdeepequality andreplacing deepeq1J,alsbyshallo'w elj'uals\ninparts(2)and (~~).\nAsanexarnple, consider thecornplex objects ROW(538,tS9,6-3-97,8-7-97)\nandROW(538, i33,6-3-97,8-7-97), whosetypeisthetypeofrowsinthetable\nNowshowing (Line5ofFigure23.1).1'heset\\VOobjectsarenotshallow equal\nbecause theydifferinthesecondattribute value.Nonetheless, theyrnight\nbedeepequal,if,forinstance, theoidst89andt33refertoobjectsoftype\ntheater _tthathavethesaInevalue;forexarnple, tuple(54,':Nlajestic', '115\nKing','2556698').\nWhiletwodeepequalobjectsInaynotbeshallow equal, a._\"theexarnple illus\u00ad\ntrates,twoshallowequalobjectsarealwaysdeepequal,ofcourse.'Thedefault\nchoiceofdeepversusshallow equality forreference typesisdifferent across\nsystenls, although typically wearegivensyntaxtospecifyeithersemantics.\n23.6.2Dereferencing Reference Types\nAnitemofreference typeREF(basetype) isnotthesarneasthebasetype itenl\ntowhichitpoints.Toaccessthereferenced basetype itenl,abuilt-inderef()\nrnethod isprovided alongwiththeREFtypeconstructor. Forexample, given\natuplefromtheNowshowing table,onecanaccessthenamefieldoftheref\u00ad\nerencedtheater _tobjectwiththesyntaxNowshowing.deref (theater). narne.\nSincereferences totupletypesarecomInon, SQL:1999 usesaJava-style arrow\noperator, whichcOD.lbines apostfixversionofthedereference operator witha\ntuple-type dotoperator. Thenarneofthereferenced theatercanbeaccess(~d\nwiththeequivalent syntaxNowshowing.theater-> narne,asinFigure23.3.\nAtthispointwehavecovered allthebasictypeextensions usedintheDinky\nschernainFigure23.1.Thereaderisinvitedtorevisittheschernaandexarnine\nthestructure andcontentofeachtableandhowthenewfeatures areusedin\nthevarioussarnplequeries.\n23.6.3URLsandDIDsinSQL:1999\nItisinstructive tonotethedifferences between Internet lJRIJsEtneltheoids\ninobjectsysterns. First,oidsuniquely identify asingleobjectoveralltirne\n(atleast,untiltheobjectisdeleted, whentheoidisundefined), vvherea,s the\n'\\Vebresource pointedatbyanlJHJ-Jcanchangeovertirue.Second, oidsare\nsirnply identifiers andcarrynophysical infonnation abouttheobjectsthey\nidentify thisrnakesitpossible tochangethestorage location ofanobject\nwithout rnodifying pointers totheobject.Incontra,st, lJH.I.lsincludenet\\'lork", "824": "792 (jHAprI'ER 2*3\naddresses andoftenfile-syst;enl narnes (;1,,-:;;\\veU,lIle<.:tning thatiftheresource\nidentified bythe{JIlLhastoInovetoanotherfileornetwork a,ddress. thenall\nlinkstothatresource areeitherincorrect orr(~quirea~forwardiIlg' rnechanisH1.\nrrhird,oidsareaut(Hnatically generated bytheI)B1\\;18foreachobject,\\vhereas\nlJIlLsareuser-generated. Sinceusersgenerate lJR,Ls,theyoftenernbedsc\u00ad\nrnanticinforlllation intothe{JR.Lviarnachine, directory, orfilenames;this\ncanbecoine confusing iftheobject's properties changeovertilne.\nForlJIlLs,deletions canbetroublesorne: T'hisleadstothenotorious '404\nPageNotFound'error.Foroids,SQL:1999 allowsustosayREFERENCES ARE\nCHECKED aspartoftheSCOPEclauseandchooseoneofseveralactiol1sw hena\nreferenced objectisdeleted. Thisisadirectextension ofreferential integrity\nthatcoversoids.\n23$7DATABASE DESIGN FORANORDBMS\nTherichvarietyofdatatypesinanOH,DBTv1S offersadatabase designer Inany\nopportunities forarnorenaturalorllloreefficient design.Inthissectionweillus\u00ad\ntratethedifferences between IlDBl\\!lS and()RI)BMS database designthrough\nseveralexarnples.\n23.7.1Collection TypesandADTs\n()urfirstexarnple involves severalspaceprobes, eachofwhichcontinuously\nrecordsavideo.Asinglevideostrearllisassociated witheachprobe,andwhile\nthisstrearn \\Vck'3conected overacertail1tiuleperiod, vveassurnethatitisnow\nacOlllplete objectassociated Viliththeprobe.Duringthetirneperiodover\nwhichthevideo\\vascollected, theprobe'slocatiol1\\vas periodieaJly recorded\n(suchinfonnation (;anea.-.silybepigg~y-backed ontotheheaderportionofavideo\nstreanlconforrning totheTvIPEC;sta,ndard). 1'heinforrnation associated \\vith\naprobehasthreeparts:(1)aprobeIDthatidentifies aprobeuniquely, (2)a\nvideos/;'r'carn,and03)alocation 8cqucn.ce of(t;inLe1location) pairs.\\iVhatkind\nofadatabase schernashouldweusetostorethisinfonnation?\nAnRDBMS Database Design\nInH,11HIJBlVJ:S, \\vernuststoreeachvideostrcanlasaBIJ)13Etndeachlocation\nsequellce astuplesinatabh.~.Apossible HJ.JBIVJ.S data,b~J,,'3e designfollo\\vs:\nProbes(.E~.~~~_ integer, UTnc~:~ ..._~imestamp, lat:: !:_~..~.~_,__!!:)ng: re~.!,\ncarnCTa:string, 'v'ideo:BLOB)", "825": "()bject-lJatabase Syslelf);8 -n,':3{;;~\nThereisasingletablecanedProbesanditlu1.'3severa,}rowsforeachprobe.Each\noftheserovvshasthesaInepid,carneT(J\" and1rideo values,butdifferent t'irne,\ntat,andlcntgvalues.(vVehaveusedlatitude andlongitude todenotelocation.)\nThekeyforthistablecanberepresented asafunctional dependency: IJTLN\n-:.CYll,'~lhereNstandsforlongitude. Thereisanother dependency: p--;. (;V~\n'rhisrelation istherefore notinBCNT;\";indeed,itisnotevenin:INF.vVeca:n\ndecolupose ProbestoobtainaBCNFscherna:\nProbeS_bLoc(pid: integer, lirne:timestamp, tat:real,long:real)\nProbes_Video(p'id: integer,\n carn,era:\"-;'t'i='ing, 'v'ideo:BLOB)\nThisdesignisaboutthebestwecanachieveinan\nRDBl'v1S.Ho\\vever, itsuffers\nfrornseveraldn1\\vbacks.\nFirst,representing videos aA.'3BLOBs lI1eanSthatwehavetowriteapplication\ncodeinanexternal language tolnanipulate avideoobjectinthedatabase.\nConsider thisquery:\"Forprobe10,displaythevideorecorded between 1:10\nP.M.and1:15P.M.onlVlay101996.\"Welnustretrievetheentirevideoobject\nassociated ''lithprobe10,recorded overseveralhours,todisplayasegrnent\nrecorded overfiverninutes.\nNext,thefactthateachprobehasanassociated sequence oflocation readings\nisobscured, andthesequence inforrnatiol1 associated withaprobeisdispersed\nacrossseveraltuples.Athirddrawback isthatvveareforcedtoseparate the\nvideoinfonnation froTnthesequence inforrnation foraprobe.rrheselirnitations\nareexposed byqueriesthatrequireustoconsider alltheinfonnation associated\nv'litheachprobe;forexcunple, ;'Fhreachprobe,printtheearliesttirneatwhich\nitrecorded, andtheCEtrnen.ltype.\"T'hisquery110v'linvolves ajoinofProbes.\".Loc\nandProbes_Video onthep'idfield.\nAnORDBMS Database Design\n;\\n()HJ)BlVIS supports alnuchbettersolution. FirsL\\vecanstorethevideo\nasanA.DTobjectand\\vriternethods thatc':1I)ture a.nyspecialrna,nipulation\n\\ve\\vishtoperforrr1. Second, 1)eCflT1Se \\veaTeallovved tostorestructured types\nsuchaslists,\\ve (:a,nstc)retIl(:;loca,tion sequerlce for(1.probeinasingletuple,\nalong\\vith thE:videoinfonnation. '['hislayoutelirnina,t;c;s theneedforjoinsin\ncIlH;riesthatinvolveboththesequence anclvideoinforrnation. An()HI)BNIS\ndesignforourexarrlpl(~ consists of,1singlerelation calledProbes_i\\llInfo:\nProbes ...AIUnfo(pid: integer, loc8eq:location ...seq,Ca'fTl\u00b7e'ra:string;\n'video:mpeg_.stream)", "826": "794 CHAPTER 2~\nThisdefinition involves t,vonew\"types,location...seq andmpeg_stream. The\nmpeg_stream typeisdefinedasanADT,withaInethoddisplay() thattakes\nastarttiIneandanendtirneanddisplays theportion ofthevideorecorded\nduringthatinterval. Thisrnethodcanbeirnplernented efficiently bylookingat\nthetotalrecording duration andthetotallengthofthevideoandinterpolating\ntoextractthesegnlcnt recorded duringtheinterval specified inthequery.\nOurfirstqueryinextended SQLusingthisdisplaylnethod follows. Wenow\nretrieveonlytherequired segment ofthevideoratherthantheentirevideo.\nSELECT display(P.video, 1:10PoM 0May101996,1:15PoM0May101996)\nFROM Probes-.Alllnfo P\nWHERE Popid=10\nNowconsider thelocation_seq type.Wecoulddefineitasalisttype,\ncontaining alistofROWtypeobjects:\nCREATE TYPElocation_seq listof\n(row(time:timestamp, lat:real,long:real))\nConsider thelocseqfieldinarowforagivenprobe.Thisfieldcontains alist\nofrows,eachofwhichhasthreefields.IftheORDBMS implements collection\ntypesintheirfullgenerality, weshouldbeabletoextractthetimecolurnn\nfromthislisttoobtainalistoftimestamp valuesandapplytheMINaggregate\noperator tothislisttofindtheearliesttiIneatwhichthegivenproberecorded.\nSuchsupport forcollection typeswouldenableustoexpressoursecondquery\nthus:\nSELECT\nFROMP.piel,MIN(P.locseq.tirne)\nProbes._AllInfo P\nCurrent()ItDBI\\1Ss arenot&'3generalandcleana..sthisexalnple querysuggests.\nForinstance, thesysternrnaynotrecognize thatprojecting thetirnecolurnn\nfrornalistofrowsgivesusalistoftirnestarnp values;orthesystcrurnayallovv\nustoapplyanaggregate operator onlytoatableandnottoanestedlistvalue.\nContinuing \"'lithourexa.rnple, welnaywanttodospecialized operations on\nourlocation sequences thatgobeyondthestandard aggregate operators. For\ninstance, wernaywanttodefinealnethodthattakesatirneintervalandCOIIl-\n, .'\nputesthedistaIlce traveled bytheprobeduringthisinterval. Thecodeforthis\nrnethod rnustunderstaJnd detailsofaprobe'strajectory andgeospatial coordi\u00ad\nnatesystenls. FbI'thesereasons, \\vernightchoosetodefinelocation_seq as\nanADT\\.", "827": "Object-Database Systerns 79~\nClearly,an(ideal)ORDBIvIS givesusIIlaIlYusefuldesignoptionsthatarenot\navailable inanRDBMS.\n23.7.2ObjectIdentity\n\\VenowdiscussS0l11eoftheconsequences ofusingreference typesoraids.The\nuseofaidsisespecially significant whenthesizeoftheobjectislarge,either\nbecause itisastructured datatypeorbecause itisabigobjectsuch&san\nimage.\nAlthough reference typesandstructured typesseemsirnilar,theyareactually\nquitedifferent. Forexample, consider astructured typemy_theater tuple(ina\ninteger, nametext,addresstext,phonetext)andthereference typetheater\nref(theater _t)ofFigure23.1.rrhereareirnportant differences inthewaythat\ndatabase updates affectthesetwotypes:\n\u2022Deletion: Objects withreferences canbeaffected bythedeletion ofob\u00ad\njectsthattheyreference, whilereference-free structured objectsarenot\naffected bydeletion ofotherobjects. Forexaluple, iftheTheaters table\nweredropped fromthedatabase, anobjectoftypetheater mightchange\nvaluetonull,becausethetheater _tobjectitreferstohasbeendeleted,\nwhileasimilarobjectoftypemy_theater wouldnotchangevalue.\n\u2022Update: Objects ofreference typeschangevalueifthereferenced object\nisupdated. Objects ofreference-free structured typeschangevalueonlyif\nupdated directly.\n\u2022Sharing versusCopying: Anidentified objectcanbereferenced by\nllluitiple reference-type iterIls,sothateachupdatetotheobjectisreflected\ninIYlanyplaces. ~rogetasirnilareffectinreference-free typesrequires\nupdating all'copies'ofanobject.\nTherearealsoirnportant storagedistinctions between reference typesandnon\u00ad\nreference types,\\vhichrnightaffectperfoI'rnance:\nIIIStorage Overhead: Storingcopiesofalargevalueinrnultiple structured\ntypeobjects IYlayuselnnchrno1'espacethanstori.ngthevalueonceand\nreferring to'itelsewhere through reference typeobjects. Thisadditional\nstoragerequirelnent canaffectbothdiskusageandbufferlnanagcrncnt (if\nIIlal1Ycopiesareaccessed atonce).\nIIIClustering: Thesubparts ofastructured objectaretypically storedto\u00ad\ngetherondisk.Objectswithreferences rna,Ypointtootherobjectsthata,1'e\nfara:wayonthedisk,andthediskannInayrequiresignificant rnOVClnent", "828": "-oc\u00adt,10 (~;HApcrER ~3\nOIDsandReferential Integrity: InSQL:1999, aUtheoidsthatap\u00ad\npearinacohunnofarelation arerequired toreference thesrtrnetarget\nrf~lation. This ~scoping' ulakesitpossil)]e tocheckoidrefere:nces for\"1'e\u00a3e1'\u00ad\nentiaJ.integrity' justlikeforeignkeyreferences areehecked.vVhile current\nOI{DB1JlS products supporting oidsdonotsupport suchchecks, it:islikely\nthattheywillinfuturereleases. Thiswillnlakeitrnnchsafertouseaids.\ntoasserrlble theobjectanditsreferences together. Structured objectscan\nthusbel'nor8efficientthanreference typesiftheyaretypically accessed in\ntheirentirety.\nManyoftheseissuesalsoariseintraditional prograunuing languages suchasC\norPascal,whichdistinguish between thenotionsofreferring toobjectsbyvalue\nandbyrefer-ence. Indatabase design,thechoicebetween usingastructured\ntypeorareference typetypically includes consideration ofthestoragecosts,\nclustering issues,andtheeffectofupdates.\nObjectIdentityversusForeignKeys\nlJsinganoidtorefertoanobjectissilnila,rtousingaforeignkeytorefer\ntoatupleinanother relation butnotquitetheseune:Anoidcanpointto\nanobjectoftheater _tthatisstoredany'whcr-c inthedatabase, evenina\nfield,whereas aforeignkeyreference isconstrained topointtoanobjectina,\nparticular referenced relation. Thisrestriction rnakesitpossible fortheDBlV1S\ntoprovidelnuchgreatersupport forrefer(~ntial integrity thanforarbitra,ry aid\npointers. Ingeneral, ifanobjectisdeletedwhilethere an~stilloid-pointers\ntoit,thebesttheDBl\\IIScandoistorecognize thesituation byrnaintajning\nareference count.(Eventhislirnitedsupport becornes irnpossible ifoidscan\nbecopiedfreely.)Thereforc1theresponsibility foravoiding dangling n~ferences\nrestslargely\\'liththeuserifoidsarellsedtorefertoobjects. ThisburdensoIllc\nresponsibility suggests that vVE~shoulduseoids\\vithgreatca.ution anduse\nforeignkeysinstead\\vhenever possible.\n23.7.3Extending theERModel\nTheEllrnodel, cLSdescribed inChapter 2,isnotadequate for()ItDB1\\tlS design.\n\\VehavetouseanextendedEH, rnodelthatsupports structured attributes\n(i.e.,sets,lists,arra,Ysa,sattribute values) Idistinguishes \\vhethc~r entitieshave\nol)jectids,andallc)\\vsustoInodelentities\\vhoseattributes includernethods.\n\\Veillustrate theseconnnents usinganextended Elldiagrarn todescribe the", "829": "()b,icct-Database Sy\"teTn,'3 797\nli\nspaceprobedatainFigure2:.3.8;ournotational conventions areadhocand\nonlyforillustr;::ttivc purposes.\n~-\n(,~isPlay(start! end),._--:)\n---'_-'-_.~, ..__.....~....-----,..-\"._.......~......--\nFigure23.8TheSpaceProbeEntitySet\nThedefinition ofProbesinFigure23.8hast\\VO rH~\\V&,;pects. First,ithasa\nstructured-type attrilnlte listof(row(ti'lnc,lat,lo'ng));eachvalueassigned to\nthisattribute inaProbesentityisalistoftupleswiththreefields.Second,\nProbeshasanattribute calledvideothatisanabstract datatypeobject,\\vhich\nisiIldicatecl byadarkovalforthisattribute \\vithadarklineconnecting itto\nProbes. Further, thisctttribute hasan'attribute' ofitsown,\\vhichisarnethod\noftheJ\\DT.\nAlternatively, wecouldrnodeleachvideoasanentitybyusingant~ntityset\ncalledVideos. Theassociation between Probesentities andVideosentities\ncouldthenbecaptured bydefining arelationship setthatlinksthenl.Since\neachvideoiscollected byprecisely oneprobeandeveryvideoiscollected by\nse)lneprobe,thisrelationship canberna,intained bysiInplystoringareference to\naprobeobjectwitheachVideosentity;thistechnique isessentially thesecond\ntranslation approach frornER,diagnuns totablesdiscussed inSection2.4.1.\nIfwealsornakeVideosa\\iVeakentitysetinthisalternative design,wecanadd\nareferential integrity constraint thatcausesaVideosentitytobedeleted\\vhen\nthecorresponding Probesentityisdeleted. 1\\/101'8generally, thisalternative\ndesignillustrates astrongsirnila1'ity bet\\veen storingreferences toobjectsand\nforeignkeys;theforeignkeyrnechanisT11 achieves thesaIneeffectasstoring oids~\nbutin(1,controlled lUanneI'. Ifoidsareused.theuserrnusiensurethatthere\narenodangling references whenanobjectisdeleted, \\iVithverylittlesupport\nfroIlltheDBlvlS.\nFinally~we nofetllatasignificant extension. totheEllrHodelisrequired to\nsupport the designofnestedcollections. Forexa.rnple~ ifalocation sequence\nisrnodeled (J\",'3anentity,and\\ve\\vanttoclefineanattribute ofProbesthat\ncontftins asetofsuchentities, thereisno\"vaytodothis\\vithont extending the\nEllrrlodeL\\Vc donotdisC1ISSthisI)ointfurtlleratthelevelofElldiagraIlls,\nbutconsider anexaJnple 11E~xtthat illustrat(~swhen touseanest,ed (~ollection.", "830": "798\n C~HAPTER~3\n23.7.4UsingNestedCollections\nNestedcollections offergreatrnodeling powerbutalsoraisedifficult design\ndecisions. Consider thefollowing \\vaytornodellocation sequences (otherin\u00ad\nfonnation aboutprobesisornitted heretosirnplify thediscussion):\nProbesl(pid: integer, locseq:location_seq)\nrrhisisagoodchoiceiftheirnportant queriesintheworkload requireustolook\natthelocation sequence foraparticular probe,asinthequery\"Foreachprobe,\nprinttheearliesttirneatwhichitrecorded andthecalueratype.\"Ontheother\nhand,consider a.querythatrequires ustolookatalllocation sequences: \"Find\ntheearliesttiIneatwhicharecording existsforlaf;=5,long=90.\" Thisquery\ncanbeanswered 1110reefficiently ifthefollowing schernaisused:\nProbes2(pi(~: integ~r,\n tim~:_.timestamp, tat:real,long:real)\nThechoiceofschernaBlusttherefore beguidedbytheexpected workload (as\nalways). Asanother example, consider thefollowing scherna:\nCan_TeachI(cid:integer, teacheTs: setof(ssn:string), sal:integer)\nIftuplesinthistablearetobeinterpreted as\"Course cidcanbetaughtbyany\noftheteachers intheteacheTs field,atacostsal.\"thenwehavetheoptionof\nusingthefollowing schenla.instead:\nCarLTeach2( cid:integer, teachCT_8sn: st~_~~.~, sal:integer)\nAchoicebetween thesetwoalternatives canbeInadebasedonhovvweexpect\ntoquerythistable.Ontheotherhand,suppose thattuplesinCalL.Teachl\naretobeinterpreted as\"Course cidcanbetaughtbythetearnteacheT8, at\nacornbined costofsal.\"CarLTeach2 isnolongeraviablealternative. Ifwe\n,vantedtoflattenCarLleachl, ~wewouldhavetouse(1,separate tabletoencode\ntearns:\nCan_TCcl,ch2 (.~:'~i..~~.:'..._...~.12~.~..~!!!_~_,_..!~~~(J;rrL'id:0i~,,,(l,l:integer)\n1'earns(tid:oid,.'iBn:string)\nAstheseexarnples illustrate, nestedcollections areappropriate incertainsitua\u00ad\ntions,butthisfea,turecanea,,'3ilybernisused; nestedcollections shouldtherefore\nbeused\u00b7withcare.", "831": "()b.ject-Database Systerns\n23.8ORDBMS IMPLEMENTATION CHALLENGES7fJ9\n#\nTheenhanced functionality ofOIlDBIvlSs raisesseveralirnp1ernentation chal\u00ad\nlenges.SOlneoftheseare'wellunderstood andsolutions havebeenirnp1enlented\ninproducts; othersaresubjects ofcurrentresearch. Inthissection\\veexarnine\nafewofthekeychallenges thatariseinirnplernenting anefficient, fullyfunc\u00ad\ntionalOIlDBlvfS. l\\:lanyrnoreissuesareinvolved thanthosediscussed here;the\nI.- ,\ninterested readerisencouraged torevisittheprevious chapters inthisbookand\nconsider whether theirnplernentation techniques described thereapplynatu\u00ad\nrallytoORDBJ\\JISs ornot.\n23.8.1StorageandAccessMethods\nSinceobject-relational databases storenewtypesofdata,ORDBMS imple\u00ad\nrnentors needtorevisitsomeofthestorageandindexing issuesdiscussed in\nearlierchapters. Inparticular, thesystemlllustefficiently storeADTobjects\nandstructured objectsandprovideefficient indexed accesstoboth.\nStoringLargeADTandStructured TypeObjects\nLargeADTobjectsandstructured objectscornplicate thelayoutofdataon\ndisk.Thisproblern iswellunderstood andhasbeensolvedinessentially all\nORDBMSs andOODBMSs. WepresentSallieofthemainissueshere.\nUser-defined ADTscanbequitela,rge.Inparticular, theycanbebiggerthan\nasinglediskpage.LargeADTs,likeBLOBs, requirespecialstorage, typically\ninadifferent location ondiskfrornthetuplesthatcontainthem.Disk-based\npointers arernaintained frornthetuplestotheobjectstheycontain.\nStructured objectscanalsobelarge,butunlikeADrr objects, theyoftenvaryin\nsizeduringthelifetirneofadatabase. Forexarnple, consider thestarsattribute\nofthefilm,stableinl~igure23.1.A.stheyears pEt.'3S,SOlneofthe'bitactors'in\nanoldrnoviernaybecornefarnous.6YVhenabitactorhecornes farnous, Dinky\nrnightwanttoadvertise hisorherpresence intheearlierfilrns.Thisinvolves\naninsertion intothestarsattribute ofanindividual tupleinfilrns.Because\nthesebulkattributes cangrowarbitrarily, flexibledisklayoutrnechanisrns are\nrequired.\nGAfamousexample isMarilyn IVlonroe, whohadabitpartintheBetteDavisda..ssicAllAbout\n.E'/Jc.", "832": "800 CHAPTER 23\ni\\nadditional COlllplication arises\\'litharraytypes.'fraditionally, arrayele\u00ad\nlnentsareston-xlsequentially ondiskinaro\\'l-by-ro\\vfashion; forexarnple\n1Io\\v8ver, queriesrnayoftenrequestsuba.rrays thatarenotstoredcontiguously\nondisk(e.g.,.i411,,;121,...,Arn1).Suchrequests canresultinaveryhighI/O\ncostforretrieving thesubarray. rroreducethenurnber ofl/Osrequired, arrays\nareoftenbrokenintocontiguous chunks, vvhicharethenstoredinsenneorder\nondisk.Although eachchunkissornecontiguous regionofthearray,chunks\nneednotberovv-by-ro\\v orcolurnn-by-colurllll. Forexalnple, achunkofsize4\n111ightbeAll,A12,A21,/122,'whichisasquareregionifwethinkofthearray\nasbeingarranged row-by-row intwodimensions.\nIndexing NewTypes\nOneilnportant reasonforuserstoplacetheirdatainadatabase istoallow\nforefficient accessviaindexes. Unfortunately, thestandard RDB11S index\nstructures support onlyequality conditions (B+treesandhashindexes) and\nrangeconditions (B+trees).Anirnportant issueforOR,DB1\\IISs istoprovide\nefficient indexesforAD'I'rnethods andoperators onstructured objects.\nManyspecialized indexstructures havebeenproposed byresearchers forpar\u00ad\nticularapplications suchascartography, genorne research, 11lultirnedia reposito\u00ad\nries,\\Vebsearch,andsoon.AnOR,DBlVIS cornpany Cctnnotpossibly inlplernent\neveryindexthathasbeeninvented. Instead, thesetofindexstructures inan\n()R,DBlVfS shouldbeuser-extensible. Extensibility wouldallowanexpertin\ncartography, forexanlple, tonotonlyregister anAD1'forpointsonarnap\n(i.e.,latitude\u00b7\u00b7longitude pairs)butalsoirnplernent anindexstructure thatsup\u00ad\nportsnatural rnapqueries(e.g.,theR,-tree,\\vhichlnatches cOllclitions suchas\n\"Findrnealltheaters within100InilesofAndorra\"). (SeeChapter 28for1110re\nonIl-treesandotherspatialindexes.)\nOnevvaytornaketheset.ofindexstructures extensible istopublish ;:1,11ac\u00ad\nccs.snu~thod'interface thatletsusersirnplcrnent anindexstructure o'llts'idethe\nDEl\\;IS.'I'heindexanddatacanbestoredinafilesysteIllandtheDEl\\;ISsirnply\nissuestheopen,ne:l.:f,and Cl08(:~iterator requests totheuser'sexternal index\ncode.Suchfunctionality rnakesitpossible forausertoconnect aI)Bl\\1Sto\na\\Nebsearchengine,forexauII>le. Arnaindravvback ofthisapproach isthat\ndatainanexternal indexislI0tprotected l)ytIle])B1V1S'8 support forconcur\u00ad\nrencyandrec:over:y. 1\\nalterrlativf~ isforthe()llI)B1ilStoprovide ageneric\n'tenlphtte' irHlexstructure thatissufficientl:y generaltoencornpass rnostindex\nstructures thatusersrn.ight irlvent. Bec<luse snellastructure isil11plc~Jnented\nwithintheDBrvIS, itcansupport highconcurrency andrecovery. TheG1C't'1,(:T-", "833": "Object-\nDatabase8ystenLS 801\nalizedSleaTchTree(GiS'r)issuellastructure. Itisaternplate indexstructure\nba.':'edonB+trees,\\vhichaJlo\\vs IllOStofthetreeindexstructures invented so\nfartobeirnplernented'with onlyafewlinesofuser-definedAD'T' code.\n23.8.2QueryProcessing\n.A..DTsandstructured typescallforl1e\\vfunctionality inprocessing queries\nin()RDI-3I\\!ISs. rrheyalsochangeanurnber ofa..ssuruptions thataffectthe\nefficiency ofqueries. Inthissectionwelookattwofunctionality issues(u8er\u00ad\ndefinedaggregates andsecurity) andtwoefficiency issues(rnethod cachingand\npointerswizzling).\nUser-Defined Aggregation Functions\nSinceusersareallowedtodefinenewrnethods fortheirADTs,itisnotunrea\u00ad\nsonabletoexpecttherntowanttodefinenewaggregation fUllctions fortheir\nADTsaswell.Forexample, theusualSQLaggregates\u00b7\u00b7\u00b7\u00b7---CDUNT, SUM,MIN,\nMAX,AVG--are notparticularly appropriate fortheimagetypeintheDinky\nschema.\nMostORDBMSs allowuserstoregister newaggregation functions \\viththe\nsystern. Toregister anaggregation function, auserlnustiruplenlent three\nrnethods~ whichwecall'initiaIize, iterate,andterrninate. Thein'it'ial'ize rnethod\ninitializes theinternal statefortheaggregation. Theiteraternethod updates\nthatstateforeverytuple seen~\"vhiletheterrninate rnethod C0111putes theag\u00ad\ngregation resultbasedonthefinalstateandthencleansup.Asanexarnple,\nconsider anaggregation function tocornpute thesecond-highest valueina,field.\n1'heinit'ialize callwouldallocate storageforthetoptwovalues~the'iteratecall\nwould corupare thecurrenttuple'svaluewiththetoptwoandupdatethetop\ntwoasnecessary, andtheterrn'inate call\\voulddeletethestorageforthetop\ntwovalues~returning acopyofthesecond-highest value.\nMethodSecurity\nAIYTsgiveusersthepO\\\\'8rtoa,(1dcodetotheDBl'vlS; thispowercanbe\nabused. Abuggyorrnalicious ADTrnethod canbringdo\\vnthedatabase\nserveroreveilcorruptthedatabcL'Sc. TheDBNISlnusthavernechanisrns to\nprevent buggyorrnalicious usercodefrcHncausing probleIlls. It1nayrnake\nsensetooverricle thesernechanislIls forefficiency inproduction environrnents\nwithvendor-supplied rnethods. I-Io\\vever, itisirnportant forthernechanisrns to\nexist,ifonlytosupport delJugging ofJ\\DTrnethocls; othervvise rnethod \\vriters", "834": "802 CHAPTER ~3\n\\vouldhaveto\\vritebug-free codebeforeregistering theirrnethods withthe\nDBMS--not averyforgiving progralIuning environlnent.\n()nernechanisrn toprevent problerns istohavetheuserrnethods beintc11Jreted\nratherthancornp'iled. TheDBIv1Scancheckthatthernethod iswellbehaved\neitherbyrestricting thepoweroftheinterpreted language orbyensuring that\neachsteptakenbyarnethod issafebeforeexecuting it.Typicalinterpreted la.n\u00ad\nguagesforthispurpose includeJavaandtheprocedural portions ofSQL:1999.\nAnalternative rnechanislll istoallowusermethods tobecOlnpiled frorn a\ngeneral-purpose progranuning langllage~ suchasC++,buttorunthoserneth\u00ad\nodsinadifferent addressspacethantheDBMS.Inthiscase,theDBMSsends\nexplicit interprocess cOl1uIlunications (IPCs)totheuser rnethod~ whichsends\nIPCsbackinreturn.Thisapproach prevents bugsintheusermethods (e.g.,\nstraypointers) frorncorrupting thestateoftheDBNISordatabase andprevents\nrnalicious methods frornreadingorInodifying theDBMSstateordatabase as\nwell.Notethattheuserwritingthemethod neednotknowthattheDBMSis\nrunning themethod inaseparate process: Theusercodecanbelinkedwitha\n'wrapper' thatturnsmethod invocations andreturnvaluesintoIPCs.\nMethod Caching\nUser-defined ADTmethods canbeveryexpensive toexecuteandcanaccount\nforthebulkofthetimespentinprocessing aquery.Duringqueryprocessing,\nitmay11lakesensetocachetheresultsofmethods, incasetheyareinvoked\nlllultiple timeswiththesamearglunent. Withinthescopeofasinglequery,\nonecanavoidcallingaInethod twiceonduplicate valuesinacolurnnbyeither\nsortingthetableonthatcolulllnorusingaha,..'3h-ba'3ed scherneruuchlikethat\nusedforaggregation (seeSection 14.6).Analternative istornaintain acache\nofrnethod inputsandrnatching outputs asatableinthedatabase. Then,to\nfindthevalueofarnethod onparticular inputs,weessentially jointheinput\ntupleswiththecachetable.rrhesetwoapproaches canalsobecornbined.\nPointerSwizzling\nInsorneapplications, objectsareretrieved intornernory andaccessed frequently\nthrough theiroids;dereferencin.g rnustbeirnplcrnented very efficiently. 801ne\nsysterns rnaintain ata,hleofoidsofobjectsthatare(currently) inInenlOI'.Y.\n\\Vhenanobject()isIn'ought intonlCnlOl'jr, theycheckeachoidc~ontained\nin0andreplaceoidsofin-rrH~rnory objectsbyin-rncrl10ry point(~rs tothose\nobjects. 1'histechrlique, caJledpointer swizzling, nUl-kes referenc(~s toin\u00ad\nrnernory objects ver~y.fast.rfhedO\\7vnsicle istlHttvvhenanobjectispagedout,", "835": "()b.iect-Database 8ys/;clns\n2389OODBMS805t\nIntheintroduction ofthischapter, \\vedefinedanO()DB:NlS asaprogranlIning\nlanguage ''lithsupport forpersistent objects.vVhile thisdefinition reflectsthe\noriginsofOODB~1Ss accurately, andtoacertainextenttheirnplernentation\nfocusofOODBl\\'1Ss, thefactthatOODBl\\!ISs support collecl:'ion, type\"(see\nSection2:3.2.1)rnakesitpossible toprovide aquerylanguage overcollections.\nIndeed, astandard hasbeendeveloped bytheObjectDatabase l\\'lanagernent\nGroupandiscalledObjectQueryLanguage.\nOQLissirnilartoSQL,withaSELECT----FROM--HWHERE---style syntax(evenGROUP\nBY,HAVING, andORDER BYaresupported) andrnanyoftheproposed SC~L:1999\nextensions. Notably, OQLsupports structured types,including sets,bags,\narrays,andlists. 1~heOQLtreatrnent ofcollections isrnoreuniforlll than\nSQL:1999inthatitdoesnotgivespecialtreatrnent tocollections ofrows;\nforexalnple, ()QLallowstheaggregate operation COUNTtobeapplied toa\nlisttoC0111pute thelengthofthelist. O(~Lalsosupports reference types,\npathexpressions,ADrrs andinheritance, typeextents, andSQL-style nested\nqueries. 1'hereisalsoastandard DataDefinition Language forOODB1\\1Ss\n(Object DataLanguage, orODL)thatissirnilartotheDDLsubsetof\nSQLbutsupports theadditional features foundinOODBMSs, suchasADT\ndefinitions.\n23.9.1TheODMG\u00b7DataModelandODL\n'TheODl\\iIGdatarnodelisthebasisforanOODBl\\iIS, justliketherelational\ndata1nodelisthebasisforanIlDB1\\1S. Adatabase contains acollection ofob\u00ad\njects,whicharesirnilartoentitiesintheEllrnode!.Everyobjectha.saunique\naid,andadatabase contains collections ofobjectswithSilllilarproperties; such\nacollection iscalledaclass.\nTheproperties ofaclassarcspecified using()l)Landareofthreekinds:at\u00ad\ntributes, relationships, andrnethod8. _Attributes haveanatolnictypeora\nstructured t~ype.ODl.lsupports theset,bag,list,array,andstruct t,ype\nconstructors; thesearejustsetof,bagof,listof, ARRAY,andROWintheter\u00ad\nrninology ofSection2:3.2.1.\nR,elationships haveatypethatiseitherareference toanobjectoracollection\nofsuchreferences. Arelationship captures ho'vanobjectisrelatedtoone\norr1101'e obj(~cts ofthe8e1111('classorof;.1different clctss.j\\relationship in\nthe()IJIvIG- rnodelisreallyjust (1bincl,ryrelationship inthesenseoftheEI{\nInodel.Arela.tionship has ~lcorresponding inverse relationship; intuitively,\nitistherelationship 'intheotherclirection.' Forexarnple, ifaInovieisbeing", "836": "806 (jHAPTER 23\nClass==Interface+Implenlentation: Properly speaking, acla...,scon\u00ad\nsistsofaninterface together\\vith anirnpleluentation oftheinterface. An\nODLinterface definition isirnpleInel~ted inanOODBlYIS bytranslating it\nintodeclarations oftheobject-oriented language (e.g.,C\u00b7+\"+,Snlalltalk or\nJava)supported bytheOODBMS. IfV\\TeconsiderC++,forinstance, there\nisalibraryofcl<:1Ssesthatirnplcrnent theODLconstructs. Thereisalsoan\nObjectManipulation Language (OML) specifictotheprogramlning\nlanguage (inourexanlple, C++),whichspecifies howdatabase objectsj\naremanipulated intheprogralnnl.in g.language. rr.he.goalistoseamlessly\nintegrate theprograrnrning language andthedatabase features.\nshownatseveraltheaters andeachtheatershowsseveralrnovies,wehavetwo\nrelationships thatareinverses ofeachother:shownAt isassociated withthe\nclassofmoviesandisthesetoftheaters atwhichthegivenmovieisbeing\nshown,andnowShowing isassociated withtheclassoftheaters andistheset\nofrnoviesbeingshownatthattheater.\nMethods arefunctions thatcanbeappliedtoobjectsoftheclass. l~hereis\nnoanalogtomethods intheERorrelational models.\nThekeywordinterfaceisusedtodefineaclass.Foreachinterface, wecan\ndeclareanextent, whichisthenarneforthecurrentsetofobjectsofthat\nclass.Theextentisanalogous totheinstance ofarelation andtheinterface\nisanalogous tothescherna. Iftheuserdoesnotanticipate theneedtowork\nwiththesetofobjectsofagivenclass-it issufficient tomanipulate individual\nobjects--\u00b7\u00b7\u00b7the extentdeclaration canbeornitted.\nThefollowing ()DLdefinitions ofthelViovieandTheater cla,,'3sesillustrate these\nconcepts. (WhiletheseclassesbearS(Hneresernblance totheDinkydataba\",sc\nscherna, thereadershouldnotlookforanexactparallel, sincewehavernodified\ntheexarnple tohighlight ()DLfeatures.)\ninterfaceIv/lovie\n(extent IVlovieskeyrnovieNarne)\n{attribute datestart;\nattribute dateend;\nattribute stringrnovienarne;\nrelationship Set('fheater) shownAt inverse Theater::nowSho\\ving;\n}\n1~hecollection ofdataba ...'3cobjectswhosecla\"ssislVlovieiscalledlVIovies. No\ntwoobjectsinlVIovieshavethesarnernovieNarne value,asthekeydeclaration", "837": "()bject-.Database Systelns 8Q7\nindicates. Eachlnovieisshov,rnatasetoftheaters andisshownduringthe\nspecified period.(It\\vouldbernorerealistictoc'h'Ssoeiate adifferent periodwith\neachtheater, sincea1110vieistypically playedatdifferent theaters overdifferent\nperiods. Whilewecandefineaclassthatcaptures thisdetail,\\vehavechosen\nasirnplerdefinition forourdiscussion.) Atheaterisanobjectofcla.o;;;sTheater,\ndefined a.s:\ninterface Theater\n(extent Theaters keytheaterNarne)\n{attribute stringtheaterName;\nattribute stringaddress;\nattribute integer ticketPrice;\nrelationship Set(Movie) nowShowing inverse .lVlovie::shownAt;\nfloatnumshowingO raises(errorConntingMovies);\n}\nEachtheatershowsseveralmoviesandchargesthesameticketpriceforevery\nmovie.Observe thattheshownAt relationship ofMovieandthenowShowing\nrelationship ofTheater aredeclared tobeinverses ofeachother.Theater also\nhasalllethodnumshowing() thatcanbeappliedtoatheaterobjecttofindthe\nnumber ofmoviesbeingshownatthattheater.\nODLalsoallowsustospecifyinheritance hierarchies, asthefollowing class\ndefinition illustrates:\ninterfaceSpecialShow extends lVlovie\n(extent SpecialShows)\n{attribute integer I11axinnunAttendees;\nattribute stringbenefitCharity;\n}\nAnobjectofclassSpecialShow isanobjectofclassl\\1ovie,withSOI11eadditional\nproperties, asdiscussed inSection23.5.\n23.9.2OQL\nrIheODlV1G querylanguage O(~Lwasdeliberately designed tohavesyntax\nsirnilartoS(~Ltornakeiteasyforusersfalniliar with S(~Ltolearn()QL.Let\nusbegin'withaquerythatfindspairsofInoviesandtheaters suchthatthe\nrnovieissho\\vnatthetheaterandthetheaterisshowing lHorethanonernovie:\nSELECT Innarne: lVLrnovieNarn(\\ tnaIne:I'.theaterNarne", "838": "808\nFROM\nWHERElViovies lV1,lVLsho\\vnAt T\nT.nurllshowing() >1(~IIAPTER ~:3\nTheSELECT clauseindicates how\\vecangiveIlalllestofieldsintheresult:\nThet\\VOresultfieldsarecalledrnnarneand tnarr~e.Thepartofthisquerythat\ndiffersfrorn S(~ListheFROMclause.Thevariable 1\\/[isboundinturntoeach\nrnovieintheextentl\\lovies. ForagivenrnovieAi,webindthevariable Tin\nturntoeachtheaterinthecollection lv1.shownAt.Thus,theuseofthepath\nexpression lvi.shownAtallowsustoeasilyexpressanestedquery.Thefollo'Vving\nqueryillustrates thegrouping construct inOQL:\nSELECT\nFROM\nGROUPBYT.ticketPrice,\navgNurn: AVG(SELECT P.T.nurnshowingO FROMpartition P)\nl'heatersl'\nT.ticketPrice\nForeachticketprice,wecreateagroupoftheaters withthatticketprice.\nThisgroupoftheaters isthepartition forthatticketprice,referred tousing\ntheOQLkeyword partition. IntheSELECT clause,foreachticketprice,\nwecornpute theaverage nunlber ofrnoviesshownattheaters inthepartition\nforthatticketPrice. OQLsupports aninteresting variation ofthegrouping\noperation thatismissinginSQL:\nSELECT\nFROM\nGROUPBYlow,high,\navgNllln: AVG(SELECT P.T.nurnshowingO FROMpartition P)\nTheaters T\nlow:T.ticketPrice <5,high:rr.ticketPrice >:::::5\nTheGROUPBYclausenowcreatesjusttwopartitions calledlowandhigh.Each\ntheaterobjectTisplacedinoneofthesepartitions bEksedonitsticketprice.In\ntheSELECT clause,lo'wandhighareboolean variables, exactlyoneofwhichis\ntrueinanygivenoutputtuple;partition isinstantiated tothecorresponding\npartition oftheaterobjects. Inourexarnple, 'Vvegett\\VOresulttuples.()neof\nthernhaslOll)equaltotrueandavgNuTn equaltotheaveragenurnberofrnovies\nshownattheaters \\vithalowticketprice.ThesecondtuplehEkshighequalto\ntruea\"ndavgNuTn equaltotheaverage nurnber ofInoviesshownattheaters\nwithahighticketprice.\nThenextqueryillustrates ()(~Lsupport forqueriesthatreturncollections other\nthansetandrnultiset:\n(SELECT rr.theaterNarne\nFROM Theaters 'T\nORDERBYT.ticketPrice DESC)[0:4]", "839": "()bject-.lJatabasc SYS'tCTflS 8U9\nTheORDER BYclausenU1,kestheresultalistoftheaternaInesorderedbyticket\nprice. l'\"1heclcrnents ofalistcanbereferred tobyposition, starting \\vith\nposition O.Therefore, theexpression [0:4]extracts alistcontaining thenaInes\nofthefivetheaters \\viththehighestticketprices.\nOC~Lalsosupports DISTINCT, HAVING, explicitnestingofsubqueries, vie'\\.\\Tdef\u00ad\ninitions, andotherSQLfeatures.\n23.10COMPARING RDBMS, OODBMS, ANDORDBMS\nNowthatwehavecoveredthelnainobject-oriented DBMSextensions, itis\ntirnetoconsider thetwolnainvariants of\nobject-datab&'Ses, OODBlVlSs and\nORDBJVISs, andcornpare thernwithRDBMSs. Although wepresented thecon\u00ad\nceptsunderlying object-databases, westillneedtodefinethetennsOODBMS\nandOR,DBMS.\nAnORDBMS isarelational DBl\\1Swiththeextensions discussed inthis\nchapter. (NotallORDBMS systerlls support alltheextensions inthegen\u00ad\neralforrnthatwehavediscussed theIn,butourconcern inthissectionisthe\nparadigrll itselfratherthanspecificsystenls.) AnOODBMS isaprogranl\u00ad\nrninglanguage withatypesysterntha..tsupports theft~atures discussed inthis\nchapterandallowsanydataobjecttobepersistent; thatis,tosurviveacross\ndifferent prograrn\n ex(~cutions.Many currentsysterns conform toneitherdefi\u00ad\nnitionentirelybutarelIluchclosertooneortheotherandcanbeclassified\naccordingly.\n23.10.1 RDBMS versusORDBMS\nCOlllparing anllDBlvlS withanOI{DBMS isstraightforward. AnR,DBl\\1S does\nnotsupport theextensions discussed inthischapter. rrheresulting sirnplicity\nofthedatarnodelrnakesiteasiertooptirnize queriesforeHicient execution~\nforexanlple. Arelational systernisalsoeasiertousebecause therearefe-weI'\nfeatures toIlla,ster.()ntheotherhand,itislessversatile thanan()HJ)BiviS.\n23.10.2 OODBMS versusORDBMS: Similarities\nOODB1VlSs and()HI)BJVISs bothsupport user-defined ADTs,structured types,\nol)jectidentity andreference types,andinheritance. Bothsupport acpler,)l\nlanguage forrnanipulating collection types.()RDBlVlSs support anextended\nfonnofS(~L,and001)131\\118ssupport C)I}L/O(~L. Thesirnilarities arebyno\nrneansaccidental ()llDBl\\1Ss consciously trytoadd()()DBlVfS features toan\nRI)B1\\118 ,and ()()DB~'1Ss inturnhavedeveloped querylanguages basedon", "840": "810 CHAPTER 2~3\nrelational querylanguages. BothOODBIvISs andOR,DBIvlSs provide DBNIS\nfunctionality suchasconcurrency controlandrecoverv.\nii, to,- ~$\n23.10.3 OODBMS versusORDBMS: Differences\nThefundaulental difference isreallyaphilosophy thatiscarriedalltheway\nthrough: OODBMSs trytoaddDBIvlSfunctionality toaprogranllning lan\u00ad\nguage,wherca'3 ORDBIvlSs trytoaddricherdatatypestoarelational DBlVIS.\nAlthough thetwokindsofobject-databases areconverging interrnsoffunc\u00ad\ntionality, thisdifference intheirunderlying philosophy (andformostsysteIns,\ntheirirnplementation approach) hasiInportant consequences interIllSofthe\nissuesemphasized inthedesignoftheseDBJVISsandtheefficiency withwhich\nvariousfeatures aresupported, asthefollowing comparison indicates:\nIIOODBMSs airntoachieveseamless integration withaprogramrning lan\u00ad\nguagesuchasC++,Java,orSmalltalk. Suchintegration isnotanim\u00ad\nportantgoalforanORDBMS. SQL:1999, likeSQL-92, allowsustoembed\nSQLcommands inahostlanguage, buttheinterface isveryevidenttothe\nSQLprogramer. (SQL:1999 alsoprovides extended prograrnming language\nconstructs ofitsown,aswesawinChapter 6.)\nIIAnOODBMS isaimedatapplications whereanobject-centric viewpoint\nisappropriate; thatis,typicalusersessions consistofretrieving afew\nobjectsandworking ontheHlforlongperiods, withrelatedobjects(e.g.,\nobjectsreferenced bytheoriginal objects) fetchedoccasionally. Objects\nrnaybeextrelnely largeandrnayhavetobefetchedinpieces;therefore,\nattention Inustbepaidtobuffering partsofobjects. Itisexpected that\nrnostapplications cancachetheobjectstheyrequireinrnemory, oncethe\nobjectsareretrieved froIndisk.rrherefore, considerable attention ispaidto\nrnakingreferences toill-lnernory objectsefficient. Tl'ansactions arelikelyto\nbeofverylongduration andholdinglocksuntiltheendofatransaction Inay\nleadtopoorperfonnance; therefore, alternatives toTwo-PhaseLocking\nHUlstbeused.\nAnOR,DBlVfS isoptirnized forc1pplications inwhichlargedatacollections\narethefocus,eventhoughobjectsrnayhaverichstructure andbefairly\nlarge.Itisexpected thatapplications willretrieve datafrorndiskex\u00ad\ntensively andoptirnizing diskaccessisstillthernainconcern forefficient\nexecution. Tl'a,nsactions areassurned toberelatively shortandtraditional\nR.DB1VIS techniques aretypically usedforconcurrency controlandrecovery.\niiiT'hequeryfacilities of()(lLarenotsupported efficiently in rnostO()DBlVfSs,\n\\vhereas thequeryfacilities arethecenterpiece ofan()HI)Bl\\1S. Toscnne\nextent,thissituation istheresultofdifferent concentrations ofeffortin\nthecleveloprnent ofthesesysterns. '1'0asigrlificant (~xtentiitisalsoa", "841": "Object-Database SY8terns 81).\nconsequence ofthesysterlls' beingoptirnized. forverydifferent kindsof\napplications.\n23.11REVIEW QUESTIONS\nAnsvvers tothereviewquestions canbefoundinthelistedsections.\n..Consider theextended Dinkyexarnple frornSection 23.1.Explain how\nitlllotivates theneedforeachofthefollowing object-database features:\n'User-defined struct'Ured types,abstract datatypes(ADTs),inheritance, and\nobjectidentity. (Section 23.1)\n..Whatarestructured datatypes?Whatarecollection types,inparticular?\nDiscusstheextenttowhichtheseconcepts aresupported inSQL:1999.\nWhatirnportant typeconstructors arelllissing? Whatarethelimitations\nontheROWand ARRAYconstructors? (Section 23.2)\n..Whatkindsofoperations shouldbeprovided foreachofthestructured\ndatatypes?Towhatextentissuchsupport included inSQL:1999? (Sec\u00ad\ntion23.3)\n..Whatisanabstract datatype?Howarenlethods ofanabstract datatype\ndefinedinanexternal programnling language? (Section 23.4)\n..Explain inheritance andhownewtypes(calledsubtypes) extendexisting\ntypes(calledsupertypes). Whatarernethodoverloading andlateb'inding?\nWhatisacollect'ion hieruTchy? Contrast thiswithinheritance inprograrn\u00ad\nIninglanguages. (Section 23.5)\nI!III-Iowisanobjectidentifier (aid)different frolnarecordidinarelational\nDElVIS? Howisitdifferent froInaURI./?\\iVhatisareference type?De\u00ad\nfinedeepandshallowequalit,y andillustrate thernthrough anexarnple.\n(Section 23.6)\nII'Thernultitude ofdatatypesinan(}H.DBlVIS allcnvsustodesignarnorenat\u00ad\nuralandefficient databa\"se schcrnabutintroduces S(Hnenev.,rdesignchoices.\nI)iscussOHJ)BJ\\.{S database designissuesandillustrate yourdiscussion us\u00ad\ninganexalnple application. (Section 23.7)\n11IIIIrnplernenting an()11I)B1rfS bringsnewchallenges. Thesystcrllrnuststore\nlargeADTsandstructured typesthatrnightbeverylarge.Efficient and\nextensible indexrnechanisrns lIlUStbeprovided. Exarnples ofnc\\vfunc\u00ad\ntionality include 'u,8cr-def\u00a3ned aggregation ./1lnct'ions (wecandefinenc\\v\naggrega,tion, functions forourAI)Ts)andrnethodsecurity (thesystcrIl\nhastoprevent user-defined rnethods fronlcornprornising thesecurity of\nthe,DB~'IS). ExarIlples ofnc\\vtechniques toincrease perfonnance include", "842": "812 Cl:IAPTER ~3\n1nethod cachi'llgandpointeT 871J'izzling. 'Theoptirnizer mustknowabout\nthel1e\\vfunctionality anduseitappropriately. Illustrate eachofthese\nchallenges through anexarnple. (Section 23.8)\nIICornp<u'e OODBIvISs Vvith ()R,DB~1Ss. Inparticular, cornpare OQLand\nSQL:1999 anddiscusstheunderlying datarnode!.(Sections 23.9and\n23.10)\nEXERCISES\nExercise 23.1Brieflyanswerthefollowing questions:\n1.Whatarethenewkindsofdatatypessupported inobject-database systcrIls? Givean\nexarnple ofeachanddiscusshowtheexanlple situation wouldbehandled ifonlyan\nRDBl'v1S wereavailable.\n2.WhatrIlustauserdotodefineanewADT?\n3.Allowing userstodefinerIlethods canleadtoefficiency gains.Giveanexarnple.\n4.\\\\Thatislatebinding ofnlCthods? Giveanexarnple ofinheritance thatillustrates the\nneedfordynamic binding.\n5.Whatarecollection hierarchies? GiveanexalIlple thatillustrates howcollection hierar-\nchiesfacilitate querying.\n6.Discuss howaDBNISexploits encapsulation inilnplernenting support forADTs.\n7.Giveanexarnple illustrating thenestingandunnesting operations.\n8.Describe twoobjectsthataredeepequalbutnotshallow equalorexplainwhythisis\nnotpossible.\n9.Describe twoobjectsthatareshallow equalbutnotdeepequalorexplain whythisis\nnotpossible.\n10.COlnpare RDBNISs withORDBlVISs. Describe anapplication scenario forwhichyou\nwouldchooseanRDB11S andexplain why.Silnilarly, describe anapplication scenario\nforwhichyouwouldchooseanORDBl\\t1S andexplain why.\nExercise 23.2Consider theDinkyschclna showninFigure23.1andallrelatedlncthocls\ndefinedinthechapter. \\\\Tritethefollowing queriesinSQI...:1999:\n1.Howluanyfilrnswereshm,vnattheatertno=5between January 1andFebruary 1of\n2002'1\n2.\\VhatisthelowestbudgetforafilnlwithatleaBtt\\vostars?\n:3.Consider theaters (Itwhichafihudirected byStevenSpielberg startedshowing onJan\u00ad\nuary1,2002.Foreachsuchtheater, printthenarnesofallcountries withina100-ruile\nradius.(Youcanusetheo'ucrlapandnuliusrnethods illustrated inFigure2:3.2.)\nExercise 23.3Inacornpany database, youneedtostoreinforrnation aboutclnployees, de\u00ad\npartrnents, andchildren oferIlployees. Foreachernployec, identified byssn,yournustrecord\nyears(thenumber ofyearsthattheernployee h(;1.\"workedforthecornpany), phone,andphoto\ninforrnation. Therearetwosubclasses ofernployees: contract andregular. Salaryiscoru\u00ad\nputedbyinvoking arnethod thattakesyear8asapararneter; thisrnethod ha.sadifferent", "843": "()b:ject-Database SY8te'tns 813\n~\nirnplernentation foreachsubclass. Further, foreachregularenlployee, youIl1UStrecordthe\nIHuneandageofeverychild.l'hernostconunon queries involving children aresirnilarto\n\"Findtheaverage a.geof1301/5children\" and:'Print thenarnesofallofBob'schildren.\"\nAphotoisalargeinmgeobjectandcallbestoredinoneofseveralirnagefonnats (e.g.,\ngif,jpeg).Youwanttodefineadisplayrnethod foriUlageobjects; display IIlustbedefined\ndifferently foreachirnagefonnat. 'Foreachdepartlllcnt, identified bydno,yournustrecord\ndnmne, budget,andWOTkET8 infonnation. Hf(wkc'T'8 isthesetofcrllployees whoworkina\ngivendepartrnent. Typical querie.sinvolving workers include, \"Findtheaverage salaryofall\nworkers (acrossalldepartrnents).\"\n1.Usingextended SQL,designanORDBIVIS scherna forthecornpany databa\"se. Showall\ntypedefinitions, including rnethod definitions.\n2.Ifyouhavetostorethisinfonnation inanRDBl\\'1S, whatisthebestpossible design?\n3.Cornpare theORDBrvIS andRDBIVIS designs.\n4.IfyouaretoldthataCOlllInon request istodisplaytheirnagesofallemployees inagiven\ndepartruent, howwouldyouusethisinforulation forphysical database design?\n5.Ifyouaretoldthatanernployee's ilnagernustbedisplayed whenever anyinformation\nabouttheemployee isretrieved, wouldthisaffectyourscherna design?\n6.IfyouaretoldthataCOU1Inon queryistofindallerTlployees wholooksirnilartoagiven\nimageandgivencodethatletsyoucreateanindexoverallirnagestosupport retrieval\nofsinlilariuulges,whatwouldyoudotoutilizethiscodeinanOR.DBMS?\nExercise 23.4ORDBMSs needtosupport efficient accessovercollection hierarchies. Con\u00ad\nsiderthecollection hierarchy ofTheaters andTheater-cafes presented intheDinkyexanlple.\nInyourroleasaDBMSilllplernentor (notaDBA),yournustevaluate threestoragealterna\u00ad\ntivesforthesetuples:\nIIAlltuplesforallkindsoftheaters arestoredtogether alldiskinanarbitrary order.\nIIAlltuplesforallkindsoftheaters arestoredtogether ondisk,withthetuplesthatare\nfrOIIlTheateLcafes storeddirectly afterthelastofthenon-cafe tuples.\nIIIT'uplesfroIllTheater _cafesarestoredseparately froIlltherestofthe(non-cafe) theater\ntuples.\n1.F'oreachstorage option, describe arnechanisrn fordistinguishing plaintheater tuples\nfrornTheater_cafe tuples.\n2.Foreachstorageoption,describe hmvtohandletheinsertion ofanewnon-cafe tuple.\n~i.\\\\Thichstorage optionis1110Stefficient forqueries overalltheaters? Overjustr1'he\u00ad\nateLcafes? Interrnsofthenurnber of1/Os,howrnuchrnoreefficient isthebesttechnique\nforeachtypeofquerycornpared totheothertwotechniques?\nExercise 23.5Different ORDBl\\!ISs usedifferent techniques forbuilding indexestoevaluate\nqueriesovercollection hierarchies. ForourDink:y'exarnple, toindextheaters bynamethere\naretwoCOIIlIIlon options:\nIIIBuildone13+treeindexoverTheaters.narne andanother 13+treeindexover'1'he\u00b7\u00b7\nater_caJes. narne.\nIIBuildoneB+treeindexovertheunionofI'heaters. TwrneandTheater __cafes.nayne.", "844": "814 CHAPTER 243\n1.Describe howtoeffic.iently evaluate thefollowing queryusingeachindexing option(this\nqueryisoveraUkindsoftheatertuples):\nSELECT*FROMTheaters TWHERET.narne= 'tvlajestic'\nGiveanestiInate ofthenurnber ofl/Osrequired inthetwodifferent scenarios, assurning\nthereare1rnillionstandard theaters and1000theater-cafes. \\V\"hichoptionisInore\nefficient?\n2.Perforrn thesaIlIeanalysis overthefollowing query:\nSELECT *FROMTheater-cafes 'I'WHERET.nalne='1vIajestic'\n3.Forclustered indexes, doesthechoiceofindexing technique interact withthechoiceof\nstorageoptions? Forunclustered indexes?\nExercise 23.6Consider thefollowing query:\nSELECT thurnbnail(Lirnage)\nFROM lInagesI\nGiventhatthe1.imagecolurnn 111aycontainduplicate values,describe howtousehashing to\navoidconlputing thethum,bnail function rnorethanonceperdistinct valueinprocessing this\nquery.\nExercise 23.7Youaregivenatwo-dimensional, nxnarrayofobjects. Assume thatyou\ncanfit100objectsonadiskpage.Describe awaytolayout(chunk)thearrayontopagesso\nthatretrievals ofsquarem x msubregions ofthearrayareefficient. (Different queriesrequest\nsubregions ofdifferent sizes,i.e.,different mvalues,andyourarrangement ofthearrayonto\npagesshouldprovide goodperforrnance, onaverage, forallsuchqueries.)\nExercise 23.8AnORDBJ\\;IS optiruizer isgivenasingle-table querywithnexpensive selec\u00ad\ntionconditions, (Tn(...((71(T))).Foreachcondition (7i,theoptirnizer canestinlate thecostC\\\nofevaluating thecondition onatupleandthereduction factorofthecondition Ti.Assurne\nthattherearettuplesinT.\n1.Howmanytuplesappearintheoutputofthisquery?\n2.Assurning thatthequeryisevaluated a,sshown(without reordering selections), what\nisthetotalcostofthequery? Besuretoincludethecostofscanning thetableand\napplying theselections.\n:3.InSection 2~3.8.2,itwasasserted thattheoptiruizer shouldreorder selections sothat\ntheyareapplied tothetableillorderofincreasing rank,whereranki=(Ti~...1)/Ci.\nProvethatthisassertion isoptirual. 'TIHltis,8ho\\'/thatnootherordering couldresultin\naqueryoflowercost.(Hint:Itmaybeea...-.,iesttoconsider thespeciaJca.sewheren=2\nfirstandgeneralize fromthere.)\nExercise 23.9ORDBIVlSs support references asadatatype.Itisoftenclailnecl thatusing\nreferences insteadofke)lforeign keyrelationships willgivernuchhigherperfonnance forjoins.\n'T'hisCllwstion asksyoutoexplorethisissue.\nIIIConsider thefollmving SQL:1999DDL\\vhichonlyusesstraight relational constructs:\nCREATE TABLER(rkeyinteger, r'datatext);\nCREATE TABLES(skeyinteger, rfkeyinteger);", "845": "()~ject-DatabasE Syste'rns\nAssurnethatwehavethefollowing straightforward joinquery:\nSELECT S.skey,H..relata\nFRO?-1S,R\nWHERE S.rfkey=R.rkey\nIINowconsider thefollowing SQL:1999 ORDBIvIS schelna:\nCREATE TYPEr_tASROW(1'key integer, rdatatext);\nCREATE TABLEROFr_tREFisSYSTEM GENERATED;\nCREATE TABLES(skeyinteger, rREF(r_t)SCOPER);\nAssurne wehavethefollowing query:\nSELECT S.skey,S.r.rkey\nFROMS81~\nWhatalgorithrll wouldyousuggesttoevaluate thepointerjoinintheORDBMS scherna?\nHowdoyouthinkitwillperform versusarelational joinontheprevious scherna?\nExercise 23.1.0Ivlanyobject-relational systerns support set-valued attributes usingsome\nvariantofthesetofconstructor. ForeXaInple, assurning wehaveatypeperson_t, wecould\nhavecreatedthetableFilrnsintheDinkySchema inFigure23.1asfollows:\nCREATE TABLEFilms(filrnno integer, titletext,star'ssetofPerson);\n1.Describe twowaysofirnpleIIlenting set-valued attributes. Onewayrequires variable\u00ad\nlengthrecords, evenifthesetelements areallfixed-length.\n2.Discusstheirnpactofthetwostrategies onoptimizing querieswithset-valued attributes.\n3.Suppose youwouldliketocreateanindexonthecolumnstarsinordertolookupfilrns\nbythenarneofthestarthathasstarredinthefilIIl.Forbothirnplenlentation strategies,\ndiscussalternative indexstructures thatcouldhelpspeedupthisquery.\n4.Whattypesofstatistics shouldthequeryoptirnizer rnaintain forset-valued attributes?\nHowdoweobtainthesestatistics'?\nBIBLIOGRAPHIC NOTES\nAnurnber oftheobject-oriented features described herearebasedinpartonfairlyoldidea\")\nintheprograrnrning langui:tges cornrnunity. [42]provides agoodoverview oftheseideasin\nadatabase context. Stonebraker's book[719Jdescribes thevisionofOHDB:NISs ernbodied\nbyhiscompany's earlyproduct, Illustra (nowaproduct ofInforrnix). Current connnercial\nDBJ\\lSs ,vithobject-relational support includeInfonnix Universc.l! Server, U3I\"v'lD13/2CSV2,\nandUniSQL. AnnewversionofOracleisscheduled toincludeOHJ)BrvlS features a,,'3well.\nIvL:rnyoftheidc..lsincurrentobject-relational systerlls carneoutofi:l,fewprototypes builtin\nthe19808,especially POS'I'(jRES [72:3],Starburst (::351],and02[218].\nTheicleaofanobject-oriented dataJ)c1\".se wa.sfirstarticulated in[197],\\vhichdescribed the\nGernStone prototype system. Otherprototypes includeDASDBS [G57],EXODlTS [1:30],nus\n[27:,3],Ol:>jectStore [4G:3],ODE,[18]ORION [4::'32),SHOH.,E [1291,and'rl-IOH[482].02is\nactually anearlyexarnple ofa,systenlthat,vasbeginning tornergethethcrnesofORDBrvISs", "846": "816 (;HAPTER \u00b7~3\nandOODBivISs ~itcouldfitinthislistaswell.[41]listsacollectioll offeatures thataTe\ngenerally considered tobelonginan00DB1\\18. Current cornrnercially available OODBIVISs\ninclude GelllStone, Itasca,02,Objectivity, ObjectStore, Ontos,Poet,andVersant. [4:31J\ncornpares OODBIvISs andRDBivISs.\nDatabase support forADTswasfirstexplored intheINGRES andPOSTGRES projects\natU.C.Berkeley. rrhebasicideasaredescribed in[716]'including Inechanisllls forquery\nprocessing andoptilnization withADTsaswellasextensible indexing. Support forADTs\n\\vasalsoinvestigated intheDannstadt database systern, [480].UsingthePOSTGRES index\nextensibility correctly required intiInate knowledge ofDBTvIS-internal transaction ruechanisllls.\nGeneralized searchtreeswereproposed tosolvethisproblern; theyaredescribed in(376],with\nconcurrency andARIES-based recovery detailspresented in[L147].[672]proposes thatusers\nlnustbeallowedtodefineoperators overADTobjectsandproperties oftheseoperators that\ncanbeutilizedforqueryoptiInization, ratherthanjustacollection oflnethods.\nArraychunking isdescribed in(653].Techniques forluethod cachingandoptimizing queries\nwithexpensive lnethods arepresented in[37:3,165].Client-side datacachinginaclient-server\n00D131\\I1S isstudied in[283].Clustering ofobjectsondiskisstudied in[741].Workon\nnestedrelations wasanearlyprecursor ofrecentresearch oncomplex objectsinOOD13rvlSs\nandORD13IvISs. Oneofthefirstnestedrelation proposals is(504].rvlVDsplayaninlportant\nroleinreasoning aboutreduncancy innestedrelations; see,forexalnple, [579].Storage\nstructures fornestedrelations werestudied in(215].\nFonnalrnodelsandquerylanguages forobject-oriented databases havebeenwidelystudied;\npapersinclude[4,56,75,125,391,392,428,578,724].[427]proposes SQLextensions for\nquerying object-oriented databases. Anearlyandelegantextension ofSQLwithpathexpres\u00ad\nsionsandinheritance wasdeveloped inGElY![791].TherehasbeenITluchinterestincornbining\ndeductive andobject-oriented features. Papersinthisareainclude(44,288,,195,556,706,793].\nSee[3]forathorough textbookdiscussion offonnalaspectsofobject-orientation andquery\nlanguages.\n[4~i2~, 4~)5,721,796]includepapersonD13l'vISs that\\vouldnowbetennedobject-relational\na\"ndjorobject-oriented. [794]contains adetailed overview ofschernaanddatabase evolution\ninobject-oriented database systenls. Athorough presentation ofSQL:1999canbefoundin\n[525),andadvanced features, including theobjectextensions, arecovered in[523].Ashort\nsurveyofnewSQL:1999 features canbefoundin[2:37].Theincorporation ofseveralSQL:1999\nfeatures intoI131v1D132isdescribed in[128J.OQLisdescribed in[141].Itisbasedtoalarge\nextentonthe02querylanguage, whichisdescribed, together withothera..'3pectsof02,in\nthecollection ofpapers[55].", "847": "24\nDEDUCTIVE DATABASES\n..Whatisthenlotivation forextending SQLwithrecursive queries?\n..Whatimportant properties mustrecursive programs satisfytobe\npractical?\n..Whatareleastlnodelsandleastfixpoints andhowdotheyprovidea\ntheoretical foundation forrecursive queries?\n..WhatcOlnplications areintroduced bynegation andaggregate opera\u00ad\ntions?Howaretheyaddressed?\n..Whatarethechallenges inefficient evaluation ofrecursive queries?\n..Keyconcepts: Datalog, deductive databases, recursion, rules,in\u00ad\nfeI'ences, safety,range-restriction; leastmodel,declarative seman\u00ad\ntics;leastfixpoint, operational semantics, fixpoint operator; negation,\nstratified program.s; aggregate operators, rnultiset generation, group\u00ad\ning;efficient evaluation, avoiding repeated inferences, Seminaive fix\u00ad\npointevaluation; pushing queryselections, lVlagicSetsrewriting\nFor'Is'and'Is-Not'thoughwithRuleandLine,\nAnd'lJp-and-l)own' byLogicIdefine,\nOfallthatoneshouldcaretofathorn, I\nvVa.sneverdeepinanything but-------\\Vine .\n..-Rubaiyat of()rnar!(hayyarn, Translated byEdward Fitzgerald\nllelational database rnanagernent systenls havebeenenonnously successful for\nC),chninistrative da,taprocessing. Inrecentyears,ho-wever, aspeoplehavetriedto\n817", "848": "818 Cl:IAPTER 24\nusedatabase systerus inincreasingly cornplex applications, someirnportant linl\u00ad\nitations ofthesesystellls havebeenexposed. Forsonleapplications, thequery\nlanguage andconstraint definition capabilities havebeenfoundinadequate. As\nanexarnple, sonlecornpanies ulaintain ahugepartsinventory database and\nfrequently wanttoaskquestions suchas,\"Are'werunning Iowananyparts\nneededtobuildaZX600sportscar?\"or\"Whatisthetotalcornponent and\nassernbly costtobuildaZX600attoday'spartprices?\" Thesequeriescannot\nbeexpressed inSQL-92.\nvVebeginthischapterbydiscussing queriesthatcannotbeexpressed inrela\u00ad\ntionalalgebraorSQLandpresentarnorepowerful relational language called\nDatalog. QueriesandviewsinSQLcanbeunderstood asif~then rules:\"If\nsometuplesexistintablesmentioned intheFROMclausethatsatisfythecondi\u00ad\ntionslistedintheWHEREclause,thenthetupledescribed intheSELECT clause\nisincluded intheanswer.\" Datalog definitions retainthisif-thenreading, with\nthesignificant newfeaturethatdefinitions canberecursive, thatis,atable\ncanbedefinedintermsofitself.TheSQL:1999 standard, thesuccessor to\ntheSQL-92standard, requiressupport forrecursive queries,andalargesubset\nS0111esysterlls, notablyIBM'sDB2DBMS,alreadysupport thelu.\nEvaluating Datalog queriesposessomeadditional challenges, beyondthoseen\u00ad\ncountered inevaluating relational algebraqueries,andwediscusssonleiUlpor\u00ad\ntantilnplernentation andoptimization techniques developed toaddress these\nchallenges. Interestingly, someofthesetechniques havebeenfoundtoirnprove\nperforrnance ofevennonrecursive SQLqueriesandhavetherefore beenimple\u00ad\nrnentedinseveralcurrentrelational DBMSproducts.\nInSection24.1,weintroduce recursive queriesandDatalog notation through\nanexaruple. Wepresentthetheoretical foundations forrecursive queries, lea..'St\nfixpoints andleastrnodels, inSection24.2.Wediscussqueriesthatinvolvethe\nuseofnegation orset-difference inSection24.3.Finally,weconsider techniques\nforevaluating recursive queries efficientl~y inSection24.5.\n24.1INTR()DUCTION TORECURSIVE QUERIES\n\\i\\rebeginwithasinlpleexaJnple thatillustrates theli111itsofS(~L-92 queries\ncUldthepowerofrecursive definitions. LetAssernbly bearelation \\viththree\nfieldspart, 8'ubpart,andqty.Anexcunple instance ofAssernbly isshc)\\vnin\nFigure24.1.EachtupleinAssernbly indicates IH}wInanycopiesofaparticular\nsubpart areCOlltained inagivenpart.Thefirsttupleindicates, forexarnple,\nthat (1,trikecontains three\"wheels.'}'heAssclnbly relation canbevisuaJized a,s\natree,assho\\vninFigure24.2.A.tupleisshovvnasanedgegoingfrornthe\nparttothesubpaJ\"t, withtheqtyvalueastheedgelabel.", "849": "Ded'Uct'iveD atabases 819\nJ;\npedal tireseat\n~\ntube nmtrike\n~#- \u2022wheel frame\nA\nA\nspoketrike\\vheel 3\ntrikefralne 1\nfrarneseat 1\nfranlepedal 1\nwheelspoke 2._..__..__.._--\n\\vheeltire 1\ntirerun 1\ntiretube 1\nFigure 24.1AnInstance ofAssembly Figure 24.2Assembly Instance SeenasaTree\nAnaturalquestion toaskis,\"Whatarethecornponents ofatrike?\"Rather\nsurprisingly, thisqueryisinlpossible towriteinSQL-92. Ofcourse,ifwe\nlookatagiveninstance oftheAssernbly relation, wecanwritea'query'that\ntakestheunionofthepartsthatareusedinatrike.Butsuchaqueryis\nnotinteresting---we wantaquerythatidentifies allcomponents ofatrikefor\nanyinstance ofAssembly, andsuchaquerycannotbewritten inrelational\nalgebraorinSQL-92. Intuitively, theproblem isthatweareforcedtojointhe\nAsselnbly relation withitselftorecognize thattrikecontains spokeandtire,\nthatis,togooneleveldowntheAssenlbly tree.Foreachadditional level,we\nneedanadditional join;twojoinsareneededtorecognize thattrikecontains\nrim,whichisasubpart oftire.Thus,thentullber ofjoinsneededtoidentify\nallsubparts oftrikedepends ontheheightoftheAssen1bly tree,thatis,on\nthegiveninstance oftheAssembly relation. Norelational algebraqueryworks\nforallinstances; givenanyquery,wecanconstruct aninstance whoseheightis\ngreaterthanthenurnber ofjoinsinthequery.\n24.1.1Datalog\nWenowdefinearelation calledCornponents thatidentifies thecOlnponents of\neverypart.Consider thefollowing program, orcollection ofrules:\nComponents (Part,SUbpart) \"\u00ad\nComponents (Part,Subpart) .-Assembly (Part,SUbpart, Qty)\"\nAssembly (Part,Part2, Qty),\nComponents (Part2,Subpart)\"\nTheseaxerulesinDatalog, arelational querylanguage inspired byProlog,the\n\\vell-known logicprogranuning language; indeed,thenotation followsProlog.\nThefirstruleshouldbereadasfollo\\vs:\nForallvaluesofPart,Subpart, and (~ty,", "850": "820 CHAPTER 24 $\nifthereisatuple(Part,Subpart, (~ty)inAssclnbly,\nthenthereIJlUStbeatuple(Part,Subpart) in(;olnponents.\nrThesecondruleshouldbereadasfollovols:\nForallvaluesofPart,Part2,Subpart, a.ndQty,\nifthereisatuple(Part,Part2,Qty)inAssernbly and\natuple(Part2,Subpart) inComponents,\nthenthereHUlstbea,tuple(Part,Subpart) inC()lnponents.\nTheparttotherightofthe:-sYlnboliscalledthebodyoftherule,and\ntheparttotheleftiscalledtheheadoftherule.Thesyrnbol :-denotes\nlogicalirnplication; ifthetupleslIlentioned inthebodyexistinthedatabase,\nitisirnpliedthatthetuplernentioned intheheadoftherulernustalsobe\ninthedatabase. (Notethatthebodycouldbeernpty;inthiscase,thetuple\nrnentioned intheheadoftherule rnust beincluded inthedatabase.) 1'herefore,\nifwearegivenasetofAssenlbly andCornponents tuples,eachrulecanbe\nusedtoinfer,ordeduce, sornenewtuplesthatbelonginCOlnponents. This\niswhydatabase systernsthatsupport Datalog rulesareoftencalleddeductive\ndatabase systems.\nByassigning constants tothevariables thatappearinarule,wecaninferaspe\u00ad\ncificCoruponents tuple.Forexample, bysettingPart::::::trike,Subpart:::::: wheel,\nandQty=S, wecaninferthat(tTike,wheel)isineoulponents. Eachruleis\nreallyaternplate forInakinginferences: Aninference istheuseofaruleto\ngenerate anewtuple(fortherelation intheheadoftherule)bysubstituting\nconstants forvaria,bles insuchawaythateverytupleintherulebody(after\nthesubstitution) isinthecorresponding relation instance.\nByconsidering eachtupleinAsselnbly inturn,thefirstruleallowsustoinfer\nthatthesetoftuplesobtained bytakingtheprojection ofAssernbly ontoits\nfirsttwofieldsisinCCHnponents.\nTheseco11drulethenallo\\vsustocOlnbine previously discovered Cornponents\ntupleswithAssernbly tuplestoinfernewCornponents tuples.\\Vecanapply\nthesecondrulebyconsidering thecross-product ofAssernbly and(thecurrent\ninstance of)Cornponents andassigning valuestothevariables intherulefor\neachrO\u00a5lofthecl'oss-product, onerowatatitne.()bserve ho\\vtherepeated\nuseofthevarial)le Part2prevents certainro\\vsofthecross-product fronlcon\u00ad\ntributing anyne\\vtuples;ineffect,itspecifies anequality joincondition on\nAssenIbly andCornpouents. Thetuplesobtained byoneapplication ofthis\nruleareshowninFigure24.:t(Inaddition, COlnponents contains thetuples\nobtained l)yapplying thefirstrule;thesearenotshown.)", "851": "Derluct~iveD atabase8\ntrikespoke\nf----triketire;_.__.\ntrikeseat\n..__......_.._-\ntrikepedal\nwheelrhn\nwheeltube\n'''_\"n\nFigure 24.3Components TuplesObtained\nbyApplying theSecondRuleOnce821\ntrikespoke\n\u00b7~\u00b7t\"l~n{e\u00b7\u00b7\u00b7-\u00b7-\u00b7 tire\ntrikeseat\ntrikepedal\nwheelrun\nwhe81-'''Tllb-e---l\ntrikerirn\ntriketube\nFigure 24.4Components TuplesObtained by\nApplying theSecondRuleTwice\nThetuplesobtained byasecondapplication ofthisruleareshowninFigure\n24.4.NotethateachtupleshowninFigure 24.~~isreinferred. Onlythelast\ntwotuplesarenew.\nApplying thesecondruleathirdtimedoesnotgenerate additional tuples.rrhe\nsetofComponents tuplesshowninFigure24.4includes allthetuplesthatcan\nbeinferred usingthetwoDatalog rulesdefining Cornponents andthegiven\ninstance ofAssembly. rrhecomponents ofatrikecannowbeobtained by\nselecting allCornponents tupleswiththevaluetrikeinthefirstfield.\nEachapplication ofaDatalog rulecanbeunderstood internlSofrelational\nalgebra. Thefirstruleinourexarnple program simplyappliesprojection tothe\nAssernbly relation andaddstheresulting tuplestotheCornponents relation,\nwhichisinitiallyernpty.ThesecondrulejoinsAssernbly withCOlllponents and\nthendoesaprojection. Theresultofeachruleapplication iscornbined with\ntheexisting setofCornponents tuplesusingunion.\nTheonlyDatalog operation thatgoesbeyondrelational algebraistherepeated\napplication oftherulesdefining CCHnponents untilnonewtuplesaregenerated.\nThisrepeated application ofasetofrulesiscalledthejiJ.:pointoperation, and\n\\vedevelopthisideafurtherinthenextsection.\nvVeconclude thissectionbyrewriting theDatalog definition ofCornponents\nusing S(~L:1999syntax:\nWITHRECURSIVE Cornponents(Part, Subpart) AS\n(SELECTA1.Part, AJ.Subpart FROMAssernbly .,A.I)\nUNION\n(SELECTA2.Part, Cl.Subpart\nFROM Assernbly A2;Cornponents C1", "852": "822 C~HAPTER 24\nWHERE A2.Subpart =Cl.PaTt)\nSELECT*FROMCOlllponents C2\nTheWITHclauseintroduces arelation thatispartofaquerydefinition; this\nrelation isshnilartoaview,butthescopeofarelation introduced usingWITH\nislocaltothequerydefinition. TheRECURSIVE key\\vord signalsthatthetable\n(inourexarnple, Cornponents) isrecursively defined. Thestructure ofthe\ndefinition closelyparallels theDatalog rules.Incidentally, ifwewantedtofind\nthecornponents ofaparticular part,forexanlple, tTikc,wecansirnplyreplace\nthelastline\u00a5liththefollowing:\nSELECT*FROMCornponents C2\nWHERE C2.Part='trike'\n24.2THEORETICAL FOUNDATIONS\nWeclassifytherelations inaDatalog prograln aseitheroutputrelations orin\u00ad\nputrelations. Output relations aredefinedbyrules(e.g.,COluponents), and\ninputrelations haveasetoftuplesexplicitly listed(e.g.,Assembly). Given\ninstances oftheinputrelations, weInustcompute instances fortheoutputre\u00ad\nlations.Themeaning ofaDatalog prograrIl isusuallydefinedintwodifferent\nways,bothofwhichessentially describe therelation instances fortheoutput\nrelations. Technically, aqueryisaselection overoneoftheoutputrelations\n(e.g.,allComponents tuplesCwithC.paTt=tTike).However, thelueaning of\naqueryisclearonceweunderstand howrelation instances areassociated with\ntheoutputrelations inaDatalog progranl.\nrrhefirstapproach todefining thesernantics ofaDatalog progralll, calledthe\nleast'{nodelsC'lnantics, givesusersawaytounderstand theprograrn without\nthinking abouthowtheprograrn istobeexecuted. Thatis,thesernanties is\ndeclarative, likethesernantics ofrelational calculus, andnoto]JfTo,tional like\nrelational algebrasClnantics. Thisisirnportant becC111se recursive ruleslnakeit\ndifficult tounderstand a\u00b7prograIll in tcrrns ofanevaluation strategy.\nThesecondapproach, calledtheleast fi~rpoint 8crnantic8, givesaconceptu<tl\nevaluation strategy toCOlnpute thedesiredrelation insta..nces.Thisservesa..'3\nthebasisforrecursive queryevaluation inaI)Brv:rS.1I10reefficient evaluation\nstrategies areusedinanactualiInplernentation, buttheircorrectness issho\\vI1\nbydernonstntting theirequivalence tothelea\"stfixpoint approach. rrhefixpoint\nsClnantics isthusoperational and.playsa.roleanalogous tothatofrelational\nalgebrasernalltics fornonrecursive queries.", "853": "Deductive Databases\n24.2.1LeastModelSemantics823\nvVe\\\u00a5antuserstobeabletounderstand aDatalog progTarn byunderstanding\neachruleindependent ofotherrules,vviththelneaning: Ifthebody'istT'ue,the\nheadisalsotT'ue. Thisintuitive reading ofarulesuggests that,givencertain\nrelation instances fortherelation nainesthatappearinthebodyofarule,\ntherelation instance fortherelation rnentioned intheheadoftherule111USt\ncontainacertainsetoftuples.Ifarelation HarneR..appears intheheadsof\nseveralrules,therelation instance forRIIlUStsatisfytheintuitive reading of\nalltheserules.However, wedonotwanttuplestobeincluded intheinstance\nforR,unlesstheyarenecessary tosatisfyoneoftherulesdefining R,.Thatis,\nwewanttocornpute onlytuplesforRthataresupported bySaIneruleforR.\nTolnaketheseideasprecise,weneedtointroduce theconcepts ofrnodelsand\nleastmodels. Amodelisacollection ofrelationinstances, oneinstance foreach\nrelation intheprograrn, thatsatisfiesthefollowing condition. Foreveryrulein\ntheprograrll, whenever wereplaceeachvariable intherulebyacorresponding\nconstant, thefollowing holds:\nfreverytupleinthebody(obtained byourreplaceUlent ofvariables\nwithconstants) isinthecorresponding relation instance,\nI1henthetuplegenerated forthehead(bytheassignrnent ofconstants\ntovariables thatappearinthehead)isalsointhecorresponding rela\u00ad\ntioninstance.\nObserve thattheinstances forthE~inputrelations aregiven,andthedefinition\nofarnodelessentially restricts theinstances fortheoutputrelations.\nConsider therule\nComponents (Part,Subpart) '-Assembly (Part,Part2, Qty),\nComponents (Part2, Subpart).\nSuppose wereplacethevariablePartbytheconstant wheel,Part2by'tin:, (~ty\nby1,andSubpart byrirn:\nComponents (wheel,rim)'-Assembly(wheel, tire,1),\nComponents (tire,rim).\nLetAbeaninstance ofAssernbly andCbeaninstance ofCOlnpouents. IfA\ncontains thetuple (udu~el, Lire,1)andCcontains thetuple(UTe,Tim,),then\nCrrulstalsocontainthetuple('wheel, rirn)forthepajrofinstancc~s A.andC", "854": "824 CHAPTER 211\ntobearnodel.()fcourse,theinstances Aand(;rnustsatisfytheinclusion\nrequirenlent justillustrated foreveryassignruent ofconstants tothevariables\nintherule:Ifthetuplesintherulebodyarein.A.andC,thetupleinthehead\nInus1;beinC.\nAsanexarnple, theinstances ofAsscrnbly showninFigure24.1andCornpo\u00ad\nnentsshovvninF'igure24.4together fornlarnodelfortheConlponcnts prograll1.\nC;iventheinstance ofAssernbly showninFigure24.1,thereisnojustification\nforincluding thetuple (spok~e,pedal)totheCOlnponents instance. Indeed,\nifweaddthistupletothecornponents instance inFigure24.4,'-'Tenolonger\nhavealllodelforourprogram, a.sthefollowing instance oftherecursive rule\nderllonstrates, since(wheel, pedal)isnotintheCornponents instance:\nComponents (wheel,pedal):-Assembly(wheel, spoke,2),\nComponents(spoke, pedal).\nHowever, byalsoaddingthetuple(wheel,pedal)totheCornponents instance,\nweobtainanother rnodeloftheComponents prograrll. Intuitively, thisisun\u00ad\nsatisfactory sincethereisnojustification foraddingthetuple(spoke,pedal)\ninthefirstplace,giventhetuplesintheAssembly instance andtherulesin\ntheprograln.\nWeaddressthisproblern byusingtheconcept ofaleastrllodel.Aleastmodel\nofaprograrn isarnodelMsuchthatforeveryothermodelM2ofthesarne\nprogranl, foreachrelationIlintheprogranl~ theinstance forRin]\\IIiscontained\nintheinstance ofRin1\\12.The1nodelforInedbytheinstances ofAssernbly\nandCOlnponents showninFigures 24.1and24.4istheleastrHodelforthe\nCC)lnponents progralll vviththegivenAssernbly instance.\n241&2,,2TheFixpoint Operator\nAfixpoint ofafunctionfisavaluevsuchthatthefunction appliedtothe\nvaluereturnsthesaIIlevalue,thatis,f(v)='U.Consider afunction applied\ntoasetofvaluesthatalsoreturns asetofvalues.ForeXH,rnple, wecarldefine\ndoubletol)eafunction tllatIlluitiplies everyelenlcnt oftheinputsetbytwo\nandd(YlJ,blc+tobedoubleUidenhty. T'hus,d()'ublc({1,2,5})=={2,4,lO}, and\ndouble+( {1,2,5}):::::::{1,2,4.,5,lO}.The setofallevenintegers whichhappens\ntobeaninfiniteset-isafixpoint ofthefunction double-+. Another fixpoint\nofthefunction dO'lLble-f- isthesetofallintegers. l'hefirstfixpoint (thesetof\nall(~venintegers) is.';'(nailerthanthesecondfixpoint (thesetofallintegers)\nbecause itiscontained inthelatter.", "855": "Ded'uct'lvC Database,s 825\nTheleastfixpoint ofafunction isthefixpointthatisslnallerthaneveryother\nfixpoint ofthatfunction. Ingeneral, itisnotglHlranteed thatafunction has\naloa.\",tfixpoint. ForexaIl1ple, therelnaybet'\\\u00a5ofixpoints, neitherof\\vhichis\n81na11erthantheother.(Doesdoublehavealeastfixpoint? Whatisit?)\nNo\\Vletusturntofunctions oversetsoftuples,inparticular, functions defined\nusingrelational algebraexpressions. TheCornponents relation canbedefined\nbyanequation ofthefonn\nC!orrLponents =Jrl,5(Assernbly [)<J2=1Cornponents) U7Tl,2(Assernbly)\n1'hisequation hastheforn1\nCornponents =f(Cornponents,Assembly)\nwherethefunctionfisdefinedusingarelational aJgebraexpression. Fora\ngiveninstance oftheinputrelation Assernbly, thiscanbesirnplified to\nC7ornponents =f(Cfo1nponents)\nTheleastfixpoint offisaninstance ofCornponents thatsatisfies thisequa\u00ad\ntion.Clearlytheprojection ofthefirsttwofieldsofthetuplesinthegiven\ninstance oftheinputrelation Assernbly rnustbeincluded inthe(instance that\nisthe)leastfixpoint ofCornponents. Inaddition, anytupleobtained byjoining\nComponents withAssernbly andprojecting theappropriate fieldsIllUstalsobe\ninComponents.\nAlittlethought showsthattheinstance ofComponents thatistheleastfixpoint\noffcanbeccnnputed usingrepeated applications oftheDatalog rulessho\\vn\nintheprevious section. Indeed,applying thetwoDatalog rulesisid(~ntical to\nevaluating therelational expression usedindefining COlnponcnts. Ifanappli\u00ad\ncationgenerates Cornponents tuplesthatarenotinthecurrentinstance ofthe\nCornponents relation, thecurrentinstance cannotbethefixpoint. Therefore,\nweaddthenewtuplestoCornponents <tndevalu<.tte therelational expression\n(equivalently, thetwoDatalog rules)again.T'hisprocessisrepeated untilev\u00ad\nerytuplegenerated isalreadyinthecurrentinstance ofCornponents. \\\\Then\napplying therulestoi,hecurrerltsetoftuplesdoesnotproduce any rl(~\\Vtuples,\n\\vehavereached afixpoint. IfCC)lnponents isinitialized totheeruptysetof\ntuples.intuitively vveinferonlytuplesthat(1,1'enecessary b:ythedefinition ofa\nfixpoint, andthefixpoint cornputed istheleastfixpoint.\n24.2.3SafeDatalogPrograms\n(~onsider thefollovving p1'ograrn:\nComplexYarts (Part) :-Assembly(Part, Subpart, Qty),Qty>2.", "856": "826 CHAPTER 21\nAccording tothisrule,acOlnplex partisdefinedtobeanypartthatha\"Inore\nthant\\VOcopiesofanyone subpart. :1:01'eachpartlnentioned intheAsselnbly\nrelatioIl, \\vecancac.;ilycheck\\vhether itisacOll1plex part.Incontrast, consider\nthefollowing prograrn:\nPriceYarts (Part,Price)'-\nAssembly (Part,Subpart, Qty),Qty>2.\nThisvariation seekstoassociate apricewitheachcornplex part.IIowever, the\nvariable Pricedoesnotappearinthebodyoftherule.ThisIneansthatan\ninfinitenumber oftuplesmustbeincluded inanymodelofthisprogralll. To\nseethis,suppose wereplacethevariablePartbytheconstant trike,SubPart by\nwheel,andQtyby3.Thisgivesusaversionoftherulewiththeonlyremaining\nvariable beingPrice:\nPriceYarts(trike,Price) :-Assembly (trike,wheel,3),3>2.\nNow,anyassignment ofaconstant toPricegivesusatupletobeincluded in\ntheoutputrelation Price __.Parts.Forexample, replacing Priceby100givesus\nthetuplePrice_Parts(trike,lOO). IftheleastInodelofaprogralIl isnotfinite,\nforevenoneinstance ofitsinputrelations, thenwesaytheprogram isunsafe.\nDatabase systems disallow unsafeprograms byrequiring thateveryvariable\nintheheadofarulealsoappearinthebody.Suchprogralns aresaidto\nberange-restricted, andeveryrange-restricted Datalog prograln hasafinite\nleastmodeliftheinputrelation instances arefinite.Intherestofthischapter,\nwe&'3SUlllethatprograrns arerange-restricted.\n24.2.4LeastModel=LeastFixpoint\nDoesaDatalog prograln alwayshavealeastrnodel? ()risitpossible that\ntherearetwornodels, neitherofwhichiscontained intheother'?Sirnilarly,\ndoeseveryDatalog progranl havealeastfixpoint? VvThatistherelationship\nbetween theleastrnodelandtheleastfixpoint of<tDatalog prograln?\nAswenotedearlier,noteveryfunction hasalea\"stfixpoint. Fortunately, every\nfunction definedintennsofrelational algebraexpressions tl1atdonotcontain\nset-difference is,guaranteed tohavealeastfixpoint, andtheleastfixpoint can\nbecornputed byrepeatedly evaluating thefunctic)ll. l'histellsusthatevery\nl)atalog prograrn hasale~t.stfixpointandthatitcanl)ecOlnputed byrepeatedly\napplyi11g therulesofth(~l)rogranl onthegiveninstances oftheinputrelations.\nF\\u\u00b7ther, everyI)atcl.log progr(un isglla.r<lnteed tohavealeastrnodel<ludthe\nleastrnodelisequaltotheleastfixpoint oftheI>l'ograln. Theseresults(whose", "857": "Deducti've Databases 827\nproofswedonotdiscuss) providethebclSisforDatalog queryprocessing. 'Users\ncanunderstand aprogTarn intermsof'Ifthebodyistrue,theheadisalsotrue,'\nthankstotheleastl1lodelsClnantics. rrheDBNIScanCOlllpute theanswerby\nrepeatedly applying theprograrn rules,thankstotheleastfixpoint sernantics\nandthefactthattheleastnlodelandtheleastfixpoint areidentical.\n24.3RECURSIVE QUERIES WITHNEGATION\nUnfortunately, onceset-difference isallo\\ved inthebodyofarule,therer11ay\nbenoleastrnodelorleastfixpoint foraprogram. Consider thefollowing rules:\nBig(Part):- Assembly (Part,Subpart, Qty),Qty>2,\nNOTSmall(Part).\nSmall(Part):-Assembly (Part,Subpart, Qty),NOTBig(Part).\nThesetworulescanbethought ofasanattenlpt todivideparts(thosethat\narementioned inthefirstcolulnnoftheAsselubly table)intotwoclasses,Big\nandSmall.ThefirstruledefinesBigtobethesetofpartsthatuseatleast\nthreecopiesofsomesubpartandarenotclassified assmallparts.Thesecond\nruledefinesSmallasthesetofpartsnotclassified asbigparts.\nIfweapplytheserulestotheinstance ofAssembly showninFigure24.1,trikeis\ntheonlypartthatusesatleastthreecopiesofsennesubpart. Shouldthetuple\n(trike)beinBigorSUlall?Ifweapplythefirstruleandthenthesecondrule,\nthistupleisinBig.Toapplythefirstrule,weconsider thetuplesinAsselubly,\nchoosethosewithQty>2(whichisjust(trike)), discardthoseinthecurrent\ninstance ofSrnal1(bothBigandSmallareinitially elnpty), andaddthetuples\nthatarelefttoBig.1'herefore, anapplication ofthefirstruleadds(trike)to\nBig.Proceeding siInilarly, \\vecanseethatifthesecondruleisappliedbefore\nthefirst,(tTike)isaddedtoSrnallinsteadofBig.\nrrhisprognun hashvofixpoints, neitherof'whichissrnallerthantheother,as\nshowninFigure24.5.(rhefirstfixpoint 11&\\)aBigtuplethatdoesnotappearin\nthesecondfixpoint; therefore, itisnotsInaBerthanthesecondfixpoint. 1'he\nsecondfixpoint ha,sa81na11tuplethatdoesnotappearinthefirstfixpoint;\ntherefor(\\ itisD.otsr11a11e1'thanthefirstfixpoint. Theorderill\\vhich\\ve\napplytherul(~sdetennines \\vhichfixpoint iscOlnputed; thissituation isvery\nunsatisfactory.\\Ve wantuserstobeabletounderstand theirqueriesvvithout\nthinking (1)outexactly\" ho\\vtheevaJuation proceeds.\n]'herootoftheproblerH istheuseofNOT.\\Vhen\\veapplythefirstrule,senne\nirlferences (1re disallc:)\\~red because ofthepresence oftuplesin8rna11. PcLrts", "858": "828\nBig\nSmalltrike\nFixpoint 1Big\nSmallC;HAPTER 24\n\"\nFixpolnt 2\nFigure24.5TwoFixpoints fortheBig/Small Program\nthatsatisfytheotherconditions inthebodyoftherulearecandidates for\naddition toBig;weremovethepartsin8rna11frornthissetofcandidates.\nThus,sorneinferences thatarepossible if8ruallisernpty(asitisbeforethe\nsecondruleisapplied) aredisallowed ifSInallcontains tuples(generated by\napplying thesecondrulebeforethefirstrule).Hereisthedifficulty: IfNOT\nisused,theaddition oftuplestoarelation candisallow theinference ofother\ntuples.Without NOT,thissituation canneverarise;theaddition oftuplestoa\nrelation canneverdisallow theinference ofothertuples.\nRange-Restriction andNegation\nIfrulesareallowedtocontain NOTinthebodYlthedefinition ofrange-restriction\nrnustbeextended ensurethatallrange-restricted prograrJlS aresafe.Ifare\u00ad\nlationappears inthebodyofa,rulepreceded byNOT 1wecallthisanegated\noccurrence. Relation occurrences inthebodythatarenotnegated arecalled\npositive occurrences. Aprograrn isrange-restricted ifeveryvariable in\ntheheadoftheruleappears insornepositive relation occurrence inthebody.\n24.3.1Stratification\nAwidelyusedsolution totheproblern causedbynegation, ortheuseofNOT,\nistoirnposecertainsyntactic restrictions onprograrlls. rrheserestrictions can\nbeea~silycheckecl andprogrcuns thatsatisfythernhaveanaturallneaning.\n\\VesaythatatableTdepends onatable8ifsornerulewithTinthehead\ncontains 5\",or(recursively) contains apredicate thatdepends on8~inthe\nbod:y.Arecursively definedpredicate alwaysdepends onitself.Forexarnple,\nBigdepends onSruall(andonitself).Indeed,thetablesBigandSrnall(l,re", "859": "Dedv\"ct'l'tle Databa,scs 8'')9,_04:.1\nnlutually recursive, thatis,thedefinition of'Bigdepends onSrnaUandvice\nversa.,\"Vesaythatatable'Tdepends negatively onatal)le8ifSCHnerule\n\\vith'Tintheheadcontains NOTS,or(recursively) contains apredicate that\ndepends negatively onS,inthebody.\nSuppose \\veclassifythetablesinaprograrll intostrataorlayersasfollows.\nThetablesthatdonotdependonanyothertablesaTeinstraturll O.Inour\nBig/S1nall exarnple, ASSCIIlbly istheonlytableinstratu1Il O.Next,\\veidentify\ntablesinstraturll 1;thesearetablesthatdependonlyontablesinstratuln 0\norstraturn 1anddependnegatively onlyontablesinstraturn O.Higherstrata\naresirnilarly defined: '}'hetablesinstraturni arethosethatdonotbelongto\nlOVvTerstrata,dependonlyontablesinstratuIlliO[lowerstrata,anddepend\nnegatively onlyontablesinlo\\;verstrata.Astratified program isonewhose\ntablescanbeclassified intostrataaccording totheabovealgoritlull.\nrrheBig/Sruall progralIl isnotstratified. SinceBigandSnlalldependoneach\nother,they1nustbeinthesarnestraturn. Ho\\vever, theydependnegatively\noneachother,violating therequirc1Ilent thatatablecandepend negatively\nonlyontablesinlowerstrata.Consider thefollowing variantoftheBig/Srnall\nprogra1Il, inwhichthefirstrulehasbeenrnodified:\nBig2(Part) :-Assembly (Part,Subpart, Qty),Qty>2.\nSmal12(Part) :-Assembly (Part,Subpart, Qty),NOTBig2(Part).\nThisprograrn isstratified. Slnall2depends onBig2butBig2doesnotdepend\non8111a1l2. Assernbly isinstratu111 0,Bigisinstraturn 1,andSrna1l2isin\nstraturn 2.\nAstratified prograrn isevaluated stratu1n- by-straturn, starting withstratunl\nO.'Toevaluate astraturn, wecornpllte thefixpoint ofallrulesdefining tables\ninthisstraturn. \"Fhenevaluating astraturn, anyoccurrence ofNOTinvolves\natablefrorHalowerstraturn, \\\\'hichhastherefore beencorupletely evaluated\nbyno\\\\'.Thetuplesinthenegated tablestilldisallow sorneinferences, butthe\neffectiscornpletely deterrninistic, giventhestraturn-by-straturn evaJuation. In\nthec~xa.Inple, Big2isC01uput8(1 before81na1l2because itisin('tlovilerstraturIl\nthan8rna112: (triA,~e)isaddedtoBig2.Next,'whenwecornpute 81na112, \\ve\nrecognize that(trike)isnotin8rna112l)ecauseitisalreadyinBig2.\nIncidentally, notethatthestratified Big/Srnall progranl isnotevenrecursive. If\n\\verepla,ce ..Assernbl.y b)l\"Cornponents, \\veobtainarecursive, stratified prograrn:\n}\\,sscrnbly isinstraturn 0,Cornponents isinstratlull 1,Big2isalsoinstraturn\n1~and81na112isinstraturn 2.", "860": "830\nIntuition behindStratification(;IIAPTgR 24\n\u00ae\nConsider thestratified versionoftheBig/Slnall prograrll. Theruledefining\nBig2forcesustoadd(l:T'ike)toBig2anditisnaturaltoa\"C;;SUlnethat(tirike)is\ntheonlytupleinBig2,because \\vehavenosupporting evidence foranyother\ntuplebeinginBig2.Therninirnal fixpoint conrputecl bystratified fixpoint\nevaluation isconsistent \\viththisintuition. However, thereisanother rninhnal\nfixpoint: \\VecanplaceeverypartinBig2andrnakeSrna1l2beernpty.\\\\Thile\nthisassignrllent oftuplestorelations seeInsunintuitive, itisnonetheless a\nrninimal fixpoint.\nrrherequirernent thatprograrns bestratified giveslISanaturalorderforeval\u00ad\nuatingrules.Whentherulesareevaluated inthisorder,theresultisaunique\nfixpoint thatisoneoftheminirnal fixpoints oftheprograrll. Thefixpoint\nC0111puted bythestratified fixpoint evaluation usuallycorresponds welltoour\nintuitive reading ofastratified prograrll, eveniftheprogram hasrnorethan\nonerllininlal fixpoint.\nFornonstratified Da.talog progranls, itishardertoidentify anatural model\nfrornarnongthealternative rninirnal rnodels, especially whenweconsider that\ntheIneaning ofaprograrll mustbecleareventouserswholackexpertise in\nDlathelnatical logic.Although considerable research hasbeendoneonidenti\u00ad\nfyingnaturalrnodelsfornonstratified prograrns, practical irnplernentations of\nDatalog have concentratt~d onstratified prograrns.\nRelational AlgebraandStratified Datalog\nEveryrelational algebraquerycanbewrittenasarange-restricted, stratified\nDatalog progra.rn. (Ofcourse,notallDatalog progranls canbeexpressed in\nrelational algebra; forexarnple, theCornponents prograrn.) 'Wesketchthe\ntranslation frornalgebratostratified Datalog bywritingaDatalog progra.rn for\neachoftheb::l..sicalgebraoperations, interrnsoftwoeXC1rnple tablesR,andS,\neachwitht\u00a5lOfields:\nSelection:\nProjection:\nCross-product:\nSet-difference:\nlJnion:Ilesult(Y) :-Il(X,Y), X=c.\nItesult(Y) :-H(X,Y).\nIlesult(X:,Y,lJ,V) :-Il(X,YL S(lJ,V).\n11esult(X,Y) :-Il(X,yT), NOTS(U,V).\nH.esult(X,Y) :-R,(X,Y).\nResult(X,Y) :-S(X,Y).\n\\Veconclude ()urdiscussion ofstratification l>ynotingthat S(~L:1999 requires\nprograrns tobestratified. rrhestratified Big/Sruall prograrn isshovvnbelovlin\nSCJL:1999notation, vvithafinaladditional selection onBig2:", "861": "Ded'uct'ive Databases 831\nSQL:1999 andDatalog Queries: ADatalog ruleislinearrecursive\nifthebodycontains atIllostoneoccurrence ofanytablethatdepends on\nthetableintheheadoftherule.Alinearrecursive program contains\nonlylinearrecursive rules.Alllinearrecursive Datalog progranls canbe\nexpressed usingtherecursive featuresofSC~L:1999. IIowever, thesefeatures\narenotinCoreSQL.\nWITH\nBig2(Part) AS\n(SELECT A1.Part FROMAssernbly AlWHEREQty>2)\nSrnall2(Part) AS\n((SELECT- A2.Part FROMAssernbly A2)\nEXCEPT\n(SELECT Bl.Part fron1Big2Bl))\nSELECT*FROMBig2B2\n24.4FROMDATALOG TOSQL\nTosupport recursive queriesinSQL,we lllusttakeintoaccount thefeatures\nofSQLthatarenotfoundinDatalog. TwocentralSQLfeatures rnissing in\nDatalog are(1)SQLtreatstablesasTntlltisets oftuples,ratherthansets,and\n(2)SQLpennits grouping andaggregate operations.\nThernultiset selnantics ofSQLqueriescanbepreserved ifwedonotcheckfor\nduplicates afterapplying rules.Everyrelation instance, including instances of\ntherecursively definedtables,isalllultiset. rrhenurnber ofoccurrences ofa\ntupleinarelation isequaltothenurnber ofdistinct inferences thatgenerate\nthistuple.\nThesecondpointcanbeaddressed byextending Data.logwith grouping and\naggregation operations. Tlhisrnustbedone\\vith rnultiset sernantics inrnind,\nas\\veno\\villustrate. Consider thefollowing prograrn:\nNumPartsCPart, SUM((Qty))) :-AssemblyCPart, Subpart, Qty).\n'fhisprograrn isequivalent totheSC~Lquery\nSELECT A.Part, SUM(A.Qty)\nFROM Assernbly r'\\\nGROUP BYA.Part", "862": "832 (JHAPTER 24\nTheangular brackets (...)notation \\va\"sintroduced intheLDLdeductive sys\u00ad\nteln~oneofthepioneering deductive database prototypes developed atIVICC\ninthelate19808.VVeuseittodell0teTlH1ULsct geneTat'ion~ orthecreation of\nrnultiset-values. Inprinciple, theruledefinil1gNurnParts isevaluated byfirst\ncreating thetelnporary relation ShO\\VllinFigure24.(3.\\Vecreatetheternporary\nrelation bysortingonthepartattribute (whichappears ontheleftsideofthe\nrule,alongwiththe(...)terrn)andcollecting theI11ultiset ofqtUvaluesfor\neachpo,Ttvalue.vVethenapplytheSUMaggregate toeachlllultiset-value inthe\nsecondcolu111ntoobtaintheans\\ver ~\\vhichissho\\vninFigure24.7.\n-.......\"\"\"\"\"\"\"\"........\ntrike 4\nf--._.,_.\u2022\nfran1e 2---wheel 3\ntire 2_..lpart[SUM((qty)'I\ntrike{3,l}\n1--.\nfrarne{l,l}\n~\u2022..__.\nwheel{2,l}\n...._.__.\ntire-'{1,l}\n'~_.\"\"-',\"-\"-IpartI(qty)I\nFigure 24.6Temporary Relation Figure24.7TheTuplesinNumParts\nThetelnporary relation showninFigure24.6neednotbenlC1terialized tocorn\u00ad\nputeNurnParts; forexalllplc, SUMcanbeappliedon-the-fly orAssenlbly can\nsirnplybesortedandaggregated asdescribed inSection14.6.\nTheuseofgrouping andaggregation, likenegation, causescOlnplicatiol1s when\nappliedtoapartially cOlnputed relation. rrhedifficulty isovercorne byadopt\u00ad\ningthesarnesolution usedforn(~gation, stratification. Consider thefollowing\nprograrn:1\nTotParts(Part, Subpart, SUM\u00ab(Qty))) :-BOM(Part, Subpart, Qty).\nBOM(Part, Subpart, Qty):-Assembly (Part,Subpart, Qty).\nBOM(Part, Subpart, Qty):-Assembly(Part, Part2,Qty2),\nBOM(Part2, Subpart, Qty3),Qty=Qty2*Qty3.\nTheideaistocountthel111rnber ofcopiesofSubpart foreachPart.By~1ggre\u00ad\ngatingoverB()l\\IIratherthanAssernbly, wecountsubparts atanylevelinthe\nhierarchy insteadofjustirnrnediate subparts. Thisprograrn isaversionofa\nvvell-known problcrl1 called\nBill-of-1Vlo,terials andvariants ofitareprobably the\nlnost\\vide1)\"usedrecursive queriesinpractice.\n'rheirnportant pointtonoteinthisexarnple isthatweInustvvaituntilthe\nrelation BC)]VIhasbeencornpletely evaluated l)(\u00b7Jore\\veapplytherrotParts\n~\"ule.()thervvis8, \\veobta.inincornplete counts.T1hissituation isanalogous to\ntheprobler11 wefaced'withnegation; wehaveto(~valuate thenegated rel[\\,tion\n1ThereadershouldwritethisinSQL:1999syntax, asasirnpleexercise.", "863": "Ded'ltctive Databases 833i\\\n~~:1999 Cycle\nD~~:tion: -~~eDa;~~~~\n qU;~~~-that d~~ot\nl~::ith-l\n111etieoperations havefiniteanswersandthefixpointevaluation isguaran- !\nteedtohalt.Unfortunately, recursive SQLqueriesIna)'haveinfiniteanswer\nsetsandqueryeva1ua,tion rnaynothalt.l'herearetvvoindependent rea,..\nIsonsforthis:(1)theuseofaritlnnetie operations togenerate datavalues\nIthatarenotstoredininputtablesofaquery,and(2)rTIultiset scrnantics\n1\n1\"'1forruleapplications; intuitively, problems arisefromcyclesinthedata.\n,(Toseethis,consider theCornponents prograrn ontheAssenlbly instance\nIshowninFigure24.1plusthetuple(tube,'wheel,1).)SQL:1999provides\nI_special constructs tocheckforsuchcycles. _~\ncornpletely beforeapplying arulethatinvolvestheuseofNOT.Ifaprograrn is\nstratified withrespecttousesof(...)aswellasNOT,stratified fixpoillt evalua\u00ad\ntiongivesus111eaningful results.\nTherearetwofurtheraspectstothisexarnple. First,wernustunderstand the\ncardinality ofeachtupleinBOlVI,basedonthernultiset sernantics forrule\napplication. Second,wernustunderstand thecardinality of themultiset ofQty\nvaluesforeach(Part,Subpart) groupinTotParts.\nIpart .._[subpart]\u00b7\u00b7\u00b7qtyl\n0---- .frarue_..._.\ntrike 1\n...._~-\u00b7'\"'trike seat 1\nfra.rneseat 1\nframepedal 2\n.~.~...\nseatcover 1\n~-\".... _........\".'\"-\nFigure24.8Another Instance ofAssemblytrike\ny~,,-\nwheel frame\nA\nA\nspoke tireseat pedal\n~\nnm tube\nFigure 24.9Assembly Instance Seena,..saGraph\n\\Veillustrate theset\\VOpointsusingtheinstance ofAssernbly showninFigures\n24.8and24.9.f\\pplying thefirstBONIrule,weadd(onecopyof)everytuplein\nAssernbly toBOl\\J1.Applying thesecondBOIVIrule,\\vectddthefollo\\ving four\ntuplestoB()l\\JI:(trike,scat,1),(trike,pedal,2)\\(trike,coveT,1),and(frarne,\ncoveT,1).()bserve thatthetuple(trike,seat,1)\\vas (11r(~adyinBOl\\/fbecause\nit\\vasgenerated byctpplying thefirstrule;therefore, rnultiset sernantics for\nruleapplication givesustwocopiesofthistuple.Applying thesecondBC)IVI\nruleonthenewtuples,wegenerate thetuple(b'ike,cover,1)(usingthetuple\n(fran~e,cover,1)forBaNIint.hebodyoftherule):thisisoursecondcopyof\nthetuple.i\\pplying thesecondruleagainonthis tupl(~doesnotgenerate any", "864": "834 CHAPTER 24,\ntuples,andthecOInputation oftheBO:NIrelation isnowcOlnplete. TheBaM\ninstance atthisstageissho\\vninFigure24.10.\ntrike frarne 1\ntrikeseat 1\nframeseat 1\nfraInepedal 2\nseat cover 1\ntrikeseat 1\ntrikepedal 2\ntrike cover 1\nframe cover 1\ntrikecover 1\nFigure24.10 Instance ofBON!Tabletrike fraIlle {1}\ntrikeseat {1,1}\ntrike cover {1,1}\ntrikepedal {2}\nfram.eseat {1}\nf---fr-aI-n-e-l--p-e-d-a-1 --+-\u00b7T2T\u00b7\u00b7\u00b7_\u00b7\n-+-----+-~:;,-----lseat cover {I}\nframe cover {I}\nFigure24.11 Temporary Relation\nMultiset grouping onthisinstance yieldsthetemporary relationinstance shown\ninFigure24.11.(Thisstepisonlyconceptual; theaggregation canbedoneon\ntheflywithout materializing thisterllporary relation.) Applying SUMtothe\nrllultisets inthethirdcolumnofthistemporary relation givesustheinstance\nforTotParts.\n24.5EVALUATING RECURSIVE QUERIES\nrrheevaluation ofrecursive querieshasbeenwidelystudied. Whileallthe\nproblems ofevaluating nonrecursive queriescontinue tobepresent, thenewly\nintroduced fixpoint operation createsadditional difficulties. Astraightforward\napproach toevaluating recursive queriesistocornpute thefixpoint byrepeat\u00ad\nedlyapplying therulesasillustrated inSection24.1.1.Oneapplication ofall\ntheprograrn rulesiscaIledaniteration; weperfonn asrnanyiterations asnec\u00ad\nessarytoreachthele&'3tfixpoint. Thisapproach hastwornaindisadvantages:\nIIRepeated Inferences: AsFigures 24:.:3and24.4illustrate, inferences are\nrepeated acrossiterations. Thatis,thesarnetupleisinferred repeatedly\ninthe\",arneway,usingtheScHneruleandtheseunetuplesfortablesinthe\nbodyoftherule.\n11IIUnnecessary Inferences: Suppose wewanttofindthecornponents of\nonlyawheel.Cornputing theentireCornponents tableis\\ve:lsteful anddoes\nnottakeadvantage ofinforrnation inthequery.", "865": "Deductive Databases 835\n$\nInthissection, wediscusshoweachofthesedifficulties canbeovercorne. \\Ve\nconsider onlyDatalog progralns without negation.\n24.5.1Fixpoint Evaluation withoutRepeated Inferences\nCOlnputing thefixpoint byrepeatedly applying allrulesiscalledNaivefix\u00ad\npointevaluation. Naiveevaluation isguaranteed tocornpute theleastfix\u00ad\npoint,buteveryapplication ofarulerepeats allinferences llladebyearlier\napplications ofthisrule.Weillustrate thispointusingthefollowing rule:\nComponents (Part,Subpart) :-Assembly (Part,Part2,Qty),\nComponents (Part2, Subpart).\nWhenthisruleisappliedforthefirsttime,afterapplying thefirstruledefining\nComponents, theComponents tablecontains theprojection ofAssembly on\nthefirsttwofields.UsingtheseComponents tuplesinthebodyoftherule,we\ngenerate thetuplesshowninFigure24.3.Forexample, thetuple(wheel,rim)\nisgenerated through thefollowing inference:\nComponents (wheel,rim):-Assembly(wheel, tire,1),\nComponents (tire,rim).\nWhenthisruleisappliedasecondtilne,theComponents tablecontains the\ntuplesshowninFigure24.3inaddition tothetuplesthatitcontained before\nthefirstapplication. UsingtheComponents tuplesshowninFigure24.3leads\ntonewinferences; forexample,\nComponents(trike, rim):-Assembly(trike, wheel,3),\nComponents (wheel, rim).\nHowever, everyinference carriedoutinthefirstapplication ofthisruleisalso\nrepeated inthesecondapplication oftherule,sincealltheAssernbly and\nCornponents tuplesusedinthefirstruleapplication areconsidered again.For\nexarnple, theinference of(wheel, TiTr~)shownaboveisrepeated inthesecond\napplication ofthisrule.\n1~hesolution tothisrepetition ofinferences consists ofrernelnbering which\ninferences werecarriedoutinearlierruleapplications andnotcarrying theln\noutagain. vVecan'relnclnber' previously executed inferences efficiently by\nsirnplykeepingtrackofwhichCOlnponents tuplesweregenerated forthefirst\ntiIneinthernostrecentapplica.,tion oftherecursive rule.Suppose \\vekeep\ntrackbyintroducing (1,newrelation called\ndelta._Clornponcnts andstoringjust\nthenewlygenerated Cornponents tuplesinit.Now,wecanuseonly tlH~tuples", "866": "(~HAPTER ~4\nindeUeLG1(nnponents inthenextapplication oftherecursive rule;anyinference\nusingotherCOIuponents tuplesshouldhavebeencarriedoutinearlierrule\nEtpplications.\nThisrefincrllcnt offixpoint evaluation iscalledSeminaive fixpoint evalua\u00ad\ntion.Let ustraceSerninaive fixpoint evaluation onourexarllple prognllTI. The\nfirstapplication oftherecursive ruleproduces theCornponents tuplesshownin\nFigure24.3,justlikeNaivefixpoint evaluation, andthesetuplesareplacedin\ndelta_ C:on~ponents. Inthesecondapplication, however, onlydelta_C;()'{nponents\ntuplesareconsidered, whichrneansthatonlythefollowing inferences arecarried\noutinthesecondapplication oftherecursive rule:\nComponents (trike,rim):-Assembly(trike, wheel,3),\ndelta_Components(wheel, rim).\nComponents (trike,tube):-Assembly(trike, wheel,3),\ndelta_Components(wheel, tube).\nNext,thebookkeeping relation delta_Cornponents isupdated tocontainjust\nthesetwoCornponents tuples.Inthethirdapplication oftherecursive rule,only\nthesetwodelta_Cornponents tuplesareconsidered andtherefore noadditional\ninferences canbenlade.Thefixpoint ofCornponents hasbeenreached.\nToirnplernent Serninaive fixpoint evaluation forgeneralDatalog prograrns, we\napplyalltherecursive rulesinaprograrll together inaniteration. Iterative\napplication ofallrecursive rulesisrepeated untilnonewtuplesaregenerated in\nSOHleiteration. 10surnrnarize howSerninaive fixpoint evaluation iscarriedout,\ntherearetwoirnportant differences withrespecttoNaivefixpoint evaluation:\niIIIWTernaintain adeltaversionofeveryrecursive predicate tokeeptrackofthe\ntuplesgenerated forthispredicate intheInostrecentiteration; forexcunple,\ndelta_Cornponents forCOHlponents. rrhedeltaversions areupdated atthe\nendofeachiteration.\nII1'heoriginalprograrn rulesarere\\vritten toensurethateveryinference uses\natleastonedeltatuple;thatis,onetuplethat\\vas notkno\\vnbeforethe\nprevious iteration. Thisproperty guarantees thattheinference couldnot\nhavebeencaxriccloutinearlieriterations.\n\\JVedolI0tdiscussdetailsofSerninaive fixpoint evaluation (such fiBthea.lgo\u00ad\nritlunforrc\\vriting progranl rulestoensuretheuseofadeltatupleineach\ninference) .", "867": "Ded'uctive Databases\n24.5.2PushingSelections toAvoidIrrelevant Inferences837\nConsider anonrecursive vievvdefinition. If\\ve\\vantonlythosetuplesinthe\nviC\\\\Tthatsatisfyanadditional selection condition, theselection canbeaJlded\ntotheplanasafinaloperation, andtherelational algebra transforlnations\nforconunuting selections withotherrelational operators all<)\\vusto'push'\ntheselection aheadofrnoreexpensive operations suchascross-products (;l,nd\njoins.Ineffect,\\verestrictthecornputation byutilizing selections inthequery\nspecification. 1'heproblerIl isrnorecOlnplicated forrecursively definedqueries.\n\\Veusethefollowing progranl asanexarnple inthissection:\n8ameLevel(81 ,82)\n8ameLevel(81 ,82)Assembly(P1, 81,Q1),\nAssembly(Pl, 82,Q2),\nAssembly(Pl, 81,Qi),\n8ameLevel(Pl, P2),Assembly(P2, 82,Q2).\nConsider thetreerepresentation ofAssernbly tuplesillustrated inFigure24.2.\n1\"hereisatuple(81,82) inSarneLevel ifthereisapathfroln81to82that\ngoesupacertainnUlnber ofedgesinthetreeandthenCaInesdownthesaIne\nnurnber ofedges.\nSuppose wewanttofindallSalneLevel tupleswiththefIrstfIeldequalto\nspoke.SinceSalneLevel tuplescanbeusedtoCOlupute otherSarneLevel tuples,\nwecannotjustcornpute thosetupleswithspokeinthefirstfield.Forexa.rnple,\nthetuple(1uheel,frarne) inSarneLevel allowsustoinferaSarneLevel tuple\nwithspokeinthefirstfield:\n8ameLevel(spoke, seat)'-Assembly(wheel, spoke,2),\n8ameLevel (wheel,frame),\nAssembly(frame, seat,i),\nIntuitively, wehavetoconlpute allSarneLevel tllpleswhose firstfieldconta,ins\na.valueonthepathfroln.spoketotherootinFigure24.2.Eachsuchtuplehas\nthepotentia1 tocontribute to(lnS\\Vers forthegivenquery.Ontheotherhand,\ncornputing theentireSarneLevel tableiswasteful; forexarnple, theSalneLevel\ntuple(l'ir'e,8(:'0,1:)cannotbeusedtoinfer(lIly(1118\\Vertothegivenquery(or,\nindeed,toinferanytuplethatcaninturnbeusedtoinferanans\\vertuple).\n\\iVedefine (1,newtable,\\vhich\\vecalll\\1agic_SaIneLevel, suchthateacht11ple\ninthistableidentifies avalueTnfor\\vhich\"ve havetocornpute allSarneLevel\ntupleswithTninthefirstcoluluntoansvverthegivenquery:\nMagic_SameLevel (Pi):-\nMagic_.SameLevel (81),Assembly(P1, 81,Ql).\nMagic...8ameLevel (spoke)'-", "868": "838 (;IIAPTER 44\nConsider thetuplesinlVlagic_SanleLevel. Obviously wehave(spoke). lJs\u00ad\ningthislVlagic_SalneLevel tupleandtheAssernbly tuple('LVheel,spoke,2),we\ncaninferthatthetuple(wheel) isin\nJ\\1agic_SarneLevel. lJsingthistupleaJld\ntheAssernbly tuple(tT'ike,'wheel,a),\\vecaninferthatthetuple(tT'ike)isin\nNlagic_SarneLevel. Thus,\nJ\\tIagic_SarneLevel contains eachnodethatisonthe\npathfrornspoketotherootinFigure24.2.TheMagic_SarneLcvel tablecanbe\nllsedasafiltertorestrictthecomputation:\n5ameLevel(51 ,52):-Magic_5ameLevel(51) ,\nAssembly(P1, 51,Q1),Assembly(P2, 52,Q2).\n5ameLevel(51 ,52):-\nMagic,._5ameLevel(51) ,Assembly(Pl, 51,Ql),\n5ameLevel(Pl, P2),Assembly(P2, 52,Q2).\nTheserulestogether withtherulesdefining rvlagic_SarneLevel giveusapro\u00ad\ngranlforcornputing allSanleLevel tupleswithspokeinthefirstcolumn. Notice\nthatthenewprogranl depends onthequeryconstant spokeonlyinthesec\u00ad\nondruledefining lVlagic_SameLevel. Therefore, theprogram forcornputing all\nSameLevel tupleswithseatinthefirstcolumn, forinstance, isidentical except\nthatthesecondMagic_SarneLevel ruleis\nMagic_5ameLevel(seat) :-.\n~rhenurnberofinferences rnadellsingtheMagicprogram canbefarfewerthan\nthenurnber ofinferences nladeusingtheoriginal progranl, depending onjust\nhowrnuchtheselection inthequeryrestricts thecornputation.\n24.5.3TheMagicSetsAlgorithm\nWeillustrated theintuition behindtheMagicSetsalgorithrn ontheSarneLevel\nprograrn, whichcontains justoneoutputrelationandonerecursive rule.\nTheintuition behindtherewriting isthattherowsintheMagictablescor\u00ad\nrespond tothesubquerieswhoseanswers arerelevant totheoriginal query.\nByevaluating therewritten prograrn insteadoftheoriginal prograrn, \\vecan\nrestrictcornputation byintuitively pushingtheselection condition inthequery\nintotherecursion.\nrIhealgorithrn, however, ca..IlbeappliedtoanyDatalog prograrn. T'heinputto\nthealgorithrn consistsoftheprograrn andaquerypattern, whichisarelation\nwewanttoqueryplusthefieldsforwhichaquerywillprovideconstants. The\noutputofthealgorithrn isarewritten prograrn.\nThel\\1a,gicSetsprognun rewriting algorithrn canbesurnrnarized a..'3follows:", "869": "]Jeductive IJatabases 8~9\n1.Generate theAdorned Prograln: Inthisstep~theprogranl isre\\vritten\ntol1lakethepatternofqueriesandsubqueriesexplicit.\n2.AddMagicFilters: IVlodifyeachruleintheAdorned Prograrn byadding\naIVlagiccondition tothebodythatactsa'Safilteronthesetoftuples\ngenerated bythisrule.\n~~.DefinetheMagicTables: Wecreatenc\\vrulestodefinethel\\tlagic\ntables.Intuitively, froIlleachoccurrence ofatableRinthebodyofan\nAdorned PrograIu rule,weobtainaruledefining thetable ~1.agi(>_I{.\nvVhenaqueryisp()sed~weaddthecorresponding Iv1agictupletotherewrit\u00ad\ntenprograrl1 andevaluate theleastfixpoint oftheprograrIl (usingSerninaive\nevaluation).\nWerernarkthattheMagicSetsalgorithrll hasturnedouttobequiteeffective\nforcornputing correlated nestedSQLqueries, evenifthereisnorecursion~ and\nisusedforthispurpose inrnanycornrnercial DBlVISs, evensystenlsthatdonot\ncurrently support recursive queries.\nWenowdescribe thethreestepsintheMagicSetsalgorithrIl usingtheSarneLevel\nprogram asarunning exalllple.\nAdorned Program\nWeconsider thequerypattern8ameLevelbf.Thus,givenavalue c~wewant\ntocornpute allrowsin8arneLevel inwhichcappears inthefirsteolurnn. \\Ve\ngenerate theAdorned Prograrn padfrornthegivenprograrn Pbyrepeatedly\ngenerating adorned versions ofrulesin[Jforeveryreachable querypattern,\nwiththegivenquerypattern astheonlyreachable pattern tobeginwith;\nadditional reachable patterns areidentified duringthecourseofgenerating the\nA,dorned Prograrll asdescribed next.\nConsider arulein?whoseheadcontains thesarnetableassornereachable\npattern. rrheadorned versionoftheruledepends ontheorderin\\vhichwe\nconsider thepredicates inthebodyoftherule.l'bsirnplify ourdiscussion, ,ve\nassurnethatthisisahvaysleft-to-right. I~-'irst~wereplacetheheadoftherule\n,viththernatching querypattern. Afterthisstep,therecursive SarneLevel rule\nlookslikethis:\n8arncLeveZbf(S1,82):-Assembly(P1, 81,Q1),\n8ameLevel(P1, P2),Assembly(P2, 82,Q2).\nNext,weproceed left-to-right inthel)odyofthe rul(~until'weencounter the\nfirstrecursive predicate. .A.11cohullns thatcontainaconsUl,ut oravariablethat", "870": "840 (;HAPTER ~4\nappearstotheleftarernarkedb(forbound)andtherestarernar,kedf(forfree)\ninthequerypatternforthisoccurrence ofthepredicate. vVeaddthispattern\ntothesetofreachal)le patterns andInodifytheruleaccordingly:\nSaTrLeLevelbf(Sl,82) :-Assembly(Pl, 81,Ql),\nSarneLeveZbf(Pi,P2),Assembly CP2,82,Q2).\nIfthereareadditional occurrences ofrecursive predicates inthebodyofthe\nrecursive rule,wecontinue (addingthequerypatterns tothereachable setand\nrllodifying therule).(()fcourse,inlinearrecursive progralns, thereisatillOSt\noneoccurrence ofarecursive predicate inarulebody.)\n\\Verepeatthisuntilwehavegenerated theadorned versionofeveryruleinP\nforeveryreachable querypatternthatcontains thesametableastheheadof\ntherule.TheresultistheAdorned Program pad,which,inourexample, is\nSameLeveZbfC81,82):-AssemblyCP1, 81,Ql),\nAssemblyCP1, 82,Q2).\nSameLeveZbf(81,82):-AssemblyCP1, 81,Q1),\nSameLeveZbfCP1,P2),Assembly CP2,82,Q2).\nInourexarnple, thereisonlyonereachable querypattern. Ingeneral, there\ncanbeseveral.2\nAddingMagicFilters\nEveryruleintheAdorned Prograrn isrllodified byaddinga'nlagicfilter'pred\u00ad\nicatetoobtaintherewritten prograrn:\nSarne-Levelbf(81,82):-\n1\\dag'ic~k9arneLeveZbf (81),\nAssembly(Pl, 81,Q1),Assembly(P2, 82,Q2).\nSarneLeveZbf(S1,S2):-J\\;lag'ic ...,San1eLevelbfCS1),\nAssembly(Pl, 81,Ql),8arneLevelbf(P1,P2),\nAssembly(P2, 82,Q2).\nThefilterpredicate is(:l,copyoftheheadoftherule,'with'IVlagic'a..saprefix\nforthetablenhrneandthevariables incolllrnns corresponding tofreedeleted,\nasillllstrc:ited inthesetworules.\n2Asanexarnple: consider avariantoftheSameLevel program inwhichthevariables PIand1\"'J2\nareinterchanged inthebodyoftherecursive rule(Exercise 24.5)", "871": "De(l1u:tive ]Jatabascs\nDefining MagicFilterTables841\nConsider theAdorned Prograrl1 aftereveryrulehasbeenrnodified a,,')described.\nFrorHeachoccurrence 0ofarecursive predicate inthebodyofaruleinthis\nrIlodified prograrl1, ,vegenerate arulethatdefinesa.NIagicpredicate. T'he\nalgorithrl1 forgenerating thisruleisasfo11o\\:vs:(1)Deleteeverything tothe\nrightofoccurrence ()inthebodyoftherllodified rule.(2)i\\ddtheprefix\n'1I1agic'anddeletethefreecolulnns of().(~))Move0,\"withthesechanges, into\ntheheadoftherule.\nFroIn th~~recursive ruleinourexample, aftersteps(1)and(2)weget:\nSam,eLevelbf(81,82):-]vIagic_SarneLevelbf(S1),\nAssembly(P1, 81,Q1),AI\nag'ic_SameLevelbf(P1).\nAfterstep(3),weget:\nMagic.,_SameLevelbf(P1):-A1\nag'ic_Sam,eLevelbf(S1),\nAssembly(Pl, 81,Q1).\nThequeryitselfgenerates arowinthecorresponding Magictable,forexarnple,\nl\\Iagic.._SarneLevelbf(seat).\n24.6REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIIDescribe DatalogprograrIlS. lJseanexarnple Datalog prograrn toexplain\nwhyitisnotpossible towriterecursive rulesinSQL-92. (Section 24.1)\nl1liDefinetheterrnsrnodelandleast'(node!.vVhatcanyousayaboutleast\nrnodelsforDatalog prograrns? \\\\Thyisthisapproach todefining thernean\u00ad\ningofaDatalog prograrll calleddeclarative? (Section 24.2.1)\nIIIDefinethetenns.fi:rpointandleastji:Epoint. \\iVhatcanyousayabout1e&5t\nfixpoints forIJatalog prograrlls? vVhyisthisapproach todefining the\nrneaning o{aDatalog prograrIl saidtobeoperational? (Section 24.2.2)\nl1li\\Vhatisasafeprograrn? \\\\lllYisthisproperty irIlportant? \\\\Thatisrange\u00ad\nrestriction andhowdoesitensuresafety'?(Section 24.2.3)\nl1li\\Vhatistheconnection between lccl.':ltlnodelsandlea..stfixpoints forI)atalog\nprograrIls? (Section 24.2.4)", "872": "842 CHAPTER 24\n\u2022Explain ~whyprograIIls withnegation rnaynothavealea.'3tmodelorleast\nfixpoint. Extendthedefinition ofTange-Testriction toprograrns withnega\u00ad\ntion.(Section 24.3)\n\u2022vVhatisastratified prograIn? lIowdoesstratification addresstheprobleln\nofidentifying adesiredfixpoint? Showhoweveryrelational algebraquery\ncanbe\\vrittenasastratified Datalog prograrIl. (Section 24.3.1)\n\u2022Twoilnportant aspectsofSQL,rnultiset table8andaggr'egation 'withgroup\u00ad\ning,arernissinginDatalog. HovvcanweextendDatalog tosupport these\nfeatures? Discusstheinteraction ofthesetwonewfeatures andtheneed\nforstratification ofaggregation. (Section 24.4)\n\u2022DefinethetermsinfeTence anditeration. Whatarethetwomainchallenges\ninefficientevaluation ofrecursive Datalog programs? (Section 24.5)\n\u2022Describe Sem,inaive fixpoint evaluation andexplainhowitavoidsrepeated\ninferences. (Section 24.5.1)\n\u2022Describe theMagicSetsprogram transformation andexplainhowitavoids\nunnecessary inferences. (Sections 24.5.2and24.5.3)\nEXERCISES\nExercise 24.1Consider theFlightsrelation:\nFlights(fino: _~~teger, from:string, to:string, distance: integer,\ndeparts: time,arrives: time)\nWritethefollowing queriesinDatalog andSQL:1999 syntax:\n1.FindthefinoofallflightsthatdepartfromMadison.\n2.Findthe.flrwofallflightsthatleaveChicago afterFlight101arrivesinChicago andno\nlaterthan1hourafter.\n:3.FindthefinoofallflightsthatdonotdepartfromNIadison.\n4.FindaJIcitiesreachable frOllll\\iladison through aseriesofoneor1I10reconnecting flights.\n5.Findallcitiesreachable fromIVladison through achainofoneorrnoreconnecting flights,\nwithno1I1Orethan1hourspentonanyconnection. (Thatis,everyconnecting flight\nmustdepart <withinanhourofthearrivaloftheprevious flightinthechain.)\n6.Findtheshortest tilnetoflyfrOl11 ~IIadison toi\\dadras, usingachainofoneor1nore\nconnecting flights.\n7.FindtheJlnoofallflightsthatdonotdepart [1'0111 ~!Iadison oracitythatisreacha.ble\nfrolIlrvladison through achainofflights.\nExercise 24.2Consider thedefinition ofCornponents inSection 24.1.1.Suppose thatthe\nsecondruleisreplaced by", "873": "Deduct'ive Database.s\nComponents (Part,Subpart) :-Components (Part,Part2),\nComponents (Part2,Subpart).U-:I;v\n1.Ifthernodified prograIn isevaluated ontheASS\u20aclnbly relation inFigure 24.1~howInany\niterations doesNaivefixpointevaluation takeandwhatCOlllponents factsaregenerated\nineachiteration?\n2.Extendthegiveninstance ofAsselllbly sothatNaivefixpoint iteration takestwornore\niterations.\n3.'i\\lritethisprograrn inSQL:1999 syntax, usingtheWITHclause.\n4.vVriteaprogranl inDatalog syntaxtofindthepartwiththeInostdistinctsubparts; if\nseveralpartshavethesaIneInaxinlllm number ofsubparts, yourqueryshouldreturnall\ntheseparts.\n5.Howwouldyouranswertotheprevious partbechangedifyoualsowantedtolistthe\nnumber ofsubparts forthepartwiththeInostdistinctsubparts?\n6.Rewrite youranswers totheprevious twopartsinSQL:1999 syntax.\n7.Suppose thatyouwanttofindthepartwiththernostsubparts, takingintoaccount\nthequantity ofeachsubpart usedinapart,howwouldyourllodifytheCOlnponents\nprogram? (Hint:Towritesuchaqueryyoureasonaboutthenuruber ofinferences of\nafact.Forthis,youhavetorelyonSQL'snlaintaining asmanycopiesofeachfactas\nthenurnber ofinferences ofthatfactandtakeintoaccount theproperties ofSeulinaive\nevaluation. )\nExercise 24.3Consider thedefinition ofComponents inExercise 24.2.Suppose thatthe\nrecursive ruleisrewritten asfollowsforSeminaive fixpoint evaluation:\nComponents (Part,Subpart) :-deLta __Components(Part, Part2, Qty),\ndeLta_Components (Part2,Subpart).\n1.Attheendofaniteration, whatstepsIllustbetakentoupdate delta_Cornponents to\ncontainjustthenewtuplesgenerated inthisiteration? Canyousuggestanindexon\nCornponents thatInighthelptolIHlkethisfaster?\n2.Evenifthedeltarelation iscorrectly updated, fixpoint evaluation usingthepreceding\nruledoesnotalwaysproduce allanswers. Showaninstance ofAssembly thatillustrates\ntheprobleru.\n3.Canyousuggest awaytorewritetherecursive ruleintennsofdelt(LC;Olnponents so\nthatScrninaive fixpoint evaluation ahvaysproduces allanswers andnoinferences are\nrepeated acrossiterations?\n4.Showhowyourversionoftherewritten prograrn perfonns ontheexa,rnple instaJICe of\nAssernbly thatyouusedtoillustnlte theproblern withthegi\"venrewriting oftherecursive\nrule.\nExercise 24.4Consider thedefinition ofSarneLevel InSection 24.5.2andtheAssernbly\ninstance showninFigure24.1.\n1.Re\\vrite therecursive ruleforSelninaivf~ fixpoint evaluation andshc)\\,vho\\vSerninaive\nevaluation proceeds.\n2.Consider therulesdefining therelation Nlagic,\\vithspokeasthequeryconstant. For\nSernil1aive evaluation ofthe'Nlagic'versionoftheSarneLevel prognllu, alltuplesinIvlagic\narecornputed first.Showhow8erninaive evaluation oftheI\\rlagicrelation proceeds.", "874": "844 CJHAPTER 24\n~3.AfterthefvI;:lgicrelation iscmnputed, itcanbetreated Cl\"Safixeddatabase relation, just\nlikeAsseInbly, intheSenlinaive fixpoint evaluation oftherulesdefining SarneLeveI in\nthe'IVIagic'versionoftheprograrn. Rewrite therecursive ruleforSelninaive evaluation\nandshowhowScrninaive evaluation oftheserulesproceeds.\nExercise 24.5Consider thedefinition ofSanleLevel inSection 24.5.2andaqueryinwhich\nthefirstargulnent isbound.Suppose thattherecursive ruleisrc\\vritten asfolIovls, leading\ntornultiple bindingpatterns intheadorned prognnn:\n8ameLevel(81 ,S2):-Assembly(Pl, 81,Ql),\nAssembly(P1, 82,Q2).\n8ameLevel(81 ,S2):-Assembly(Pl, S1,Ql),\nSameLevel(P2, P1),Assembly(P2, S2,Q2).\n1.Showtheadorned progranl.\n2.ShowtheJ\\1agicprogram.\n3.ShowtheMagicprogram afterapplying Seminaive rewriting.\n4.Construct anexample instance ofAssenlbly suchthattheevaluating theoptirnized pro\u00ad\ngrarngenerates lessthan1%ofthefactsgenerated byevaluating theoriginal prograrn\n(andfinallyselecting thequeryresult).\nExercise 24.6Again,consider thedefinition ofSameLevel inSection 24.5.2andaqueryin\nwhichthefirstargurnent isbound.Suppose thattherecursive ruleisrewritten asfollows:\nSameLevel(Sl, 82):-Assembly(Pl, 81,Ql),\nAssembly(Pl, S2,Q2).\nSameLevel(Sl, 82):-Assembly(P1, S1,Ql),\nSameLevel(P1, Rl),SameLevel(Rl, P2),Assembly(P2, S2,Q2).\n1.Showtheadorned program.\n2.Showthel\\!Iagicprograln.\n~3.Showtherv1agicprograul afterapplying Serninaive rewriting.\n4.Construct anexarnple instance ofAsselnbly suchthattheevaluating theoptimized pro\u00ad\ngranlgenerates lessthan1%ofthefactsgenerated byevaluating theoriginal progranl\n(andfinallyselecting thequeryresult).\nBIBLIOGRAPHIC NOTES\n'1'heuseoflogicasaquerylanguage isdiscussed inseveralpapers[296, 5~:W],\"whicharoseout\nofinfluential workshops. (joodtextbook discussions ofdeductive databases canbefoundin\n[747,:-3,14:-\"3,794, '50~3].[614]isarecentsurveyarticlethatprovides anoverview andcovers\nthernajorprototypes inthearea,including LI)L[177],Glue-Nail! [214,549]EKS-Vl [758],\nAditi[615],Coral[612],LOLA[804],andXSB[644].\nl'hefixpoint sernantics oflogicprograms (anddeductive databases a...,aspecialcase)ispre\u00ad\nsentedin[751],whichalsoshows equivalenc(~ ofthefixpoint seInantics toalea.st-rnodd se\u00ad\nIrul,ntics. Theuseofstratification togiveanaturalsernantics toprograrns withnegation \\va..s\ndeveloped independently in[:37,154,559,752].", "875": "Deduct'i'ue Databases 845\nEfficient evaluation ofdeductive database querieshasbeenwidelystudied, and[58Jisa\nsurveyandcOlnparison ofseveralearlytechniques; [611]isamorerecentsurvey_ Serninaive\nfixpoint evaluation wa..\"independently proposed severaltiInes;agoodtreatuwut appears in\n[54].r1'heIvlagicSetstechnique isproposed in[57]andgeneralized tocoveralldeductive\ndatabase querieswithout negation in[77].'TheAlexander rnethod [G~nJwasindependently\ndeveloped andisequivalent toavariantofl'vIagicSetscalledSupplernentary AtagicSetsin[77].\n[553]showshowlVIagicSetsofferssignificant perfonnance benefits evenfornonrecursive SQL\nqueries. [ti73]describes aversionofl'vlagicSetsdesigned forSQLquerieswithcorrelation, and\nitsirnplernentation intheStarbufst systern(whichledtoitsiInplenlentation inIBNI'sDB2\nDBNIS). [670]discusses ho\\vlVlagicSetscanbeincorporated intoaSystenlRstylecost-based\noptimization framework. The ~lagicSetstechnique isextended toprograIIls withstratified\nnegation in[53,76]_[121]cOlnpares tvlagicSetswithtop-do\\vn evaluation strategies derived\nfroInProlog.\n[642]develops aprograrn rewriting technique relatedtolVlagicSetscalledlVlagicCounting.\nOtherrelatedmethods thatarenotbasedonprogranl rewriting butratheronfun-tirnecontrol\nstrategies forevaluation include[226,429,756,757].Theideasin1.226]havebeendeveloped\nfurthertodesignanabstract rnachine forlogicprograll1 evaluation usingtablingin[609,727];\nthisisthebasisfortheXSBsystell1[644].", "876": "25\nDATAWAREHOUSING AND\nDECISION SUPPORT\n..Whyaretraditional DBIvISs inadequate fordecision support?\n..Whatisthemultidimensional datanlOdelandwhatkindsofanalysis\ndoesitfacilitate?\n..WhatSQL:1999 features support rnultidiInensional queries?\n..HowdoesSQL:1999 support analysis ofsequences andtrends?\n..HowareDBMSs beingoptimized todeliverearlyanswers forinterac\u00ad\ntiveanalysis?\n..Whatkindsofindexandfileorganizations doOLAPsysterlls require?\n..VVhatisdatawarehousing andwhyisitirnportant fordecision sup\u00ad\nport?\n..Whyhavernaterialized viewsbecorne iInportant?\n..Howcanweefficiently Inaintain rnaterialized views?\n..Keyconcepts: OLAP,rnultirnensional rnodel,dinlellsions, nleasures;\nroll-up, drill-clown, pivoting, cross-tabulation, CUBE;WINDOWqueries,\n[rallleS,order;topNqueries, onlineaggregation; bitllli:tpindexes, join\nindexes; datawarehouses, extract, refresh, purge;rnaterialized views,\nincrernental rnaintenancc, rnaintaining warehouse views\nNotlling islnoredifficult, andtherefore rnoreprecious, thantobe\n(1)1<\"todecide.\n. NCtI)oleon Bonaparte\n846", "877": "[)ata ~;VaTeho1L8ing andDecis'io'n Support i47\nDcl.tabase luanagclncnt systerIls arewidelyusedbyorganizations forrnaintain\u00ad\ningdatathatdocurnents theireveryday operations. Inapplications thatupdate\nsuchoperational data7transactions typically rnakesrna11changes (forexalnple,\naddingareservation ordepositing acheck)andalargenU111ber oftransactions\nH1UStbereliablyandefficiently processed. Suchonlinetransaction process\u00ad\ning(OLTP) applications havedriventhegruwthoftheDBlVISindustry inthe\npastthreedecades and\"villdoubtless continue tobeirnportant. DB1VISs have\ntraditionally beenoptirnized extensively toperforn1 vvellinsuchapplications.\nH,ecently, ho\\vever, organizations haveincrc&':lingly crnphasized applications in\nwhichcurrentandhistorical dataiscoruprehensively analyzed andexplored,\nidentifying usefultrendsandcreating sununaries ofthedata,inordertosupport\nhigh-level decision rnaking. Suchapplications arereferred toclSdecision sup\u00ad\nport. ~1ainstrearn relational DBlVlSvendors haverecognized theirnportance\nofthisrnarketsegment andareaddingfeatures totheirproducts tosupport it.\nInparticular, SQLhasbeenextended withnewconstructs andnovelindexing\nandqueryoptirl1ization techniques arebeingaddedtosupport cornplex queries.\nTheuseofviewshasgainedrapidly inpopularity because oftheirutilityin\napplications involving cornplex dataanalysis. Whilequeriesonviewscanbe\nanswered byevaluating theviewdefinition whenthequeryissubrnitted, pre\u00ad\ncornputing theviewdefinition canrnakequeriesrunInuchfaster.Carrying\nther11otivation forpreconlputed viewsonestepfurther, organizations cancon\u00ad\nsolidate inforrnation fromseven:tldatabases intoadatawarehouse bycopying\ntablesfror11rnanysourcesintoonelocation orrnaterializing aviewdefinedover\ntablesfr01nseveralsources. Data'\\varehousing hasbecorne widespread, and\nIl1anyspecialized products areno\\vavailable tocreateandrnanage warehouses\nofdatafrorH1l1ultiple databases.\nvVebeginthischapter withanoverview ofdecision support inSection 25.1.\n\\Veintroduce thernultirnensional rnodelofdatainSection 25.2andconsider\ndatabase designissuesin25.2.1. vVediscusstherichcla..ssofqueriesthatit\nnaturally supports inSection 25.;3.\\VediscusshownewSQL:1999 constructs\nallc)vlustelexpress rnultidilnensional queries in25.3.1. InSection 25.4,vve\ndiscuss S(~L:1999extensions thatsupport queries overrelations tLSordered\ncollections .\\\\'\"8consider hOVltooptirnize forfa,stgeneration ofinitialansvvers\ninSectioll 25.5.1'11Crnanyquerylanguage extensions required inthe()LA.P\nenvirolllnentprornpted thedeveloprnent ofllC\\Virnplcrncntation techniques; we\ndiscusstheseinSection 25.6.InSection 25.7,\\veexarnirl(~ theissuesinvolved\nincreating andrnaintaining adata\\varehouse. FraInatechnical sta,ndpoint, a\nkeyissueishowtoIlutintain \\vctrehouse inforrnation (replicated tablesorviews)\n\u00b7whenthellnderl.ying sourceinfonnation changes. Aftercovering tlH~iUlportcl,nt\nroleplayedbyvic\\vs inOLAPand\\vaxehousing irlSection 25.8,weconsider\nIIuLintenance ofrnaterialized vievvsinSections 25.9and25.10.", "878": "848 C;lIAPTER 25\n25.1INTRODUCTION TODECISION SUPPORT\n()rganizational decisioll rnakingrequires acOlnprehensive vievvofallaspectsof\nanenterprise, so111anyorganizations created consolidated datawarehouses\nthatcontaindatadrawnfrcHnseveraldataba ..,;esll1atntained bydifferent busi\u00ad\nnessunitstogether vvithhistorical andSUlnlna,ry inforInation.\nThetrendtowarddatawarehousing isc0I11plelnented byanincrea.sed ernphasis\nonpo\"Vverful analysis tools.lVlanycharacteristics ofdecision support queries\nmaketraditional SQLsystenls inadequate:\n\u2022 11heWHEREclauseoftencontains rnanyANDandORconditions. Aswesaw\ninSection14.2.3, ORconditions, inparticular, arepoorlyhandled inrnany\nrelational DBJV1Ss.\n\u2022Applications requireextensive useofstatistical functions, suchasstandard\ndeviation, thatarenotsupported inSQL-92. Therefore, SQLqueriesrnust\nfrequently beernbedded inahostlanguage progrcun.\n\u2022Manyqueriesinvolveconditions overtimeorrequireaggregating overtime\nperiods. SQL-92 provides poorsupport forsuchtime-series analysis.\n\u2022Usersoftenneedtoposeseveralrelatedqueries. Sincethereisnoconve\u00ad\nnientwaytoexpressthesecOlnnlonly occurring families ofqueries, users\nhavetowritethernasacollection ofindependent queries, \\vhichcanbe\ntedious. Further, theDBlVIShasnowaytorecognize andexploitoptimiza\u00ad\ntionopportunities arisingfrolnexecuting nlanyrelatedqueriestogether.\nThreebroadclassesofanalysis toolsareavailable. First,SOInesysterIlssupport\naelc-1SSofstylized queriesthattypically involvegroup-by andaggregation oper\u00ad\natorsandprovideexcellent support forcOlnplex boolean conditions, statistical\nfunctions, andfeatures fortilne-series analysis. Applications dominated by\nsuchqueriesarecalledonlineanalytic processing (OLAP). 'Thesesysterns\nsupport aquerying styleinwhichthedataisbestthought of&9arnultidi\u00ad\nlnensional arrayandareinfluenced byend-user tools,suchasspreadsheets, in\naddition todatabase querylanguages.\nSecond, sorneDBwISs support traditional S(~L-style queriesbutaredesigned\ntoalsosupport OLAPqueriesefficiently. Suchsystenls canberegarded (1\",,,\nrelational DB1'v1Ss optirnized fordecision support applications. 'Nlanyvendors of\nrelational DBIVISs arecurrently enhancing theirproducts inthisdirection and,\novertilne,thedistinction bet\\veen specialized OLAPsysterns andrelational\nDBIVISs enhEtnced tosupport ()LAPqueriesislikelytodirninish.\nThethirdclassofanalysis toolsisrllotivated bythedesiretofindinteresting\norunexpected trendsandpatterns inlargedatasetsratherthantheconlplex", "879": "Data 1-1la:reho'U/3'ing andDecision Support ~49\n___\u2022__ \u2022__\u2022\u2022\u2022\u2022\u2022\u2022_._\u2022\u2022__\u2022__\u2022\u2022__\u2022._._.__ ri\u00b7_ri \u2022\nSQL:1999 andOLAP: Inthischapter, ,,'IediscussanUInber offeatures\nintroduced inSQL:1999 tosupport OLAP.Inordernottodelaypublica\u00ad\ntionoftheSQL:1999standard, thesefeatures \\vereactually addedtothe\nstandard through anamendment calledSQL/OLAP.\nquerycharacteristics justlisted.Inexploratory dataanalysis, although an\nanalystcanrecognize an:interesting pattern' \"vhenshownsuchapattern, itis\nverydifficulttofannulate aquerythatcaptures theessenceofaninteresting\npattern. Forexalnple, ananalystlookingatcredit-card usagehistories Illay\nwanttodetectunusual activity indicating Inisuseofalostorstolencard.A\ncataloglllerchant lnaywanttolookatcustolner recordstoidentify pro111ising\ncustoiners foranewproillotion; thisidentification woulddependoninccnIle\nlevel,buyingpatterns, delllonstrated interest areas,andsoall.Thealllount\nofdatainInanyapplications istoolargetoperrnitrnanual analysis oreven\ntraditional statistical analysis, andthegoalofdatamining istosupport\nexploratory analysis oververylargedatasets.Wediscussdatarniningfurther\ninChapter 26.\nClearly,evaluating OLAPordatarniningqueriesoverglobally distributed data\nislikelytobeexcruciatingly slow.Further, forsuchcOlnplex analysis, often\nstatistical innature,itisnotessential thattheIllOStcurrentversionofthedata\nbeused.Thenaturalsolution istocreateacentralized repository ofallthe\ndata;thatis,adatawarehouse. Thus,theavailability ofawarehouse facilitates\ntheapplication of()LAPanddatarniningtoolsand,conversely, thedesireto\napplysuchanalysis toolsisastrong1Ilotivation forbuilding adatawarehouse.\n25.2OLAP:MULTIDIMENSIONAL DATAMODEL\naLAI'applications aredOlninated byadhoc,cOlnplex queries. InSQLterllls,\nthesearequeriesthatinvolvegroup-by andaggregation operators. l'henatural\n\\vaytothinkabouttypical()LAPqueries, ho\\vever, isintennsofarnultidilnen\u00ad\nsinnaldatarllodel.Inthissection, \\vepresentthernultidirnensional dataIllodel\nandcorupare itwitharelational representation ofdata.Insubsequent sec\u00ad\ntions,wedescribe ()LAPqueries in.terrnsoftherllultidirnensional datarnodel\nandconsider ..scnnene,virnplernentation techniques designed tosupport such\nqueries.\nInthernultidirnensional datarnodel,thefocusisonacollection ofnurneric\nmeasures. EachInea..suredepends onasetofdirnensions. vVeusearunning\nexarnple basedonsalesdata..Therncc'tsure attribute inourexarnple issales.\nThedirnensions areProduct, Location, andTirne.(jivenaproduct, alocation;", "880": "850 CHAPTER 25&\nandatinle,'ATehaveatI110stoneassociated salesvalue.Ifweidentifyaproduct\nbyauniqueidentifier pidand,sirnilarly, identify location bylocidandtiIne\nbytirrLeid,wecanthinkofsalesinforrnation Ct.')beingarranged inathree\u00ad\ndirnensional arraySales.ThisarrayisshowninFigure25.1;forclarity,we\nshowonlythevaluesforasingleloeidvalue,locid-1,whichcanbethought of\nasasliceorthogonal tothelacidaxis.\nrr.......\n\"0N.....\n0..\n............locid/'/~-\"'-\n/\n2\ntimeid3\nFigure 25.1Sales:Arvlulticlimensional Dataset\n'Thisviewofdataasamulticlhnensional arrayisreadilygeneralized tornore\nthanthreedirnensions. InOLAPapplications, thebulkofthedatacanbe\nrepresented insucharnultidiInensional array.Indeed, someOLAPsysterns\nactually storedatainarnultidiInensional array(ofcourse,irnplenlented with\u00ad\nouttheusualprograrnrning language asslunption thattheentirearrayfitsin\nrnelnory). 0LAPsysternsthatusearraystostorernultidirnensiona.l datasets\narecallednlultidimensional OLAP(MOLAP) systcrl1s.\nThedataina11lultidirnensional arraycanalsoberepresented c1Asarelation,\nasillustrated inFigure25.2,whichshowstheSeHnedataasinFigure25.1,\nwithadditional rovvscorresponding tothe'slice'locid==-2.Tlhisrelation, which\nrelatesthedirnensions totherneasure ofinten~st, iscalledthefacttable.\nNO\\~lletustun1todirnensions.Each dirnension canhaveasetofassociated\nattributes. Forexarnple, theLocation dilTlension isidentified bytheloc'idat\u00ad\ntribute, \\vhich\\veusedtoidentify alocation intheSalestable.\"'FeaSSUlnc\nthatitalsohas ~),ttributes cau'ntry, state,andcity.\\Vefurtherassurnethat\ntheProduct dirnension hasctttributes pnanu:,category, andpTiceinadditi(Jn\ntotheidentifier pid.'rhecatcgoTy ofaproduct indicates itsgeneralnature;\nforexarnple, aproduct pantcouldhavecategory valueappaTcl. \\Veassurne\nthattherI'inlcdirnension hasattributes date,71JCek,Tnonth,quar-fcT, ycaT,and\nholiday.)lag inaddition totheidentifier tirneid.", "881": "DataWarcho11sing andDec-is'ion 8'lLppOTt 251\nlocid[\\'ales-_....\"\".........\"'......,m\"\"_....--\nII 1 1 25\n11 2 1 8\n11 3 1 15\n12 1 1 30 _.\n12 2 1 20r--------\" ...,,~\u00b7.'\"\"\"\" ....nfflfn,'V<+ ..._................... \u2022....\n12 3 150\n................. \"\"'......... \".~\".\u00ab\"....\"'.-.,\n13 1 1 8\n-.-f-.\n13 2 1 10\n13 3 1 10--\nII 1 2 35\n11 2 2 22\n11 3 2 10\n.__.,_._---\n12 1 226\n.......,..........,.........._....._._..__.f-----\n12 2 2 45._._.._......................------_ .._._-\n]2 3 2 20\n..._----.......\n13 1 2 20\n13 2 2 40--\n13 3 2 5\n[-------\u00b7-I--=~~~:-\u00b7\npidL.!..!!!!eid\nsta~ countryI\nProductsLocationscity locid\n- ..---= ..--.\n11LeeJeans Apparel 25.._._...\n12 Zord Toys 18\n~,~--\n13 BiroPen Stationery 2\n..\"\"\"'''\"'.........''\"'........ .,..~.\u2022..............-..._-_......... ...-\n1 Madison WI USA._-\n2 Fresno CA USA--\n5 Chennai TN India\n'-----\nSales\nFigure 25.2Locations, Products, andSales H.eprf~sent:ed asHelations", "882": "852('1. ..2r:::jHAPTER aft\nForeachdinlension, thesetofassociated valuescanbestructured a\"ahierar\u00ad\nchy.Forexarnple, citiesbelongtostates,andstatesbelongtocountries. Dates\nbelongtoweeksandrIlonths, both'weeksand1110nths arecontained inquaT\u00ad\ntel's,andquarters arecontained inyears.(Notethatavveekcouldspantwo\nrnonths; therefore, weeksarenotcontained inrnonths.) SCHneoftheattributes\nofadiruension describe theposition ofadirnensioll valuevvith respecttothis\nunderlying hierarchy ofdirnensioll values.Thehierarchies fortheProduct, Lo\u00ad\ncation,and ~rirnehierarchies inourexarnple aresho\\vnattheattribute levelin\nFigure25.3.\nPRODUCT\ncategory\npnameTIl\\tIE\nyear\nI\nquarter\nweek month\n~/\ndate\nFigure 25.3Dimension HierarchiesLOCATION\ncountry\nstate\ncity\nInfonnation aboutdirnensions canalsoberepresented &sacollection ofrela\u00ad\ntions:\nLocations( lo~..id:intege:!:> city:string, state:string, country: string)\nProducts(pid: int.~..~er,pnam,e:string, category: string, price:real)\nTirnes(t'irnei~: integer, date:string, week:integer, rnonth:integer,\nquarter: integer, year:integer, holiday~ ..fiag:boolean)\nTheserelations arcluuchsrnalIerthanthefacttableinatypical0I..lAPappli\u00ad\ncation;theyarecalledthediInension tables. OLAPsystcrl1sthatstoreall\ninforrnation, including facttables,asrelations arecalledrelational OLAP\n(ROI.JAP) systcrns.\n1'heTinlcstableillustrates theattention paidtotheT'irnedirnension intypical\nOLAPapplications. SC~L'sdateandtirnestaulp datatypesarenotadequctte;\ntosupport slunrnarizations thatreflectbusiness operations, infonnation such\nasfiscalquarters, holidaystatus,andsoonisrnaintained forea,chtirnevalue.", "883": "DataWarehOtlSing andDecL5'ion ~(hL1JPOTt\n25.2.1Multidimensional Database Design\nFigure25.4showsthetablesinourrunning salesexarnple. Itsuggests astar,\ncentered atthefacttableSales;suchacornbination ofafacttableanddi\u00ad\nrncnsion tablesiscalledastarschema. ThisschelnapatternisveryCOIIUIlon\nindatabc\"kses designed for0LAP.IThebulkofthedataistypically inthefact\ntable,whichha..'3noredundancy; itisusuallyinBCNF.Infact,toIninimize\nthesizeofthefacttable,dirnension identifiers (suchasp'idandt'irneid)are\nsystcrn-generated identifiers.\nPRODUCTS LOCATIONS\nSALES\nFigure25.4AnExample ofaStarSchemaholiday_flag\nInforrnation aboutdinlension valuesisrnaintained inthedirnension tables.Di\u00ad\n111ension tablesareusuallynotnonnalized. Therationale isthatthedimension\ntablesinadatabase usedforOL,AParestaticandupdate,insertion, anddele\u00ad\ntionanoillalies arenotirnportant. Further, becausethesizeofthedatabase is\ndorninated bythefacttable,thespacesaVE-xibynorrnalizing dilnension tables\nisnegligible. Therefore, rnini111izing thecornputation tilllCforcOlllbining facts\ninthefacttablewithdirnension inforrnation isthernaindesigncriterion, which\nsuggests thatweavoidbreaking adirnension tableintosrnallertables(which\nrnightleadtoadditional joins).\nSnlallresponse tirnesforinteractive querying areirnportant inOLAP,andrnost\nsysterns support theHlaterialization ofSUrl1Inary tables(typically generated\nthrough queriesusinggrouping). Adhocqueri(~sposedbyusersareanswered\nusingtheoriginalta,blesalongwithprecornputed surnrnaries. Averyirnportant\ndesignissueiswhichsunnnary tablesshouldbernaterialized toachievethe\nbestuseofavailable rnerllory andanswercOHnI1only a.skedadhocquerieswith\ninteractive response tirnes.IncurrentOLAPsysterns, deciding \"vhichsurnnlary\ntablestornaterialize rnay\\vellbetheInostirnportant designdecision.\nFinally,newstoragestructures andindexing techniques havebeendeveloped to\nsupport()LAPandtheypresentthedatabase designer \\'lithadditional physical", "884": "854 CHAPTER 2[)f\ndesignchoices. \\Vccover BOIHeofthesehnplclnentatiol1 techniques inSection\n')!:\"\"t'....d.t>.\n25.3MULTIDIMENSIONAL AGGREGATION QUERIES\nNowthat\\vehaveseenthernulticliInensiol1alluoclel ofdata,letusconsider how\nsuchdatacanbequeriedandrnanipulatecl. Theoperations supported bythis\nInodelarestrongly influenced byendusertoolssuchasspreadsheets. Thegoal\nistogiveendusersv.rhoarenotSQLexpertsanintuitive andpo\\verful interface\nforcornnlon business-oriented analysis tasks.Usersareexpected toposeadhoc\nqueriesdirectly, without relyingondatabase application prograrrnners.\nInthissection, weasslllnethattheuserisworking withamultidirnensional\ndatasetandthateachoperation returnseitheradifferent presentation ora\nsunllnary; theunderlying datasetisalwaysavailable fortheuserto1nanipulate,\nregardless ofthelevelofdetailatwhichitiscurrently viewed.InSection25.3.1,\nwediscusshowSQL:1999 provides constructs toexpressthekindsofqueries\npresented inthissectionovertabular, relational data.\nAveryC01111non operation isaggregating arneasure overoneor1noredimen\u00ad\nsions.Thefollowing queriesaretypical:\n..Findthetotalsales.\nIIFindtotalsalesforeachcity.\nIIFindtotalsalesforeachstate.\n'Thesequeriescanbeexpressed asS(~Lqueriesoverthefactanddirnension\ntables.Whenweaggregate arnea.'3ure OIloneorrnoredi1nensions, theaggre\u00ad\ngated1118'1.SUre depends onfewerdiInensioIls thantheoriginal Ineasure. For\nexanlple, whenwecornpute thetotalsalesbycity,theaggregated rneasure is\ntotalsalesanditdepends onlyontheLocation di1nension,whereas theoriginal\nsalesrneasure depended ontheLocatioll,Tirne, a,ndProduct dirnensions.\nAnother useofaggregation istoSU1Ilrnarize atdifferent levelsofadirnension\nhierarchy. If\\vearegiventotalsalespercity,wecanaggregate 011theLocation\ndinlension toobtainsalesperstate.Thisoperation iscalledroll-up inthe\nOLAI'literature. 11heinverseofroll-upisdrill-down: Giventotalsalesby\nstate,\\vecanEtskfora1Iloredetailed presentation bydrillingdownonLocation.\n\\\\\"Tkf'II\u00b7 .tI I\u00b7t\u00a3ItItt(\u00b7tlI(.'..:1'f'-',-,-11\"\".' \"'\"'j,\" ~'i .,~. -r\"J\".''''-\". ,.,~ ~,i'::}\"1 ..,.'.,. 0. '. ..,.I{ \",~.\".1.)'\"-:~.-\",I.\"\":.\\ ,.,...., \" :.\\-~CCdn<1S01 t;d.LSJ)(,1tJ01.JUS,SeLCSJ)C1Y01d,t;CCCiCCS,<:1,cWI,1setcs\npresented onaper-state basisfortherernaining states, riSbefore). Wecan\nalsodrilldowllonadiluension otherthanLocation. Forexarnple, \\vecanask", "885": "jJataWaTeho1.M3'ing andDecision SUppO'Tt\nfortotalsalesforeachproduct foreachstate,drillingdo\\vn OIltheProdnet\ndiInension.\nAnother C0111ll10n operation ispivoting. Consider a,tabulaxpresentation of\ntheSalestable.IfVlepivotitontheLocation andTitnedirnensions, weobtain\natableoftotalsalesforeachlocation foreachtilllevalue.ThisinfoI\"luation\ncanbepresented <:1..';atvvo-dirnensional chartinwhichtheaxesarelabeled\n'withlocation andtitnevalues;theentriesinthechartcorrespond tothetotal\nsalesforthatlocation and tirnt~.Therefore, valuesthatappearincolurnns\noftheoriginal presentation becoIne labelsofaxesintheresultpresentation.\nTheresultofpivoting, calledacross-tabulation, isillustrated inFigure25.5.\nObserve thatinspreadsheet style,inaddition tothetotalsalesbyyearand\nstate(takentogether), wealsohaveadditional sunlillaries ofsalesbyyearand\nsalesbystate.\nWICATotal\n1995\n1996\n1997\nTotal6381144\n~,-,._-\n38107145\n.~.~.~_..._.\n7535110\n176223399\n----\nFigure 25.5Cross-Tabulation ofSalesbyYearandState\nPivoting canalsobeusedtochangethedirnensions ofthecross-tabulation;\nfroInapresentation ofsalesbyyearandstate,wecanobtainapresentation of\nsalesbyproduetandyear.\nClearly, theOLAPfrarnework rnakesitconvenient toposeabroadclassof\nqueries. ItalsogivescatchynaInestosornefarniliar operations: Slicing a\ndatasetarnonnts toanequality selection ononeorrIloredirnensions, possibly\nalsowithSC)lnedirnensions projected out.Dicingadatasetarl10unts toarange\nselection. TheseterrllScornefrcnl1visuaJizing theeffectoftheseoperations on\nacubeorcross-tabulated representation ofthedata.\nANoteonStatistical Databases\nlVlany()LAPconcepts c],representinearlierworkonstatistical databases\n(SDBs), whicharedatabaBe systerl1s designed tosupport statistical applica\u00ad\ntions,although thisconnection hasnotbeensufficiently recognized because\nofdifferences inapplication dornains andtern.linology. Thernultidirnensional\ndatarllodel,'withthenotions ofarneasure associated withdirnensions (lond", "886": "856('1 .2r..:JHAPTER \u00b7\u00b70$\nclassification hierarchies fordirncIlsion vahles,isalsousedinSDBs.OLAP\noperations suchasroll-upanddrill-dovlJl havecounterparts inSDBs.Indeed,\nsorneirnplcrnentation techniques developed forOLAParealsoappliedtoSDBs.\nNonetheless~ sennedifferences arisefrornthedifferent dOlnains ()L.LLlPandSDBs\n\\veredeveloped tosupport. Forexarnple, SnBsareusedinsocioeconornic appli\u00ad\ncations, whereclassification hierarchies andprivacyissuesareveryilnportant.\nThisisreflected inthegreatercornplexity ofclassification hierarchies inSDBs,\nalongwithissuessuchaspotential breaches ofprivacy. (Theprivacy issue\nconcerns whether auserwithaccesstosUllunarized datacanreconstruct the\noriginal, unsununarized data.)Incontrast, OLAPhasbeenailnedatbusiness\napplications withlargevolulnes ofdataandefficient handling ofverylarge\ndatasets hasreceived lnoreattention thanintheSDBliterature.\n25.3.1ROLLUP andCUBEinSQL:1999\nInthissection, wediscusshowlnanyofthequerycapabilities ofthernultidi\u00ad\n111ensionalrlloclel aresupported inSQL:1999. Typically, asingleOLAPopera\u00ad\ntionleadstoseveralcloselyrelatedSQLquerieswithaggregation andgrouping.\nForexarnple, consider thecross-tabulation showninFigure25.5,whichwasob\u00ad\ntainedbypivoting theSalestable.ToobtainthesaIneinforrnation, wewould\nissuethefollowing queries:\nSELECT\nFROM\nWHERE\nGROUPBYrr.year,1.state, SUM(S.sales)\nSalesS,T'irnesT,Locations L\nS.tirneid=T.tiIneid ANDS.locid=L.locid\nT.year,1.state\nThisquerygenerates theentriesinthebodyofthechart(outlined bythedark\nlines).Thesurllluary cohunnontherightisgenerated bythequery:\nSELECT\nFROM\nWHERE\nGROUPBY]\".year, SUM(S.saJes)\nSalesS1,]~ilncsT\nS\u00b7\u00b71T'\u00b71 '\".tuneu= .tunclC\nT.year\nl'hc~sunnnary ro\\vatthebottorl1isgenerated l)ythequery:\nSELECT\nFROM\nWHERE\nGROUPBYL.state, SUM(S.sales)\nSalesS,Locations L\nS.locid=L.locicl\nI\".state\nl'heC>UI11111ative SUITlinthebottonl-right cornerofthech;:utisproduced bythe\nquery:", "887": "857\n$\nSELECT\nFROM\nWHERESUM(S.sales)\nSalesS~Locations L\nS.loc:id=L.locid\nTheexarnple cross-tabulation canbethought ofasroll-upontheentiredataset\n(Le.,treating everything asonebiggroup),ontheLocation dirnension, onthe\nrrirnedirnensioIl, andontheLocation andTinledinlensions together. Each\nroll-upcorresponds toasingleSQLquerywithgrouping. Ingeneral, givena\nrneEtSUre withka..ssociated dirnensions, wecanrolluponanysubsetofthesek\ndiInensions; so\\vehaveatotalof2ksuchSQLqueries.\nThrough high-level operations suchaspivoting, userscangenerate lTlanyof\nthese 2k~SQLqueries. R,ecognizing thecornrnonalities between thesequeries\nenables r110reefficient, coordinated COlTlputation ofthesetofqueries.\nSQL:1999extendstheGROUP BYconstruct toprovidebettersupport forroll-up\nandcross-tabulation queries. TheGROUP BYclausewiththeCUBEkeyword is\nequivalent toacollection ofGROUP BYstatenlents, withoneGROUP BYstate\u00ad\nnlE~ntforeachsubsetofthekdirnensions.\nConsider thefollowing query:\nSELECT\nFROM\nWHERE\nGROUP BYrr.year,L.state, SUM(S.sales)\nSalesS,TirnesT,Locations L\nS.tirneid=T'.tirneid ANDS.1ocid=L.locid\nCUBE(T.year, L.state)\nTheresultofthisquery,showninFigure25.6,isjustatabularrepresentation\nofthecross-tabulation inFigure25.5.\nSQL:1999alsoprovides variants ofGROUP BYthatenablecornputatioll ofsub\u00ad\nsetsofthecross-tabulation cornputed usingGROUP BYCUBE.Forexarnple, \\VC\ncallreplacethegrouping clauseintheprevious query\\ivith\nGROUP BYROLLUP Cr.y(~ar, L.state)\nIncontrast toGROUP BYCUBE, Vileaggregate byanpairsofyearltndstatevalues\netnelbyeach ~year,and.cornpute anoverall SlIHlfortheentiredataset(thela.st\nrCNlinFigure25.6),but\\VCdonotaggregate for8(1,chstatevalue.1'11eresult\nisidentical tothatsho\\vninF'igure 25.6,exceptthattherowswith'nl1,llillthe\nT.ycru'COhUIlllandnon-nvJl valuc~sintlH~L.,'itatccolurnnarenotcornputed.\nCUBEpid,locid,tirneid BYSUMSales", "888": "858 CHAPTER 2fJ\n1995 63\n81\n144CA\nnull1995-r--------t---,1995\n1996 \\V1 38\n1996 CA 107\n1996\n19971H,dl\nWI145\n75\n1997 CA 35\n110\n176\n223null,--+---WI\nCAnull\n--+--~---t---null1997\nnull null 399\nFigure 25.6TheResultofGROUPBYCUBEonSales\nrrhisqueryrollsupthetableSalesonalleightsubsetsoftheset{pid,locid,\ntirneid} (including theemptysubset). Itisequivalent toeightqueriesofthe\nfonn\nSELECT SUM(S.sales)\nFROM SalesS\nGROUP BYgrouping-list\nThequeriesdifferonlyinthegrouping-list, whichissornesubsetoftheset{pid,\nlocid,tirneid}. Wecanthinkoftheseeightqueries a'3beingarranged inalattice,\nasshowninFigure25.7.Theresulttuplesatanodecanbeaggregated further\ntocornpute theresultforanychildofthenode.Thisrelationship between the\nqueriesarisinginaCUBEcanbeexploited forefficient evaluation.\n{pid.locid,timeid}\n~I~\n{pid,locid} {pid,timeid} {Iocid,timeid}\n\\><1><1\n{pid} {Iocid} {timeid}\n~I~\n{}\nFigure25.7'l'heLatticeofGROUPBYQueries illaCUBEQuery", "889": "Datavf,!aTc}UJ1U3ing andDecision SllPP07't\n25.4WINDOW QUERIES INSQL:1999859\nThetiInedirnension isveryimportant indecisionsupportandqueriesinvolving\ntrendanalysis havetraditionally beendifficult toexpressinSQL.Toaddress\nthis,SQL:1999introduced afundamental extension calledaquerywindow.\nExamples ofqueriesthatcanbewritten usingthisextension, butareeither\ndifficult oriInpossible towriteinSQLwithout it,include\n1.Findtotalsalesbyrnonth.\n2.Findtotalsalesbyrnonthforeachcity.\n3.Findthepercentage changeinthetotalmonthly salesforeachproduct.\n4.Findthetopfiveproducts rankedbytotalsales.\n5.Findthetrailingndaymovingaverage ofsales.(fbI'eachday,wemust\ncompute theaveragedailysalesoverthepreceding ndays.)\n6.Findthetopfiveproducts rankedbycumulative sales,foreverymonth\noverthepastyear.\n7.Rankallproducts bytotalsalesoverthepastyear,and,foreachproduct,\nprintthedifference intotalsalesrelativetotheproduct rankedbehindit.\nThefirsttwoqueriescanbeexpressed asSQLqueriesusingGROUP BYoverthe\nfactanddinlension tables.Thenexttwoqueriescanbeexpressed too,butare\nquitecomplicated inSQL-92. Thefifthquerycannotbeexpressed inSQL-92\nifnistobeapararneter ofthequery.Thelastquerycannotbeexpressed in\nSQL-92.\nInthissection,wediscussthefeatures ofSQL:1999thatallowustoexpressall\nthesequeriesand,obviously, arichclassofsirnilarqueries.\nThernainextension istheWINDOWclause,whichintuitively identifies anordered\n'window' ofrows'around' eachtupleinatable.Tihisallowsustoapplyarich\ncollection ofaggregate functions tothewindovv ofarowandextendtherow\nwiththeresults.F'orexarnple, wecanassociate theaveragesalesoverthepast\n3dayswitheverySalestuple(eachofwhichrecords1day~ssales).Thisgives\nusa3-dayIllovingaverageofsales.\n\\Vhilethereissornesirnilarity totheGROUP BYandCUBEclauses, thereare\nilnportant differences asvvell.Forexarnple, liketheWINDOWoperator, GROUP\nBYall()\\~lsustocreatepartitions ofrowsandflT)plyaggregate functions suchas\nSUMtotherowsinapa.,rtition. lIo\\vever, unlikeWINDOW, thereisasingleoutput\nrowperpa.rtition, ratherthanoneoutputrowforeachro\\v,andE~achpartition\nisanunorder(~d collection of1'O\\\\7's.", "890": "860\n\\Venowillustrate the\"window concept through anexalnple:CHAPTER 25\nt\nSELECT L.state, rr.IIlonth ,AVG(S.sales) OVER\"vVASInovavg\nFROM SalesS,Tinlesrr,Locations L\nWHERE S.tirneid=T.tirIleid ANDS.1ocid=L.locid\nWINDOW VV~AS(PARTITION BYL.state\nORDER BY'f.lnonth\nRANGEBETWEEN INTERVAL '1'MONTHPRECEDING\nANDINTERVAL '1'MONTHFOLLOWING)\nTheFROMandWHEREclausesareprocessed asusualto(conceptually) generate\naninterrnediate table,whichwerefertoa.'3Ternp.vVindows arecreatedover\ntheTeHIprelation.\nTherearethreestepsin defining awindow. First 1wedefinepart'it'ions ofthe\ntable,usingthePARTITION BYclause.Intheexarnple, partitions arebasedon\ntheL.8tatecolurnn. Partitions aresitnilartogroupscreatedwithGROUPBY,but\nthereisaveryimportant difference inhowtheyareprocessed. Tounderstand\nthedifference, observethattheSELECT clausecontains acolumn, T.month,\nwhichisnotusedtodefinethepartitions; different rowsinagivenpartition\ncouldhavedifferent valuesinthiscolulun. Suchacolurnncannotappearinthe\nSELECT clauseinconjunction withgrouping, butitisallowed forpartitions.\n'Thereasonisthatthereisoneanswerrowforeachrowinapartition ofTernp,\nratherthanjustoneanswerrowperpartition. Thewindowaroundagivenrow\nisusedtoCOlnpute theaggregate functions inthecorresponding answerrow.\nThesecondstepindefining a\\vindow istospecifytheordeTir~g ofrowswithin\napartition. WedothisusingtheORDER BYclause;intheexarnple, therows\nwithineachpartition areordered byT.'Tnonth.\nThethirdstepinwindow definition isto!Ta'Tnewindo\\vs; thatis,toestablish\ntheboundaries ofthewindowassociated witheachrowinterrnsoftheordering\nofrowswithinpartitions. Intheexalnple, thewindow forarowincludes the\nro\\vitselfplusallrowswhosernonthvalueiswithinaInonthbeforeorafter;\ntherefore~ arow\\,thoseTnonthvalueis.Jllne2002hasawindow containing all\nrowswithTnonthequalto!\\Ilay,June,orJuly2002.\n1'heanswerro\\vcorresponding toagiven 1'0\\\\,'isconstructed byfirstidentifying\nits\\vindo\\v. Then~foreachansvvercolurundefinedusingawindow aggregate\nfunction, wecornpute thea,ggregate llsingthero\\vsintheV\\Tindo\\v.\nInourexarnple~ eachro\\vofl\"elnpisessentially aro\\vofSales,taggedwith\nextradetails(aboutthelocation andtirnedirnensions). Thereisonepartition\nforea.chstate(tndeveryro\\vofTernpbelongstoexactlyonepartition. Consider", "891": "861\naro\\vforastorein\\Visconsin. ~rherowstatesthesalesforagivenproduct, in\nthat store~atacertaintirHe.The\\'lindc)\\1\\;' forthisro\\.\\!includes allro\\vsthat\ndescribe salesin\\Visconsin vvithintheprevious ornextInonthand1novavg is\ntheaverageofsales(overallproducts) in\\Visconsin \\vithinthisperiod.\n\\\\Tonotethattheordering ofro\\vs'ivithinapartition forthepurposes ofwindoVvT\ndefinition doesnotextendtothetableofanswerro\\vs.Theordering ofansvver\nro\\vsisnondeterlninistic, unless,ofcourse,\\vefetchtherIlthrough (1,cursorand\nuseORDER BYtoorderthecursor's output.\n25.4.1Framing aWindow\nTherearetwodistinct waystofra1118awindow inSQL:1999.l'heexarnple\nqueryillustrated theRANGEconstruct, whichdefinesawindow basedonthe\nvaluesinSOlllecohulln(rnonthinourexarnple). Theordering colu111nhasto\nbeanU111eric type,adatetillle type,oranintervaltypesincethesearetheonly\ntypesforwhichaddition andsubtraction aredefined.\nThesecondapproach isbasedonusingtheordering directlyandspecifying how\nIllanyrowsbeforeandafterthegivenrowareinitswindow. Thus,wecould\nsay\nSELECT L.state, T.rnonth, AVG(S.sales) OVER\\VASInovavg\nFROM SalesS,Tilll(~ST,Locations L\nWHERE S.tirneid=T'.tinlE~id ANDS.locid=L.locid\nWINDOWWAS(PARTITION BYL.state\nORDER BYT.IIlonth\nROWSBETWEEN 1PRECEDING AND1FOLLOWING)\nIfthereisexactlyonerowinTenlpforeachIIlonth,thisisequivalent tothe\nprevious query.IIo\\vever ~ifc\\,givenlnonthhasnorowsorlnultiple l\"(nvs,the\nt\\VOqueriesproduce different results.Inthiscase,theresultofthesecondquery\nishardtounderstand becausethe\\vindc)\\vs fordifferent rowsdonotalignina,\nIlfttllralway.\nThesecondapproach isappropriate if,intcnnsofourexarnple~ thereisexactly\none1'o\\vperlllonth. C\u00b7eneralizing frOIrIthis,itisalsoappropriate ifthereis\nexactly onei\u00b7o\\vforeveryvahleinthesequence ofordering COhll1Ul values.\n\u00b7UnJikethefirstapproach, 'wheretheordering hastobespecified overasingle\n(rullneric, datetinl\u20ac-\\ orinterval type)colurnn, theordering canbebasedona\ncornposite key.", "892": "862 (;HAPTER 25\n\\rYecanalsodefine\\vindows thatincludeallrcnvsthatarebefore B,givenrow\n(UNBOUNDED PRECEDING) orallr0\\VSafteragivenrow(UNBOUNDED FOLLOWING)\n'withintherow~spartition.\n25.4.2NewAggregate Functions\n\\:Vhilethestandard aggregate functions thatapplytornultisets ofvalues(e.g.,\nSUM,AVG)canbeusedinconjunction \\vithWilldo\\ving, thereisalleedfora\nnewclassoffunctions thatoperateona!'istofvalues.\nTheRANKfunction returnstheposition ofarowwithinitspartition. Ifa\npartition ha..'315rows,thefirstrovv(according totheordering ofrowsinthe\nwindow definition overthispartition) ha.srank1andthelastrowhasrank15.\nTherankofintermediate rowsdepends onwhether therearemultiple (orno)\nrowsforagivenvalueoftheorder.ing colurnn.\nConsider ourrunning example. IfthefirstrowintheWisconsin partition has\nthelllonthJanuary 2002,andthesecondandthirdrowsbothhavethernonth\nFebruary 2002,thentheirranksare1,2,and2,respectively. Ifthenextrow\nhasrllonthMarch2002itsrankis4.\nIncontrast, theDENSE_.RANK function generates rankswithout gaps.Inour\nexalnple, thefourrowsaregivenranks1,2,2,and3.Theonlychangeisin\nthefourthrow,whoserankisnow3ratherthan4.\nThePERCENT ...RANKfunction givesalneasure oftherelative position ofarow\nwithinapartition. Itisdefinedas(RANK-1) divided bytheInnnber ofrows\ninthepartition. CUME-DIST issirnilarbutbasedonactualposition withinthe\norderedpartition ratherthanrank.\n25.5FINDING ANSWERS QUICKLY\nArecenttrend,fueledinpartbythepopularity oftheInternet, isanernphasis\n011queriesforwhichauservvantsonlythefirstfevill,orthe'best'few,ansvvers\nquickly. \\VhcnusersposequeriestoasearchenginesuchasAltaVista, they\nrarelylookbeyondthefirstorsecondpageofresults. Iftheydonotfind\nwhattheyarelooking for,theyrefinetheirqueryandresubrnit it.'.rhesenne\nphen()lneuon occursindecision support applications andscnneDBl\\;1Sproducts\n(e.g.,DB2)alreadysupport extended SQLcon.structs tospecifysuehqueries. A\nrelatedtrendisthat,forcornplex queries, userswouldliketo~eeanapproxirnat(~\nanswerquicklyandthenhaveit1Jecontinually refined,ratherthan\\vaituntil\ntheexactansvverisavailablc~. \\Venowdiscussthese 1,\"\"0trendsl)riefly.", "893": "DataWaTcho'u8'ing andDecis'io71 S'UPJ)OTt\n25.5.1TopNQueries&63\nAnanalystoftenwantstoidentifythetop-selling handful ofproducts, forex\u00ad\nalnple.\\Vecansortbysalesforeachproduct andreturnanswers inthisorder.\nIf\\vehaveaInillionproducts andtheanalystisinterested onlyinthetop10,\nthisstraightforward evaluation strategy isclearly\\vasteful. Itisdesirable for\nuserstobeabletoexplicitly indicate howrnanyanswers theywant,rnaking\nitpossible fortheDB1VlStooptirnize execution. l-'hefollo\\ving exarnple query\nasksforthetop10products ordered bysalesinagivenlocation andtiIne:\nSELECT P.pid,P.pnarne, S.sales\nFROM SalesS,Products P\nWHERE S.pid=P.pid ANDS.locid==l ANDS.tiIneid=3\nORDERBYS.salesDESC\nOPTIMIZE FOR10ROWS\nTheOPTIMIZE FORNROWSconstruct isnotinSQL-92 (orevenSQL:1999), but\nitissupported inIBM'sDB2product, andotherproducts (e.g.,Oracle9i)have\nsirnilarconstructs. Intheabsence ofacuesuchasOPTIMIZE FOR10ROWS,the\nDBMScomputes salesforallproducts andreturnsthenlindescending order\nbysales.Theapplication canclosetheresultcursor(i.e.,tenninate thequery\nexecution) afterconsulning 10rows,butconsiderable efforthasalreadybeen\nexpended incornputing salesforallproducts andsortingthem.\nNowletusconsider howaDBMScanusetheOPTIMIZE FORcuetoexecutethe\nqueryefficiently. ThekeyistosOlnehow cornpute salesonlyforproducts that\narelikelytobeinthetop10bysales.Suppose thatweknowthedistribution\nofsalesvaluesbecause wernaintain ahistogran1 onthesalescohuunofthe\nSalesrelation. Wecanthenchooseavalueofsales,say,c,suchthatonly\n10products havealargersalesvalue.ForthoseSalestuplesthatrneetthis\ncondition, wecanapplythelocation andtirneconditions aswellandsortthe\nresult..Evaluating thefollowing queryisequivalent tothisapproach:\nSELECT\nFROM\nWHERE\nORDER BYP.pid,P.pnarne, S.sales\nSalesS,Products P\nS.pid=P.picl ANDS.locid=1 AND\nS.salesDESCS.tirneid::::::~3 ANDS.sales>c\nThisapproach is,ofcourse,ruuchfasterthanthealternative ofcornputing all\nproduct salesandsortingthern,butthereareSOInein1portant problerns to\nresolve:\n1.flowdo'wechoosethesalescntoffvaluec?EIistograrns andothersysteln\nstatistics canbeusedforthisrn1rI)()SC, butthiscanbeatrickyissue.For", "894": "864 C;HAPTER 25\n@\none thing~thestatistics rnaintained byaDBtv.ISareonlyapproxirnate.\nForanother, evenif\\vechoosethecutofftoreflectthetop10salesvalues\naccurately, otherconditions inthequeryInayelirninate SOHleoftheselected\ntuples,leavinguswithfewerthan10tuplesintheresult.\n2.~'Vhat'ifwehave 'fnon~than10t'll]Jlesin the'result?Sincethechoiceof\nthecutoffcisapproxirnate, \\'Iecouldget1norethanthedesirednurnber\noftuplesintheresult.rrhisiseasilyhandled byreturning justthetop\n10totheuser.\\Vestillsaveconsiderably withrespecttotheapproach\nofcornputing salesforallproducts, thankstotheconservative pruning of\nirrelevant salesinfonnation, usingthecutoffc.\n3.What'ifwehavefewer'than10tuplesinthe.resv,lt?Evenif\\vechoosethe\nsalescutoffcconservatively, wecouldstillcOlnpute fe\\verthan10result\ntuples.Inthiscase,wecanre-execute thequerywithasrnallercutofFvalue\nC2orsirnplyre-execute theoriginal query\\vithnocutoff.\nTheeffectiveness oftheapproach depends onhowwellwecanestirnate the\ncutoffand,inparticular, onrninimizing thenurnber oftiulesweobtainfewer\nthanthedesirednurnber ofresulttuples.\n25.5.2OnlineAggregation\nConsider thefollowing query,whichasksfortheaveragesalesarIlountbystate:\nSELECT\nFROM\nWHERE\nGROUPBYL.state, AVG(S.sales)\nSalesS,Locations L\nS.locid=L.locid\nL.state\nThiscanbeanexpensive queryifSalesandLocations arelargerelations. \\Ve\ncannota.chievefastresponse tirneswiththetraditional approach ofcornputing\ntheanwerinitsentirety whenthequeryispresented. Onealternative, aswe\nhaveseen,istouseprecornputation. Another alternative istocornpute the\nans\\vertothequerywhenthequeryispresented l)utreturnanapproxirnate\nansvvertotheuserassoonaspossible. A.sthecornputation progresses, the\nans\\verquality,iscontinually refined.Thisapproach iscalledonlineaggrega\u00ad\ntion.Itisveryattra,ctive forqueriesinvolving aggregation, beca,use efficient\ntechniques forcornputing andrefining approxirnate ans\\\\rers areavailable.\nChllinf:aggregation isillustrated inFigure25.8:ForCeLebstatc\"\"\"thegrouping\ncriterion forourexarnple query.thecurrentvalueforaveragesalesisdisplayed,\ntogether withaconfidence interval 11heentryforAlaskatellsusthatthe", "895": "DataYlaTcho'lLs'ing andDecis'ion, 8'UPIJOTt:\nSTAfUS PRJORrrU\u00a3 Stare ,VGtsmtSJ r-.lnt.enal\n_:::~Jf.Iii~\\\n\\~)Alabama 5,232.5 97% 103.4\n-=~==] Alaska 2,832.5 93% 132.2\nJ~.-~'\nArizona 6,432.5 98% 52.3\\~)\nWyoming 4,243.5\nFigure 25.8OnlineAggregation\ncurrentestiInate ofaverageper-store salesinAlaskais$2,8~32.50, andthatthis\niswithintherange$2,700.30 to$2,964.70 with93%probability. rrhestatus\nbarinthefirstcolumnindicates howclosewearetoarrivingatanexactvalue\nfortheaveragesalesandthesecondcohllnnindicates 'whether calculating the\naverage salesforthisstateisapriority. Estimating average salesforAlaska\nisnotapriority, butestimating itforArizona isapriority. Asthefigure\nindicates, theDBlVISdevotesInoresysternresources toestiInating theaverage\nsalesforhigh-priority states;theestirnate forArizona isInuclltighterthanthat\nforAlaskaandholdswithahigherprobability. Userscansetthepriority for\nastatebyclicking onthePrioritize buttonatanytilneduringtheexecution.\nThisdegreeofinteractivity, together withthecontinuous feedback provided by\nthevisualdisplay, rnakesonlineaggregation anattractive technique.\nToirnplernent onlineaggregation, aDEl\\!ISlIlustincorporate statistical tech\u00ad\nniquestoprovide confidence intervals forapproxiInate answers andusenon\u00ad\nblocking algorithms fortherelational operators. Analgorithnl issaidto\nblockifitdoesnotproduce outputtuplesuntilithasconsurned allitsinput\ntuples.Forexarnple, thesort-Illerge joinalgoritlun blocksbecause sortingre\u00ad\nquiresallinputtuplesbeforedetennining thefirstoutputtuple.Nestedloops\njoinandhashjoinaretherefore preferable tosort-rnerge joinforonlineaggrega\u00ad\ntion.Sirnilarly, hash-based aggregation isbetterthansort-based aggregation.\n25.6IMPLEMENTATION TECHNIQUES FOROLAP\nInthissectionwesurvey80r11eirnplernentatioll techniques rllotivated bythe\n()LAPenvirornnent. rrhegoalistoprovideafeelforhow()LAPsysterIls differ\nfron11noretraditional S(~Lsysterns; ourdiscussion isfaTfrorncornprehensive.", "896": "866 CHAPTER 2q\nr------.-----.-- --- - - - _ ______.._._.-_.,._-_._--\n\u2022\u2022-\u2022\u2022--.....-\u2022\u2022\"\u2022\u2022\"....m\"..'.....-\u2022\u2022\u2022\u2022-.--- ....\n----:.l\nBeyond B+ Tl~ees: Complex querieshavernotivated theaddition of\npowerful indexing techniques toDBMSs. Inaddition toI3:+treeindexes,\nOracle9isupports bitlnapandjoinindexesandInaintains thesedynalni- i\ncallyastheindexedrelations areupdated. Oracle9ialsosupports indexes\nonexpressions overattribute values,suchas10*sal+bonus.Microsoft\nSQLServerusesbitrnapindexes. SybaseIQsupports severalkindsof\nbitrnapindexes, andrnayshortlyaddsupport foralinearh&'3hing based\nindex.Informix UDSsupports RtreesandInforrnix XPSsupports bitlIlap\nindexes.\nl--- ~__...\nTherIlostly-read environruent ofOLAPsysterns rnakestheCPUoverhead of\nrnaintaining indexesnegligible andtherequireruent ofinteractive response tinles\nforqueriesoververylargedatasets rnakestheavailability ofsuitable indexes\nveryimportant. Thiscombination offactorshasledtothedeveloprnent ofnew\nindexing techniques. Wediscussseveralofthesetechniques. Wethenconsider\nfileorganizations andotherOLAPimplenlentation issuesbriefly.\nWenotethattheernphasis onqueryprocessing anddecision support appli\u00ad\ncationsinOLAPsystems isbeingcornplemented byagreatererllphasis on\nevaluating cOlnplex SQLqueriesintraditional SQLsysterIls. Traditional SQL\nsysternsareevolving tosupportOLAP-style queriesmoreefficiently, supporting\nconstructs (e.g.,CUBEandwindowfunctions) andincorporating irnpleruentation\ntechniques previously foundonlyin specialized 0LAPsystems.\n25.6.1BitmapIndexes\nConsider atablethatdescribes custorners:\nCustoruers( custid:integer, narne:string, gender':boolean, rating:integer)\nTheratingvalueisanintegerintherange 1.to5,andonlytwovaluesare\nrecorded forgender.Cohllnns withfewpossible valuesarecalledsparse. vVe\ncanexploitsparsity toconstruct anewkindofindexthatgreatlyspeedsup\nqueries 011thesecobulins.\nTh(~ideaistor.i'ecordvaluesforsparsecolurnns asasequence ofbits,onefor\neachpossible value.FbI'exarnple, a,gendervalueiseither10oren;a1.in\nthefirstposition denotes ruale,and1.inthesecondposition denotes fe1nale.\nSimilarly, 10000denotestherai'ingvalue1,and00001denotestheratingvalue\n5.", "897": "DataWareho,lt,Crtng andDecision SUPPO'lt gf)7\nIfweconsider thegendervaluesforallrowsintheCustorners table,vvecan\ntreatthisasacollection oftwobitvectors, OIleofwhichhasthea.,')sociated\nvalue ~/I(ale)andtheothertheassociated valueF(ernale).Eachbitvectorhas\nonebitperrowintheCustorners table,indicating vvhether thevalueinthat\nrowisthevalueassociated withthebitvector.Thecollection ofbitvectorsfor\naCOhUllIliscalledabitrnap indexforthatcolurnn.\nAnexaInple instance oftheCustomers table,together withthebitlnapindexes\nforgenderandrating,isshowninFigure25.9.\n.----\"001.00\n000 01\n00 001.\n0001.0I\u00b7;11..\u20221J\u00b7\u00b7.\u00b7.].\u00b7.\u00b7\u00b7\u00b7.\u00b7.\u00b7.\u00b7.\u00b7\u00b7\u00b7ld\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7I\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7;4\u00b7\u00b7\u00b7\u00b7\u00b7 .....[!J\n112JoeM 3... ,,-\n115 RaInM 5...\n119 SueF 5\n112WooM 4.:::.:=\n1.0\n10\n01.\n10!M!Fj\nFigure 25.9Bitmap Indexes ontheCustomers Relation\nBitmapindexesoffertwoimportant advantages overconventional hashandtree\nindexes. First,theyallowtheuseofefficientbitoperations toanswerqueries.\nForexample, consider thequery,\"HowInanyInalecustolllers havearating\nof5?\"Wecantakethefirstbitvectorforgenderanddoabitwise ANDwith\nthefifthbitvectorforratingtoobtainabitvectorthathas1.foreverymale\ncustoIner withrating5.WecanthencountthenumberofIsinthisbitvector\ntoanswerthequery.Second,bitmapindexescanbemuch luore cOInpact than\natraditional B+treeindexandareverycunenable totheuseofcornpression\ntechniques.\nBitvectorscorrespond closelytotherid-listsusedtorepresent dataentriesin\nAlternative (3)foratraditional B+treeindex(seeSection8.2).Infact,wecan\nthinkofabitvectorforagivenagevalue,say,asanalternative representation\noftherid-listforthatvalue.\nThissuggests awaytocombine bitvectors(andtheiradvantages ofbitwise\nprocessing) withB+treeindexes: WecanuseAlternative (3)fordataentries,\nusingabitvectorrepresentation ofrid-lists. Acaveatisthat,ifanrid-listis\nveryslnall,thebitvectorrepresentation rnaybeIlluchlargerthanalistofrid\nvalues,evenifthebitvectoriscornpressed. Further, theuseofcorupression\nleadstodecornprcssion costs,offsetting sorneoftheC0I11putational advantages\nofthebitvectorrepresentation.\nAInoreflexibleapproach istouscastandard listrepresentation oftherid-list\nforS01nekeyvalues(intuitively, thosethatcontainfewclernents) andabit", "898": "868 CHAPTER 2~\nvectorrepresentation forotherkeyvalues(thosethatcontain rnanyelenlents,\nandtherefore lendthemselves toacOInpact bitvectorrepresentation).\nThishybridapproach, 'whichcaneasilybeadapted towork\\\\lithhashindexes\na,,~wellasB+treeindexes, haa.')bothadvantages anddisadvantages relativeto\nastandard listofridsapproach:\n1.Itcanbeappliedeventocohllnns thatarenotsparse;thatis,in,vhichare\nTnanypossible valuescanappear.Theindexlevels(orthehashing scheIue)\nallowustoquicklyfindthe'list'ofrids,inastandard listorbitvector\nrepresentation, foragivenkeyvalue.\n2.Overall, theindexisTnorecornpact because wecanuseabitvectorrep\u00ad\nresentation forlongridlists.\\Vealsohavethebenefits off&'3tbitvector\nprocessIng.\n3.Ontheotherhand,thebitvectorrepresentation ofanridlistrelieson\naInapping fron1aposition inthevectortoanrid.(Thisistrueofany\nbitvectorrepresentation, notjustthehybridapproach.) Ifthesetof\nrowsisstatic,andwedonotworryaboutinsertsanddeletesofrows,it\nisstraightforward toensurethisbyassigning contiguous ridsforrowsin\natable.IfinsertsanddeletesInustbesupported, additional stepsare\nrequired. Forexanlple, wecancontinue toassignridscontiguously ona\nper-table basisandsirnplykeeptrackofwhichridscorrespond todeleted\nrows.BitvectorscannowbelongerthanthecurrentnUlnber ofrows,and\nperiodic reorganization isrequired tocOlllpact the'holes'intheassignrnent\nofrids.\n25.6.2JoinIndexes\nCornputing joinswithsIllallresponse tirnesisextrernely hardforverylarge\nrelations. Oneapproach tothisproblern istocreateanindexdesigned tospeed\nupspecificjoinqueries. Suppose thattheCustorners tableistobejoined ~with\n(1,tablecalledPurchases (recording purchases Inaclebycustorners) onthec,ltsUd\nfield.vVe cancreateacollection of(c,p)pairs,wherepistheridofaPurchases\nrecordthatjoins\\vithaCustc)lners recol'c!withcusUdc.\nThisideacanbegeneralized tosupport joinsoverruorethant\\VOrelations. \\Ve\ndiscussthespecialcaseofastarscherna., in\\vhichthefacttableislikelyto\nbejoinedwithseveraldirnension tables.Consider ajoinquerythatjoinsfact\ntableFvvithdilnension tablesD1andD2andincludes selection conditions on\ncohunn [:1oftal)le1)1Etndcolurnn (:12oftableD2.\\Vestoreatuple('tl'('2,r)\nirlthejoinindexifT1istheridofatupleintable1)1withvalue ('1incohunn\nC1\n1,'1'2istheridofatupleintableD2,vithvalue C2incolllrnn (:12,andTisthe\nridofatllpleinthefactta,bleF,(uHltJlcsethree tUl)lesjoinwitheachother.", "899": "DataVvareh07l8\"ing arulDeC\"lS'lCyn S'llppOTt\n~:~p~ex Queries: TheIBMDB2\no;;:izerrecognizes star\njoin~:::l\nandperfOfInsrid-b&ged sernijoins (usingBIoarnfilters)tofilterthefact III\ntable.1'henfacttablerO\\V8arerejoinedtothedimension tables.Cornplex .\n(rnnltitable) dirnension queries(calledsnowflake qucrvlcs) aresupported.\nDB2alsosupports CUBEusingSlnclJ'talgorithrns thatrninhnize sorts.~1i\u00ad\ncrosoftSQLServeroptiInizes starjoinqueriesextensively. Itconsiders\ntakingthecross-product ofsrnalldirnension tablesbeforejoiningwiththe\nfacttable,theuseofjoinindexes, and\nrid-basedserniJoins. Oracle9ialso\nallowsuserstocreatediInensions todeclarehierarchies andfunctional de\u00ad\npendencies. Itsupports theCUBEoperator andoptirnizes starjoinqueries\nbyelinlinating joinswhennocolunlllofadirnension tableispartofthe\nqueryresult.DBMSproducts havealsobeendeveloped specifically for\ndecision support applications, suchasSybaseIQ.\n_~__ ~ \u2022__<,.,\u2022\u2022_\"\u2022.\".\u2022_\u2022\u2022\u2022\u2022\u2022 \u2022 ---.J\nThedrawback ofajoinindexisthatthenurnber ofindexescangrowrapidly\nifseveralcolurnns ineachdirnension tableareinvolved inselections andjoins\nwiththefacttable.Analternative kindofjoinindexavoidsthisproblem.\nConsider ourexarnple involving facttableFanddirnension tablesDlandD2.\nLetG1beacolumnofDlonwhichaselection isexpressed insomequerythat\njoinsDlwithF.Conceptually, wenowjoinFwithDltoextendthefieldsofF\nwiththefieldsofDl,andindexFonthe'virtualfield'G1:IfatupleofDlwith\nvalueClincolurnnC\\joinswithatupleofFwithridr,weaddatuple(C1'r)\ntothejoinindex.WecreateonesuchjoinindexforeachcolurnnofeitherDl\norD2thatinvolves aselection inSOHlejoinwithF;C1isanexarnple ofsucha\nCOIUllUl.\nThepricepaidwithrespecttotheprevious versionofjoinindexesisthatjoin\nindexescreatedinthiswayhavetobecornbined (ridintersection) todealwith\nthejoinqueriesofinteresttous.Thiscanbedoneefficiently if\\vernakethe\nne\\vindexes bitrnapindexes; theresultiscalleda,bitrnapped joinindex.\nTheideaworksespeciaJly W(~llifcohunns sucha\"sCilaresparse,andtherefore\nwellsuitedtobitrnapindexing.\n25.6.3FileOrganizations\nSincerllFtnyOLAPqueriesinvolvejustafev\\!colurnns ofalargerelation, vertical\npartitioning becornes attractive. IIcrwever, storing a.relation colurnn-\\vise can\ndegrade perfoI\"rnance forqueriesthatinvolveseveralcolurnns. Analternative\nina,rl1ostly-read envirollrnent istostoretherelation rOvv-vvise, butalsostore\neachCOlUH1Il separatel:y.", "900": "870 CHAPTER 26\nArnoreradicalfileorganization istoregardthefacttableasalargeIlluitidi\u00ad\nrnensional arrayandstoreitandindexitassuch.Thisapproach istakenin\nNI0LAP systerns. SincethearrayislIluchlargerthanavailable lnainlnelnory,\nitisbrokenupintocontiguous chunks,asdiscussed inSection23.8.Inaddition,\ntraditional B+-treeindexes axecreatedtoenablequickretrieval ofchunksthat\ncontaintuples\"'lithvaluesinagivenrangeforoneorrnorediInensions.\n25.7DATAWAREHOUSING\nDatawarehouses containconsolidated datafrommanysources, augrnented with\nsunnnary inforrnation andcovering alongtimeperiod.Warehouses arelnuch\nlargerthanotherkindsofdatabases; sizesrangingfrornseveralgigabytes toter\u00ad\nabytesarecornman. Typicalworkloads involveadhoc,fairlycOlllplex queries\nandfastresponse tilnesareimportant. Thesecharacteristics differentiate ware\u00ad\nhouseapplications fromOL'TPapplications, anddifferent DBMSdesignand\nirnplerrlentation techniques nUlstbeusedtoachievesatisfactory results.Adis\u00ad\ntributed DBMSwithgoodscalability andhighavailability (achieved bystoring\ntablesredundantly atmorethanonesite)isrequired forverylargewarehouses.\nExternal DataSources\nFJ\nr=J\nOperational DatabasesEXTRACT\nCLEAN\nTRANSFORM\nLOAD\nREFRESH\n----\u00b7-.--------------------------1Metadata Repository\n---_.-------\nDataWarehouseSERVESVisualization\nOLAP\nFigure 25.10 ArrypicalData\\Varehousing Architecture\nAtypicaldatawarehousing architecture isillustrated inFigure25.10.Anorga\u00ad\nnization's dailyoperations accessandrnodifyoperational databases. Data\nfror11theseoIlfSrational databases andotherexternal sources(e.g.,custorner\nprofilessupplied byexternal consultants) areextracted byusinginterfaces\nsuchasJI)BC(seeSection6.2).", "901": "Data ~JVaTeh(nl8'ing andDecision 8UPP01Tt\n25.7.1Creating andMaintaining aWarehouse871\nl\\!Ianychallenges rnustbeInetincreating andInaintaining alargedataware\u00ad\nhouse.A gooddatab&'3e scheruanlustbedesigned toholdanintegrated collec\u00ad\ntionofdatacopiedfroIndiversesources. Forexarnple, acornpany warehouse\nrnightincludetheinventory andpersonnel departrnents' databa.'3es, together\nwithsalesdatabases rnaintained byofficesindifferent countries. Sincethe\nsourcedatabases areoftencreatedandrnaintained bydifferent groups,there\nareanUlnber ofselnantic Inisrnatches acrossthesedatabases, suchasdifferent\ncurrency units,different narnesforthesaIneattribute, anddifferences inhow\ntablesarenornlalized orstructured; thesedifferences Inustbereconciled when\ndataisbrought intothewarehouse. Afterthewarehouse schenlaisdesigned,\nthewarehouse mustbepopulated, andovertirne,itInustbekeptconsistent\nwiththesourcedatabases.\nDataisextracted fromoperational databases andexternal sources,cleaned\ntoInininlize errorsandfillinInissing information whenpossible, andtrans\u00ad\nformed toreconcile semantic Inismatches. Transforlning dataistypically ac\u00ad\ncOlnplished bydefining arelational viewoverthetablesinthedatasources\n(theoperational databases andotherexternal sources). Loading dataconsists\nofruaterializing suchviewsandstoringtherllinthewarehouse. Unlikeastan\u00ad\ndardviewinarelational DBMS, therefore, theviewisstoredinadatabase\n(thewarehouse) thatisdifferent frornthedatabase( s)containing thetablesit\nisdefinedover.\nThecleanedandtransfonned dataisfinallyloaded intothewarehouse. Ad\u00ad\nditional preprocessing such&'3sortingandgeneration ofsurnrnary infornuttion\niscarriedoutatthisstage.Dataispartitioned andindexesarebuiltforeffi\u00ad\nciency.Duetothelargevohllueofelata,loadingisaslowprocess. Loading a\nterabyte ofdatasequentially cantake'Y\"eeks,andloadingevenagigabyte can\ntakehours.Parallelisul istherefore iInportant forloadingwarehouses.\nAJterdataisloadedintoawarehouse, additional rneasures rnustbetakento\nensurethatthedatainthevvarehouse isperiodically refreshed toreflect\nupdates tothedatasourcesandperiodically purgeolddata(perhaps onto\narchival rnedia). Observe theconnection between theproblern ofrefreshing\nwarehouse tablesanda,synchronously rnaintaining replica..\" oftablesinadis\u00ad\ntributed DBMS.Maintaining replicasofsourcerelations isanessential partof\nwarehousing, andthisapplication clornainisaniInportant factorinthepopu\u00ad\nlarityofa.synchronous replication (Section 22.11.2), eventhoughasynchronous\nreplication violatestheprinciple ofdistributed dataindependence. Theprob\u00ad\nlernofrefreshing warehouse tables(\\vhicharernaterialized viewsovertablesin", "902": "872\nthesourcedatabEkses) hasalsorene\\ved interestininerernental Illaintenance of\nrna.terialized vic\\vs. (\"VVediscussrnaterialized vie\\\\TsinSection 25.8.)\nAnirnportant tC4skinInainta,ining awarehouse iskeeping trackofthedata\ncurrently storedinit;thisbookkeeping isdonebystoringinfofrnation about\nthe\\varehouse datainthesystenlcatalogs. rrhesysterIlcatalogs associated 'with\na\\varehouse areverylargeandoftenstoredand111anaged inaseparate database\ncalledametadata repository. Thesizeandcornplexity ofthecatalogs isin\npartduetothesizeandcOlnplexity ofthewarehouse itselfandinpartbecause\nalotofadrninistrative inforrnation rnustbeInaintained. Forexcunple, weHlllSt\nkeeptrackofthesourceofeachwarehouse tableandwhenitwaslastrefreshed,\ninaddition todescribing itsfields.\n1'hevalueofawarehO\"use isultin1ately intheanalysis itenables. Thedataina\nwarehouse istypically accessed andanalyzed usingavarietyoftools,including\nOLAPqueryengines, data.miningalgorithrns, inforrnation visualization tools,\nstatistical packages, andreportgenerators.\n25.8VIEWSANDDECISION SUPPORT\nViewsarewidelyusedindecision support applications. Different groupsof\nanalysts withinanorganization aretypically concerned withdifferent aspects\nofthebusiness, anditisconvenient todefineviewsthatgiveeachgroupinsight\nintothebusiness detailsthatconcern it.Onceaviewisdefined, wecanwrite\nqueriesornewviewdefinitions thatuseit,aswesawinSection3.6;inthis\nrespectaviewisjustlikeabasetable.Evaluating queriesposedagainstviews\nisveryilnportant fordecision support applications. Inthissection,weconsider\nhowsuchqueriescanbeevaluated efficiently afterplacingviewswithinthe\ncontextofdecision support applications.\n25.8.1Views,OLAP,andWarehousing\nViewsarecloselyrelatedtoOLAPanddatawarehousing.\nOLAPqueriesaretypically aggregate queries. Analysts wantfa.stanswers to\nthesequeriesoververylargedatasets, anditisnaturaltoconsider precoluputing\nvievvs(seeSectiorlS 25.9and25.10).Inparticular, theCUBE operator~ 'discussed\ninSection25.3\"\"'gives risetoseveralaggregate queriesthatarecloselyrelated.\nTherelationships thatexistbetvveen theInanyaggregate queriesthatarisefroln\nasingleCUBEoperation canbeexploited todevelop veryeffective precornpu\u00ad\ntationstrategies. Theideaistochooseasubsetoftheaggregate queriesfor\nInaterialization insucha.vvaythattypical CUBEqueriescanbequicklyanswered\nbyusingtheInaterialized viewsarlddoingS(Hneadditional cornplltation. The", "903": "DataHlaTcho'zMring a'ndDeci,sion 5'UPPOTt ~73\nchoiceofviewsto111ateria1ize isinfluenced byho\\vlllanyqueriestheycanpo\u00ad\ntentially speedupandbytheaillountofspacerequired tostoretheInaterialized\nview(sincewehaveto\\vorkwithagivenalnount ofstoragespace).\nAdata\\varehouse isjustacollection of&csynchrollously replicated tablesand\nperiodically synchronized views.AWareh(HIS(~ ischaracterized byitssize,the\nnuruber oftablesinvolved, andthefactthatIllOStoftheunderlying tables\narefrolnexternal, independently lnaintained databases. Nonetheless, thefun\u00ad\ndaluental probleln inwarehouse lnaintenance isasynchronous rnaintenance of\nreplicated tablesandmaterialized views(seeSection25.10).\n25.8.2QueriesoverViews\nConsider thefollowing view,RegionalSales, whichcornputes salesofproducts\nbycategory andstate:\nCREATE VIEWRegionalSales (category, sales,state)\nASSELECT P.category, S.sales,L.state\nFROM Products P,SalesS,Locations L\nWHERE P.pid=S.pidANDS.locid=L.locid\nThefollowing querycomputes thetotalsalesforeachcategory bystate:\nSELECT H,.category, It.state, SUM(R.sales)\nFROM RegionalSales H,\nGROUPBYR.category, R,.state\n\\\\1hiletheSQLstandard doesnotspecifyhowtoevaluate queriesonviews,it\nisusefultothinkinternlSofaprocesscalledquerymodification. rrheideais\ntoreplacetheoccurrence ofRegionalSales inthequerybytheviewdefinition.\nTheresultonthisqueryis\nSELECT\nFROM\nGROUPBYH,.category, R.state, SUM(R.sales)\n(SELECT P.category, S.sales,L.state\nFROM Products P,SalesS,Locations L\nWHERE P.piel=S.pidANDS.locid ==L.locid)ASR,\nR,.category, H,.state\n25.9VIEWMATERIALIZATION\nvVecanansvveraqueryonaviewbyusingthequeryrnodification technique\njustdescribed. Often,however, queriesagainstcornplex viewdefinitions Illust", "904": "874 CHAPTER 25\nbeanswered veryfastbecause usersengaged indecision support activities re\u00ad\nquireinteractive response tirIles.Evenwithsophisticated optilnization and\nevaluation techniques, thereisalirnittohowfa..\"twecananswersuchqueries.\nAlso,iftheunderlying tablesareinarernotedatabase, thequeryrIlodifica\u00ad\ntionapproach rnaynotevenbefeasiblebecause ofissueslikeconnectivity and\navailability.\nAnalternative toqueryrnodification istoprecornpute theviewdefinition and\nstoretheresult.Whenaqueryisposedontheview,the(unrllodified) queryis\nexecuted directlyontheprecornputed result.Thisapproach, calledviewma\u00ad\nterialization, islikelytobernuchfa,;terthanthequerymodification approach\nbecause thecomplex viewneednotbeevaluated whenthequeryiscomputed.\nMaterialized viewscanbeusedduringqueryprocessing inthesarnewaya'S\nregularrelations; forexarnple, wecancreateindexesonnlaterialized viewsto\nfurtherspeedupqueryprocessing. Thedrawback, ofcourse,isthatwemust\nmaintain theconsistency oftheprecomputed (orm,aterialized) viewwhenever\ntheunderlying tablesareupdated.\n25.9.1IssuesinViewMaterialization\nThreequestions mustbeconsidered withregardtoviewnlaterialization:\n1.Whatviewsshouldwernaterialize andwhatindexesshouldwebuildon\nthernaterialized views?\n2.Givenaqueryonaviewandasetofmaterialized views,canweexploit\nthernaterialized viewstoanswerthequery?\n3.I-Iowshouldwesynchronize rnaterialized viewswithchangestotheunder\u00ad\nlyingtables?Thechoiceofsynchronization technique depends onseveral\nfactors, sucha.c;whether theunderlying tablesareinarernotedatabase.\nWediscussthisissueinSection25.10.\n'rheanswers tothefirsttwoquestions arerelated. 'fhechoiceofvievvsto\nrnaterialize andindexisgoverned bytheexpected workload, andthediscussion\nofindexing inChapter 20isrelevant tothisquestion ac;well.Thechoiceof\nviewstornaterialize isrnorecornplex thanjustchoosing indexesonasetof\ndatabase tables,however, becausetherangeofalternative viewstornaterialize\niswider.ThegoaJistornaterialize asrnaU,carefully chosensetofviewsthat\ncanbeutilizedtoquicklyanswerrnostoftheirnportant queries. COIlversely,\noncevvehavechosenasetofviewstornaterialize, wehavetoconsider howthey\ncanbeusedtoansvver a,givenquery.\nConsider theRJ~gi()nalSales view.Itinvolves aJOInofSales,Products, and\nLocations andislikelytobeexpensive tocornpute. Ontheotherhand,ifit", "905": "[Jata ~VaTehol1Bin,g (uLdDecis'ioTL S~Ll)poTt ~75\nisrnaterialized andstoredwithaclustered B+treeindexonthesearchkey\n(category, state,sales),weGallans\\vertheexarnple querybyanindex-only\nsearl.\nGiventhernaterialized viewandthisindex,wecanalsoanswerqueriesofthe\nfollo\\ving forrnefficiently:\nSELECT\nFROM\nWHERE\nGROUPBYR.state, SUM(R.sales)\nRegionalSales R\nILcategory =='Laptop'\nR.state\nToanswersuchaquery,wecanusetheindexontheInaterialized viewtolocate\nthefirstindexleafentrywithcategory =='Laptop' andthenscantheleaflevel\nuntilwecometothefirstentry\u00a5lithcategory notequaltoLaptop.\nThegivenindexislesseffective onthefollowing query,forwhichweareforced\ntoscantheentireleaflevel:\nSELECT\nFROM\nWHERE\nGROUPBYR,.state, SUM(R.sales)\nR,egionalSales R\nR.state =='Wisconsin'\nR.category\nThisexanlple indicates howthechoiceofviewstomaterialize andtheindexes\ntocreateareaffectedbytheexpected workload. ~rhispointisillustrated further\nbyournextexarnple.\nConsider thefollowing twoqueries:\nSELECT\nFROM\nWHERE\nGROUPBY\nSELECT\nFROM\nWHERE\nGROUPBYP.category, SUM(S.sales)\nProductsP,SalesS\nP.pic!==S.pic!\nP.category\nL.state, SUM(S.sales)\nI . I S 1 S...JocatIons ,,;,.aes ~\n.L.locid=S.locid\nL.state\n'ThesetwoqueriesrequireustojointheSaJestable(whichislikelytobevery\nlarge)withanothertableandaggregate theresult.IIO'wcanvveusernaterializa\u00ad\ntiontospeedupthesequeries? Thestraightforward approach istoprecornpute", "906": "876(\"'1. 2\u00b7~jHAPTER ~)p\neachofthejoinsinvolved (Products withSalesandLocations withSales)orto\npreconlpute eachqueryinitsentirety. Analternative approach istodefinethe\nfollowing view:\nCREATE VIEWrrotalSaJes (pid,locid,total)\nASSELECT S.pid,S.locid, SUM(S.sales)\nFROM SalesS\nGROUPBYS.pid,S.locid\nTheviewTotalSales canbernaterialized andusedinsteadofSalesinourtwo\nexalnple queries:\nSELECT\nFROM\nWHERE\nGROUPBY\nSELECT\nFROM\nWHERE\nGROUPBYP.category, SUM(T.total)\nProducts P,TotalSales T\nP.pid=T.pid\nP.category\nL.state, SUM(T.total)\nLocations L,TotalSales T\nL.locid =rr.locid\nL.state\n25.10MAINTAINING MATERIALIZED VIEWS\nAmaterialized viewissaidtoberefreshed whenwernakeitconsistent with\nchanges toitsunderlying tables.rrheprocessofrefreshing aviewtokeepit\nconsistent withchanges totheunderlying tableisoftenreferred toasview\nmaintenance. Twoquestions toconsider are\n1.flowdovierefreshaview'whenanunderlying tableisnlodified? Twoissues\nofparticular interest arehowtoInaintain vie\\vsincTcrnentally, thatis,\nwithout recornputing frolI!scratchwhenthereisachangetoanunderlying\ntable;andhowtornaintain vie\\vsinadistributed environrnent suchasa\ndatavvarehouse.\n2.vVhcnshould\\verefreshaviewinresponse toachangetoanunderlying\ntable?\n25.10.1 Incremental ViewMaintenance\nAstraightforward approach torefreshing avie\\vistosirnplyreeolnpute the\nview\\.vhenanunderlying tableisrnodified. Thisrnay,infact,beareason\u00ad\nablestrateKY insorneca.\"es.Forexarnple, iftheunderlying tablesareina", "907": "DataHIaTehc)7I8'ing andDecision Support r;877\nrernotedataba ..'3c,theviewcanbeperiodically recornputed andsenttothedata\nwarehouse \\vhere\"thevie\\visHlaterialized. Thisha.'3theadvantage thatthe\nunderlying tablesneednotbereplicated atthevvarehouse.\n\\Vhenever possible, however, algorithrns forrefreshing aviewshouldbeincre\u00ad\nmental, inthatthecostisproportional totheextentofthechangeratherthan\nthecostofrecornputing thevie\\\\rfr(Hnscratch.\nTounderstand theintuition behindincrernental viewrnaintenance algorithnls,\nobservethatagivenrowinthernaterialized viewcanappearseveralthnes,\ndepending onhowoftenitwasderived. (R.ecallthatduplicates arenotelirni\u00ad\nnatedfro111theresultofanSQLqueryunlesstheDISTINCT clauseisused.In\nthissection, wediscussrnultiset sernantics, evenwhenrelational algebranota\u00ad\ntionisused.)TherHainideabehindincremental rnaintenance algorithrIls isto\nefficiently compute changestotherowsoftheview,eithernewrowsorchanges\ntothecountassociated witha row;ifthecountofarowbecornes 0,therowis\ndeletedfrorHtheview.\nWepresentanincrernental 11Ulintenance algorithnl forviewsdefinedusingpro\u00ad\njection, binaryjoin,andaggregation; wecovertheseoperations because they\nillustrate therHainideas.Theapproach canbeextended tootheroperations\nsuchasselection, un.ion,intersection, and(rnultiset) difference, aswellasex\u00ad\npressions containing severaloperators. Thekeyideaisstilltornaintain the\nnurnber ofderivations foreachviewrow,butthedetailsofhowtoefficiently\nconlpute thechanges inviewrowsandassociated countsdiffer.\nProjection Views\nConsider aviewVdefinedintennsofaprojection onatableR; thatis,\ny\"\"=n(R).EveryrowvinVhasanassociated count,corresponding tothe\nnurnberoftirnesitcanbederived, \\vhichisthenurnberofrowsinRthatyield '1)\nwhentheprojection isapplied. Suppose we1nodifyR byinserting acollection\nofrowsIlianddeleting acollection ofexisting 1'o\\vsRd.1vVecornpute n(l1.\"'i)\nandadditto\\l.Ifthe\nrnultisetrr(R. i)contains arowT\\vithcountcandr\ndoesnotappearin11,\\veaddittoV\"withcountc.IfTisinV,weaddcto\nitscount.vVealsocornputen(Rd)andsubtract itfronl1/.()bserve thatifr\nappe~:trs inneRd)\\\\rithcountc,it111UStalsoappeariny\"\"withahighercount;2\nwesubtract cfrOTHr'scountinV\".\n__ '''. \"n__\n1'Thesecollections canbemultisets ofrows.\\'/ecantreataro\\vrnodification a.saninsertfollO\\'1ed\nby1:1delete,forsirnplici ty.\n2Asasimpleexercise, consider whythisrnustbeso.", "908": "878 (~HAPTER 26\nAsanexanlple, consider theviewJrsales(Sales) andtheinstance ofSalesshown\ninFigure25.2._Eachro\\vinthevie\\vhasasinglecohunn; the(n)\\vwith) value\n25appears vvithcount1,andthevalue10appears vvithcount3.If\\lvedelete\noneoftherowsinSales\\vithsales10,thecountofthe(l'()\\V\\vith)value10in\nthevie\"vbecornes 2.If\\veinsertanewrowintoSaleswithsales99,thevie\"'!\nno\\vhasarowwithvalue99.\nAnhnportant pointisthat\\vehavetornaintain thecountsassociated vvithrows\neveniftheviewdefinition usestheDISTINCT clause,rneaning thatduplicates\nareelilninated frorntheview.Consider thesaIneviewwithsetselnantics~\u00ad\ntheDISTINCT clauseisusedintheSQLviewdefinition\u00b7\u00b7------and supposethatwe\ndeleteoneoftherowsinSaleswithsales10.Doestheviewnowcontain a\nrowwithvalue10'1TodeterrIline thattheanswerisyes,weneedtomaintain\ntherOwcounts,eventhougheachrow(withanonzero count)isdisplayed only\nonceintheInaterialized view.\nJoinViews\nNext,consider aviewVdefinedasajoinoftwotables,R[X]S.Suppose we\nmodifyRbyinserting acollection ofrowsR'ianddeleting acollection ofrows\nRd.Wecornpute Ri[X]Sand add theresulttoV.WealsoC0111pute Rdr><JS\nandsubtract theresultfror11V.Observe thatifrappears inRd[X]Swith\ncount C,itrnustalsoappearinVwithahighercount>J\nViewswithAggregation\nConsider aviewVdefinedoverRusingGROUPBYoncolUlllnGandanag\u00ad\ngregateoperation oncolu1nnA.Eachrowvinthevi(~wsurnrnarizes agroup\noftuplesinRandisofthefonn(g,8'u,'rrLrnary) ,where9isthevalueofthe\ngrouping colulnnGandthesununary inforInation depends ontheaggregate\noperation. Tolnaintain suchaviewincrernentally, ingeneral, wehavetokeep\nalnoredetailed surrllnary thanjusttheinforrnation included intheview.If\ntheaggregate operation isCOUNT,weneedtoInaintain onlyacountcforeach\nrovvvinthevieVvT.Ifaro\\vrisinsertedintoR,andthereisnoI'o,vvin\"\\;7\nwith'v.G=T.G,weadd<1newrow(r.G,1).Ifthereisaro,v'I)\\vithv.C}=r.G,\nweincrernent itscount.Ifarowrisdeleted fro111R,\\vedecrcrnent thecount\nfortherowv\"vithv.Ci=T.C};vcanbedeletedifitscountbecornes 0,because\nthenthelastrowinthisgroupha.'3beendeletedfrorn.R.\nIftheaggregate operation isSUM,wehavetolllaintain aSUIll:3andalsoacount\nc.IfarowTisinserted intoIf,andthereisnorenv '1)in~!\"lithv.C;=T.C:,\n--_ ..- ...- .....\n:{Asanother simpleexercise, consider whythismllstbeso.", "909": "DataWaTchou8ilngandDecis'io11 8UPPOTt i79\nweaddanewrow('r.C,a,1).Ifthereisa,row(T.G,8,c),wereplaceitby\n(r.Ci, /3+\"a,C-t1).IfarO\\1llTisdeletedfrolllIl,\\vereplacetherow(r.G,S,c)\nwith{T.G,8-a,C-1);1)canbedeletedifitscountbecornes O.Observe that\nwithoutthecount,\\-vedonotknowwhentodelete'u,sincetheSlunforagroup\ncouldbe0evenifthegroupcontains SCHnerows.\nIftheaggregate operation isAVG,\\vehavetolllaintain aSluns,acountc,\nandtheaverageforeachrowinthevie\\v.TheSlUllandcountarernaintained\nincrernentally asalreadydescribed, andtheaverageiscorllputed ass/c.\nTheaggregate operations MINandMAXarepotentially expensive tornaintain.\nConsider MIN.ForeachgroupinR,wernaintain (g,rn,c),wherernisthe\nIninilnurn valueforcolUlllnAinthegroupg,andcisthecountofthenUlllber\nofrowsl'inRwithT.G==9andr.A==m.Ifarowl'isinserted intoRand\nr.G==g,ifr.Aisgreaterthantheminiriulill mforgroupg,wecanignorer.If\nr.Aisequaltothe111iniInurll mforr'sgroup,wereplacethesummary rowfor\nthegroupwith(g,m,c+1).Ifr.Aislessthantheminirllum mforr'sgroup,we\nreplacetheSUlnrnary forthegroupwith(g,T.A,1).Ifarowrisdeletedfrorn\nRandT.AisequaltotheminimurIl rrtforT'Sgroup,thenweHUlstdecrernent\nthecountforthegroup.Ifthecountisgreaterthan0,wesinlplyreplacethe\nsurnmary forthegroupwith(g,rn,c-_\u00b71).However, ifthecountbecomes 0,this\nIneansthelastrowwiththerecorded rninimum Avaluehasbeendeletedfrom\nRandwehavetoretrievethesInallest Avalueamongtherelnaining rowsin\nRwith-groupvaluer.G-and thismightrequireretrieval ofallrowsin11,with\ngroupvalueT.G.\n25.10.2 Maintaining Warehouse Views\nTheviewsrnaterialized inadatawarehouse canbebasedonsourcetables\ninrernotedatabases. rIheasynchronous replication techniques discussed in\nSection22.11.2allowustoconnnunicate changesatthesourcetothewarehouse,\nbutrefreshing vie\\vsincrernentally inadistributed settingpresents sorneunique\nchallenges. Toillustrate this,weconsider asirnpleview thatidentifies suppliers\nofToys.\nCREATE VIEWToySuppliers (sid)\nASSELECT S.sid\nFROM Suppliers S,Products P\nWHERE S.pid==P.pielANDP.category =='Tbys'\nSuppliers isanewtableintroduced forthisexarnple; letus&ssurnethatit\nhEkSjusttwofields,sidaIldpid,indicating thatsupplier s'idsupplies partpill.\nrrb.clocation ofth(~tablesProclucts andSuppliers andthevie\\vToySuppliers", "910": "880\ninfluences hovvweIIlaintain thevh~\\v.Suppose thatallthreearernaintained\natasinglesite.vVecanInaintain theviewincrelnentally usingthetechniques\ndiscussed inSection25.10.1.Ifareplicaofthevie\\viscreatedatanother site,\nwecan1l1onitor changestotheInaterialized vie\\vandapplythcInatthesecond\nsiteusingthea..synchronous replication techniques froInSection22.11.2.\nBut,whatifProducts andSuppliers areatonesiteandtheviewisInaterialized\n(only)atasecondsite?Tornotivate thisscenario, \"weobservethat,ifthefirst\nsiteisusedforoperational dataandthesecondsitesupports cornplex analysis,\nthetwositeslnaywellbeadrninistered bydifferent groups. Theoptionof\nlnaterializing ToySuppliers (aviewofinteresttothesecondgroup)atthefirst\nsite(runbyadifferent group)isnotattractive andmaynotevenbepossible; the\nadnlinistrators ofthefirstsitemaynot,vanttodealwithsomeone else'sviews,\nandthea(hninistrators ofthesecondsiten1aynotwanttocoordinate with\nsonleone elsewhenever theyInodifyviewdefinitions. Asanother motivation\nforrnaterializing viewsatadifferent location froInsourcetables,observethat\nProducts andSuppliers maybeattwodifferent sites.Evenif\u00b7wernaterialize\nToySuppliers atoneofthesesites,oneofthetwosourcetablesisreillote.\nNowthatwehavepresented Inotivation forrnaintaining rroySuppliers ataloca\u00ad\ntion(say,Warehouse) different froIntheone(say,Source)thatcontains Prod\u00ad\nuctsandSuppliers, letusconsider thedifficulties posedbydatadistribution.\nSuppose thatanewProducts record(withcategory =='Toys')isinserted. We\ncouldtrytornaintain theviewincren1entally asfollows:\n1.TheWarehouse sitesendsthisupdatetotheSourcesite.\n2.1'0refreshtheview,weneedtochecktheSuppliers tabletofindsuppli\u00ad\nersoftheitern,andsothev\\larehouse siteaskstheSourcesiteforthis\ninforrnation.\n3.TheSourcesitereturnsthesetofsuppliers forthesolditeln,andthe\nvVarehouse siteincrernentally refreshes theview.\nThisworkswhentherearenoadditional changesattheSourcesiteinbetween\nsteps(1)and(3).Iftherearechanges, ho\\vever, theInaterializecl viewcan\nbecorne incorrect reflecting astatethatcanneverariseexceptforanornalies\nintroduced bythepreceding, naive,increInental refreshalgorithrn. Toseethis,\nsuppose thatPr,oducts isenlptyandSuppliers contains justtherow\\81,5)\ninitially, andconsider thefollowing sequence ofevents:\n1.Product pid=5isinserted \\vithcategory ='Toys';Sourcenotifies\\Vare\u00ad\nhouse.\n2.Warehouse asksSourceforsuppliers ofproduct pid=5.(Theonlysuch\nsupplier atthisinstantis81.)", "911": "jJataHIarehO'lt8'ing andDecisi(Y!L S7.qJ].J01'l\" 881\n3.Therow(82,5)isinserted intoSuppliers; Sourcenotifies\\Varehouse.\n4.Todecidewhether 82shouldbeaddedtothevie\\v,vveneedtokno\\vthe\ncategory ofproductpid=5,and\\Varehouse asksSource. (ltVarehouse has\nnotreceived ananS7.lJertoitsprevious quest1:on.)\n5.Sourcenowprocesses thefirstqueryfrorn\\tVarehouse, findstwosuppliers\nforpart5,andreturnsthisinforrnation toWarehouse.\n6.\\tVarehouse getstheanswertoitsfirstquestion: suppliers 81and82,and\naddsthesetotheview,eachwithcount1.\n7.Sourceprocesses thesecondqueryfrorn\\Varehouse andresponds withthe\ninforll1ation thatpart5isatoy.\n8.Warehouse getstheanswertoitssecondquestion andaccordingly incre\u00ad\nHlentsthecountforsupplier 82intheview.\n9.Product pid==5isnowdeleted; SourcenotifiesWarehouse.\n10.Sincethedeletedpartisatoy,Warehouse decrements thecountsofnlatch\u00ad\ningviewtuples;81hascount0andisrelnoved, buts2hascount1andis\nretained.\nClearly, 82shouldnotrernainintheviewafterpart5isdeleted. Thisexample\nillustrates theaddedsubtleties ofincremental viewrnaintenance inadistributed\nenvironment, andthisisatopicofongoing research.\n25.10.3 WhenShouldWeSynchronize Views?\nAviewmaintenance policyisadecision aboutwhenaviewisrefreshed,\nindependent ofwhether therefreshisincrernental ornot.Aviewcanbere\u00ad\nfreshedwithinthesallIetransaction thatupdates theunderlying tables.This\niscalledimmediate viewIuaintenance. Theupdatetransaction isslowed\nbytherefreshstep,andtheirupactofrefreshincrec1.'3es withthenurnber of\nmaterialized viewsthatdependontheupdated table.\nAlternatively, wecandeferrefreshing thevie\\v.Updates arecaptured inalog\nandappliedsubsequently tothernaterialized vic\\vs.Thereareseveraldeferred\nviewmaintenance policies:\n1.Lazy:Thernaterialized vie\\v\\lisrefreshed atthetilneaqueryisevaluated\nusingV,ifVisnotalreadyconsistent vvithitsunderlying basetables.This\napproach sl()\\vsdownqueriesratherthanupdates, incontra-st toiHnnediate\nvic\",-!rnaintenance.", "912": "882 CHAPTER 2&\nI~iews forDe-cision\n Su;ort: ;-BMS ven~rsare\ne:hancing ;ieirm~~\u00ad\nIrelational products tosupport decision support querip.s. IBMDB2sup..\nIportsmaterialized viewswithtransaction-consistent oruser-invoked main-\nItenance. l\\1icrosoft SQLServersupports partition views,\\vhichare\nIunionsof(ruany)horizontal partitions ofatable.TheseaJ'eairnedat\nIawarehollsing envirOllrnent whereeachpartition couldbe,forexalnple, a\nrnonthly update. Queriesonpartition vie\\vsareopthnized sothatonlyrel\u00ad\nevantpartitions areaccessed. Oracle9isupports 111aterialized viewswith\ntransaction-consistent, user-invoked, ortilne-scheduled nlaintenance.\nL_.~ _\n2.Periodic: Thelllaterialized viewisrefreshed periodically, say,onceaday.\nThediscussion oftheCapture andApplystepsinasynchronous replication\n(seeSection22.11.2) shouldbereviewed atthispoint,sinceitisveryrel\u00ad\nevanttoperiodic viewlllaintenance. Infact,manyvendors areextending\ntheirasynchronous replication features tosupportlllaterialized views.Ma\u00ad\nterialized viewsthatarerefreshed periodically arealsocalledsnapshots.\n3.Forced: rrhernaterialized viewisrefreshed afteracertainnurnber of\nchanges havebeenmadetotheunderlying tables.\nInperiodic andforcedviewnlaintenance, queriesrllayseeaninstance ofthe\nIIlaterialized viewthatisnotconsistent withthecurrentstateoftheunderlying\ntables.Thatis,thequerieswouldseeadifferent setofrowsiftheviewdefinition\nwasrecornputed. Thisisthepricepaidforfastupdates andqueries, andthe\ntrade-off issirnilartothetrade-off rnadeinusingasynchronous replication.\n25.11REVIEW QUESTIONS\nAnswers tothereviewquestions canbefoundinthelistedsections.\nIIvVhataredecision supportapplications? :Oiscusstherelationship ofco'rnple:r:\n8(2Lq'lteries,OLA.P, datarnining,anddata1uarehousing. (Section 25.1)\nIIiIDescribe thernultidirnensional dataluodel.Explainthedistinction between\nrneasurcs anddirnensions andbetween facttablesand din~en8ion tables.\n\\\\Thatisasip:r8chenz,a? (Sections 25.2and25.2.1)\nIICornrnon OLAPoperations havereceived specialnaInes: roll-up, drill\u00ad\ndeY/on\"pivohng7slicing,anddicing.Describe eachoftheseoperations and\nillustrate thernusingexarnples. (Section 25.3)\nIII)escribe theSCJL:1999ROLLUPandCUBEfeatures andtheirrelationship to\nthe()LAPoperations. (Section 25.3.1)", "913": "DataWaTehousing andDecision Support 883\n\u2022Describe theSQL:1999 WINDOWfeature,inparticular, frarningandordering\nofwindows. Howdoesitsupportqueriesoverordereddata?Giveexarnples\nofqueriesthatarehardtoexpresswithout thisfeature.(Section 25.4)\n\u2022Newqueryparadigrns includetopNq'ue-riesandonlineaggTegation. Ex\u00ad\nplainthenlotivation behindtheseconcepts andillustrate then1through\nexaruples. (Section 25..5)\n\u2022Indexstructures thatareespecially suitable forOLAPsysten1s include\nbitrnapindexesandjoinindexes. Describe thesestructures. Howare\nbitrnapindexesrelatedtoB+trees?(Section 25..6)\nIIIInformation aboutdailyoperations ofanorganization isstoredinopeTa\u00ad\ntionaldatabases. WhyisadatawaTeho'i.LSe usedtostoredatafrolHoper\u00ad\nationaldatabases? Whatissuesariseindatawarehousing? Discussdata\nextTaction, cleaning, transjoTrnation, andloading. Discussthechallenges in\nefficiently TejTeshing andpUTgingdata.(Section 25..7)\nIIIWhyareviewsirnportant indecisionsupportenvironments? Howareviews\nrelatedtodatawarehousing andOLAP? Explain thequeTy mod~fication\ntechnique foranswering queriesoverviewsanddiscusswhythisisnot\nadequate indecision support environrnents. (Section 25..8)\nIIIWhatarethernainissuestoconsider inmaintaining materialized views?\nDiscuss howtoselectviewstomaterialize andhowtousernaterialized\nviewstoansweraquery.(Section 25.9)\n\u2022Howcanviewsbernaintained incTernentally? Discussalltherelational\nalgebraoperators andaggregation. (Section 25..10.1)\n\u2022Useanexarnple toillustrate theaddedcornplications forincrernental view\nmaintenance introduced bydatadistribution. (Section 25.10.2)\nIIIDiscussthechoiceofanappropriate rnaintenance policyforwhentorefresh\naview.(Section 25.10.3)\nEXERCISES\nExercise 25.1Brieflyanswerthefollowing questions:\n1.Howdowarehousing, OLAP,anddatarniningcornplernent eachother?\n2.vVhatistherelationship between datawan~housing anddatareplication? Whichfornlof\nreplication (synchronous ora.csynchronous) isbettersuitedfordataw(trehOllsing? \\Vhy?\n:J.\\\\Thatistheroleofthernetadata repository inadatawarehouse'? Howdoesitdiffer\nfrornacatalogin(1relational IJB:NIS?\n4.\\Vhatconsidenttions areinvolved indesigning adatawarehouse'?", "914": "884 CHAPTER 251'\n5.Onceawarehouse isdesigned andloaded1howisitkeptcurrentwithrespecttochanges\ntothesourcedatabases?\nfl.Oneoftheadvantages ofawaxehouse isthatwecanuseittotrackhowthecontents of\narelation changeovertitue;incontrast1wehaveonlythecurrentsnapshot ofarelation\ninaregularDBJ'vfS. Discuss howyouwouldmaintain thehistoryofarelationR,taking\nintoaccount that'old'infonnation lllustsOlnehow bepurgedtornakespaceforHew\ninfonnatioll.\n7.Describe dilnensions andrneasures inthemultidirnensional datamodel.\n8.Whatisafacttable,andwhyisitsoirnportant frOInaperformance standpoint?\n9.Vvhatisthefundarnental difference between ~fOLAP andROLAP systems?\n10.\\VhatisastarscheIna? IsittypicaU:y inBCNF? Whyorwhynot?\n11.Howisdatarniningdifferent fromOLAP?\nExercise 25.2Consider theinstance oftheSalesrelation showninFigure25.2.\n1.Showtheresultofpivoting therelation onpidandtirneid.\n2.Writeacollection ofSQLqueriestoobtainthesameresultasintheprevious part.\n3.Showtheresultofpivoting therelation onpidandlacid.\nExercise 25.3Consider thecross-tabulation oftheSalesrelation showninFigure25.5.\n1.Showtheresultofroll-uponlacid(i.e.,state).\n2.Writeacollection ofSQLqueriestoobtainthesameresultasintheprevious part.\n3.Showtheresultofroll-uponlacidfollowed bydrill-down onpid.\n4.Writeacollection ofSQLqueriestoobtainthesameresultasIntheprevious part,\nstarting withthecross-tabulation showninFigure25.5.\nExercise 25.4Brieflyanswerthefollowing questions:\n1.WhatisthedifIerences between theWINDOWclauseandtheGROUP BYclause'?\n2.Giveanexample querythatcannotbeexpressed inSQLwithout theWINDOWclausebut\nthatcanbeexpressed withtheWINDOWclause.\n:3.WhatisthefTCLrneofawindow inSQL:19997\n4.Consider thefonowing simple GROUP BYquery.\nSELECT\nFROM\nWHERE\nGROUP BYT.year, SUM(S.sales)\nSales5,TilnesT\nS.tilneid='T.timeid\nT.year\nCanyouwritethisqueryinSQL:1999 without usingaGROUP BYcIa.use? (Hint:Usethe\nSQL:1999 WINDOWclause.)\nExercise 25.5Consider theLocations, Products, andSalesrelations showninFigure25.2.\n\\iVritethefollowing queriesinSQL:1999 llsingtheWINDOWclausewhenever youneedit.\n1.Findthepercentage changeinthetotalIJ10nthly salesforeachlocation.\n2.Findthepercentage chc.tngeinthetotalquarterly salesforeachproduct.", "915": "DataWarehousing andl]eci8ion 8'UPPOTt 885\n3.FLnd theaverage dailysalesoverthepreceding ;30daysforeachproduct.\n4.Foreachweek,findthemaximulu ulovingaverageofsalesoverthepreceding four\\veeks.\n5.Findthetopthreelocations rankedbytotalsales.\n6.F'ind thetopthreelocations rankedbycurnulative sales,foreverymonthoverthepast\nyear.\n7.Rankalllocations bytotalsalesoverthepastyear,andforeachlocation printthe\ndifference intotalsalesrelativetothelocation behindit.\nExercise 25.6Consider theCustOIuers relation andthebitmap indexes showninFigure\n25.9.\n1.Forthesamedata,iftheunderlying setofratingvaluesisassuIued torangefroIlI1to\n10,showhowthebitnlapindexes wouldchange.\n2.HowwouldyouusethebitIllapindexestoanswerthefollowing queries?Ifthebitmap\nindexesarenotuseful,explainwhy.\n(a)Howmanycustomers witharatinglessthan3aremale?\n(b)Whatpercentage ofcustoIners aremale?\n(c)Howrnanycustomers arethere?\n(d)Howmanycustonlers arenamedWoo?\n(e)Findtheratingvaluewiththegreatest number ofcustoIl1erS andalsofindthenUIll\u00ad\nbel'ofcustorners withthatratingvalue;ifseveralratingvalueshavethemaxirnurn\nnumber ofcustoIllers, listtherequested infonuation foralloftheIn.(AssuIne that\nveryfewratingvalueshavethesamenUluber ofcustomers.)\nExercise 25.7Inaddition totheCustomers tableofFigure25.9withbitrnap indexes on\ngender'and'rating,assurnethatyouhaveatablecalledProspects, withfieldsrutingand\nprospectid. Thistableisusedtoidentify potential customers.\n1.Suppose thatyoualsohaveabitrnapindexontheratingfieldofProspects. Discuss\nwhether ornotthebitnlapindexes wouldhelpincorllputing thejoinofCustorners and\nProspects onrating.\n2.Suppose youhavenobitrnapindexontheratingfieldofProspects. Discusswhether or\nnotthebitrnapindexes onCustOIuers wouldhelpinconlputing thejoinofCustorners\nandProspects onnLting.\n~1.Describe theuseofajoinindextosupport thejoinofthesetworelations withthejoin\ncondition c'Ust'id=prospectid.\nExercise 25.8Consider theinstances oftheLocations, Products, andSalesrelations shown\ninFigure25.2.\n1.Consider thebasicjoinindexes d\u20ac~scribed inSection25.6.2.Suppose youwanttooptiInize\nforthefollowing twokindsofqueries: Query1findssa.lesinagivencity,andQuery2\nfindssa.lesinagivenstate.Showtheindexesyouwouldcreateontheexcunple instances\nshowninFigure25.2.\n2.Consider thebitIIulpped joinindexes described inSection 25.6.2.Suppose youwantto\noptirnize forthefollowing twokindsofqueries: Query1findssalesinagivencity,and\nQuery2findssalesinagivenstate.Showtheindexesthatyouwouldcreateonthe\nexanlple instances showninFigure25.2.", "916": "886 CHAPTER 25\nII\n~3.Consider thebasicjoinindexesdescribed inSection25.6.2.Suppose youwanttooptiInize\nforthesetwokindsofqueries: Query1findssalesinagivencityforagivenproduct\nI1alne~andQuery2findssalesinagivenstateforagivenproduct category. Showthe\nindexesthatyouwouldcreateontheexarl1ple instances showninFigure25.2.\n4.Consider thebitmapped joinindexes described inSection 25.6.2.Suppose youwantto\noptirnize forthesetwokinclsofqueries: Query1findssalesinagivencityforagiven\nproduct narne,andQuery2findssalesinagivenstateforagivenproduct category.\nShowtheindexesthatyouwouldcreateontheexample instances showninFigure25.2.\nExercise 25.9Consicler theviewNurnReservations definedas:\nCREATE VIEWNumReservations (sid,snarnc,nUlures)\nASSELECT S.sid,S.snarne, COUNT(*)\nFROM SailorsS,Reserves R\nWHERE S.sid=R.sid\nGROUPBY8.sid,S.sname\n1.Howisthefollowing query,whichisintended tofindthehighestnumberofreservations\nnladebysmneonesailor,rewritten usingquerymodification?\nSELECT\nFROMMAX(N.numres)\nNurnReservations N\n2.Consider thealternatives ofcornputing ondeluand andviewmaterialization forthe\npreceding query.Discusstheprosandconsofmaterialization.\n3.Discusstheprosandconsofmaterialization forthefollowing query:\nSELECT N.snarlle,MAX(N.numres)\nFROM NumReservations N\nGROUPBYN.sname\nExercise 25.10Consider theLocations, Products, andSalesrelations inFigure25.2.\n1.Todecidewhether tornaterialize aview,whatfactorsdoweneedtoconsider?\n2.Assurnethatwehavedefinedthefollowing lnaterialized view:\nSELECT\nFROM\nWHEREL.state~ S.sales\nLocations I-i,SalesS\n8.locid=L.locid\n(a)Describe whatauxiliary infornlatioll thealgorithnl forincrernental viewrnainte\u00ad\nnancefrornSection 25.10.1maintains andhowthisdatahelpsinlnainta.ining the\nviewincrernentally.\n(b)Discusstheprosandconsofruaterializing thisview.\n:3.Consider thernaterialized viewintheprevious question. Assume thattherelations\nLocations andSalesarestoredatOIlesite,buttheviewisrnaterialized onasecondsite.\nWhywouldwe\"everwanttoluaintain theviewatasecondsite?Giveaconcrete exarnple\nwheretheviewcouldbecome inconsistent.\n4.ASSUITWthatwehavedefinedthefollowing rnaterialized view:\nSELECT\nFROM\nWHERE\nGROUPBYT.year,I..state, SUM(S.sales)\nSales8,'rirnes'1',Locations L\nS.tirneid=T. tilneid ANDS.locid=L.locid\nrr.year,L.state", "917": "[)ataWaTeho1.l.s'ing andDeC'lsion SUppOTt\n(a)Describe whatauxiliary infoflnation thealgorithnl forincrernental viewrnainte\u00ad\nnancefrOInSection 25.10.1luaintains, andhowthisdatahelpsinrnaintaining the\nviewincreluentaJly.\n(b)Discusstheprosandconsof11laterializing thisview.\nBIBLIOGRAPHIC NOTES\nAgoodsurveyofdatawarehousing andOLAPispresented in[161],whichisthesourceof\nFigure25.10.[686]provides anoverview ofOLAPandstatistical database research, showing\nthestrongparallels between concepts andresearch inthesetwoareas.ThebookbyKirnball\n[436],oneofthepioneers inwarehousing, andthecollection ofpapersin[(2)offeragoodprac\u00ad\nticalintroduction tothearea.ThetermOLAPwaspopularized byCodd'spaper[191].Fora\nrecentdiscussion oftheperformance ofalgorithms utilizing bitmapandothernontraditional\nindexstructures, see[575].\nStonebraker discusses howqueriesonviewscanbeconverted toqueriesontheunderlying\ntablesthrough querymodification [713].Hanson cmnpares theperfornlance ofquerymodifi\u00ad\ncationversusimmediate anddeferred viewmaintenance [365].Srivastava andRoterllpresent\nananalytical modelofmaterialized viewmaintenance algorithnls [707].Anumber ofpapers\ndiscusshowrnaterialized viewscanbeincrementally maintained astheunderlying relations\narechanged. Research intothisareahasbecome veryactiverecently, inpartbecause ofthe\ninterest indatawarehouses, whichcanbethought ofascollections ofviewsoverrelations from\nvarioussources. Anexcellent overview ofthestateoftheartcanbefoundin[348],which\ncontains anumber ofinfluential paperstogether withadditional rnaterial thatprovides con\u00ad\ntextandbackground. Thefollowing partiallistshouldprovide pointers forfurtherreading:\n[100,192,193,349,369,570,601,635,664,705,800].\nGrayetal.introduced theCUBEoperator [~~35],andoptirnization ofCUBEqueriesandefficient\nmaintenance oftheresultofaCUBEqueryhavebeenaddressed inseveralpapers, including\n[12,94,216,367,380,451,634, 6~38,687,799]. Related algorithrns forprocessing queries\nwithaggregates andgrouping arepresented in[160,166].Rao,Badia,andVanGuchtaddress\ntheirnplelnentation ofqueriesinvolving generalized quantifiers suchasarnajor'ity of[618].\nSrivastava, Tan,andLUIIldescribe anaccessruethod tosupport processing ofaggregate\nqueries[708].Shannlugasundaranl etal.discuss howtoruaintain cornpressed cubesfor\napproxirnate answering ofaggregate queriesin[675].\nSQL:1999'ssupport forOLAP,including CUBEandWINDOWconstructs, isdescribed in[52:'3].\nThewindowing extensions ::treverysirnilartoSQLextension forquerying sequence data,\ncalledSRQL,proposed in[610].Sequence querieshavereceived alotofattention recently.\nExtending relational systeills, \\vhichdealwithsetsofrecords, todealwithsequences ofrecords\nisinvestigated in[473,665,671].\nTherehasbeenrecentinterest inone-pass queryevaluation algorithnls anddatabase rnanage\u00ad\nrnentfordatastreaIns. Arecentsurveyofdatarnanagernent fordatastreams andalgorithrns\nfordatastreamprocessing canbefonndin[49J.Exarnples includequantile andorder-statistics\ncOlnputation [340,50G],estirnating frequency rnornents andjoinsizes[;34,:'35],estirnating\ncorrelated aggregates [:310],rllultidirnensionaJ regression analysis [17J],etndcornputing one\u00ad\ndirnensional (i.e.,single-attribute) histograrns andHaarwavelet clecmnpositioI1s [:U9,:345].\nOtherworkincludes techniques forincrementally IllElintaining equi-depth histograms [:31:3]\nandBaal'wavelets [515],rnaintaining sarnples andsiluplcstatistics oversliding\\vindows [201],", "918": "888 CHAP'I'ER 25$\naswellasgeneral~ high-level architectures forstremlldataba.,ge systenlS [50}.Zdoniketal.de\u00ad\nscribethearchitecture ofadatabase systernforHl0nit;oring datastreaU1S [795J.Alanguage\ninfrastructure fordeveloping datastreaIllapplications isdescribed byCortes8tal.[199].\nCareyandKossrnann discusshowtoevaluate queriesforwhichonlythefirstfewanswers are\ndesired [1:3.5,1:36].Donjerkovic andRalnakrishnan consider howaprobabilistic approach to\nqueryoptiInization callbeappliedtothisprobleul [229].[120]compares severalstrategies\nforevaluating TopNqueries. Hellerstein etal.discusshowtoreturnapproxiInate answers\ntoaggregate queriesandtorefinethern'online.' [47,:374].Thisworkha..9beenextended to\nonlinecOlnputation ofjoins[354],onlinereordering [617]andtoadaptive queryprocessing\n[48].\nTherehasbeenrecentinterest inapproximate queryanswering, whereasmallsynopsis data\nstructure isusedtogivefastapproxiruate queryanswerswithprovable perforrnance guarantees\n[7,8,61,159,167,314,759].", "919": "26\nDATAMINING\n..Whatisdatamining?\n..Whatislliarketbasketanalysis? Whatalgorithms areefficient for\ncounting co-occurrences?\ni\"-Whatistheaprioriproperty andwhyisitimportant?\n..WhatisaBayesian network?\n..Whatisacla..'Ssification rule?Whatisaregression rule?\n...Whatisadecision tree?Howaredecision treesconstructed?\n...Whatisclustering? Whatisasalllpleclustering algorithln?\n...Whatisasimilarity searchoversequences? Howisitimplmuented?\n..Howcandataminingmodelsbeconstructed increluentally?\n..Whatarethenewminingchallenges presented bydatastrealllS?\n..Keyconcepts: datanlining,KDDprocess; marketbasketanalysis,\nco-occurrence counting, a..'Ssociation rule,generalized association rule;\ndecision tree,cla..'Ssification tree; clustering; sequence similarity search;\nincrernental modelllIaintenallce, datastreanls, blockevolution\n1ihesecretofsuccessistoknowsornething nobodyelseknows.\n\u00b7-\u00b7Aristotle Onassis\nDataluining consistsoffindinginteresting trendsorpatterns inlargedata,sets\ntoguicledecisions aboutfutureactivities. Thereisagenera]expectation that\n889", "920": "890 CHAPTER 26\ndataruiningtoolsshouldbeabletoidentify thesepatterns inthedata\\vith\nminirnal userinput.Thepatterns identified bysuchtoolscangiveadata\nanalystusefulandunexpected insightthatcanbeIllorecarefully investigated\nsubsequently, perhaps usingotherdecision support tools.Inthischapter, we\ndiscussseveralwidelystudieddataluiningtasks.COllunercial toolsareavail\u00ad\nableforeachofthesetasksfrorllmajorvendors, andtheareaisrapidlygTowing\ninilnportance asthesetoolsgainacceptance intheusercornrnunity.\nWestartinSection 26.1bygivingashortintroduction todatamining. In\nSection26.2,wediscusstheirnportant taskofcounting co-occurring items.In\nSection 26.3,wediscusshowthista\"karisesindataminingalgorithms that\ndiscover rulesfrolnthedata.InSection26.4,wediscusspatterns thatrepresent\nrulesintheforlnofatree.InSection26.5,weintroduce adifferent datarnining\ntask,calledclustering, anddescribe howtofindclusters inlargedatasets. In\nSection26.6,wedescribe howtoperform siInilarity searchoversequences. We\ndiscussthechallenges inrniningevolving dataanddatastreamsinSection26.7.\nWeconclude withashortoverview ofotherdataminingtasksinSection26.8.\n26.1INTRODUCTION TODATAMINING\nDatanliningisrelatedtothesubareaofstatistics calledexploratory dataanal\u00ad\nysis,whichhassiruilargoalsandreliesonstatisticalrueasures. Itisalsoclosely\nrelatedtothesubareas ofartificial intelligence calledknowledge discovery and\nrnachine learning. Theimportant distinguishing characteristic ofdatarnining\nisthatthevolumeofdataisverylarge;although ideasfrolntheserelatedareas\nofstudyareapplicable todatanliningproblems, scalability withrespecttodata\nsizeisanimportant newcriterion. Analgorithm isscalable iftherunning\ntirnegrows(linearly) inproportion tothedatasetsize,holdingtheavailable\nsystenlresources (e.g.,arnount ofrnainrnemory andCPUprocessing speed)\nconstant. Oldalgorithms mustbeadapted ornewalgorithnls developed to\nensurescalability whendiscovering patterns fn)Indata.\nFindingusefultrendsindatasets isaratherloosedefinition ofdata111ining:Ina\ncertainsense,alldatabase queriescanbethought ofasdoingjustthis.Indeed,\nwehaveacontinuurn ofana.lysisandexploration toolswithSQLqueriesatone\nend,OLAPqueriesintherniddle,anddataruiningtechniques attheotherend.\nSQLqueriesare,constructed! usingrelational algebra(withsorneextensions),\nOLAPprovides higher-level querying idiorllsba\"sedonthernultidirnensional\ndatarn.odel,anddatarniningprovides thernostabstract analysis operations.\nvVecanthinkofdifferent datarniningtasksa,,')cornplex 'queries' specified at\nahighlevel,withafewpanuneters thatareuser-defina.ble, andforwhich\nspecialized algorithrns areilnplernented.", "921": "Datalvfining\n--------_ __------891\nSQL/MM: DataMiningSQL/MM: TheSQLfMtvi: DataIViiningex\u00ad\ntensionoftheSQL:1999 standard supports fourkindsofdatamining\nnlodels: frequent itenLsets andassociat'ion 'rules,clusters ofrecords, re\u00ad\ng'ression tn~es,andclassification trees.Severalnewdatatypesareintro\u00ad\nduced.Thesedatatypesplayseveralroles.SaInerepresent aparticular\nclassofmodel(e.g.,\n DM~egressibnMod.el,D}JLClusteringModel); some\nspecifytheinputparameters foraminingalgorithm (e.g.,DM-RegTask,\nDM_ClusTask); somedescribe theinputdata(e.g.,\nDM..LogicalDataSpec,\nDM-MiningData); andsornerepresent theresultofexecuting arniningalgo\u00ad\nrithm(e.g.,DM....RegResult, DM_ClusResult). Takentogether, theseclasses\nandtheirmethods provideastandard interface todataminingalgorithms\nthatcanbeinvokedfrornanySQL:1999 database systern.Thedatamin\u00ad\ningrnodelscanbeexported inastandard XMLformatcalledPredictive\nModelMarkup Language (PMML); modelsrepresented usingPMML\ncanbehnported aswell.\nIntherealworld,datarniningismuchmorethansirnplyapplying oneofthese\nalgorithnls. Dataisoftennoisyorinconlplete, andunlessthisisunderstood and\ncorrected for,itislikelythatrnanyinteresting patterns willbernissedandthe\nreliability ofdetected patterns willbelow.Further, theanalystnlustdecide\nwhatkindsofrniningalgoritlulls arecalledfor,applythemtoawell-chosen\nsubsetofdatasarnples andvariables (i.e.,tuplesandattributes), digestthe\nresults,applyotherdecisionsupportandminingtools,anditeratetheprocess.\n26.1.1TheKnowledge Discovery Process\nTheknowledge discovery anddatamining(KDD) process canroughly\nbeseparated intofoursteps.\n1.DataSelection: Thetargetsubsetofdataandtheattributes ofinterest\nareidentified byexalnining theentirerawdataset.\n2.DataCleaning: Noiseandoutliers are relnoved, fieldvaluesaretrans\u00ad\nfonnedtocornrnon unitsandSOUIC l1C\\Vfieldsarecreatedbycornbining\nexisting fieldstofacilitate a,nalysis. Thedataistypically putintoa,rela\u00ad\ntionalfonnat,andseveraltablesrnightbecornbined inadenoTTnal'ization\nstep.\n3.DataMining: \\Veapplydatarniningalgorit1ll11S toextractinteresting\npatterns.\n4.Evaluation: Thepatterns arepresented toend-users illanunderstandable\nfonn,forex<unple, through visualization.", "922": "892 CHAPTER. 2&\n1\"heresultsofanystepintheI<:DDproce:sslllightleadusbacktoanearlierstep\ntoredotheprocesswiththene\\vknowledge gained.Inthischapter, however,\nwelilnitourselves tolookingatalgoritlnns forSaInespecificdatarniningtasks.\n\\\u00a5edonotdiscussotheraspectsoftheI(DDprocess.\n26.2COUNTING CO-OCCURRENCES\n\\Vebeginbyconsidering theprobleln ofcounting co-occurring iterns,whichis\nrnotivated byproblelTIs suchaslllarketbasketanalysis. Amarketbasketisa\ncollection ofitemspurchased byacustOlner inasinglecustomer transaction.\nAcnstorner transaction consistsofasinglevisittoastore,asingleorderthrough\namail-order catalog, oranorderatastoreontheWeb.(Inthischapter, we\noftenabbreviate customer transaction totransaction whenthereisnoconfusion\nwiththeusualnleaning oftransaction inaDBlVlScontext, whichisanexecution\nofauserprogram.) ACOIIlIllon goalforretailers istoidentifyitemsthatare\npurchased together. Thisinforrnation canbeusedtoimprove thelayoutof\ngoodsinastoreorthelayoutofcatalogpages.\nI.\u00b7transid \u00b71c1tstidl date item ..\u00b7\u00b7l.qtyl\n5/1/99.\u2022\n111 201 pen2\n1'-'5/1/99 ink 111 201 1\n5/1/99 milk-'-111 201 3\n111 2015/1l9'9 juice 6_.\u2022\u2022.-\"-112 1056/3/99 pen1-_\u2022.\n6/3/99 112 105 ink1\n\"\"., ..._-\n112 105 ....6/3/99 milk1 -_ ....r\nt~~5/10'/99.- ..113 pen1\n113 5/io/99 Inilk..._-1\n.....'\u00b7-\"'-6/1/99....-114 201 pen2\n....._..6/1/99- ..... 114 201 ink2f--_ .._- ...\n114 2016/1/99 juice4,......-...__.\n6/1/99---114 201 water 1\n.\"-... ....-\nFigure 26.1'I'hePurcha'3es Relation\n26.2.1Frequent Itemsets\n'vVeusethePurchases relationshovvninFigure26.1toillustrate frequent item\u00ad\nsets.rrherecordsareshoVi.rnsortedintogroupsbytransaction. Alltuplesin\nagrouphavethesaInetr-ansid,andtogether theydescribe acustorner trans\u00ad\naction,whichinvolves purcha ..sesofoneorInoreiterns.Atransaction occurs", "923": "Datalvlin'ing 893\nonagivendate,andthenanleofeachpurcha ..lSeditenlisrecorded, along\\vith\nthepurella,sed quantity. ()bserve thatthereisredundancy inPurchases: Itcan\nbedecolnposed bystoring tTansid\"c\"lJ,8l'i,d~~date triplesinaseparate tableand\ndropping c'lud'idanddatefrolnPurchases; thisnlaybeho\\vthedataisactually\nstored.Hc)\\vever, itisconvenient toconsider thePurcha..ses relation, asshov.rn\ninFigure26.1,tocorupute frequent iternsets. Creating such\"denonnalized'\ntablesforeaseofdatarniningiscOIIllllonly doneinthedatacleaning stepof\ntheI(DDprocess.\nByex<:unining thesetoftransaction groupsinPurcha,..~es, wecanrnakeobser\u00ad\nvationsofthefornl:\"In751()ofthetransactions apenandinkarepurchased\ntogether.\" rrhisstateulent describes thetransactions inthedatabase. Ex\u00ad\ntrapolation tofuturetransactions shouldbedonewithcaution, asdiscussed in\nSection26.3.6.Letusbeginbyintroducing theterminology ofrnarketbasket\nanalysis. Anitemset isasetofitelTIS.Thesupport ofanitelnsetisthefrac\u00ad\ntionoftransactions inthedatabase thatcontainalltheiterusintheiterllset.\nInourexaIupl.e, theitelllset{pen,ink}has75%support inPurchases. Wecan\ntherefore conclude thatpensandinkarefrequently purchased together. Ifwe\nconsider theitelllset{milk,juice},itssupport isonly25%;milkandjuiceare\nnotpurchased together frequently.\nUsuallythenUlnber ofsetsofitenlSfrequently purchased together isrelatively\nsInall,especially asthesizeoftheitenlsets increases. Weareinterested in\nalliterllsets whosesupport ishigherthanauser-specified minimUIl1 support\ncalledm,insnp; wecallsuchitemsets frequent itemsets. Forexarnple, ifthe\nIIlinirl1Unl support issetto70%,thenthefrequent iterllsets inourexample\nare{pen},{ink},{nlilk}, {pen,ink},and{pen,111ilk}. Notethatweare\nalsointerested initernsets thatcontain onlyasingleiterusincetheyidentify\nfrequently purchased iterl1s.\n\\Veshowanalgorithrn foridentifying frequent iterllsets inFigure26.2.This\nalgorithrn reliesonasirnpleyetfundarnentaJ property offrequent iterIlsets:\nTheaPrioriProperty: Everysubsetofafrequent iterllsetisalsoa\nfrequent itelnset.\n'fhealgorithnl proceeds iteratively, firstidentifying frequent iterIlsets 'withjust\noneitcrll.InBachsubsequent iteration, frequent iterl1sets identified inthe\nprevious iteration areextended withanother iterntogenerate largercandidate\nitcrnsets. Byconsidering onlyiterllsets obtained byenlarging frequent iternsets,\nwegreatlyreducethenurnberofcandidate frequent itcrllsets; thisoptirnization\niscrucialforefficient execution. ~rheaprioriproperty guarantees thatthis\noptilnizatic)ll iscorrect;thatis,\\vedonotInissanyfrequent iterllsets. Asingle\nscanofalltrans(l,(tions (the Pllrchas(~s relation inourexarnple) sufficesto", "924": "894\nforeachitelll, Level1\ncheckifitisafrequent iternsetIIappears in>'rnins'l1,ptransactions\nk=l\nrepeat //Iterative, level-wise identification offrequent itelllsets\nforeachnewfrequent iterllset Ikwithkiterlls //Levelk+1\ngenerate alliterl1sets lk+lwithk+1itelllS,lkCIk+l\nScanalltransactions onceandcheckif\nthegenerated k+1-iterIlsets arefrequent\nk=k+1\nuntilnonewfrequent itemsets areidentified\nFigure 26.2AnAlgorithm forFinding Frequent Itemsets\ndetermine whichcandidate iterllsets generated inaniteration arefrequent.\nThealgorithm terminates whennonewfrequent itemsets areidentified inan\niteration.\n'Weillustrate thealgorithrn onthePurchases relation inFigure26.1,with\nminsupsetto70%.Inthefirstiteration (Levell), wescanthePurchases\nrelation anddeterllline thateachoftheseone-iterll setsisafrequent iternset:\n{pen}(appears inallfourtransactions), {ink}(appears inthreeoutoffour\ntransactions), and{rnilk}(appears inthreeoutoffourtransactions).\nIntheseconditeration (Level2),weextendeachfrequent itemsetwithan\nadditional itenlandgenerate thefollowing candidate iterIlsets: {pen,ink},{pen,\nmilk},{pen,juice},{ink,rnilk},{ink,juice},and{rnilk,juice}.Byscanning the\nPurchases relationagain,wedeterrnine thatthefollowing arefrequent ite111sets:\n{pen,ink}(appears inthreeoutoffourtransactions), and{pen,rnilk}(appears\ninthreeoutoffourtransactions).\nInthethirditeration (Level3),weextendtheseitelllsets withanadditional\niteHlandgenerate thefollowing candidate itcrl1sets: {pen,ink,nl/ilk},{pen,\nink,juice},and{pen,rnilk,fuice}. (Observe thatfink,rnilk,juice}isnot\ngenerated.) Athirdsca.nofthePllrchc1E,es relationaJlowsustodeterrnine that\nnoneoftheseisafrequent iterTlset.\nThesirnplealgoritlnll presented hereforfindingfrequent iternsets illustrates the\nprincipal featureofInoresophisticated algorithrns, naruely,theiterative gener\u00ad\nationandtestingofcandidate itcrnsets. vVeconsider oneirnportant refincrnent\nofthissirnplealgorithrn. Cjenerating candidate iternsets byaddinganitCHl\ntoaknownfrequent iternsetisanatterIlpt tolirnitthernunber ofcandidate\nitcrIlsets usingtheaprioriproperty. rrheaprioriproperty ~rnpliesthatacan-", "925": "DatalvJining 89p\ndida,teiternsetcanbefrequent onlyifallitssubsetsarefrequent. Thus,wecan\nreducethenUlnber ofcandidate iternsets further\u00b7\u00b7 ..\u00b7\u00b7--apriari,orbeforescanning\nthePurchEhses databaBe\u00b7\u00b7 ........_\u00b7bychecking whether allsubsetsofanewlygenerated\ncandidate itcIIlsetarefrequent. Onlyifallsubsetsofacandidate iternsetare\nfrequent dowecOlnpute itssupport inthesubsequent databa'3c scan.COln\u00ad\nparedtothesirnplealgoritlun, thisrefinedalgoritlull generates fewercandidate\nitenlsets ateachlevelandthusreducesthearnountofconlputation perfonned\nduringthedatabase scanofPurchases.\nConsider therefinedalgorithrn onthePurchclSes tableinFigure26.1with\nrn:inStlp= 70%.Inthefirstiteration (Level1),wedeterrnine thefrequent item\u00ad\nsetsofsizeone:{pen},{ink},and{ntilk}. Intheseconditeration (Level2),\nonlythefollowing candidate itemsets rernainwhenscanning thePurchases ta\u00ad\nble:{pen,ink},{pen,'m-ilk},and{ink,rnilk}.Since{juice}isnotfrequent, the\niterllsets {pen,juice},{ink,juice},and{rnilk,juice}cannotbefrequent aswell\nandwecanelirninate thoseiterIlsets apriori,thatis,without considering therll\nduringthesubsequent scanofthePurchases relation. Inthethirditeration\n(Level3),nofurthercandidate itemsets aregenerated. Theiternset{pen,ink,\nm,ilk}cannotbefrequent sinceitssubset{ink,milk}isnotfrequent. Thus,the\nirnproved versionofthealgorithrll doesnotneedathirdscanofPurchases.\n26.2.2IcebergQueries\nWeintroduce icebergqueriesthrough anexaillple. Consider againthePur\u00ad\nchasesrelation showninFigure26.1.Assurne thatwewanttofindpairsof\ncustorners anditernssuchthatthecustorner haspurchased theitemrllorethan\nfivethnes.WecanexpressthisqueryinSQLasfollows:\nSELECT\nFROM\nGROUPBY\nHAVINGP.custid, P.itern, SUM\nPurch~h\"es P\nP.custid, P.itern\nSUM(P.qty)>5(P.qty)\nrrhinkabouthowthisquerywouldbeevaluated byarelational DBMS. Con\u00ad\nceptually, foreach(c'usLid,'itcrn)pair,weneedtocheckwhether thesurnofthe\nqtyfieldisgreaterthan5.Oneapproach istornakeascanoverthePurchases\nrelation andrnaintain running surnsforeach(c'Ustid,itern)pair.T'hisisafea\u00ad\nsibleexecution ,strategy a.slong asthenurnber ofpairsissruaUenoughtofit\nintolIlainrncIIlory. Ifthenurnber ofpairsislargerthanrnainInernory, lnorc\nexpensive queryevaluation plans,\\vhich involveeithersortingorhashing, have\ntobeused.\nThequeryhasanirnporta\"nt property notexploited bythepreceding execution\nstrategy: EventhoughthePurcha ..'3csrelation ispotentially verylargeandthe", "926": "896 (;HAP'TER26\nnurnberof(cltstid,'itern)groupsCaJlbehuge,theCyutputofthequeryislikelyto\nberelatively sInallbecause ofthecondition intheHAVING clause.()nlygroups\nwherethecustorner ha..9pnrchaEied theitCHlInurethanfivetiInesappearinthe\noutput. fihrexarllple, thereareninegroupsinthequeryoverthePurcha.'3es\nrelation ShOVlllinFigure26.1,although theoutputcontains onlythreerecords.\nThenurnber ofgroupsisverylarge,buttheanswertothequery---\u00b7-the tipof\ntheiceberg------is usuallyverysInan.Therefore, ,vecallsuchaqueryaniceberg\nquery. Ingeneral, givenarelational scherna H.withattributes A.1.A2,...\"\nAk,andBandanaggrega,tion function aggr,anicebergqueryhasthefollo\\ving\nstructure:\nSELECT\nFROM\nGROUPBY\nHAVINGR.Al,Il.A2,...,R,.Ak,aggr(R.B)\nH,elation H,\nR,.AI,...,R.Ak\naggr(ILB) >=constant\nTraditional queryplansforthisquerythatusesortingorhashing firstcornpute\nthevalueoftheaggregation function forallgroupsandthenelirninate groups\nthatdonotsatisfythecondition intheHAVING clause.\nCornparing thequerywiththeprobleur offindingfrequent itenlsets discussed in\ntheprevious section,thereisastriking sirnilarity. Consider againthePurchases\nrelation showninFigure26.1andtheicebergqueryfroInthebeginning ofthis\nsection. Weareinterested in(custid,itern)pairsthathaveSUM(P.qty)>5.\nlJsingavariation oftheaprioriproperty, wecanarguethatweonlyhaveto\nconsider valuesofthec'Ust'idfieldwherethecustorner haspurchased atleast\nfiveit-eurs.Wecangenerate suchiternsthrough thefollowing query:\nSELECT\nFROM\nGROUPBY\nHAVINGP.cllstid\nPurchases P\nP.cllstid\nSUM(P.qty)>5\nSirnilarly, wecanrestrictthecandidate valuesfortheitern fieldthrough the\nfollowing query:\nSELECT\nFROM\nGROUPBY\nHAVINGP.itern\nPurchases P\nP.iteul\nSUM(P.qty)>5\nIf\\verestrict th(~corrlputation oftheoriginal ic(~bergqueryto(C'a8t'id~ 'itern)\ngroups\\vhe1'ethefieldvalues aTeintheoutputoftheprevious t\\VOqueries,\nvveelirninate alargenUlllber of(c''lJ,stid1'ite1n)pElirsapriori.So,apossible", "927": "897\nevaluation strategy istofirstCOlnpute candidate valuesfortheC'tlstidand'itcTn\nfields,anduseeornbinations ofonlythesevaluesintheevaluation oftheoriginal\nicebergquery. '~!efirstgenerate candidate fieldvaluesforindividual fieldsand\nuseonlythosevaluesthatsurvivetheaprioripruning stepasexpressed in\nthet,voprevious queries. 'Thus,theicebergqueryisarnenable tothesalIle\nbottorn-up evaluation strategy usedtofindfrequent iternsets. Inparticular, \\ve\ncanusetheaprioriproperty a.'sfollovls: vVekeepacounterforagrouponlyif\neachindividual cOlnponent ofthegroupsatisfies thecondition expressed inthe\nHAVING clause.Theperfonnance irnprovernents ofthisalternative evaluation\nstrategy overtraditional queryplanscanbeverysignificant inpractice.\nEventhoughthebotto111-UP queryprocessing strategy elinlinates lnanygroups\napriori,thenlunber of(c1lstid,itern)pairscanstillbeverylargeinpractice;\nevenlargerthanInainlllernory. Efficient strategies thatusesall1pling andlllore\nsophisticated hashing techniques havebeendeveloped; thebibliographic notes\nattheendofthechapter providt~pointers totherelevant literature.\n26.3MINING FOR RUI~ES\nManyalgorithrIls havebeenproposed fordiscovering variousfonnsofrulesthat\nsuccinctly describe thedata.Wenowlookatsomewidelydiscussed fonnsof\nrulesandalgorithnls fordiscovering thenl.\n26.3.1Association Rules\nWeusethePurcha.ses relation showninFigure26.1toillustrate ck'3sociation\nrules.ByeXcl1nining thesetoftransactions inPurchc1..ses, wecanidentify rules\noftheforrn:\n{pen}=?{ink}\nThisruleshouldbereadasfollows: \"IfapenispUfcha.sed inatransaction, itis\nlikelythatin}(isalsobepurchased inthat transaction.'~ Itisastaternent that\ndescribes thetransactions inthedataba.se; extrapolation tofuturetranSctctions\nshouldbedone\\vithcaution, ChSdiscussed inSection 26.~3.6.Moregenerally,\nanassociation rulehastheforInLJIS::::}RHS,wherebothLIISandRJIS'\naresetsofiterns.Theinterpretation ofsucha,ruleisthatifeveryiternin\nLIISispurchased inatransaction, thenitislikelythattheiterIlSinIlllSare\npurcha\",sed aswell.\nrTherearehvoirnportEtnt rnecl,sures for(1,nassociation rule:\nIIIlSupport: Thesupport forasetofiternsisthepercentage oftransa,ctions\nthatcontainalltheseiterIls. rl~hesupport foraruleLIIS=}J~llSisthe", "928": "898 C]HAPTER b6\nsupport forthesetofitenlSLHSRf!S.Forexalnple, consider therule\n{pen}=:>{ink}.Thesupportofthisruleisthesupportoftheitenlset{pen,\nink},whichis75%.\n\u2022Confidence: Consider transactions thatcontainalliterIlsinLHS.The\nconfidence foraruleLlIS=?RHSisthepercentage ofsuchtransactions\nthatalsocontainalliterIlsinRHS.Moreprecisely, letS1lp(LHS)bethe\npercentage oftransactions thatcontainLllSandlets'up(LliSURHS)be\nthepercentage oftransactions thatcontainbothLllSandRHS.rrhenthe\nconfidence oftheruleLHS=>RHSissup(LHSURIIS)/sup(LHS). The\nconfidence ofaruleisanindication ofthestrength oftherule.Asan\nexalnple, consider againtherule{pen}=?{ink}.Theconfidence ofthis\nruleis75%;75%ofthetransactions thatcontaintheitenlset {pen}also\ncontaintheiternset{ink}.\n26.3.2AnAlgorithm forFindingAssociation Rules\nAusercanaskforallassociation rulesthathaveaspecified minimum support\n(minsvp) andmininlum confidence (rninconf) ,andvariousalgorithrns have\nbeendeveloped forfindingsuchrulesefficiently. Thesealgorithms proceed\nintwosteps.Inthefirststep,allfrequent itemsets withtheuser-specified\nminimum support arecomputed. Inthesecondstep,rulesaregenerated using\nthefrequent itemsets asinput.Wediscussed analgorithm forfindingfrequent\niternsets inSection 26.2;weconcentrate hereontherulegeneration part.\nOncefrequent iteulsets areidentified, thegeneration ofallpossible candidate\nruleswiththeuser-specified minirnum support isstraightforward. Consider a\nfrequent iternsetXwithsupportsxidentified inthefirststepofthealgorithrn.\nTogenerate arulefronlX,wedivideXintotwoiternsets, LHSandRJIS.The\nconfidence oftheruleLllS=}RHSisSx/SLlIS,theratioofthesupport ofX\nandthesupport ofLHS.Frorntheaprioriproperty, weknowthatthesupport\nofLllSislargerthanrninsup,andthuswehaveC0111puted thesupport ofL1IS\nduringthefirststepofthealgoritlnn. \\rYecancornpute theconfidence values\nforthecandidate rulebycalculating theratiosupport(X)/support(LlIS) and\nthencheckhowtheratiocornpares to'Tnincon!\nIngeneral, theexpensive stepofthealgorithnl isthecornputation ofthefre\u00ad\nquentitenlsets, andlnanydifferent algorithrns havebeendeveloped toperfonn\nthisstepefficiently. R,ulegeneration ....giventhatallfrequent itcrl1sets have\nbeenidentified\u00b7 .....\u00b7..\u00b7\u00b7\u00b7\u00b7isstraightforward.\nIntherestofthissection,wediscuss SOlnegeneralizations oftheproblern.", "929": "Data!vfin>ing\n26.3.3Association RulesandISAHierarchies89Q\nInrnanyca.'3es,anISAhierarchy orcategory hierarchy isiInposed onthe\nsetofiterl1s.Inthepresence ofahierarchy, atransaction contains, foreach\nofitsiteuls,irnplicitly alltheiteln'sancestors inthehierarchy. Forexample,\nconsider thecategory hierarchy showninFigure26.3.Giventhishierarchy,\nthePurcha.,es relation isconceptually enlarged bytheeightrecordsshownin\nFigure26.4.rrhatis,thePurchases relationhasalltuplesshowninFigure26.1\ninaddition tothetuplesshowninFigure26.4.\nThehierarchy allowsustodetectrelationships between iternsatdifferent levels\nofthehierarchy. Asanexarnple, thesupport oftheitemset{ink,juice}is50%,\nbutifwereplacejuicewiththemoregeneralcategory beverage, thesupport of\ntheresulting itemset{ink,beverage} increases to75%.Ingeneral,thesupport\nofanitemsetcanincrease onlyifanitemisreplaced byoneofitsancestors in\ntheISAhierarchy.\nAssulning thatweactually physically addtheeightrecordsshowninFigure\n26.4tothePurchases relation, wecanuseanyalgorithm forcomputing frequent\nitemsets ontheaugmented database. Assuming thatthehierarchy fitsinto\nrnainmemory, wecanalsoperforln theaddition on-the-fly whilewescanthe\ndatabase, asanoptimization.\nStationery1\\Beverage1\\\nPen Ink Juice Milk\n,Figure26.3AnISACategory Taxonomy\nitem\n111 2015/1/99 stationery 3\n111 2015/1/99 beverage 9\n-.6/3/99 112 105 stationery 2\n6/3/99..._..-.-112 105 beverage 1\n113 1065/10/99 stationery 1\n----5/10/99 beverage 11~3 106 1\n':::;::--\"- -..._._----114 2016/1/99 stationery 11\n114 2016/1/99 beverage 5\nFigure26.4Conceptual Additions tothePurchases Relation withISAHierarchy", "930": "900 C~HAPTER 26\n26.3.4Generalized Association Rules\nAlthough association ruleshavebeenrnost\\videlystudied inthecontext of\nrnarketbasketanalysis, oranalysis ofcllstorner transactions, theconcept is\nrno1'egeneral. Consider thePurcha.ges relation assh()\\vninFigure26.5,grouped\nbyc'Ust'id.Byexanlining thesetofcustorner groups,wecanidentifyassociation\nrulessuchas{pen} ::::}{rnilk}. rThisruleshouldnowbereadasfollows: \"Ifa\npenispurchased byacustorner, itislikelythatInilkisalsobepurchased by\nthatcustcuner.\" InthePurchases relation showninFigure26.5,thisruleha.s\nbothsupport andc()nfidE~nce of1000/(-).\nItransid. I\u00b7\u00b7\u00b7.c'Ustid ...1date\n112 105'6'73/99 pen1..\u2022\n6/3/99\"-112 105 ink1\nf------------112 1056/3/99 milk1\n5/10/99.....:::..\n113 106 pen1.........\n5/10/99 rnilk 113 106 1\n_....\n5/15/99 114 201 pen2-\"5/15/99 ink 114 201 2\n114 2015/15/99 juice4 _..\n114 2016/1/99 water 1-...._...\n5/1/99,.,~.....\n111 201 pen2\n~-._._.\n5/1/99 111 201 ink1-_. ----III 2015/1/99 rnilk3-111 2015/1/99 juice6._-- .......................\nFigure26.5ThePurchases Helation SortedonCustomer ID\nSiInilctrly, wecangrouptuplesbydateandidentify association rulesthatde\u00ad\nscribepurchase behavior ontheSeHneday.Asanexalnple consider againthe\nPurchases relation. Inthiscase,therule{pen} =}{rnilk}isnowinterpreted\nasfollc)\\vs: \"Onada.ywhenapenispurclut.sed, itislikelythatluilkisalsobe\npurchased. \"\nIfweusethedatefieldct.sgrouping attribute, wecallconsider arnoregenenll\nprolJlern calledcalendric rnarket basketanalysis. Incalendric rnarketbas\u00ad\nketanalysis, theuserspecifies acollection ofcalendars. A,calendar isany\ngroupofdates,suchaseveryl..9v,rulay 'iTttheyeaT1.999,oreucTyfiT8tofthe\n'fnonth.Aruleholdsifitholdsoneverydayinthecalendar. Civenacalendar.\nwecancornpute a.ssociatiol1 rulesoverthesetoftuples\\vhosedatefieldfalls\n\\vithinthec:alendar.", "931": "90,1\nByspecifying interesting calendars, 'wecanidentify rulesthatrnightnothave\nenoughsupport andconfidence \\vithrespecttotheentiredatahase buthave\nenoughsupport andconfidence onthesubsetoftuplesthatfall\\vithinthe\ncalendar. Ontheotherhand,eventhougharulernighthaveenoughsupport\nandconfidence \\vithrespecttothec0l11plete database, itInightgrtinitssupport\nonly\u00a3'1'0111tuplesthatfallwithinacalendar. Inthiscase,thesupport ofthe\nruleoverthetupleswithinthecalendar issignificantly higherthanitssupport\nwithrespecttotheentiredatabase.\nAsanexarnple, consider thePurchases relationwiththecalendar everyfirstof\nthem,onth.\\Vithinthiscalendar, theassociation rulepen:::;.ju:icehassupport\nandconfidence of100%,\\vhere&'3 overtheentirePurcha.ses relation, thisrule\nonlyhas50%support. Ontheotherhand,withinthecalendar, therulepen\n=>m,ilk;hassupport ofconfidence of50%,wherca'3 overtheentirePurch&'3es\nrelation ithassupport andconfidence of75%.\nMoregeneralspecifications oftheconditions thatrIlustbetruewithinagroup\nforaruletohold(forthatgroup)havealsobeenproposed. Wernightwantto\nsaythatallitemsintheLHShavetobepurchased inaquantity oflessthan\ntwoitelTIS,andallitenlsintheRHSrnustbepurchased inaquantity ofmore\nthanthree.\nlJsingdifferent choicesforthegrouping attribute andsophisticated conditions\nasinthepreceding exarnples, wecanidentify rulesInorecornplex thanthe\nbasicassociation rulesdiscussed earlier.TheseInorecornplex rules,nonetheless,\nretaintheessential structure ofanassociation ruleasacondition overagroup\noftuples,withsupport andconfidence rneasures defined c1..'3usual.\n26.3.5Sequential Patterns\nConsider thePurchases relation sho\\vninFigure26.1.Eachgroupoftuples,\nhavingthesarnec'l18tidvalue,canbethought ofclSasequence oftrans~tctions\nordered bydate.rrhisallo\u00a5lsustoidentify frequently arisingbuyingpatterns\novertirne.\nvVebeginb,Yintroducing theconcept ofasequence ofitel11sets. Eachtransac\u00ad\ntionisrepreseqted byasetoftuples,andbylookingatthevaluesintheitern\ncolurnn, \\vegetasetofiternspurchased inthattransaction. 1'here\u00a3o1'e, the\nsequence oftransactions associated \\vithacllstorner corresponds naturally to\nasequence ofitelnsets rnlrchELsed bythecustorner. Forexalnplc, thesequence\nofpurc!HL'3CS forcllstorner 201is({pen,ink,'tn-ilk,juice},{pen,'iT/jIG,In'ice}).", "932": "902 CHAPTER 2t6\nAsubsequence ofasequence ofiternsets isobtained bydeleting oneor11101'e\nitcrnsets, andisalsoasequence ofitenlsets. Wesaythatasequence (aI,...,arn)\niscontained inanothersequence SifShasasubsequence (bt,...,bIn)suchthat\na'iCbi,for1<'i<rn.Thus,thesequence {{pen,},{ink,rnilk},{pen\"ju'ice})is\ncontained in({pen,link},{shir\u00b7t},{ju'ice,ink,m,ilk},{juice,pen,rn'ilk}).Note\nthattheorderofitenlSwithinectChiterllset doesnotrnatter. However, the\norderofiterllsets doeslllatter:thesequence ({pen},{ink,rn'ilk},{pen,flL'ice})\nisnotcontained in({pen,'ink},{shirt},{juice,pen,rnilk},{juice,nLilk,'ink}).\nThesupport forasequence Sofiternsets isthepercentage ofcustorner se\u00ad\nquences ofwhich8isasubsequence. Theproblenl ofidentifying sequential\npatterns istofindallsequences thathaveauser-specified rllinimurll support.\nAsequence (aI,a2, a3,...,am)withminimurn support tellsusthatcustorners\noftenpurchase theitelnsinsetalinatransaction, theninsonlesubsequent\ntransaction buytheitcrllsinseta2,thentheitemsinseta3inalatertransac\u00ad\ntion,andsoon.\nLikeassociation rules,sequential patterns arestaternents aboutgroupsoftuples\ninthecurrentdatabase. Cornputationally, algorithms forfindingfrequently\noccurring sequential patterns resernble algorithrns forfindingfrequent itemsets.\nLongerandlongersequences withtherequired rninirnum support areidentified\niteratively inanlanner verysimilartotheiterative identification offrequent\niternsets.\n26.3.6TheUseofAssociation RulesforPrediction\nAssociation rulesarewidelyusedforprediction, butitisinlportant torec\u00ad\nognizethatsuchpredictive useisnotjustified without additional analysis or\ndornainknowledge. Association rulesdescribe existingdataaccurately butcan\nbernisle::1ding whenusednaivelyforprediction. Forexaruple, consider therule\n{pen}=>{ink}\nTheconfidence a\"ssociated withthisruleistheconditional probability ofanink\npurchase givenapenpurcha...se overthegivendatabase; thatis,itisadescriptive\nrueasure. Wernightusethisruletoguidefuturesalesprornotions. Forexalllple,\n\\vernightofferadiscount onpenstoincrease thesalesofpensand,therefore,\naIsoincrease salesofink.\nFlowever, suchaprorllotion ct.'3SU1l1CS thatpenpurchases aregoodindicators\nofinkpurchases infuturecustC)Iuer transactions (inaddition totransactions\ninthecurrentdatabase). Thisa..ssurnption isjustified ifthereisacav,8alhnk\nbetween penpurchases andinkpurcha.,scs; thatis,ifbuyingpenscausesthe\nbuyertoalsobuyink.Ifowever,wecaninfera,,')sociation rules\\vith highsupport", "933": "Dataw!'ining 903\nandconfidence inSOlncsituations \\\\TherethereisnocausallinkbetweenL118\nandRIIS.Forexarnple, supposethatpensareahvayspurchased together with\npencils,perhaps because ofcustomers' tendency toorderwritinginstrulllents\ntogether. vVewouldtheninfertherule\n{pencil} =?{ink}\nwiththesaBlesupport andconfidence astherule\n{pen}:::}{ink}\nHowever, thereisnocausallinkbetween pencilsandink.Ifweprornote pencils,\nacustolner whopurchases severalpencilsduetothepronlotion hasnorea..son\ntobuyInoreink.Therefore, asalesprolnotion thatdiscounted pencilsinorder\ntoincrease thesalesofinkwouldfail.\nInpractice, onewouldexpectthat,byexallllnlng alargedatabase ofpast\ntransactions (collected overalongtirneandavarietyof circumstances) and\nrestricting attention torulesthatoccuroften(i.e.,thathavehighsupport),\nwerninirnize inferring lnisleading rules.However, weshouldbearinrnindthat\nnlisleading, noncausal ruleslnightstillbegenerated. Therefore, weshould\ntreatthegenerated rulesaspossibly, ratherthanconclusively, identifying causal\nrelationships. Although association rulesdonotindicate causalrelationships\nbetween theLHSandRHS,weelllphasize thattheyprovideausefulstarting\npointforidentifying suchrelationships, using eithE~rfurtheranalysis oradornain\nexpert's judgrnent; thisisthereasonfortheirpopularity.\n26.3.7Bayesian Networks\nFinding causalrelationships isachallenging task,aswesawinSection2G.3.6.\nIngeneral, ifcertaineventsarehighlycorrelated, therearernanypossible\nexplanations. f\"\"'cH'exalnple, supposethatpens,pencils,andinkarepurchased\ntogether frequently. Itrnightbethatthepurchase ofoneoftheseitelIlS(e.g.,\nink)depends causally onthepurchase ofanother itern(e.g.,pen).()ritBlight\nbethatthepurchase ofoneoftheseiterns (~.g.,pen)isstrongly correlated with\nthepurchase ofanother (e.g.,pencil)because ofsorneunderlying phenornenon\n(e.g.,users'tendency tothinkabout\\vritinginstrulnents together) thatcausally\ninfluences bothpurchcL.':'cs. IIc)\\vcanweidentifythetruecausalrelationships\nthatholdbetween theseeventsintherealworld?\nOneapproach istoconsider eachpossible cOlnbination ofcausalrelationships\narnongthevarial)les oreventsofinteresttousandevaluate thelikelihood of\neachcornbination onthebasisofthedatael,vail::l,ble tous.IfwethinkofceLeh\ncornbination ofcausalrelationships asarnodeloftherealworldunderlying the", "934": "904 CHAPTER ~6\ncollected data,wecanassignascoreto'eachruode!byconsidering ho\\vconsis\u00ad\ntentitis(intennsofprobabilities, 'withsennesin1plifying\n assuInptions)\\vith\ntheobserved data.Bayesian nebNorks aregraphsthatcanbeusedtodescribe\naChlSSofsuchIl1odels, withonenodepervariable orevent,andarcsbetween\nnodestoindicate causality. ForexarnpIe, agoodIuodelforourrunning exarn\u00ad\npIeofpens,pencils,andinkissho\\vninFigure26.6.Ingeneral, thenurnber of\npossible Inodelsisexponential inthenurnber ofvariables, andconsidering all\nrnodelsisexpensive, soSOUlesubsetofallpossible rnodelsisevaluated.\nFigure 26.6Bayesian Network Showing Causality\n26.3.8Classification andRegression Rules\nConsider thefollowing viewthatcontains inforrnation frolnarnailingcarnpaign\nperforrned byaninsurance cornpany:\nInsuranceInfo( age:integer, cartype:string, highrisk: boolean)\nTheInsurancelnfo vie\\vha...\"inforrnation aboutcurrentcllston1ers. Eachrecord\ncontains acllstolner's ageandtypeofearas,veIlasaflagindicating whether\nthepersonisconsidered ahigh-risk custorner. Iftheflagistrue,thecllstorner\nisconsidered high-risk. vVewouldliketousethisinformation toidentify rules\nthatpredicttheinsurance riskofnewinsurance applicants whoseageandcar\ntypeareknown. :Forexarnple, onesuchrulecouldbe:\"Ifageisbet\\veen IG\nand25a.n.dcaTtypciseitherSportsor.Truck,thentheriskishigh.\"\nNotethattheruleswewantt.ofindhaveaspecificstructure.vVe arenotinter\u00ad\nestedinrulesthatpredicttheageortypeofcarofaperson: \"\\veareinterested\nonlyinrulesthatpredicttheinsurance risk.T'hus,thereisonedesignated\nattribute vvhosevaluewewishtopredict,and\\ve callthisattribute thede\u00ad\npendent attribute. rrheotherattributes aTecalledpredictor attributes. In\nourexarnple, thedependent attribute intheInsurancelnfo vic\\visthehighrisk\nattribute arldthepredictor attributes areageandcartype. Thegeneralforu1\nofthetypesofrules\\ve\\Vcl,nttodiscover is", "935": "Datai\\{ining 90~\nThepredictor attributes Xl,...,\")(kareusedtopredictthevalueofthedepen\u00ad\ndentattribute}\"\". Bothsidesofarulecanbeinterpreted asconditions onfields\nofatuple.ThePi(Xi)arepredicates thatinvolveattribute ..gi.Thefornlof\nthepredicate depends onthetypeofthepredictor attribute. \\rVedistinguish\ntwotypesofattributes: numerical andcategoricaL Fornumerical attributes,\nwecanperfOrInnurnerieal cornputations, such EL'3cornputing theaverageoft\\VO\nvalues;whereas forcategorical attributes, theonlyallowedoperation istest\u00ad\ning\"\\vhether twovaluesareequal.IntheInsuranceInfo view,ageisanUlllerical\nattribute whereas cartypeandhighrisk arecategorical attributes. Returning to\ntheforrnofthepredicates, ifXi,isanUlllerical attribute, itspredicate Pi,is\noftheforlnl'i<Xi<hi;if..)(iisacategorical attribute, PiisoftheforIll\nX'iE{Vl,...,Vj}.\nIfthedependent attribute iscategorical, wecallsuchrulesclassification rules.\nIfthedependent attribute isnurnerical, wecallsuchrulesregression rules.\nForexarnple, consider againourexaInple rule:\"Ifageisbetween 16and25\nandcaTtypeiseitherSportsorTruck,thenhighr-i8k istrue.\"Sincehighrisk isa\ncategorical attribute, thisruleisaclassification rule.Wecanexpressthisrule\nfonnally asfollows:\n(16<age<25)/\\(car-type E{Sports, Truck}) ===?highri8k=true\nWecandefinesupport andconfidence forclassification andregression rules,as\nforassociation rules:\nIIISupport: ffhesupport foracondition Cisthepercentage oftuplesthat\nsatisfyC.Thesupport foraruleG'11===?C:2isthesupport forthecondition\nCI/\\C2.\nIIIConfidence: Consider thosetuplesthatsatisfycondition (71.Theconfi\u00ad\ndenceforaruleCl=}G'12isthepercentage ofsuchtuplesthatalsosatisfy\ncondition (;2.\nAsafurthergeneralization, consider 1,118right-hand sideofaclassification or\nregression rule: y~=.c..Eachrulepredicts av,lJueofY-foragiventuplebased\nonthevaJuesofpredictor attributes Xl,...,Xk.\\Vecanconsider rulesofthe\nfonn\nwherefissonlCfunction. VVedonotdiscusssuchrulesfurther.\nClassification H,1l<1regression rulesdifferfr0111clssociation rulesbyconsidering\ncontinuous andcategorical fields,ratherthanonlyonefieldthatisset-valued.\nIdentifying suchrulesefficiently presents ane\\vsetofchallenges; vvedonot", "936": "906 CHAPTER 26\ndiscussthegeneralcaseofdiscovering suchrules.Wediscussaspecialtypeof\nsuchrulesinSection26.4.\nCla.-ssification andregression ruleshavemanyapplications. Exarnples include\nela'3sification ofresultsofscientific experirnents, wherethetypeofobjectto\nberecognized depends ontheInCa'3Urernents taken;directlllailprospecting,\nwheretheresponse ofagivencustomer toaprolnotion isafunction ofhis01'\nherinCOluelevelandage;andcarinsurance riskassesslnent, whereacustomer\ncouldbeclassified asriskydepending onage,profession, andcartype.Example\napplications ofregression rulesincludefinancial forecasting, wherethepriceof\ncoffeefuturescouldbeSOInefunction oftherainfallinColornbia amonthago,\nandInedical prognosis, wherethelikelihood ofatUInorbeingcancerous isa\nfunction ofIlleasured attributes ofthetUlnor.\n26.4TREE\u00b7STRUCTURED RULES\nInthissection, wediscusstheproblem ofdiscovering classification andregres\u00ad\nsionrulesfromarelation, butweconsider onlyrulesthathaveaveryspecial\nstructure. Thetypeofruleswediscusscanberepresented byatree,and\ntypically thetreeitselfistheoutputofthedataminingactivity. Treesthat\nrepresent classification rulesarecalledclassification treesordecision trees\nandtreesthatrepresent regression rulesarecalledregression trees\nFigure26.7Insurance lUskExample Decision Tree\nA.sanexalnple, consider thedecision treeShO\\VllinFigure2G.7.Eachpathfroln\ntherootnodeti)aleafnoderepresents oneclaBsification rule.Forexa,rnplc, the\npathfron1theroottot11eleftrnost leafnoderepresents theclassification rule:\n\"Ifapersonis25y(~a,rsor.younger anddrivesasedan,thenheorsheislikely\ntohavealo\\vinsurance risk.\" ~rhepathfforntheroottotheright-Inostleaf\nnoderepresents tllecla,,':)sification rule:\"Ifapersonisolderthan25years,then\nheorsheislikelytohavealowinsurance risk.\"", "937": "DataJvIin'ing 907\nTree-structured rulesareverypopular sincetheyareeasytointerpret. E<l.'3eof\nunderstanding isveryhllportant becausetheresultofanydatarninillgactivity\nneedstobecOlllprehensible bynonspecialists. Inaddition, studieshaveshown\nthat,despiteIhnitations instructure, trCt'-structured rulesareveryaccurate.\nThereexistefficient algorithrl1s toconstruct tree-structured rulesfronllarge\ndatabases. vVediscussasamplealgorithrIl fordecision treeconstruction inthe\nrernainder ofthissection.\n26.4.1Decision Trees\nAdecision treeisagraphical representation ofacollection ofclassification\nrules.Givenadatarecord,thetreedirectstherecordfrOIntheroottoa\nleaf.Eachinternal nodeofthetreeislabeledwithapredictor attribute. This\nattribute isoftencalledasplitting attribute, becausethedatais'split'based\nonconditions overthisattribute. Theoutgoing edgesofaninternal nodeare\nlabeledwithpredicates thatinvolvethesplitting attribute ofthenode;every\ndatarecordentering thenodemustsatisfythepredicate labeling exactlyone\noutgoing edge.T'hecornbined information aboutthesplitting attribute and\nthepredicates ontheoutgoing edgesiscalledthesplitting criterion ofthe\nnode.Anodewithnooutgoing edgesiscalledaleafnode.Eachleafnodeof\nthetreeislabeledwithavalueofthedependent attribute. Weconsider only\nbinarytreeswhereinternal nodeshavetwooutgoing edges,although treesof\nhigherdegreearepossible.\nConsider thedecision treeshowninFigure26.7.Thesplitting attribute ofthe\nrootnodeisage,thesplitting attribute oftheleftchildoftherootnodeis\ncar-type. Thepredicate ontheleftoutgoing edgeoftherootnodeisage:s;25,\nthepredicate ontherightoutgoing edgeisage>25.\n\"'ecanno\\vaBsociate aclassification rulewitheachleafnodeinthetreeas\nfollows. Consider thepathfrorHtherootofthetreetotheleafnode..Eachedge\nonthatpathislabeledwithapredicate. 'Theconjunction ofallthesepredicates\nrnakesuptheleft-hand sideoftherule.rrhevalueofthedependent attribute\nattheleafnodernakesup theright-ha,ndsideoftherule.Thus,thedeeision\ntreerepresents a,collection ofclaA~sification rules,OIleforea..chleafnode.\nAdecision tree,isusuaJlyconstructed int\\VOpha\"ses.Inphaseonc,thegrowth\nphase,anoverlylargetreeisconstructed. ]~histreerepresents therecords\nintheinputdatabase verycLccurately; forexaluple, thetreernightcontain\nleafnodesforinclividual recordsfrorntheinputdataJ:>Hse. Tnphaset\\VO,the\npruning phase,thefinalsizeofthetreeisdeterrnined. ]~herulesrepresented\nbythetn~econstructed inp}laS(~onea,rcusuall:yoverspecialized. Byreducing\nthesizeofthetree,wegenerate asrnaller nUlnber ofllloregeneralrulesthat", "938": "908 C \"\"'.')6 lIAPTI~J.R .....\narebetterthanaverylargenUlllbcr ofveryspecialized rules.Algorithrns for\ntreepruning arebeyondourscopeofdiscussion here.\nClassification treealgorithrlls buildthetreegreedily top-down inthefollowing\n\\vay.Attherootnode~thedatabase isexarnined andthelocally'best'splitting\ncriterion iscornputed. rrhedatabase isthenpartitioned, according totheroot\nnode'ssplitting criterion, intot\"W{)parts,onepaTtition fortheleftchildandone\npa,rtition fortherightchild.Thealgoritlull thenrecurses oneachchild.rrhis\nschcruaisdepicted inFigure26.8.\nInr.ut:!loden, partition D,splitselection ruethodS\n.Qutput: decision treeforDrootedatnoden\nTop-Down Decision TreeInduction Schema:\nBuildTree(Node 11,datapartition D,splitselection rnethodS)\n(1)ApplyStoDtofindthesplitting criterion\n(2)if(agoodsplitting criterioll isfound)\n(3)Createtwochildren nodesn1andn2ofn\n(4)Partition DintoD1andD2\n(5)BuildT'ree(nl, D1,S)\n(6)BuildrTree(n2, D2,S)\n(7)endif\nFigure 26.8Decision TreeInduction Schema\nT'hesplitting criterion atanodeisfoundthrough application ofasplitselec\u00ad\ntionmethod. Asplitselection rnethod isanalgorithrIl thattakesasinput\n(partof)arelation andoutputs thelocally'best'splitting criterion. Inour\nexarnple, thesplitselection rnethod exarnines theattributes cartypeandage,\nselectsoneofthernassplitting attribute, andthenselectsthesplitting pred\u00ad\nicates.IVlanydifferent, verysophisticated splitselection rnethods havebeen\ndeveloped; thereferences providepointers totherelevant literature.\n26.4.2AnAlgorithm toBuildDecision Trees\nIftheinputdatabase fitsintorna,inInernory, ~Tecandirectly followth.eclas\u00ad\nsification treeinduction schcrnashowninFigure26.8.flovvcanweconstruct\ndecision treeswhentheinputrelationislargerthanrnainrncrJlory? Inthisca.se,\nstep(1)inFigllre26.8fails,sincetheinputdatabase doesnotfitinInenl0ry.\nButwecanrnakeoneirnportant observation aboutsplitselection Inethods that\nhelpsustoreducethernainrnerllory requircluents.\nConsider anodeofthedecision tree.Thesplitselection rnethod ha.stoInake\ntwodecisions afterexarllining thepartition atthatnode:Itha.'3toselectthe\nsplitting attribute: anditha,stoselect th(~splitting predicates fortIleoutgo-", "939": "DataAfiTJ,ing\n23Sedan false\n~iOSj)orts false\n~36Sccran--- false\n25Truck true\n~lOSedan false\n.........\"..........\n2~~Truck true\n30Truck false\n25Sports true\n18Sedan false\nFigure 26.9TheInsurancelnfo Relation9Q9\ningedges.Afterselecting thesplitting criterion atanode,thealgorithrn is\nrecursively appliedtoeachofthechildren ofthenode.Doesasplitselection\nrnethod actually needthecornplete database partition asinput?Fortunately,\ntheanswerisno.\nSplitselection rnethods thatcornpute splitting criteriathatinvolveasingle\npredictor attribute ateachnodeevaluate eachpredictor attribute individually.\nSinceeachattribute isexarnined separately, wecanprovidethesplitselection\nrnethod withaggregated inforulation aboutthedatabase insteadofloading\nthecornplete database intornainrnenlory. Chosencorrectly, thisaggregated\ninforrnation enables ustocornpute thesennesplitting criterion aswewould\nobtainbyexarnining theconlplete database.\nSincethesplitselection rnethod exanlines allpredictor attributes, weneed\naggregated inforrnation aboutceLehpredictor attribute. vVecallthisaggregated\ninforrnation theAVesetofthepredictor attribute. TheAVesetofapredictor\nattribute X<ttnodenistheprojection of'n'sdatabase partition onto..:X\"and\nthedependent attribute wherecountsoftheindividual valuesinthedorllain\nofthedependent attribute areaggregated. (AVe;standsforAttribute-Value,\nClasslabel,becausethevaluesofthedependent attribute areofterlcalledclass\nlabels.) Forexarnple, consider theInsurancelnfo relation asshowninFigure\n26.9.rrheAVesetoftherootnodeofthetreeforpredictor attribute ageis\ntheresultofthefollowing databEtse query:\nSELECT FLage,Il.highrisk, COUNT(*)\nFROM Insurancelnfo Il\nGROUPBYR.age,H,.highrisk\nTheAVesetfortheleftchildoft1H'~rootnodeforpredictor attribute car-type\nistheresultofthefollowing query:", "940": "910\nSELECT\nFROM\nWHERE\nGROUPBYItcartype, H,.highrisk, COUNT\nInsurancelnfo R,\nR.-age<=25\nILcartype, H..highrisk(*)CHAPTER~6\nThet\\VO.A.VCsetsoftherootnodeofthetreeareshowninFigure26.10.\n[\nCa~~ype... ,\nhighrisk\n'--falsetrue\n\"\"'\u2022..~Sedan 04- -Sports 11f--- ..._..\nTruck 2 1-.-\"'-\"'-\nAgehighrisk\ntruefalse-- _.... _.-\n1801\n23\"\"-\n1 1.\n2520\n..-\n~30 ()3\n......-360 1.\n.....\"'.. --\"'-\nFigure 26.10AVeGroupoftheRootNodefortheInsuranceInfo Relation\nWedefinetheAVegroupofanodentobethesetoftheAVesetsofall\npredictor attributes atnode TLOurexarnple oftheInsurancelnfo relation has\ntwopredictor attributes; therefore, theAVegroupofanynodeconsists oftwo\nAVesets.\nHowlargeareAVesets?NatethatthesizeoftheAVesetofapredictor\nattribute Xatnodendepends onlyonthenurnber ofdistinctattribute values\nofXandthesizeofthedornain ofthedependent attribute. Forexarnple,\nconsider theAVesetsshowninFigure26.10.TheAVesetforthepredictor\nattribute cartypehasthreeentries,andtheAVesetforpredictor attribute age\nhasfiveentries,although theInsuraneelnfo relation asshowninFigure26.9\nhasninerecords. Forlargedatabases, thesizeoftheAVesetsisindependent\nofthenurnberoftuplesinthedataba.'3e, exceptifthereareattributes withvery\nlargedOITlains, forexarnple, areal-valued fieldrecorded ataveryhighprecision\nwithrnanydigitsafterthedecirnal point.\nIfwe1nakethesirnplifying assurnption thatalltheAVesetsoftherootnode\ntogether \u00a3itintornainrnernory, then\\vecanconstruct decision treesfrOTHvery\nlarge clataba,,~es asfollo\\vs: \\Vernakeascanoverthedatabase andconstruct\ntheAVegroupoftherootnodeinrneIllory. Then\\verunthesplitselection\nrnethod ofourchoicc\\vith t11ei\\Vegroupasinput..AJ'terthesplitselection\n1netllod cornputes thesplitting attribute andthesplitting predicates onthe\noutgoing 1H)des1\\vepartition thedataba,se andrecurS8. Notethatthisalgo\u00ad\nrithrIlisverysirnihu'totheoriginal algorithrn shovvninFigure26.8;theonly\nrnodification necessa.r;y isshowninFigure2(L11.Inadditioll1thisalgoritlll11 is\nstillindependent oftheaetuaJsplitselection rnethod involved.", "941": "DataJvlirLing\nInput:noden,partition D,splitselection 111ethodS\n2..~~_~;EI:!.~:decision treeforDrootedatnode 11\nTop-Down Decision TreeInduction Schenla:\nBuHdTree(Node n,datapartition D,splitselection methodS)\n(la)IvlakeascanoverDandconstruct theAVegroupofnin-nlCIIlory\n(1b)ApplyStotheAVegrouptofindthesplitting criterion\nFigure26.11 Cla...'>sification rn-eeInduction Refinement withAVeGroups\n26.5CLUSTERING911\nInthissectionwediscusstheclustering problem. Thegoalistopartition\nasetofrecordsintogroupssuchthatrecordswithinagroupareshnilarto\neachotherandrecordsthatbelongtotwodifferent groupsaredissimilar. Each\nsuchgroupiscalledaclusterandeachrecordbelongstoexactlyonecluster.1\nSirnilarity between recordsisIneasured cOlnputationally byadistance func\u00ad\ntion.Adistance function takestwoinputrecordsandreturnsavaluethatis\nameasure oftheirsilnilarity. Different applications havedifferent notionsof\nsimilarity, andnoonerneasure worksforalldomains.\nAsanexarnple, consider theschernaoftheCustol11erlnfo view:\nCustornerInfo( age:int,salary:real)\nWecanplottherecordsintheviewonatwo-dil11ensional planeasshownin\nFiguf(~26.12.Thetwocoordinates ofarecordarethevaluesoftherecord's\nsalaTyand agefields.\\Vecanvisually identifythreeclusters: yToungcllstorners\nwh.ohavelowsalaries, youngcllstorners withhighsalaries, andoldercnstorners\nwithhighsalaries.\n{Jsnally,theoutputofaclustering algorithrll consists ofa,summarized rep\u00ad\nresentation ofeachcluster.ThetypeofsUIrllnarized representation depends\nstrongly onthetypeandshapeofclusters thealgoritlull cornputes. Forex\u00ad\narnple, a.'3S111nethatwehavespherical clusters asintheexalllple shuwnin\nFigure26.12.vVecansurnrnarize eachclusterbyitscenteT(oftenalsocalled\nthernea'n)anditsTndi'l1,t),whicharedefinedasfollo\\vs. C;ivenacollection of\nrecords '/'1,...'17\"11'theircenter C:andradius.Raredefined fL.'3follows:\n.n I-\u00b7-.....n 'f'\n('11'\"..1I:::>IL-i=l(r'i-C)\"==- .L..t.Ti,aI1C .1='\\.....-....--.....:.--.---.---n. . Vn(=1\n1Thereareclustering algorithrns thatallowoverlapping clusters, \\vherearecordcouldbelongto\nseveralclusters.", "942": "912\nSalary\n60k\n30k---\u2022\nA\u2022-\u00b7_-8\n20 40c\u2022\u2022\u2022-\n60Age(JIIAPTgR \u00b7~6\nFigure 26.12 Records inCustomerInfo\nTherearetwotypesofclustering algorithlns. Apartitional clustering algo\u00ad\nrithnlpartitions thedataintokgroupssuchthatSOUlecriterion thatevaluates\ntheclustering qualityisoptirnized. Thenurnber ofclusterskisaparameter\nwhosevalueisspecified bytheuser.Ahierarchical clustering algorithnl gen\u00ad\neratesasequence ofpartitions oftherecords. Starting withapartition inwhich\neachclusterconsists ofonesinglerecord,thealgorithrn rnergestwopartitions\nineachstepuntilonlyonesinglepartition rernains intheend.\n26.5.1AClustering Algorithm\nClustering isaveryoldproblern, andnurnerous algorithnls havebeendeveloped\ntoclusteracollection ofrecords. Traditionally, thenurnber ofreeordsinthe\ninputdatabase \\vasassurned toberelatively slnallandthecornplete database\nwa.sassurned tofitintoInainrnernory. Inthissection,we describe aclustering\nalgoritlnn calledBIllCIIthathandles veryla.rge datab~1.ses. rrhedesignof\nBIR,CIIreflectsthefollovving twoa\",ssurnptions:\nII1'hernunber ofrecordsispotentially verylarge,andtherefore we\\\\Tantto\nrnakeonlyonescanovertheda.ta,b(~se.\nIIOnlyalirnitedarnount ofrnainrnenlory isavailable.\nj\\usercansett\\VOpararneters tocontroltheBIRfJII algoritllln. Thefirst\nisathresl10lcl onthearnount ofrnainluernory available. ThisHUlinrncrnory\nthreshold translates intoalllaxirnurn nurnber ofclusterSUIJlrnaries kthatcan\nbelIutintained inrncrllory. 'Thesecondpararneter fisEUIinitiedthreshold for\ntheradiusofan,Ycluster. 1]H~valueofEisanupperboundontheradiusof\nanyclusterandcontrols thenUlnber ofclustersthatthealgorithrn discovers.\nIf('isslnalI,\\evediscover TnaDysInaIIclusters; ifEislarge;wediscover veryfe\\v", "943": "91~\nclusters, eachofwhichisrelatively large.\\Vesaythataclusteriscompact if\nitsradiusiss1na11e1'thant.\nBIF.{,CHalwayslTlaintains k~orfc\\verclustersU1nrnaries (C/i~R~i)inrnainHlcnl0ry,\n\"vhereC:iisthecenterofcluster'iandliiistheradiusofcluster ,i.Thea1gorithrn\nahvaysrnaintains cornpact clusters; thatis,theradiusofeachclusterisless\nthanE.Ifthis invariant cannotbernaintained withthegivenarIlount ofrnain\nlnerno1'y, Eisincreased t=tsdescribed next.\nThealgoritlnl1 readsrecordsfrornthedatabase sequentially andprocesses the1l1\nasfollows:\n1.Cornpute thedistance betVileen record T'andeachoftheexisting cluster\ncenters. Letibetheclusterindexsuchthatthedistance betweenrand\nCiisthesrnallest.\n2.Cornpute thevalueofthenewradius R~oftheithclusterundertheas\u00ad\nsumption thatrisinserted intoit.IfR~<E,thentheithclusterrernains\ncornpact, andweassign Ttotheithclusterbyupdating itscenterand\nsettingitsradiustoR~.IfR:z,>E,thentheithclusterwouldnolongerbe\ncOlnpact ifweinsertrintoit.Therefore, westartanewclustercontaining\nonlytherecord T.\nThesecondsteppresents aproblern ifwealreadyhavethernaxinnun nurnber\nofclustersUIInnaries, k.Ifwenowreadarecordthatrequires ustocreatea\nnewcluster,welackthernainrne1nory required toholditssurnrnary. Inthis\ncase,weincrease theradiusthreshold E-----using SOHleheuristic todetennine\ntheincrease--- inordertorner:qeexisting clusters: Anincrease ofchastwo\nconsequences. First,existing clusters canaccorl1rnodate rnorerecords, since\ntheirrnaxirnurn radiushasincreased. Second, itBlightbepossible tornerge\nexisting clusters suchthattheresulting clusterisstillcornpact. rrhus,an\nincrease in(usuallyreducesthel1ulIlber ofexisting clusters.\nThecornplete BlItCHalgorithrl1 usesabalanced in-rnernory tree,whichissirn\u00ad\nilartoaB-\u00b7t-treeinstructure, toquicklyidentifytheclosestclustercenterfor\naneV\\rrecord.Adescription ofthisdatastructure isbeyondthescopeofour\ndiscussion.\n26.6SIMILARITY SEARCH OVER\n S~=QUENCES\nAlotofinforrnation storedindatal)ases consists ofsequences. Inthissection,\nw(~introduce theproblern ofsiInilarity searchoveracollection ofsequences.\nOurqueryInode}isverysirnple: vVeassurnethattheuserspecifies aquery\nsequence andvvants toretrieve alldatasequences thataresilnilartothe", "944": "914 (]H.APTER 26\nCommercial DataMining Systems: Thereareanumber ofdata\nruiningproducts onthernarket tod~y,suchasSASEnterprise Nliner,\nSPSSClenlcntine, CARTfroInSalfordSystenlS, Ariegaputer PolyAnaJyst,\nANGOSS I<nowledgeStudio. Wehighlight t\\VOthathavestrongdatabase\nties.\nIBM'sIntelligent Miner offersawidera,ngeof algorithlns, including\nassociation rules,regression, cla.'3sification, andclustering. Theenlpha'3is\nofIntelligent Minerison\nscalability-\u00b7~\u00b7the product contains versions ofall\nalgorithllls forparallel cOlnputers andistightlyintegrated withIBM's\nDB2database systenl. DB2'sobject-relational capabilities canbeusedto\ndefinethedataIniningclassesofSQL/MM. Ofcourse,otherdata111ining\nvendors canusethesecapabilities toaddtheirowndataminingmodels\nandalgorithms toDB2.\nMicrosoft's SQLServer2000hasacomponent calledtheAnalysis Server\nthatlnakesitpossible tocreate,apply,andlnanagedataminingmodels\nwithintheDBMS.(SQLServer'sOLAPcapabilities arealsopackaged in\ntheAnalysis Servercomponent.) Thebasicapproach takenistorepresent\naminingrrlodelasatable;clustering anddecision treemodelsare\ncurrently supported. Thetableconceptually hasonerowforeachpossible\ncombination ofinput(predictor) attribute values.Themodeliscreated\nusingastaternent analogous toSQL'sCREATE TABLEthatdescribes the\ninputonwhichthemodelistobetrainedandthealgorithrn tousein\nconstructing themodel. Aninteresting featureisthattheinputtable\ncanbedefined, usingaspecialized viewrnechanisnl, tobeanestedtable.\nForexalnple,we candefineaninputtablewithonerowpercustolner,\nwhereoneofthefieldsisanestedtablethatdescribes theeustolner's\npurchases. TheSQL/Ml\\;1extensions fordataruiningdonotprovidethis\ncapability because SQL:1999doesnotcurrently support nestedtables\n(Section 23.2.1). Severalproperties ofattributes, such f}\",C;whether they\narediscreteorcontinuous, canalsobespecified .\n.J.~rnodelistrainedbyinserting rowsintoit,usingtheINSERTcornlnand.\nItisappliedtoallC\\Vdatasettolnakepredictions usinganewkindof\njoincalledPREDICTION JOIN;inprinciple, eachinputtupleisnlatched !\nwiththecorxesponding tupleinthernininglllodeltodetennine thevalueI\nofthepredicted attribute. Thus,enduserscancreate,train,and apply I,.\ndecisiontreesandclustering usingextended SQL.'ThereareaJsocornrnands\nitobrowsernodels. Unfortnnately, userscannotaddnewrnodelsornew i\nalgorithrlns formodels, acapability thatissupported intheSQL/MlVI I\nproposa. I\nL.___ ..~__.__ ~__~___~_ __ ___''.._.1", "945": "Datal\\ifining 915\nquerysequence. Sinlilarity searchisdifferent frorH'llornlal' queriesinthat\\ve\nareinterested notonlyinsequences thatrnatchthequerysequence exactlybut\nalsothosethatdifferonlyslightlyfrornthequerysequence.\nWebeginbydescribing sequences andsirnilarity between sequences. Adata\nsequence Xisaseriesofnurnbers X=(;1~1,\"\"Xk).S0111etirIles Xisalso\ncalledatimeseries. \\lVecallkthelengthofthesequence. Asubsequence\nZ=(Zl'...,Zj)isobtained frolllanothersequence X=(Xl,...,Xk)bydeleting\nnurnbers frolnthefrontandbackofthesequence X.ForInally,Zisasubse-\nquenceofXifZ1=Xi,Z2==Xi+l, ,Zj=Zi-tj-lforSaIneiE{I,...,k-j+I}.\nGiventwosequences .iY=(Xl,,Xk)andY=(Yll\".,Yk),wecandefinethe\nEuclidean Darrriasthedistance between thetwosequences asfollows:\nk\nIIX-YII==L(Xi -Yi)2\ni=l\nGivenauser-specified querysequence andathreshold pararneter E,ourgoalis\ntoretrievealldatasequences thatarewithinE-distance ofthequerysequence.\nSirnilarity queriesoversequences canbeclassified intotwotypes.\n\u2022Complete Sequence Matching: Thequerysequence andthesequences\ninthedatabase havethesarnelength. Givenauser-specified threshold\nparanleter E,ourgoalistoretrieve allsequences inthedatabase thatare\nwithinE-distance tothequerysequence.\nIISubsequence Matching: rrhequerysequence isshorterthanthese\u00ad\nquences inthedatabase. Inthiscase,wewanttofindallsubsequences of\nsequences inthedatabc1.Se suchthatthesubsequence iswithindistance E\nofthequerysequence. Wedonotdiscusssubsequence rnatching.\n26.6..1AnAlgorithm toFindSimilarSequences\nGivenacollection ofdatasequences, aquerysequence, andadistance thresh\u00ad\noldf,henvcanweefficiently find allsequences withinf-distance ofthequery\nsequence?\n()ne p()ssibilit~y istoscanthedataba.se, retrieve eachdatasequence, andC0111\u00ad\nputeitsdistance tothequerysequence. \\Vhilethisalgorithrn hastherneritof\nbeingsirnple,itahvaysretrieves everydatasequence.\nBecause \\V(~consider theconlplete sequence lnatehing problenl, alldatase\u00ad\nquences andthequery sequ(~nce havetllCseunelength. \\Vecanthinkofthis\nsirnilarity search (1.,\"1a.high-dirnensional indexing probleul. Eachdata,sequence", "946": "916 CHAPTER 2ti\nandthequerysequence canberepresented asapointinak-dirnensionaJ space.\nTherefore, ifweinsertalldatasequences intoaIlluitidirnensional index,wecan\nretrievedatasequences thatexactlyll1atchthequerysequence byqllerying the\nindex.Butsince'we\\vanttoretrievenotonly dat~lsequences thatInatchthe\nqueryexactlybutalsoallsequences within(-distance ofthequerysequence, \\ve\ndonotuseapointqueryasdefinedbythequerysequence. Instead, wequery\ntheindex'withahyper-rectangle thathasside-length 2Eandthequerysequence\nascenter,and\\veretrieve allsequences thatfallwithinthishyper-rectangle.\n\\Vethendiscardsequences thatareactually furtherthancawayfrolnthequery\nsequence.\nITsingtheindexallowsustogreatlyreducethenurnber ofsequences wecon\u00ad\nsideranddecreases thethnetoevaluate thesirnilarity querysignificantly. The\nbibliographic notesattheendofthechapter provide pointers tofurtherirn\u00ad\nprovernents.\n26.7INCREMENTAL MINING\u00b7 ANDDATASTREAMS\nReal-life dataisnotstatic,butisconstantly evolving through additions or\ndeletions ofrecords. Insorneapplications, suchasnetwork Inonitoring, data\narrivesinsuchhigh-speed strearns thatitisinfeasible tostorethedatafor\nofflineanalysis. Wedescribe bothevolving andstrearning datainterlnsof\naframework calledblockevolution. Inblockevolution, theinputdataset\ntothedataminingprocessisnotstaticbutperiodically updated withanew\nblockoftuples,forexarnple, everydayatrnidnight orinacontinuous strealn.\nAblockisasetoftuplesaddedsiInultaneously tothedatabase. Forlarge\nblocks,thisInodelcaptures comrnon practice inrnanyoftoday'sdatawarehouse\ninstallations, where updates fromoperational databases arebatched together\nandperforrned inablockupdate. Forsrnallblocksofdata-~\u00b7\u00b7\u00b7\u00b7-at theextrerne,\neachblockconsists ofasinglerecord\u00b7\u00b7\u00b7\u00b7-\u00b7\u00b7\u00b7\u00b7-this rnodelcaptures strealning data.\nIntheblockevolution rnodel,thedatab~\"kqe consists ofa(conceptually infinite)\nsequence ofdatablocksD1,[J2,...thatarriveattilnesI,2,...,\\Vhe1'8 each\nblockDiconsists ofasetofrecords.2\\\u00a5ecall'itheblockidentifier ofblock13i.\n~rherefore, ata,nytitHet1thedatabase consists ofafinitesequence ofblocksof\ndata(Dl1\u2022\u2022\u2022,I)t;)thatarrivedattirnes{I,2,...,t}.Thedatabc1se attilnet,\n\\vhic.hwedenot.eby1)[1,t],istheunionofthedataba\",se attiInet-1andthe\nblockthatarrivesattiruet,Dl.\nForevolving data,t\\VOclassesofproblerns areofparticular interest: rnodel\nInaintenance andchangedetection. rIhegoalof1110delmaintenance isto\n---\"-\"\n2Ingeneral, ablockspecifies recordstochangeordelete,inaddition ton~cordstoinsert.\\Veonly\nconsider inserts.", "947": ".DataA1in'ing 9~7\nrnaintain adatarniningulodclunderinsertion anddeletions ofblocksofdata.\nToincrernentally cornpute thedataminingrnodelattirnet,\\vhich \\vedenoteby\nl\\:I(D[l,t)),weHUlstconsider onlyAf(D[l,t--1])and.Dt;\\vecannotconsider\nthedatathatarrivedpriortotiInet.Further, adataanalystrllightspecify\ntirne-dependent subsetsofD[1,t],suchasawindowofinterest(e.g.,allthedata\nseenthusfarorlastweek'sdata).1\\I10regeneralselections arealsopossible,\nforexarnple, allweekend dataoverthe P<:k~tyear.Givensuchselections, we\nHlllstincrernentally CCHupute thernodelontheappropriate subsetof.D[l,t]by\nconsidering only[Jtandthemodelontheappropriate subsetof1)[1,t-1].\n'Alrnost' incrernental algoritlulls thatoccasionally exarnine olderdatarnight\nbeacceptable inwarehouse applications, whereincrementality islTIotivated by\nefficiency considerations andolderdataisavailable tousifnecessary. This\noptionisnotavailable forhigh-speed datastrearns, whereolderdatamaynot\nbeavailable atall.\nThegoalofchangedetection istoquantify thedifference, interrnsoftheir\ndatacharacteristics, between twosetsofdataanddetermine whether thechange\nisrneaningful (i.e.,statistically significant). Inparticular, wernustquantify\nthedifference between therllodelsofthedataasitexistedatsonletiInetl\nandtheevolvedversionatasubsequent \u00b7tirnet2;thatis,weBlustquantify the\ndifference between 1\\1(D[I,tl])and1\\1(D[1,t2]).Wecanalsomeasure changes\nwithrespecttoselected subsetsofdata.Severalnaturalvariants oftheproblem\nexist;forexarnple, thedifference betweenM(D[l,t-1])and1\\1(Dt)indicates\nwhether thelatestblockdifferssubstantially frornpreviously existing data.In\ntherestofthischapter, wefocusonrnodelrnaintenance anddonotdiscuss\nchangedetection.\nIncrernental rnodelrnaintenance hasreceived rnuchattention. Sincethequality\nofthedatarlliningrnodelisofutrnostirnportance, incrernental rnodelrnain\u00ad\ntena,nce a1gorithrns haveconcentrated oncornputing exactlythesarneInode1\nHAScOlnputed byrunning thebasicrnodelconstruction algoritlul1 ontheunion\nofoldandnewdata.()ne\\videlyusedscalability technique islocalization of\nchanges duetonewblocks. Forexarnple, fordensity-based clustering algo\u00ad\nritluns,theinsertion ofane\"vrecordaffectsonlyclusters intheneighborhood\noftherecord,andthusefficient algorithrlls canlocalizethechangetoafe\\v\nclusters andavoidreccHnputing allclusters. Asanother exarllple, indecision\ntreeconstruction, \\vernightbeabletoshovvthatthesplitcriterion ata,nodeof\nthetreechanges onlywithinacceptably srnallconfidence intervals vvhenrecords\nareinserted, ifwea..ssurnetha,ttheunderlying distribution oftraining records\nisstatic.\n()nc-pclSS rnodelconstruction overdatastrearllS ha,,\"~received particular atten\u00ad\ntion,sincedataarrivesandrnustbeprocessed continuously inseveralernerg\u00ad\ningapplication dCHnains. Forexarnple, network installations ofla,rgeTelecOll1", "948": "918 ()HAPTER ~\nandInternet serviceproviders havedetailed usageinforruation (e.g.,eall-detail\u00ad\nrecords, routerp<:1Cket-flovv andtracedata)frolndifferent partsoftheunderly\u00ad\ningnetworkthatneedstobecontinuously analyzed todetectinteresting trends.\nOtherexanlples includewebserver logs,streaI11Softransactional datafroI11large\nretailchains,andfinancial stocktickers.\n\\\\Thenworking withhigh-speed datastrearlls, algoritlulls lllUStbedesigned to\nconstruct datarniningrnodelswhilelookingattherelevant dataiterrlSonly\nonceandina.fixedorder(deternlined bythestrearn-arrival pattern), witha\nlirnitedarnount ofmain111eI1l0ry. Data-strearn coruputatioll hasgivenriseto\nseveralrecent(theoretical andpractical) studiesofonlineorone-pass algo\u00ad\nrithrllswithbounded HIeIIIory.Algorithrns havebeendeveloped forone-pass\ncornputation ofquantiles andorder-statistics, estirnation offrequency I1l0Inents\nandjoinsizes,clustering anddecision treeconstruction, estimating correlated\naggregates, andcOInputing one-dirnensional (i.e.,single-attribute) histogranls\nand1Iaa1'wavelet decolllpositions. Next,wediscussonesuchalgorithIn, for\nincremental rnaintenance offrequent itemsets.\n26.7.1Incremental Maintenance ofFrequent Itemsets\nConsider thePurchases Relation showninFigure26.1andassurnethatthe\nminimum support threshold is60%.Itcanbeeasilyseenthatthesetoffrequent\niternsets ofsize1consists of{pen},{ink},and{rnilk}withsupports of100%,\n75%,and75%,respectively. T'hesetoffrequent itell1Sets ofsize2consists of\n{pen,ink:}and{pen,milk},bothwithsupports of75%.ThePurchases relation\nisourfirstblockofdata.Ourgoalistodevelop analgorithrIl thatrnaintains\nthesetoffrequent itcrl1sets underinsertion ofnevvblocksofdata.\nAsafirstexarnple, letusconsider theaddition oftheblockofdatashovvn\ninFigllre26.13toouroriginal database (Figure 26.1).V'nderthisaddition,\nthesetoffrequent itcrIlsets doesnotchange,although theirsupport valuesdo:\n{pen},{i'nk},and{Tn'ilk}nowhavesupport valuesof100%,60%,and60%,\nrespectively, and{pen,ink}and{pen,'In'ilk}nowhave609()support. Notethat\nwecoulddetectthiscaseof'rlOchange' sirnplybyrnaintaining thenurnber of\nrnarket b::1.,>ketsinwhich (~achiternsetoccured. IrlthisexaInple, vveupdatethe\n(al)solute) support ofitcrnset{pen}by1.\nFigure 26.13ThePurchases Relation Block2", "949": "Data1\\1ining\n115 201\n115 2017/1/99 \\vater\n7/1/99 lllilk1\n1919\nFigure26.14ThePurchases Relation Block2a\nIngeneral, thesetoffrequent itemsets Illaychange. Asanexalnple, consider\ntheaddition oftheblockshowninFigure26.14totheoriginaldatab&'3e shown\ninFigure26.1.vVeseeatransaction containing theiternwater,butwedo\nnotknowthesupport oftheiterllset{water}, sincewaterwasnotabovethe\nInininUlm support inouroriginaldatabase. Asirnplesolution inthiscaseisto\nrnakeanadditional scanovertheoriginaldatabase andcornpute thesupport of\ntheitenlset{water}. Butcanwedobetter?Another innnediate solution isto\nkeepcounters forallpossible iterllsets, butthenUlnber ofallpossible itemsets\nisexponential inthenurnberofiterns-\u00b7-and mostofthesecounters wouldbe0\nanyway. Canwedesignanintelligent strategy thattellsuswhichcounters to\nruaintain?\nWeintroduce thenotionofthenegative border ofasetofiternsets tohelp\ndecidewhichcounters tokeep.Thenegative borderofasetoffrequent itemsets\nconsists ofalliterllsetsXsuchthatXitselfisnotfrequent, butallsubsetsof\nXarefrequent. Forexample, inthecaseofthedatabase showninFigure26.1,\nthefollowing iternsets rnakeupthenegative border:{juice},{water}, and{ink,\nmilk}.Nowwecandesignamoreefficient algorithm formaintaining frequent\niternsets bykeepingcounters forallcurrently frequent iternsets andalliterllsets\ncurrently inthenegative border. ()nlyifaniternsetinthenegative border\nbecomes frequent doweneedtoreadtheoriginaldata..setagain,tofindthe\nsupport fornewcandidate itemsets thatBlightbefrequent.\nWeillustrate thispointthrough thefollowing t\\VOexarnples. IfweaddBlock\n2ashowninFigure26.14totheoriginal database showninFigure26.1,we\nincrease thesupport ofthefrequent iterllset{Tn'ilk}byone,andweincrease the\nsupport oftheiternset{water}, whichisinthenegative border,byoneaswell.\nButsincenoiternsetinthenegative borderbeearne frequent, wedonothave\ntore-scantheoriginaldatabase.\nIneontrast, cbnsider theaddition ofBlock2bshowninFigure26.15tothe\noriginaldatabase showninFigure26.1.InthisCCl\"se,theiternset{juice},which\nwasoriginally inthenegative border,becornes frequent withasupport of60%.\nrrhisrneansthatnowthefollowing itcrnsets ofsizetwoenterthenegative\nborder: {juice,pen},{juice,ink},and{juice,Tnilk}.(vVeknowthat{juice,\n'Water}cannotbefrequent sincetheiteulset{water} isnotfreqlient.)", "950": "920\nof .jJ 1-J:L :\"J.. ~1\".....1.....\u2022...... !\n..,.[ 1 f LX'{7\n115 2017/1/99 juice2\n115 2017/1/99 water 2\nFigure26.15ThePurcha..\"es Rt~lation Block2b\n26.8ADDITIONAL DATAMINING rfASKSCHAPTER 2t6\nvVefocusedontheproblern ofdiscovering patterns frornadataba,sc, butthere\nareseveralotherequallyinlportant dataruiningtasks.vVenowdiscuss SOllIe\nofthesebriefly.Thebibliographic references attheendofthechapterprovide\nluauypointers forfurtherstudy.\n..Dataset andFeature Selection: Itisoftenirnportant toselectthe\n'right'datasettornine.Dataset selection istheprocessoffindingwhich\ndatasets touline.Feature selection istheproeessofdeciding whichat\u00ad\ntributes toincludeintheminingprocess.\nIISampling: Onewaytoexplorealargedatasetistoobtainoneorluore\nsamples andanalyze them.Theadvantage ofsampling isthatwecan\ncarryoutdetailed analysis onasarnplethatwouldbeinfeasible ontheen\u00ad\ntiredataset, forverylargedatasets. Thedisadvantage ofscunpling isthat\nobtaining arepresentative salllpleforagiventaskisdifficult; wernightrniss\nirnportant trendsorpatterns because theyarenotreflected inthesan1ple.\nCurrent databa..'Se systerns alsoprovidepoorsupportforefficiently obtain\u00ad\ningsanlples. Irnproving database support forobtaining sarnples withvar\u00ad\niousdesirable statistical properties isrelatively straightforward andlikely\ntobeavailable infutureDBMSs. Applying sarnpling fordataruiningisan\nareaforfurtherresearch.\nIIVisualization: Visualization techniques cansignificantly assistinunder\u00ad\nstanding cornplex datasets anddetecting interesting patterns, andtheiln\u00ad\nportance ofvisualization indataruiningis\\videlyrecognized.\n26.9REVIEW QUESTIONS\nAnswers totherevie\\vquestions canbefuunelinthelistedsections.\nIIlIvVl1atistheroleofdatarniningintheKI)I) process? (Secti.on 26.1)\nII\\Vhatistheaprioriproperty? I)escribe analgorithnl for'firldingfrequent\nitcrIlsets. (Section 26.2.1)", "951": "Data i\\~lir'l,in.9 921\nIIIIInwareicebergqueriesrelatedtofrequent iterIlsets? (Section 26.2.2)\n\u2022(jivethedefinition ofanassociat'ian rule.'\\Vhatisthedifference betv'leen\nsupport andconfidence ofarule?(Setion 26.3.1)\nIIICanyouexplainextensions ofassociation rulestoISAhierarchies? \"Vhat\notherextensions ofassociation rulesareyoufarniliar v'lith?(Sections\n26.3.3and26.3.4)\nIII\"Vhatisasequential pattern? Howcanwecornpute sequential patterns?\n(Section 26.3.5)\nIICanweuseassociation rulesforprediction? (Section 26.3.6)\nIIIWhatisthedifference bet\\'leen Bayesian Networks andassociation rules?\n(Section 26.3.7)\n..Canyougiveexanlples ofclassification andregression rules?Howissup\u00ad\nportandconfidence forsuchrulesdefined? (Section 26.3.8)\n..vVhatarethecOlnponents ofadecision tree?I{owaredecision treescon\u00ad\nstructed? (Sections 26.4.1and26.4.2)\nIIWhatisacluster? Whatinforrnation doweusuallyoutputforacluster?\n(Section 26.5)\n..Howcanwedefinethedistance between twosequences? Describe analgo\u00ad\nrithnltofindallsequences similartoaquerysequence. (Section 26.6)\n\u2022Describe theblockevolution InodelanddefinetheproblclllS ofincrelnental\nrnodelmaintenance andchangedetection. \\Vhatistheaddedchallenge in\nrniningdatastrearns? (Section 26.7)\n11IIDescribe anincrernental algorithnl forconlpllting frequent iternsets. (Sec\u00ad\ntion26.7.1)\nIIIGiveexarnples ofothertasksrelatedtodatarnining.(Section 26.8)\nEXERCISES\nExercise 26.1Brieflyans\\verthefollowing questions:\n1.Define8uppor>t,andconfidence for(111association 1\"ule.\n2.Expla.in whyassociation rulescannotbeuseddirectly forprediction, \\vithout further\nanal.'1lsis orclornain knowledge.\n:3.\\\\7ha1;axethedifferences between a88oc'iat:ion 'rlde8,classification rules, (;1,11(1regression\n'r'lLles?\n4.\\Vhatisthedifference bet\\veen cla88ijic(JJio'Tl andcZ.u8tcrin,g?", "952": "922\ni......................'.\u00b7\"'.li\n ..............<Jri(j~t~iiiili \u00b7,..\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7i.\u00b7\u00b7\u00b7f\"ll:iti\u00b7\u00b7\u00b7\u00b7tii.{':f.c, .~\",.it\u00b7il.. .i ..1i\\I\n111 2015/1/2002 ink1\n111 2015/1/2002 lnilk21--- ..._.._...\n11.1 2015/1/2002 .JuIce1\n112 1056/3/2002 pen1-6/3/2002_.-.\n112 105 ink1\n.-112 1056/3/2002 water1\n113 1065/10/2002 pen1\n113 1065/10/2002 water2\n113 1065/10/2002 milk1 _...\n6/1/2002 114 201 pen2\n114 2016/1/2002 ink2\n114 2016/1/2002 JUIce4\n114 2016/1/2002 water1\n114 2016/1/2002 ruilk1\nFigure 26.16ThePurchases2 RelationC~H:APTER 26\n5.Whatistheroleofinformation visualization indatamining?\n6.Giveexarrlples ofqueriesoveradatabase ofstockpricequotes,storedassequences, one\nperstock,thatcannotbeexpressed inSQL.\nExercise 26.2Consider thePurchases tableshowninFigure26.1.\n1.Simulate thealgorithrn forfindingfrequent iterllsets onthetableinFigure26.1with\nminsup=90 percent, andthenfindassociation ruleswithm,inconJ=90 percent.\n2.Canyoumodifythetablesothatthesamefrequent itemsets areobtained with'fninsup=90\npercent aswith11Linsup=70 percentonthetableshowninFigure26.1?\n3.Sirllulate thealgorithrIl forfindingfrequent iternsets OIlthetableinFigure26.1with\nrn'insup=lO percentandthenfindassociation ruleswithrninconj=90 percent.\n4.Canyournodi~ythetablesothatthesarnefrequent iternsets areobtained withrnin-'i1lp=10\npercent aswithminsvp=70 percent OIlthetableshowninFigure26.1?\nExercise 26.3Assulne wearegivena,data:set Dofrnarketbasketsandhavecomputed the\nsetoffrequent iternsets Xin1)foragivensupport threshold rnin,B'up. Assumethatwewould\nliketoadd.another data'SetD'toD,andrnaintain thesetoffrequent itmnsets withsupport\nthreshold 'fn'in8upinDUIJ'.Consider thefollowing algorithrIl forincrernental Inaintenance\nofasetoffrequent iternsets:\nl.vVeruntheap'T-ioT'ialgoritlun OIlD'andfindallfrequent iterllsets inD'andtheir\nsupport. Theresultisasetofiterllsets .Y'.\\Vealsocornpute thesupport ofallitcrnsets\n-,yE\"YinJ)'.\n2.\\VethenrnakeascanoverDtocornpute thesupport ofalliternsets in.y'.\nAnswerthefollo:\\ving questions aboutthealgorithm:", "953": "Datalvf-in'ing 923\n\u2022Thelaststepofthealgorithm isrnissing; thatis,whatshouldthealgorithm output'?\n\u2022Isthisalgorithm llloreefficientthanthealgorithm described inSecti0n26.7.1'1\nExercise 26.4Consider thePurchases2 tableshowninFigure26.16.\n\u2022Listalliterllsets inthenegative borderofthedataset.\n\u2022Listallfrequent itelnsets forasupport threshold of50%.\n\u2022Giveanexaruple ofadatabase inwhichtheaddition ofthisdatabase doesnotchange\nthenegative border.\n\u2022Giveanexarnple ofadatabase inwhichtheaddition ofthisdatabase wouldchangethe\nnegative border.\nExercise 26.5Consider thePurchases tableshowninFigure26.1.Findall(generalized)\nassociation rulesthatindicate thelikelihood ofitemsbeingpurchased onthesamedateby\nthesamecustomer, withminsupsetto10%andminconj setto70%.\nExercise 26.6Letusdevelop anewalgorithm forthecomputation ofalllargeitemsets.\nAssumethatwearegivenarelationDsiInilartothePurchases tableshowninFigure26.1.\nWepartition thetablehorizontally intokpartsD1,...,Dk.\n1.Showthat,ifitemsetXisfrequent inD,thenitisfrequent inatleastoneofthekparts.\n2.Usethisobservation todevelopanalgorithm thatcornputes allfrequent itemsets intwo\nscansover.D.(Hint:Inthefirstscan,compute thelocallyfrequent itemsets foreach\npartDi,iE{I,...,k}.)\n3.Illustrate youralgorithm usingthePurchases tableshowninFigure26.1.Thefirst\npartition consists ofthetwotransactions withtransid111and112,thesecondpartition\nconsists ofthetwotransactions withtransid113and114.Assulne thattheminimum\nsupport is70percent.\nExercise 26.7Consider thePurchases tableshowninFigure26.1.Findallsequential pat\u00ad\nternswithminsupsetto60%.(Thetextonlysketches thealgorithm fordiscovering sequential\npatterns, sousebruteforceorreadoneofthereferences foracomplete algorithm.)\nExercise 26.8Consider theSubscriberInfo Relation showninFigure26.17.Itcontains\ninformation aboutthemarketing cmnpaign oftheDBAficionado magazine. Thefirsttwo\ncolurnns showtheageandsalaryofapotential customer andthesubscription colurnn shows\nwhether thepersonsubscribes tothernagazine. \\Vewanttousethisdatatoconstruct a\ndecision treethathelpspredictwhether apersonwillsubscribe tothe11lagazine.\n1.Construct theAVC-group oftherootnodeofthetree.\n2.Assume thatthespliting predicate attheroot nod\u20ac~isageS;50.Construct theAVC\u00ad\ngroupsofthetwochildren nodesoftherootnode.\nExercise 26.9Assurne youaregiventhefollowing setofsixrecords: (7,55), (21,202),\n(25,220), (12,7:3), (8,61),and(22,249).\n1.Assurning thatallsixrecordsbelongtoasinglecluster,cornpute itscenterandradius.\n2.Assurne thatthefirstthreerecordsbelongtooneclusterandthesecondthreerecords\nbelongtoadifferent cluster. COlnpute thecenterandradiusofthetwoclusters.\n3.\\Vhichofthetwoclusterings is'better' inyouropinionandwhy?\nExercise 26.10Asslune youaregiventhethreesequences (1,:3,4),(2,:3,2),(:3,3,7).COln\u00ad\nputetheEuclidian Bonnbetween allpairsofsequences.", "954": "924 CHAPTER 26\nage\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7I\u00b7\u00b7\u00b7's-illatry\n Amb8\u00b7C!r1pti{j~'t-\u00b7\u00b71\n- .....-\n3745k No\n-_:---!---~ .....,,----1\n~3970k Yes__------1\n5650k Yes\nf--------- ...t------j---------j\n5243k \"Yes\n3590k Yes\n3254k No-------_.-4058k No----+-----::---t----=-::,------5585k Yes\n4368k Yes\nFigure26.17 TheSubscriberInfo Relation\nBIBLIOGRAPHIC NOTES\nDiscovering usefulknowledge fromalargedatabase islllorethanjustapplying acollection\nofdatarniningalgorithms, andthepointofviewthatitisaniterative process guidedby\nananalyst isstressed in[265]and[666].\\'Forkonexploratory dataanalysis instatistics, for\nexample [745],andonrnachine learning andknowledge discovery inartificial intelligence was\naprecursor tothecurrentfocusondatalTlining;theaddedernphasis onlargevolunles ofdata\nistheinlportant newelernent. Goodrecentsurveys ofdataminingalgorithms include [267,\n397,507].[266]contains additional surveysandarticlesonmanyaspectsofdataminingand\nknowledge discovery, including atutorialonBayesian networks [:371].ThebookbyPiatetsky\u00ad\nShapiro andFrawley [595]contains aninteresting collection ofdatarniningpapers. The\nannualSIGKDD conference, runbytheAClVIspecialinterest groupinknowledge discovery\nindatabases, isagoodresource forreaders interested incurrent research indatamining\n(25,162,268,372,613,691]'asisthe]o'urnal ofKnowledge D'iscovery andDataAlining.\n[363,370,511,781]aregood,in-depth textbooks ondatanlining.\nTheproblern ofminingassociation ruleswasintroduced byAgrawal, Itnielinski, andSwami\n[20].l\\!1anyefficient algorithnls havebeenproposed forthecornputation oflargeiternsets,\nincluding [21,117,364,683,738,786].\nIceberg querieshavebeenintroduced byF'angetal.[264].Thereisalsoalargebodyof\nresearch ongeneralized forrnsof<lssociation rules;forex<:unple, [700,701,703].Theproblem\noffindingrnaxirnal frequent itelnsets ha'3alsoreceived significant attention [13,67,12G,;H6,\n~~47,479,787].Algorithrns forrniningassociation ruleswithconstraints areconsidered in\n[68,462, 56;'{,590,591,70:3].\nParallel algorithnls aredescribed in[2:3]and[655].Recentpapersonparalleldataruiningcan\nbefoundin[788],andworkondistributed data111iningcanbefoundin[417].\n[291]presents anaigoritlull fordiscovering association rulesoveracontinuous nUllwric at\u00ad\ntribute; association rulesovernumeric attributes arealsodiscussed in[78:3J.1'hegeneral\nfornlofassociation rules,inwhichattributes otherthanthetransaction idaregrouped isde\u00ad\nveloped in[529].Association rulesoveriternsinahierarchy arediscllssed in[:361,700].F'llrther", "955": "J)ataA1in'i'TLg()nr.:,L,\u00b7\u00b7i\nextensions andgeneralization ofa,,'3sociation rulesareproposed in[67,115, 56~3].Integration\nofrniningforfrequent itcrHsets intodatalxLse systcrns hasbeenaddressed in[654,74a].'rhe\nproblern ofIniningsequential patterns isdiscussed in[24},andfurtheralgorithrIls forrnining\nsequential patterns canbefoundin[510,702].\nGeneral introductions toclassification andregression rulescanbefoundin[~362,5a2].The\nclassicreference fordecision andregression treeconstruction istheCARTbookbyBreilnan,\nFriccl!nau,Olsheu, andStone[111].Alnachine learning perspective ofdecision treecon\u00ad\nstruction isgivenbyQuinlan [603].Recently, severalscalable algorithnls fordecision tree\nconstruction havebeendeveloped [309,311,521,619,674J.\n'rheclustering problern hasbeenstudied fordecades inseveraldisciplines. Sampletextbooks\ninclude [232,407,418].Scalable clustering algorithuls includeCLARANS [562],DBSCAN\n[249,250],BIRCH [798],andCURE[344].Bradley, Fayyad, andReinaaddresstheproblem\nofscalingtheK-lVIeans clustering algorithm tolargedatabases [108,109].Theproblern of\nfindingclusters insubsetsofthefieldsisaddressed in[19].Gantietal.exauline theproblerll\nofclustering datainarbitrary rnetricspaces[302].Algorithrlls forclustering caterogical data\nincludeSTIRR [315JandCACTUS [301].[651]isaclustering algorithm forspatialdata.\nFinding siulilarsequences fromalargedatabase ofsequences isdiscussed in[22,262,446,\n606,680].\nWorkonincrernental rnaintenance ofassociation rulesisconsidered in[174,175,736].Ester\netal.describe howtonlaintain clusters incrernentally [248],andHidberdescribes howto\nrnaintain largeiteulsets incrernentally [378].Therehasalsobeenrecentworkonrniningdata\nstrearns, suchastheconstruction ofdecision treesoverdatastreams [228,309, 39~)]and\nclustering datastreanlS [343,568]. Ageneralframework forruiningevolving dataispresented\nin[299].Aframework formeasuring changeindatacharacteristics isproposed in[300J.", "956": "INFORMATION RETRIEVAL\nANDXMLDATA\n...HowareDBNISsevolving inresponse tothegrowing aIllounts oftext\ndata?\n...Whatisthevectorspacernodelandhowdoe'sitsuppo~textsearch?\n...Howaretextcollections indexed?\n...Cornpared toIRsystenls, whatisnewinWebsearch?\n...HowisXNILdatadifferent fromplaintextandrelational tables?\n...Whatarethemainfeatures ofXQuery?\n...Whataretheirnplementation challenges posedbyXMLdata?\n..Keyconcepts: information retrieval, boolean andrankedqueries;\nrelevance, precision, recall;vectorspacemodel,TF/IDF terrnweight\u00ad\ning,document similarity; inverted index,signature file;Webcrawler,\nhubsandauthorities, PigeonRankofawebpage; sernistructured data\nlllodel,XML;XQuery, pathexpressions, FLWRqueries;XMLstorage\nandindexing27\n'withRaghav Kaushik\nUniveTsity of\nWi8consin---Aladison\nATne'rne:risadeviceinvvhiehanindividual storesallhisbooks,\nrecords, andcornrnunications, andwhichisrnechanized sothatitrnay\nbeconsulted withexceeding speedandflexibility.\n--'Vannevar Bush,AsWe!vlayThink,1.945\n926", "957": "IRandXlvlLData 9~7\nThefieldofinforlnation retrieval (IR)hasstudiedtheproblenl ofsea,rching\ncollections oftextdocurnents sincethe19508anddeveloped largelyindepen\u00ad\ndentlyofdatabase systenls. Theproliferation oftextdocunlents ontheWeb\nllladedocurnent searchaneveryday operation for1110stpeopleandledtore\u00ad\nnewedresearch onthetopic.\nThedatabase field'sdesiretoexpandthekindsofdatathatcanbemanaged in\naDB~ISiswell-established andreflected indevelopments likeobject-relational\nextensions (Chapter 23).Documents ontheWebrepresent oneofthernost\nrapidlygrowing sourcesofdata,andthechallenge ofrnanaging suchdocuments\ninaDBMShasnaturally becomeafocalpointfordatabase research.\nTheWeb,therefore, brought thetwofieldsofdatabase rnanagement systenls\nandinformation retrieval closertogether thanever before, and,aswewillsee,\nXMLsitssquarely inthemiddlegroundbetween thenl.Weintroduce IRsys\u00ad\ntemsaswellasadatamodelandquerylanguage forXMLdataanddiscuss\ntherelationship with(object-)relational database systerns.\nInthischapter, wepresentanoverview ofinformation retrieval, Websearch,\nandtheemerging XMLdatamodelandquerylanguage standards. Webegin\ninSection 27.1withadiscussion ofhowthesetext-oriented trendsfitwithin\nthecontext ofcurrentobject-relational database systeIns. Weintroduce in\u00ad\nforrnation retrieval concepts inSection 27.2anddiscussspecialized indexing\ntechniques fortextinSection27.3.WediscussWebsearchenginesinSection\n27.4.InSection27.5,webrieflyoutlinecurrenttrendsinextending database\nsystems tosupport textdataandidentify SOllleoftheirnportant issuesin\u00ad\nvolved.InSection27.6,wepresenttheXMLdatalllodel,building ontheXML\nconcepts introduced inChapter 7.Wedescribe theXQuerylanguage inSection\n27.7.InSection27.8,weconsider efficient evaluation ofXQuery queries.\n27.1COLLIDING WORLDS: DATABASES, IR,ANDXML\n'The\\i\\Tebisthernostwidelyuseddoculnent collection today,andsearchonthe\nvVebdiffersfroIntraditional IR-style docurnent retrieval iniluportant ways.\nFirst,thereisgreaternphclsis onscalability toverylargedocument collections.\nIRsysterns typically dealtwithtensofthousands ofdocuments, wherea.'3 the\nvVebcontains l)illionsofpages.\nSecond,thevVebhassignificantly changed howdocurnent collections arecreated\nandused.Traditionally, IIIsysterlls wereaiInedatprofessionals likelibrarians\nandlegalresearchers, whoweretrainedinusingsophisticated retrieval engines.\nDocurnents werecarefully prepared, anddocllrnents inagivencollection were\ntypically onrelatedtopics.OnthevVeb, docurnents arecreatedbyaninfinite", "958": "928 CHAPT8R 27\nvarietyofindividuals forequallylllClnypurposes, andreflectthisdiversity in\nsizeandcontent. Searches aTecarriedoutbyordinary peoplewithnotraining\ninusingretrieval software.\nTheernergence ofXl\\/lLhasaddedathirdinteresting diInensioI1 totextsearch:\nEverycloClunent canno\\vbernarkeduptoreflectadditional infol'lnation of\ninterest, suchasauthorship, source,andevendetailsabouttheintrinsic content.\nThishe),schanged thenatureofa'\"docurnent\" froInfreetexttotextualobjects\n\\vitha..')sociated fieldscontaining metadata (dataaboutdata)ordescriptive\ninfonnation. Linkstootherdocurnents areaparticularly irnportant kindof\nlnetadata, andtheycanhavegreatvalueinsearching docurnent collections on\nthevVeb.\nTheWebalsochanged thenotionofwhatconstitutes adocunlent. Documents\nontheWebmaybemultinledia objectssuchasirnagesorvideoclips,with\ntextappearing onlyindescriptive tags.WemustbeabletoInanage such\nheterogeneous datacollections andsupport searches overthern.\nDatabase rnanagernent systenlstraditionally dealtwithsimpletabulardata.In\nrecentyears,object-relational database systerns (ORDBMSs) weredesigned to\nsupport complex datatypes.Images, videos,andtextualobjectshavebeen\nexplicitly rnentioned asexaruples ofthedatatypesORDBMSs areintended to\nsupport. Nonetheless, currentdatabase systerns havealongwaytogobefore\ntheycansupportsuchcOlnplex datatypessatisfactorily. Inthecontextoftext\nandXMLdata,challenges includeefficient support forsearches overtextual\ncontentandsupportforsearchesthatexploittheloosestructure ofXNILdata.\n27.1.1DBMSversusIRSystems\nI)atabc1.se andIR,systcrns havetheCOllllnon objective ofsupporting searches\novercollections ofdata.However, rnanyirnportant differences haveinfluenced\ntheirdeveloprnent.\n11IISearches versusQueries: IR,systerns aredesigned tosupport aspecial\u00ad\nizedclassofqlH~riesthat\\vealsocallsearches. Searches arespecified in\nternlSofa.fo\",Tsearchterms,andtheunderlying dataisusuallyacollec\u00ad\ntionofunstructured textdocurnents. IIIaddition, anirnportant featureof\nTH,searches isthatsearchresultsrnay beranked, orordered, intcrrnsof\nhovv'\\vell'thesearchresultsrnatchthesearchtenns.Incontra.'3t, databa\"sc\nsysternssupport averygeneralclassofqueries,andtheunderlying datais\nrigidlystructured. UnlikeIIIsysterns~ database systerns havetraditionally\nreturnedunranked setsofresults.(Eventherecent S(~L/()L,AP extensions\nthatsupport earl:yresultsandsearches overordereddata(secl,Chapter 25)", "959": "IRand)(ivlL]Jata 929\ndonotorderresultsinterlTISofhow\"\"veIltheyrnatchthequery.Relational\nqueriesarepTeC'i8einthataro\\viseitherintheansweroritisnot;there\nisnonotionof'howvvellarowrnatches~ thequery.) Inother\"\"rords,a\nrelational queryonlyassignstworaJlkstoarow,indicating 'whether the\nrowisintheans\\verornot.\n\u2022Updates andTr'ansactions: IRsystelns areoptirnized foraread-Illostly\nworkload anddonotsupport thenotionofatransaction. Intraditional\nIRsysterlls, ne\\vdocurnents areaddedtothedoculnent collection frorH\ntirnetotitne,andindexstructures thatspeedupsearches areperiodically\nrebuiltorupdated. Therefore, docllrnents thatarehighly relevant fora\nsearchrnightexistintheIRsysteln,butnotberetrievable yetbecause of\noutdated indexstructures. Incontrast, databa ...'3esysterns aredesigned to\nhandleawiderangeofworkloads, including update-intensive transaction\nprocessing workloads.\nThesedifferences indesignobjectives haveled,notsurprisingly, toverydif\u00ad\nferentresearch elnphases andsystemdesigns. Ilesearch inIRstudiedranking\nfunctions extensively. Forexample, arllongothertopics,research inIRinvesti\u00ad\ngatedhowtoincorporate feedback frOITlauser'sbehavior tomodifyaranking\nfunction andhowtoapplylinguistic processing techniques toimprove searches.\nDatabase research concentrated onqueryprocessing, concurrency controland\nrecovery, andothertopics,ascoveredinthisbook.\nThedifferences between aDB1\\tISandanIIIsystenlfromadesignandirnple\u00ad\nmentation standpoint shouldbecome clearasweintroduce IRsysterlls inthe\nnextfewsections.\n27.2INTRODUCTION TOINFORMATION RETRIEVAL\nTherearetwoCOrllr110n typesofsearches, orqueries, overtextcollections:\nboolean queriesandrankedqueries. Inaboolean query~theuser spE~ci\u00ad\nfiesanexpression constructed usingterlllSandboolean operators (And,Or,\nNot).Forexalnple,\ndatabase And(lvlicT08ojt OrIBM)\nThisquerya..sksforalldocurnents thatcontaintheterrndatabase andinaddi\u00ad\ntion,eitherPvficT080jt orIBN!.\nInarankedquerytheuserspecifies oneorrnoreterrlls,a,rlcltheresultofthe\nqueryisalistofdocurllents rankedbytheirrelevance tothequery.Intuitively,\ndocurnents atthetopoftheresultlistareexpected to'rnatch'thesearch", "960": "930\nagentJanles agent\nagentrnobilecornputer\nJamesMadison Inovie\nJanlesBondmovie\nFigure 27.1ATextDatabase withFourRecordsCHAPTER 2$7\ncondition ruoreclosely,orbe'rnorerelevant', thandoculnents lowerintheresult\nlist.Whileadocument thatcontains Microsoft satisfiesthesearch'Microsoft,\nIBM,'adocument thatalsocontains IBMisconsidered tobeabettermatch.\nSimilarly, adocunlent thatcontains severaloccurrences ofMicrosoft mightbe\nabetterrnatchthanadocument thatcontains asingleoccurence. Ranking the\ndocurnents thatsatisfytheboolean searchcondition isanimportant aspectof\nanIRsearchengine,andwediscusshowthisisdoneinSections 27.2.3and\n27.4.2.\nAnimportant extension ofrankedqueriesistoaskfordocuments thataremost\nrelevant toagivennaturallanguage sentence. Sinceasentence haslinguistic\nstructure (e.g.,subject-verb-object relationships), itprovides moreinforma\u00ad\ntionthanjustthelistofwordsthatitcontains. Wedonotdiscussnatural\nlanguage search.\n27.2.1VectorSpaceModel\nWenowdescribe awidely-used franlework forrepresenting docurnents and\nsearching overdocurnent collections. Consider thesetofallterrnsthatap\u00ad\npearinagivencollection ofdocuments. Wecanrepresent eachdocument asa\nvectorwithoneentryperternl.Intheshnplest 1'01'111ofdoclunent vectors, if\nterrnjappears ktirnesindOCUlnent i,thedocument vectorfordocurnent i\ncontains valuekinpositionj.Thedocurnent vectorforicontains thevalue0\ninpositions corresponding toterrnsthatdonotappearini.\nConsider theexaInple collection offourdocurnents showninFigure27.1.rrhe\ndocUluent vectorrepresentation isillustrated inFigurf~27.2;eachrowrepresents\nadocurnent. Thisrepresentation ofdocurnents a,,'3terrnvectorsiscalledthe\nvectorspacemodel.", "961": "IRandXNfLData\n193L\n2\n3\n41\no\noo\no\n11\no\noo\no\noo\n1\n1o\n1\no1\no\noo\n1\n1\nFigure27.2Document VectorsfortheExample Collection\n27.2.2TFIIDFWeighting ofTerms\nWedescribed thevalueforaterrilinadocument vectorassimplytheterm\nfrequency (TF),ornurnberofoccurrences ofthatterrninthegivendocument.\nThisreflectstheintuition thatatermwhichappears oftenismoreiInportant\nincharacterizing thedocument thanaterrnthatappears onlyonce(oraterm\nthatdoesnotappearatall).\nHowever, sometermsappearveryfrequently inthedocument collection, and\nothersarerelatively rare.Thefrequency oftermsiseITlpirically observed to\nfollowaZipfiandistribution, asillustrated inFigure27.3.Inthisfigure,each\nposition ontheX-axiscorresponds toaterrllandtheY-axiscorresponds to\nthenUlnber ofoccurrences oftheterm.Termsarearranged ontheX-axisin\ndecreasing orderbythenurnberoftirnestheyoccur(inthedocurnent collection\nasawhole).\nAsrnightbeexpected, itturnsoutthatextremely COmlTIOn termsarenotvery\nusefulinsearches. Examples ofsuchcommon termsinclude a,an,theetc.\nTerrnsthatoccurextremely oftenarecalledstopwords,anddocunlents are\npre-processed toelirilinate stopwords.\nEvenaftereliminating stopwords,wehavethephenorilenon thatsomewords\nappearnluchluoreoftenthanothersinthedocurnent collection. Consider the\nwordsLirnl;Eandkernelinthecontextofacollection ofdOCUlnents aboutthe\nLinuxoperating systern. WhileneitherisCOlnrnon enoughtobeastopword,\nLinuxislikelytoappearmuchrnoreoften.Givenasearchthatcontains both\nthesekeywords, wearelikelytogetbetterresultsifwegiveInoreirnportance\ntodocurnents thatcontain kernelthandocurnents thatcontain Linux.\nvVeca.'!}capturethisintuition byrefiningthedocurnent vectorrepresentatioll as\nfollows.Thevalueassociated withternljinthedocurnent vectorfordocurnent\ni,denoted a..\"'Wij,isobtained byrnultiplying theterrIlfrequency tij(thenuruber\noftirnestennjappears indocurnent i)bytheinverse docurnent frequency\n(IDF)ofterrnjinthedocurnent collection. IDFofatennjisdefined aAS", "962": "932 CHAPTER 27\nlog(lVInj);where1'1isthetotalrHnnberofdOCUlnents, andnjisthenurnberof\ncloClllnents thattennjappears in.Thiseffectively increases theweightgiven\ntoraretenns.Asanexarnple, inacollection of10,000docurnents, aterrIlthat\nappears inhalfthedocurnents hasanIDFof0.3,andatenllthatoccursin\njustonedocurnent hasanIDFof4.\nLengthNormalization\nConsider adocurnent !J.SupposethatwelnodifyitbyaddingalargenUlllberof\nnewterrns.ShouldatheweightofaterrntthatappearsinDbethesaIneinthe\ndoclunent vectorsforDandthernodified dOCUlTlent? Although theTFjIDF\nweightfortisindeedthesaIneinthetwodocument vector,ourintuition\nsuggests thattheweightshouldbelessinthe1110dified document. Longer\ndocul'llents tendtohavelnoreterms,andlnoreoccurrences ofanygiventerrn.\nThus,iftwodoculnents containthesaInenUlnber ofoccurrences ofagiven\ntenll,theimportance oftheten'llincharacterizing thedocument alsodepends\nonthelengthofthedocull1ent.\nSeveralapproaches tolengthnornlalization havebeenproposed. Intuitively,\nallofther'llreducetheirnportance giventohowoftenatermoccursasthefre\u00ad\nquencygrows.Intraditional IRsystelns, apopularwaytorefinethesirnilarity\nInetriciscosinelengthnormalization:\n* tvij\nWij=l'\u00a3~=l 11I[\nInthisformula,tisthenurnbei'oftennsinthedOCulnent collection, 'Wijisthe\nTFjIDFweightwithout lengthnorrnalization, andtvijisthelengthadjusted\nTFjlDFweight.\nTennsthatoccurfrequently inadoculnent areparticularly problenlatic on\nthe\"Vebbecause webpages areoftendeliberately rnodified byaddingrnany\ncopiesofcertainwords\u00b7\u00b7\u00b7\u00b7forexarnple, sale,free,sextoincreasethelikelihood\noftheirbeingreturned inresponse toqueries. l:'orthisreason, \\:Vebsearch\nenginestypically norrnalize forlengthbyilnposing alnaxirnurn value(usually\n2or3)forterrIlfrequencies.\n27.2.3Ranking Document Similarity\n\\Veno\\vconsider ho\\\\-'thevectorspacerepresentation allowsustorankdOCll\u00ad\nrnentsintheresultofarankedquery.Akeyobservation isthatarankedquery\ncanitselfbethought ofEL'SadocUlllent, sinceitisjustacollection ofterrl1s.\n1'hisallowsustousedocument similarity astheba\",sisforranking query", "963": "IRandXi\\:fLData 933\nresults\" ....-..,-thedoculnent thatisrnostsirnilartothequeryisrankedhighest, and\ntheonethatisleastsirnilarisrankedlowest.\nIfatotaloftteru18appearinthecollection ofdocurnents (tis8intheexaulple\nsho\\~lninFigure27.2),\\\\\"ecanvisualize docunH:~nt vectorsinat-diInensional\nspacein\\vhicheachaxisislabeledwithate1'1n.Thisisillustrated inFigure\n27.4,foratwo-dirnensional space.Thefigureshowsdoculuent vectorsfort\\VO\ndocuments, D1and.D2,&'3\\vell (;1\",'3aqueryQ.\n0.10.20.30.40.50.60.7 0.80.9TERMBQ:;::(0.4,0.8)\n01:;::(0.8,0.3)\nD2:;::(0.2,0.7)Q\n02~\n:E\nffi\nE-\n0.8\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n0.1-......\nRAREWORDS....-:\nSTOPWORDS\nFigure 27.3Zipfian Distribution ofTerm\nFrequenciesFigure27.4Document Similarity\nThetraditional rneasure ofcloseness between twovectors, theirdotprodlJ,ct,\nisusedasalneasure ofdocurnent siInilarity. ThesiInilarity ofqueryQtoa\ndoculnent IJiisIllea8Ured bytheirdotproduet:\nt\nsim,(Q,D i)---...,LQj\u00b7 7LJ7j\n.1=1\nIntheexcunple showninFigure27.4,si'nt(Q,Dl)(0.4*0.8).+(0.8*\n0.3)=0.56,andsi1n(Q,D2)=(0.4*0.2)-+-(0.8*0.7)=0,64.Accordingly,\nD2isrankedhigherthan1)1inthesearchresult.\nInthecontext,oftheVVeb,docurnent sirnila1'ity ISoneofseveralIneaSU1'es\nthatcanbeused.torankresults,butshouldnotbeusedexclusively. First,\nitisquestionable vvheth,er userswantdOCllrnents thataresirnilartothequery\n(whichtypically consists ofOIleortvvo'words)ordOCUll.lenS thatcontajnuseful\ninforrnation n~latedtothequer,Yte1'111S.IntuitivelY,we \"vanttogiveilnportance\ntotheQ'ualityofaWebpage\\vhileranking it,inaddition toreflecting the\nsirnilarity oftlH.~pagetoagivenquery.Linksbetween pagesprovidevaluable", "964": "934 C~HAPTER '2.7\nadditional inforrnation thatcanbeusedtoobtainhigh-quality results. We\ndiscussthisissueinSection27.4.2.\n27.2.4Measuring Success: Precision andRecall\nTwocriteriaarecornnlonly usedtoevaluate information retrieval systerlls. Pre\u00ad\ncisionisthepercentage ofretrieved documents thatarerelevant tothequery.\nRecallisthepercentage ofrelevant docurnents inthedatabase thatarere\u00ad\ntrievedinresponse toaquery.\nRetrieving alldocuments inresponse toaquerytrivially guarantees perfect\nrecall,butresultsinverypoorprecision. Thechallenge istoachievegood\nrecalltogether withhighprecision.\nInthecontextofsearchovertheWeb,thesizeoftheunderlying collection is\nontheorderofbillionsofdocuruents. Giventhis,itisquestionable whether\nthetraditional measure ofrecallisveryuseful.Sinceuserstypically don'tlook\nbeyondthefirstscreenofresults,thequalityofaWebsearchengineislargely\ndeterlnined bytheresultsshownonthefirstpage.Thefollowing adapted\ndefinitions ofprecision andrecallrnightbemoreappropriate forWebsearch\nengInes:\n\u2022WebSearchPrecision: Thepercentage ofresultsonthefirstpagethat\narerelevant tothequery.\n\u2022WebSearchRecall: rrhefractionN/M,expressed asapercentage, where\nMisthenUluberofresultsdisplayed onthefrontpage,andoftheMruost\nrelevant documents, Nisthenumberdisplayed onthefrontpage.\n27.3INDEXING FORTEXTSEARCH\nInthissection,weintroduce twoindexing techniques thatsupport theevalu\u00ad\nationofboolean andrankedqueries. 'The'inverted indexstructure discussed\ninSection27.3.1iswidelyusedduetoitssirnplicity andgoodperforlnance.\nItsrnaindisadvantage isthatitimposes asignificant spaceoverhead: Thesize\ncanbeupto300percentthesizeoftheoriginalfile.Thesignature fileindex\ndiscussed inSection 27.::3.2hasasInallspaceoverhead andoffersaquickfilter\nthatelirninates rnostnonqualifying docurnents. However, doesnotscaleaswell\ntolargerdataha ..')csizesbecausetheindexhastobesequentially scanned.\nBeforeadoeuruent isindexed, itistypically pre-processed toelirninate stop\nwords.Sincethesizeoftheindexesisverysensitive tothenurnber oftern1S\ninthedocurnent collection, elirninating stopwordscangreatlyreduceindex", "965": "IRand..'KMLData\nsize.IR,systcrns alsodocertainotherkindsofpre-processing. :Forinstance,\ntheyapplystelnming toreducerelatedterrnstoaca,nonical forrn.Thisstep\nalsoreduces thenUluber ofterrn8tobeindexed, butequallyirnportantly, it\nallowsustoretrievedocuments thatlnaynotcontaintheexactqueryterrIlbut\ncontain S(Hnevariant. Asanexarnple, theterrnsT1ln,T'lLnning, andT'unncrall\nsternto'run.TheterrIlrunisindexed, andeveryoccurrence ofavariantofthis\ntermistreatedasanoccurrence ofrun.Aquerythatspecifies rtLnneTfinds\ndocurnents thatcontainanywordthatstenlStoT'UTt.\n27.3.1 Inverted Indexes\nAninverted indexisadatastructure thatenables fastretrieval ofalldoc\u00ad\numentsthatcontain aqueryterr11.Foreachternl,theindexrnaintains alist\n(calledtheinverted list)ofentriesdescribing occurrences ofthetenn,with\noneentryperdocurnent thatcontains theternl.\nConsider theinverted indexforourrunning example showninFigure27.5.The\nterm'Jarnes'hasaninverted listwithoneentryeachfordocuments 1,3,and\n4;theterm'agent'hasentriesfordocurnents 1and2.\nTheentryfordocument dintheinverted listforterrntcontains detailsabout\ntheoccurrences oftermtindocument d.InFigure27.5,thisinformation\nconsists ofalistoflocations withinthedocument thatcontaintermt.Thus,\ntheentryfordocument 1intheinverted listforterrn'agent'liststhelocations\n1and5,since'agent'isthefirstandfifthwordofdocurnent 1.Ingeneral,\nwecanstoreadditional information abouteachoccurrence (e.g.,inanHTML\ndocurnent, istheoccurrence inthe1'ITLEtag?)intheinverted list.Wecan\nalsostorethelengthofthedocurnent ifthisisusedforlengthnorlnalization\n(seebelow).\nThecollection ofinverted listsiscalledthepostings file.Inverted listscanbe\nverylargeforlargedoeurnent collections. Infact,Websearchenginestypically\nstoreeachinverted listonaseparate page,andInostlistsspanrnultiple pages\n(andifso,arernaintained &'Salinkedlistofpages). Inordertoquicklyfind\ntheinverted listfora,queryterrn,allpossible queryterrnsareorganized ina\nsecondindexstructure suchasaB+treeora.hashindex.\nThesecondindex,calledthelexicon, isInuchsrnallerthanthepostings file\nsinceitonlycontains oneentryperterrn,andfurther, onlycontains entriesfor\nthesetofterl11SthataTeretained afterelirninating stopwords,andapplying\nstenlluing rules.Anentryconsists oftheterlIl, SOH1Csurnrnary inforrnation\naboutitsinverted list,andtheaddress (ondisk)oftheinverted list.InFigure\n27.5,theSllIl1lnary inforrnation consists ofthelllllllber ofentriesintheinverted", "966": "93G\nlexicon(in-memory) Postings file(ondisk)CHAPTER 27\nFigure 27.5Inverted IndexforExample Collection\nlist(i.e.,thenurnber ofdocuments thattheterl11appears in).Ingeneral, it\ncouldcontainadditional infonnation suchastheIDFfortheterrIl,butitis\nil11portant tokeeptheentry'ssizeasslllallaspossible.\nThelexiconisrua.intained in-lllelnory, andenablesfastretrieval oftheinverted\nlistforaqueryterrn.rrhelexiconinFigure27.5usesahashindex,andis\nsketched byshowing thehashvaluefortheterrn;entriesfortermsaregrouped\nintohashbucketsbytheirhashvalue.\nUsinganInverted Index\nA_querycontaining asingletennisevaluated byfirstsearching thelexicon\ntofindtheaddress oftheinverted listfortheterrIl.Thentheinverted list\nisretrieved, thedocidsinitarernapped tophysical doculnent addresses, and\nthecorresponding docurnents areretrieved. Iftheresultsaretoberanked,the\nrelevance ofeachdocurnent intheinverted listtothequerytermisC01l1puted,\nanddocurnents arethenretrieved inorderoftheirrelevance rank.()bservethat\ntheinforrna,tion neededtocornpute therelevance 1neEU3ure described inSection\n27.2--thefrequency ofthequeryternlinthedOCu1nent, theIDFoftheterrnin\nthedocurnent collection, andthelengthofthedocurnent ifitisusedforlength\nnonnalizatioll-------are allavailable ineitherthelexiconortheinverted list.\n\\\"lheninverted listsareverylong,asin\\Veb searchengines, itisusefulto\nconsider \\vhether weshouldprecornpute therelevance of eachdOCUlnent inthe\ninverted listforaterrn(withrespecttothatterrn)andsortthelistbyrelevance\nratherthandocurnent id.Thiswouldspeedupquerying because wecanjust", "967": "IRand.i'yAtfLData 937\nlookataprefixoftheinverted list,sinceusersrarelylookat11101'0thanthe\nfirstfc\\vresults. II(ywever 1Ina.intaining listsinsortedorderbyrelevance can\nbeexpensive. (Sorting bydOcUll1cnt idisconvenient because nevvdOCUlnents\nareassigned increasing ids,andwecantherefore sirnply<1ppendentriesfornew\ndOCUlnents attheendoftheinverted list.Further, ifthesirnilarity function is\nchanged, \\vedonothavetorebuildtheindex.)\nAquerywithaconjunction ofseveralterrnsisevaluated byretrieving the\ninverted listsofthequeryterrnsoneatatiTneandintersecting theln.Inorder\ntorninirnize 111en10r,}T usage,theinverted listsshouldberetrieved inorderof\nincreasing length.Aquerywithadisjunction ofseveralterrnsisevaluated by\nruerging allrelevant inverted lists.\nConsider theexaruple inverted indexshowninFigure27.5.Toevaluate the\nquery'JaUles',weprobethelexicontofindtheaddressoftheinverted listfor\n'Ja1nes', fetchitfromdiskandthenretrieve docurIlent 1.Toevaluate thequery\n,Jarnes'AND'Bond',wefirstretrievetheinverted listforthetenn'Bond'and\nintersect itwiththeinverted listfortheterrn'Janles.'Crheinverted listof\ntheterrn'Bond'haslengthtwo,whereas theinverted listoftheterrIl'Jarnes'\nhaslengththree.)rrheresultoftheintersection ofthelist(1,4)withthelist\n(1,~~,4)isthelist(1,4)anddoculuents 1and4aretherefore retrieved. 'fa\nevaluate thequery'.lalnes' OR'Bond,'weretrievethetwoinverted listsinany\norderandmergetheresults.\nforrankedquerieswithlnultiple tenns,we1nustfetchtheinverted listsfor\nallterrl1s,COlllpute therelevance ofeverydoclunent thatappears inoneof\ntheselistswithrespecttothegivencollection ofqueryterrns,andthensort\nthedocurnent idsbytheirrelevance beforefetching thedocluuents inrelevance\nrankorder.Again,iftheinverted listsaresortedbytherelevance rnea,sure,\nwecansupport rankedqueriesbytypically processing onlysluallprefixes of\nthe theinverted lists.(()bserve thattherelevance ofadocuIllent withrespect\ntothequeryiseasilycornputed froInitsrelevance withrespecttoeachquery\nterm.)\n27.3.2Signature Files\nAsignature fi,leisanother indexstructure fortextdata.JH-:kse systerns that\nsupports efficient evaluation ofboolean queries. Asignature filecontains an\nindexrecordforeachdocurnent inthedatabase. Thisindexrecordiscalled\nthesignature ofthedOClunent. F~achsignature hasafixedsizeofbbits;bis\ncalledthesignature width. rrhebitsthataresetdependonthewordsthat\nappearinthedocllrnent. vVernapwordstobitsbyapplying ahashfunction\ntoea,chvvordinthedocurnent andwesetthebitsthatappearintheresultof", "968": "938 CHAPTER ~7\n1...1!lI ,.\", 'l''''' ,.~,,\u00b1\"..'....:\",.:'.;.. \"\"\"\"L\u00a31' A\nI.....\"\"\".,, !,,---_ ..\n1agentJarnesBondgoodagent 1100\n2 agentmobileC0111puter 1101\n3 James1rfadison lnovie 1011\n4 JaInesBondrnovie 1110 _...---\nFigure27.6Signature FileforExample Collection\nthehashfunction. Notethatunlesswehaveabitforeachpossible wordinthe\nvocabulary, thesamebitcouldbesettwicebydifferent wordsbecausethehash\nfunction mapsbothwordstothesaInebit.Wesaythatasignature S1matches\nanother signature 82ifallthebitsthataresetinsignature 82arealsosetin\nsignature 81.Ifsignature 81Inatches signature 82,thensignature 81hasat\nleastasmanybitssetassignature 82.\nForaqueryconsisting ofaconjunction ofterms,wefirstgenerate thequery\nsignature byapplying thehashfunction toeachwordinthequery.Wethenscan\nthesignature fileandretrievealldocuments whosesignatures matchthequery\nsignature, because everysuchdocument isapotential resulttothequery.Since\nthesignature doesnotuniquely identifythewordsthatadocuInent contains,\nwehavetoretrieve eachpotential rnatchandcheckwhether thedocunlent\nactually contains thequeryterms.Adocurnent whosesignature matches the\nquerysignature butthatdoesnotcontainalltermsinthequeryiscalledafalse\npositive. Afalsepositive isanexpensive rnistake sincethedocurnent hasto\nberetrieved frolndisk,parsed,stemrned, andcheckedtodetermine whether it\ncontains thequeryterms.\nForaqUf~ryconsisting ofadisjunction oftenns,wegenerate alistofquery\nsignatures, oneforeachterrninthequery.Thequeryisevaluated byscanning\nthesignature filetofinddocurnents whosesignatures rnatchanysignature in\nthelistofquerysignatures.\nAsanexarllple, consider thesignature fileofwidth4forourrunning exarnple\nshowninFigure27.6.rrhebitssetbythehashedvaluesofallqueryterrnsare\nshowninthefigure.Toevaluat(~ thequery'Jal11es,' wefirstcOlnpute thehash\nvalueoftheterrn;thisis1000.'fhenwescanthesignature filea11(1findrnatch\u00ad\ningindex recol~ds. As\\lvecanseefronlFigure27.6,thesignatures ofallrecords\nhavethefirstbitset.Weretrieve alldoculnents andcheckforfalsepositives;\ntheonlyfalsepositive forthisqueryisdocurnent withrid2.(lJnfortunately,\ntheha..shedvalueoftheterrn'agent'alsohappened tosettheveryfirstbitin\nthesignature.) C~onsider thequery\\Jarnes' And'Bond.' ~rhequerysignature\nisllOOandthreedocurnent signatures rnatchthequerysignature. Again,\\ve\nretrieve onefalsepositive. Asanother exarnple ofaconjunctive query,con-", "969": "IRandXJvfL Data 939\nsiderthequery'rnovie'And':Nladison.' Thequerysignature is0011,andonly\nonedoclunent signature lnatches thequerysignature.N 0falsepositives are\nretrieved.\nNotethatforeachquerywehavetoscanthecOlllplete signature file,andthere\narea\"11lanyrecordsinthesignature fileastherearedocuments inthedatabase.\nToreducetheanlount ofdatathathastoberetrieved foreachquery,wecan\nvertically partition asignature fileintoasetofbitslices,andwecallsuchan\nindexabit-sliced signature file.Thelengthofeachbitsliceisstillequalto\nthenumber ofdoculllents inthedatabase, butforaquerywithqbitssetin\nthequerysignature weneedonlytoretrieve qbitslices.Thereaderisinvited\ntoconstruct abit-sliced signature fileandtoevaluate theexarnple queriesin\nthisparagraph usingthebitslices.\n27.4WEBSEARCH ENGINES\nWebsearchenginesrIlustcontend withextreruely largenurubers ofdoculllents,\nandhavetobehighlyscalable. Docurnents arealsolinkedtoeachother,and\nthislinkinfonnation turnsouttobeveryvaluable infindingpagesrelevant\ntoagivensearch. Thesefactorshavecausedsearchenginestodifferfrorn\ntraditional IRsysterns inirnportant ways.Nonetheless, theyrelyonsorneforn1\nofinverted indexesasthebasicindexing mechanism. Inthissection,wediscuss\nWebsearchengines, usingGoogleasatypicalexample.\n27.481SearchEngineArchitecture\n'Vebsearchenginescrawlthewebtocollectdocurnents toindex.'Ihecrawling\nalgorithrn issirrlple,butcrawlersoftware canbecornplex because ofthedetails\nofconnecting tomillions ofsites,minimizing network latencies, parallelizing\nthecrawling, dealingwithtirneouts andotherconnection failures, ensuring\nthatcrawled sitesarenotundulystressed bythE~cra\\vler, andotherpractical\nconcerns.\nThesearch algorithrn usedbyacrawler isagraphtraversal. Starting ata\ncollection ofpageswithrnanylinks(e.g.,Yahoo directory pages),alllinkson\ncra\\vled pagesa,refollo\\\\red toidentify ne\\vpages.Thisstepisiterated, keeping\ntrackofwhichpageshavebeenvisitedinordertoavoidre-visiting thenl.\nThecollection ofpagesretrieved through crawling canbeenonnous, onthe\norderofbillionsofpages.Indexing thernisaveryexpensive ta\"sk.Fortunately,\ntlleta\",skishighlyparallelizable: Eachdocurnent isindependently arlalyzed\ntocreateinverted listsfortheterrnsthatappearinthedocurnent. T'hese\nper-doCUlnent listsarethensorted b~yterrnandluergedtocrccltecornplete per-", "970": "940 CHAPTER '47\nterrninverted liststhatspanalldOCllrnents. Ternlstatistics suchasIDFcan\nbecornputed duringthelnergephase.\nSupporting searc~hes oversuchvastindexesisanother luanulloth undertaking.\nFortunately, again,thetaskisreadilyparallelized usingaclusterofinexpensive\nInachines: \\Vecandealwiththeanlountofdatabypartitioning theindexacross\nseveralrnachines. EachInachine contains theinverted indexforthoseterms\nthatareInapped tothatluachine (e.g.,byhashing thetenn).Queries 111ay\nhavetobesenttoluultiple Inachines iftheterrl1Stheycontainarehandled by\ndifferent rnachines, butgiventhatvVeb queriesrarelycontain rnorethantwo\nterrns,thisisnotaseriousprobleln inpractice.\nWernustalsodeal\\vithahugevolumeofqueries; Googlesupports over150\nlllillionsearches eachday,andthenUlnber isgrowing. Thisisacc(nnplished\nbyreplicating thedataacrossseveralmachines. vVealreadydescribed howthe\ndataispartitioned acrossInachines. Foreachpartition, wenowa..ssignseveral\nnlachines, eachofwhichcontains anexactcopyofthedataforthatpartition.\nQueries onthispartition canbehandled byanyrnachine inthepartition.\nQueriescanbedistributed across rnachines onthebasisofload,byhashing on\nIPaddresses, etc.Replication alsoaddresses theproblern ofhigh-availability,\nsincethefailureofaInachine onlyincreases theloadontheremaining rnachines\ninthepartition, andifpartitions containseveralrnachines theilnpactissIuall.\nFailures canbernadetransparent tousersbyroutingqueriestootherInachines\nthrough theloadbalancer.\n27.4.2UsingLinkInformation\nwebpages arecreatedbyavarietyofusersforavarietyofpurposes, andtheir\ncontent doesnotalwayslenditselftoeffective retrieval. Thernostrelevant\npagesforasearchrnaynotcontainthesearchterrnsatallandaretherefore\nnotreturned byaboolean keyvvord search! Forexarnple, consider thequery\nternl'Webbrowser.' Aboolea,11 textqueryusingthetennsdoesnotreturnthe\nrelevant pagesofNetscapeCorporation or}\\trierosoft, because thesepagesdo\nnotcontaintheterrn'Webbrowser' atall.Sirnilarly, thehornepageof'Yahoo\ndoesnotcontaintheterrn'searchengine.' Theproblenl isthatrelevant sites\ndonotnecessarily describe theircontents ina\u00a5,raythatisllsefulforboolean\ntextqueries.\nUntilno\\v,\u00a5,reonlyconsidered infonnation 'withinasingle\\vebpage toestirnate\nitsrelevance toaquery.Butwebpages areconnected through h:yperlinks, and\nitisquitelikelythatthereisa\\VebpEtge containing theterrn'searchengine'\nthathasalinktoYahoo's hornepage.Canweusetheinforrnation hiddenin\nsuchlinks'?", "971": "IIIaTulX1vILData ~41\nBuilding onresearch inthesociology literature, aninteresting analogy between\nlinksandbibliographic citations suggests a\\vaytoexploitlinkinfoI'Ination: Just\nasinfluential authorsandpubications arecitedoften,good'Vvebpages arelikely\ntobeoftenlinkedto.Itisusefultodistinguish between twotypesofpages,\nauthorities andhubs.Anauthority isapagethatisveryrelevant toacertain\ntopicandthatisrecognized byotherpagesasauthoritative onthesubject.\nTheseotherpages,calledhubs,usuallyhaveasignificant nUll1berofhyperlinks\ntoauthorities, although they tlH~nlselves arenotverywellknownanddonot\nnecessarily carryalotofcontentrelevant tothegivenquery.Hubpagescould\nbecOlnpilatiol1s ofresources aboutatopiconasiteforprofessionals, listsof\nreco111mended sitesforthehobbies ofanindividual user,orevenapartofthe\nbookIllarks ofanindividual userthatarerelevant tooneoftheuser'sinterests;\ntheirBlainproperty isthattheyhaveIHanyoutgoing linkstorelevant pages.\nGoodhubpagesareoftennotwellknownandtheremaybefewlinkspointing\ntoagoodhub.Incontrast, goodauthorities are'endorsed' byrnanygoodhubs\nandthushavemanylinksfrolngoodhubpages.\nThissymbiotic relationship between hubsandauthorities isthebasisforthe\nHITSalgoritlun, alink-based searchalgorithm thatdiscovers high-quality pages\nthatarerelevant toauser'squeryterrns.TheHITSalgorithIll rnodels\\iVebasa\ndirected graph.Eachwebpage represents anodeinthegraph,andahyperlink\nfroInpageAtopageBisrepresented asanedgebetween thetwocorresponding\nnodes.\nAssulne thatwearegivenauserquerywithseveralterIns.ThealgorithIll\nproceeds intwosteps.Inthefirststep,thesarnpling step,wecollectasetof\npagescalledthebaseset.Theba..seset11lOStlikelyincludes veryrelevant pages\ntotheuser'squery,butthebasesetcanstillbequitelarge.Inthesecondstep,\ntheitera\"tion step,wefindgoodauthorities andgoodhubsarnongthepagesin\ntheba..\"cset.\nThesalnpling stepretrieves asetofwebpages thatcontainthequeryterrns,\nusingsornetraditional technique. Forexarnple, 'wecanevaluate thequery et.e;\naboolean key-word searchandretrieve allwebpages thatcontainthequery\nterrns.vVecalltheresulting setofpagestherootset.1'herootsetInightnot\ncontainallrelevant pagesbecause senne<\\'uthoritative pagesrnightnotinclude\ntheuserquery\\vords.But\\veexpectthatatlea.\"tSOlneofthepagesintheroot\nsetcontain hyperlinks tothernostrelevant authoritative pagesorthatSCHne\nauthoritative pageslinktopagesintherootset.rrhisrnotivates ournotionof\nalinkpage.\\\u00a5ecallapagealinkpageifitha..\"ahyperlink tosornepagein\ntherootsetorifapageintherootsethasahyperlink toit.Inordernotto\nInisspotentially relevant pa,ges,\\veauglnent therootsetbyalllinkpagesand\nvvecalltheresulting setofpagesthebaseset. rrhus~thebasesetincludes all", "972": "942 CHAPTER i2.7\nrootpagesandalllinkpages;\\verefertoawebpage inthebasesetasabase\npage.\nOurgoalinthesecondstepofthealgorithrn istofindoutwhichbasepagesare\ngoodhubsandgoodauthorities andtoreturnthebestauthorities andhubs\na,.\"theanswers tothequery.Toquantify thequalityofabasepageasahub\nandasanauthority, weassociate vvitheachbasepageinthebasesetahub\nweightandanauthority weight. Thehubweightofthepageindicates the\nqualityofthepageasahub,andtheauthority weightofthepageindicates\nthequalityofthepageasanauthority. Wecornpute theweightsofeachpage\naccording totheintuition thatapageisagoodauthority ifrnanygoodhubs\nhavehyperlinks toit,andthatapageisagoodhubifithasrnanyoutgoing\nhyperlinks togoodauthorities. Sincewedonothaveanyaprioriknowledge\naboutwhichpagesaregoodhubsandauthorities, weinitialize allweightsto\none.Wethenupdatetheauthority andhubweights ofbasepagesiteratively\nasdescribed below.\nConsider abasepagepwithhubweighthpandwithauthority weight ap'In\noneiteration, weupdateaptobetheSU1Uofthehubweightsofallpagesthat\nhaveahyperlink top.Formally:\nap= L hq\nAllbasepagesqthathavealinktop\nAnalogously, weupdatehptobetheSUllloftheweights ofallpagesthatp\npointsto:\nhp== L aq\nAllbasepagesqsuchthatphasalinktoq\nCornparing thealgorithrn withtheotherapproctches toquerying textthat\nwediscussed inthischapter, wenotethattheiteration stepofthelIlT'S\nalgorithln-\u00b7m\u00b7the distribution oftheweights\u00b7\u00b7 doesnottakeintoa,ccount the\n'Vvardsontheba,,'3cpages.Intheiteration step,\\veareonlyconcerned about\ntherelationship between thebasepagesasrepresented byhyperlinks.\nl'helIlTSalgorithrIl usuallyproduces verygoodresults. Forexarnple, thefive\nhighestrankedresultsfrorn(ioogle(\"rhichusesavariantofthelIIT'Salgorithrn)\nfarthequery\n'.R,aghuH.arnakrishnan' arethefollo'Vving webpages:\nwww.cs.wisc.edu/~raghu/raghu.html\nwww.cs.wisc.edu/~dbbook/dbbook.html\nwww.informatik.uni-trier.de/\n~ley/db/indices/a-tree/r/Ramakrishnan:Raghu.html\nwww.informatik.uni-trier.de/", "973": "IRandXlvlLIJata\nComputing bubandauthority weights: Wecanuseluatrixnotation\ntowritetheupdates forallhllband cLuthotity weightsinorlestep.Assume\nthatwenUluber aUpagesinthebaseset{I,2,\"'1\nn}.The\u00b7adjaeCIJ.CY matrix\nBoftheba.sesetisannxnmatrixwhoseentriesareeitherOor1.The\nrnatrixentry(i,j)issetto1ifpage'ihasahyperlink topagej;itisset\nto0otherwise. Wecanalsowritethehubweightshand authority weights\nainvectornotat.ion: h==(h1,...,hn)anda==(al,'\",an)'Wecannow\nrewriteourupda,terulesasfollo\\vs:\nh:::;:B.a,anda=::BT.h .\nUnfolding thisequation once,corresponding tothefirstiteration, weob\u00ad\ntain:\nh==BBTh:::;: (BBT)h, anda==BTBa==(BTB)a.\nAftertheseconditeration, wearriveat:\nResultsfromlinearalgebratellusthatthesequence ofiterations forthe\nhub(resp.authority) weights converges totheprincipal eigenvectors of\nBET(resp.BTB)ifwenormalize theweights beforeeachiteration so\nthatthesuruofthesquaresofallweights isalways2 .n.Furthermore,\nresultsfromlinearalgebratellusthatthisconvergence isindependent of\nthechoiceofinitialweights, aslongastheinitialweights arepositive.\nThus,ourratherarbitrary choiceofinitialweights\u00b7\u00b7--we initialized allhub\nandauthority weightstol-\u00b7u\u00b7-~doesnotchangetheoutcolne ofthealgorithm .\n._---~--_ __--------------'\nGoogle's PigeonRank:GooglecorIlputes thepigeonrank(PRJfora\nwebpage Ausingthefollowing forrIlula, whichisverysirnilartotheH.ub\u00ad\nAuthority ranking functions:\n'T1...Tnarethepagesthatlink(or'point')toA,C(Ti)istherllllnber of\nlinksgoingoutofpageTi,anddisaheuristically chosenconstant (Google\nuses0.85).PigeonranksfOflllaprobability distribution overallwebpages;\ntheSlunofranksoverallpagesis1.Ifweconsider arnodelofuserbehavior\ninwhichauserrandornly choosesapageandthenrepeatedly clicksonlinks\nuntilhegetsboredandrandoll1ly choosesanewpage,theprobability that\ntheuservisitsapageisitsPigeonrank.1]lepagesintheresultofasearch\narerankedusingacornbination ofanlIt-style relevance l11etricandPigeon\nrank.", "974": "944 CHAPTER ;27\n..........__-_ _--~ _~ _..__ _~..~,----_ ~_ .._-_.___.__-__-_ __._-,\nSQL/M:rvl: FullText'Funtext.'isdescribed asdatathatcanbesearched,\nunlikesimple charac~ter strings, andane\\vdatatypecalledFullTextis\nintroduced tosupport it.TheInethods associated 'withthistypesupport\nsearching forindividual \\vords,phrases, wordsthat'soundlike'aquery\nterlll,etc.Three11lethods areofparticular interest. CONTAINS checksifa\nFullTextobjectcontains aspecified searchterln(wordorphrase). RANK\nreturnstherelevance rankofaFullTextobjectwithrespecttoaspecified\nsearchterln.(I-Iowtherankisdefinedislefttothehnplementation.) IS\nIABOUTdetennines whether theFullText objectissufficiently relatedtoI\nIthespecified searchterm.(Thebehavior ofISABOUTisalsolefttotheI\niiInplelllentation.) ,\nLRelational DB1'ISsfnnnIBIvI,Microsoft, andOracleallsupporttext\nfields'~j\nalthough theydonotcurrently conforrll totheSQL/JV1NIstandard.\n--~.. -\"~ '\" - - - -\n-ley/db/indices/a-tree/s/Seshadri:Praveen.html\nwww.acm.org/awards/fellows_citations_n-z/ramakrishnan.htmI\nThefirstresultisRarnakrishnan's hornepage;thesecondisthehornepagefor\nthisbook;thethirdisthepagelistinghispublications inthepopularDBLP\nbibliography; andthefourth(initially puzzling) resultisthelistofpublications\nforaforrnerstudentofhis.\n27.5MANAGING TEXTINADBMS\nInpreceding sections, wesawhowlargetextcollections areindexedandqueried\ninJR,systerns andvVebsearchengines. Wenowconsider theadditional chal\u00ad\nlengesraisedbyintegrating textdataintodataba\",se systerns.\nThebasicapproach beingpursued bytheSQI.Istandards cornrnunity istotreat\ntextdocllrnents a..'Sane\\vdatatype,FullText,thatcanappearasthevalueofa\nfieldinatable.If\\vedefineatablew'ithasinglecohunnoftypeFullText, each\nrowinthetablecorresponds toadocurnent inadOClllnent collection. IVlethods\nofFulll'ext canbellsedintheWHEREclauseofSQLqueriestoretrieve rows\ncontaining textobjectsthatInatchanIR-style searchcriterion. Therelevance\nrankofaFullText objectcanbeexplicitly retrieved usingtheRANKrnethod,\nfUldthiscanbellsedtosortresultsbyrelevance.\nSeveralpointsruustbekeptinrnindas'\\Teconsider thisapproach:\nIiThisisanextrernely general(l,pproach, a,neltheperforlnance ofaSC~Lsys\u00ad\nternthatsupports suchanextension islikelytobeinferiortoaspecialized\nIIISystCIIl.", "975": "IRandJ){lVfLData 945\n\u2022Thernodelofdatadoesnotad.equately reflectdocurnents withadditional\nrnetadata. If\"\\vestoredocurnents inatablewithaFullText colurnnand\nuseadditional cohl1nns tostorernetadata--for exarnple, author,title,SUIll\u00ad\nInary,rating,\n popularitY---~'relevance rneasures thatcornbine nletadata 'with\nIR,similarity rnea..'3ures 11lUStbeexpressed usinglle\\Vuser-defined rneth\u00ad\nods,because theRANKrnethod onlyhasaccesstotheF\\lllText object,and\nnotthernetadata. Theernergence ofXMLdocurnents, whichhavenon\u00ad\nuniforrn, partialrlletadata, furthercornplicates nlatters.\n\u2022Thehandling ofupdates isunclear. Aswehaveseen,IRindexesarecorll\u00ad\nplex,andexpensive to111aintain. Requiring asysterntoupdatetheindexes\nbeforetheupdating transaction cOl1ullits canirnposeasevereperfonnance\npenalty.\n27.5.1LooselyCoupled Inverted Index\nTheirrlplenlcntation approach usedincurrentrelational DBMSsthatsupport\ntextfieldsistohaveaseparate text-search enginethatislooselycoupledtothe\nDBMS.Theengineperiodically updates theindexes, butprovides notransac\u00ad\ntionalguarantees. Thus,atransaction couldinsert(arowcontaining) atext\nobjectandcornrnit, andasubsequent transaction thatissuesa.Inatching search\nmightnotretrievethe(rowcontaining the)object.\n27.6ADATAMODEL FORXML\n.AswesawinSection 7.4.1,XMLprovides awaytornarkupadocurnent\nwithrneaningful tagsthatirnpartSaInepartialstructure tothedocurnent.\nSe'fnistrtLctured datarnodels,whichweintroduce inthissection,capture rnuch\nofthestructure inX~fLdoculnents, whileabstracting awayInanydeta.ils.1\nSernistructured dataInodelshavethepotential toserveasaforInalfoundation\nforXlVILandenableustorigorously definethesernantics ofqueriesoverXlVIL,\nwhichwedisc-uBsinSection27.7.\n27.6.1Motivation forLooseStructure\nConsider asetofdoculnents ontheWebthatcontainhyperlinks tootherdoc\u00ad\nUHlents. Thesedocurnents, although noteornpletely unstructurecl~ cannotbe\nrnodeled naturally intherelational datarnodelbecause thepatternofhyper\u00ad\nlinksisnotregular acrossdocurnents. Infa,ct,everyHTl\\1Ldocurnent ha.s\n1.Aniruportant aspectofXIvII..;tha.tisnotcaptured istheordering ofelements. Amorecomplete\ndatamodelcalledXDataha...,,;beenproposed bythe\\;V:3Ccommittee thatisdeveloping XivtLstandards,\nbutwedonotdiscussithere.", "976": "946 CHAPTER 27\nr-\"~---\"\"'-\" -...---.-----.--- ..........--- ..----- ....IXMLDataModels: 'Anumber ofdatalnodelsforXMLarebeingcon\u00ad\nsideredbystandards COilllnittees suchasISOandW3C.vV3C's Infoset\nisatree-structured ll10del,andeachnodecanberetrieved through an\naccessor function. AversioncalledPost-Validation Infoset(PSVI)\nservesasthedatamodelforXMLSchelna. TheXQuery language has\nyetanotherdatamodelassociated withit.Theplethora ofl110delsisdue\ntoparalleldeveloprnent inSOlllecases,andduetodifferent objectives in\nothers.Nonetheless, allthesenlodelshaveloosely-structured treesastheir\ncentralfeature.\nL-- . . ,, .-1\nsomeminirnal structure, suchasthetextintheTITLEtagversusthetextin\nthedocunlent body,ortextthatishighlighted versustextthatisnot.Asan\u00ad\notherexample, abibliography filealsohasacertaindegreeofstructure dueto\nfieldssuchasauthorandtitle,butisotherwise unstructured text.Evendata\nthatis'unstructured', suchasfreetextoranilnageoravideoclip,typically\nhassomeassociated information suchastimestamp orauthorinfornlation that\ncontributes partialstructure.\nWerefertodatawithsuchpartialstructure assemistructured data.There\narernanyreasonswhydatamightbesemistructured. First,thestructure of\ndatanlightbeirnplicit, hidden,unknown, ortheuserInightchoosetoignore\nit.Second, whenintegrating datafrolnseveralheterogeneous sources, data\nexchange andtransforrnation areinlportant problerns. Weneedahighlyflexible\ndatarnodeltointegrate datafroInalltypesofdatasourcesincluding flatfiles\nandlegacysystenls; astructured datamodelsucha\",stherelational rnodelis\noftentoorigid.Third,wecannotqueryastructured database withoutknowing\nthescheIna,butsOlnetimes wewanttoquerythedatawithoutfullknowledge of\nthescherna. Forexarnple, wecannotexpressthequery\"Whereinthedatabase\ncan,vefindthestringMalgv.d'i?\" inarelational database systern\\vithout\nknowing theschcrna, andknowing whichfieldscontainsuchtextvalues.\n27.6.2AGraphModel\nAlldatarnodelsproposed forsernistrnctured datarepresent thedataasscnne\nkindoflabeledgraph.Nodesinthegraphcorrespond tocornpound objectsor\natornicvalues..Eachedgeindicates anobject-subobject orobject-value rela\u00ad\ntionship. Leafnodes,Le;nodeswithnooutgoing edgeshaveavaluea.ssociatecl\n\\viththern.rrhereisnoseparate schernaandnoauxiliary description; thedata\ninthegraphisselfdescribing. Forexarnple, consider thegraphshowninFigure\n27.7,whichrepresents partoftheXlVILdataf1'01nFigure7.2.Therootnode\nofthegraphrepresents theoutennost elernent, BOOKLIST. Thenodehasthree\nchildren thatarelabeledwiththeelClnent narneBOOK,sincethelistofbooks", "977": "IRand)(lvfLData\nRichard Feynman('-;-~'\\BOOKUST\n,\"~\"\"'~\\.\"-_/'~';::'':;::::::::::::_,,-~---,,\", -\"\n--..,-...~....~\n-\"'-._--... .................-\nWaiting\nlorthe\nMahatma\nR.K.Narayan\nFigure 27.7TheSemistructured Data:NIodel\"',/'\\(13;PUBLISHED\n\\ !r\n19819\u00bb17\nconsists ofthreeindividual books.Thenumbers withinthenodesindicate the\nobjectidentifier associated withthecorresponding object.\nWenowdescribe oneoftheproposed datamodelsforsemistructured data,\ncalledtheobjectexchange model(OEM). Eachobjectisdescribed bya\nquadruple consisting ofalabel,atype,thevalueoftheobject,andall.object\nidentifier whichisauniqueidentifier fortheobject. Sinceeachobjecthasa\nlabelthatcanbethought ofasacolumnnallleintherelational model,andeach\nobjecthasatypethatcanbethought ofasthecolumntypeintherelational\nrnodel,theobjectexchange Illodelisself-describing. LabelsinOEMshouldbe\n&'3infol'rnative aspossible, sincetheyservetwopurposes theycanbeusedto\nidentifyanobjectaswellastoconveythemeaning ofanobject.Forexample,\nwecanrepresent thelastHaIneofanauthorasfollows:\n(lastName, string, \"Feynman\")\nMorecOInplex objectsaredecornposed hierarchically intosrnallerobjects. For\nexalllple, a,nauthornaInecancontainafirstnarneandalastnarne.rrhisobject\nisdescribed asfollows:\n(authorName, set,{fiTstnarnel, lastnaTnel})\nfiTsi:nantel is(firstName, string, \"Richard\")\nlastnarnef is(lastName, string, \"Feynman\")\nAsanother exarnple, anobjectrepresenting asetofbooksisdescribed a\"sfol\u00ad\nlows:\n(bookList,set,{book1,book2,book;3})\nbook}is(book,set,{(L'U,thOTl, title},p'u,blishcd 1})", "978": "948 CHAPTER 2*7\n'-~-- .._......\u2022.._._-_.-._._-- ---'\" _.-_.__ .___..__ _.__ _..~\nSQLandXML:XQuery isastandard proposed bythevVorld-vVideWeb 1\nConsortiurn (W3C).Inparallel, standards con:unittees developing theSQLI\nstandards havebeenworking onasuccessor toSQL:1999 thatsupports\nX~fL.1\"'hepartthatrelatestoX:NIListentatively calledSQL/XML and\ndetailscanbefoundathttp:/ /sqlx.arg.\n. _..__ ._._~._ .._ ___ __ l\nbo()k~2is(book,set,{attthor2, t-itle2,]Jubl'ished 2})\nbook3is(book,set,{aui:hoT:3, t'itle3,Published3})\nauthoT3is(author, set,{!'lrstnarnJe3, lastna'Tne3})\nt'itle3is(title, string, liTheEnglish Teacher\")\npttbl'ished 3is(published, integer, 1980)\n27.7XQU'ERY: QUERYING XMLDATA\nGiventhatXlvII..doculnents areencoded inawaythatreflects(aconsider\u00ad\nableamount of)structure, wehavetheopportunity touseahigh-level lan\u00ad\nguagethatexploits thisstructure toconveniently retrievedatafro111within\nsuchdocuments. Suchalanguage wouldalsoallowustoeasilytranslate XML\ndatabetween different DTDs,aswelllUStwhenintegrating datafrommultiple\nsources. Atthetirneofwritingofthisbook,XQuery istheW3Cstandard\nquerylanguage forXMLdata.Inthissection, wegiveabriefoverview of\nXQuery.\n27.7.1PathExpressions\nConsider theXlvII..dOCUlnent showninFigure7.2.Thefollowing exarnple query\nreturnsthelastnanlesofallauthors, assullling thatourXMLdocurnent resides\natthelocation www.ourbookstore.com/books .xml.\nFOR\n$1INdoc(www.ourbookstore.com/books.xml)//AUTHOR/LASTNAME\nRETURN <RESULT> $1</RESULT>\nThisexarnple illustrates sonleofthebasicconstructs ofX(~uery. TheFOR\nclauseinXQuer:y isroughlyanalogous totheFROMclauseinSC:~L.TheRETURN\nclauseissirnilartotheSELECTclause.\\Vereturntothegeneralfornlofqueries\nshortly,afterintroducing anirnportant concept calledapathexpression.\n'1'heexpression\ndoc(www.ourbookstore.com/books.xml)//AUTHOR/LASTNAME", "979": "IRand./YA1L]Jata 949j)\nXPathandOtherXMLQueryLanguages: Pathexpressions in\nXQuery arederivedfrornXPath,anearlierXl\\:ILqueryfacility.Pathex\u00ad\npressions inXPathcanbequalified ,vithselection conditions, andcanuti\u00ad\nlizeseveralbuilt-infunctions (e.g.,counting thenurnberofnodesrnatched\nbytheexpression). l\\tlanyofXQuery's features areborro\\vecl {roInearlier\nlanguages, including XML-QL andQuilt.r'~'~~~\"\"\"\"\"\"~\"\"'\"\n!\nI\nII\nI\nintheFORclauseisanexarnple ofapathexpression. Itspecifies apath\ninvolving threeentities: thedocurnent itself,theAUTHORelernents andthe\nLASTNAME elernents.\nThepathrelationship isexpressed through separators /and//.Thesep\u00ad\narator//specifies thattheAUTHORelernent canbenestedanywhere within\nthedocument whereas theseparator /constrains theLASTNAME elernent tobe\nnestedimmediately under(intermsofthegraphstructure ofthedocurnent)\ntheAUTHORelement. Evaluating apathexpression returnsasetofelernents\nthatrnatchtheexpression. Thevariablelintheexample queryisboundin\nturntoeachLASTNAME elernent returned byevaluating thepathexpression.\n(Todistinguish variable naInesfronlnormaltext,variable narnesinXQuery\nareprefixed withadollarsign$.)\nTheRETURNclauseconstructs thequeryresult-\u00b7--which isalsoanXMLdocurnent-\u00b7\u00b7\u00b7_\u00b7\nbybracketing eachvaluetowhichthevariablelisboundwiththetagRESULT.\nIftheexanlple queryisappliedtothesarnpledatashowninFigure7.2,the\nresultwouldbethefollowing X:NILdocurnent:\n<RESULT><LASTNAME>Feynman </LASTNAME></RESULT>\n<RESULT><LASTNAME>Narayan </LASTNAME></RESULT>\nWeusethedocurnent inFigure7.2asourinputintherestofthischapter.\n27.7.2FLWRExpressions\nThe ba~sicfornlofanX(~uery consists ofaFLWR expression, wherethe\nlettersdenotetheFOR,LET,WHEREandRETURN clauses. TheFORetHelLET\nclausesbindvariables tovaluesthrough pathexpressions. Thesevaluesare\nqualified bytheWHEREclause,andtheresult.XlVILfragrnent isconstructed by\ntheRETURNclause.\nrrhedifference between aFORandLETclauseisthatwhileFORbindsavariable\ntoeachelernent specified bythepathexpression, LETbindsavariable tothe\nwholecollection ofelernents. T'hus,ifwechangeourexarnple queryto:", "980": "950 CHAPTER 2;;\nLET\n$IINdoc(www.ourbookstore.com/books.xm1)//AUTHOR/LASTNAME\nRETURN <RESULT> $1</RESULT>\nthentheresultofthequerybeconles:\n<RESULT>\n<LASTNAME>Feynman</LASTNAME>\n<LASTNAME>Narayan</LASTNAME>\n</RESULT>\nSelection conditions areexpressed usingtheWHEREclause.Also,theoutputof\naqueryisnotlirnitedtoasingleelernent. Thesepointsareillustrated bythe\nfollowing query,whichfindsthefirstandlastnamesofallauthors whowrote\nabookthatwaspublished in1980:\nFOR$bINdoc(www.ourbookstore.com/books.xm1)/BOOKLIST/BOOK\nWHERE$b/PUBLISHED='19S0'\nRETURN\n<RESULT> $b/AUTHOR/FIRSTNAME, $b/AUTHOR/LASTNAME </RESULT>\nTheresultoftheabovequeryisthefollowing XMLdocurnent:\n<RESULT>\n<FIRSTNAME>Richard </FIRSTNAME><LASTNAME>Feynman </LASTNAME>\n</RESULT>\n<RESULT>\n<FIRSTNAME>R.K. </FIRSTNAME><LASTNAME>Narayan </LASTNAME>\n</RESULT>\nForthespecificDTI)inthisexalnple, whereaBOOKelernent hac;onlyone\nAUTHOR, theabovequerycanbewrittenbyusingadifferent pathexpression in\ntheFORclause,asfollows.\nFOR$aIN\ndoc(www.ourbookstore.com/books.xml)\n/BOOKLIST/BOOK[PUBLISHED='19S0']/AUTHOR\nRETURN <RESULT> $a/FIRSTNAME, $a/LASTNAME </RESULT>\nrrhepathexpression inthisqueryisaninstance ofabranching pathex\u00ad\npression. ThevariablelisnowboundtoeveryAUTHORelernentthatrnatches\nthepathdoc/BOOKLIST /BOOK/AUTHORwheretheintennediate BOOKelClnent is\nconstrained tohaveaPUBLISHED elernent nestedinunediatelv withinitwith./\nthevalue1980.", "981": "IRand){NfLIJata\n27.7.3Ordering ofElements951\nXMLdataconsistsofordereddoculnents andsothequerylanguage IllUStreturn\ndatainSOUleorder.Theselnantics ofX(~uery isthatapathexpression returns\nresultssortedindocument order.Thus,variables intheFORclausearebound\nindoculnent order.Ifhowever, wedesireadifferent order,wecanexplicitly\nordertheoutputasshowninthefollo\\ving query,whichreturnsTITLEelernents\nsortedlexicographically.\nFOR\n$bINdoc(www.ourbookstore.com/books.xml)/BOOKLIST/BOOK\nRETURN <BOOKTITLES> $b/TITLE </BOOKTITLES>\nSORTBYTITLE\n27.7.4Grouping andGeneration ofCollection Values\nOurnextexample illustrates grouping inXQuery, whichallowsustogenerate\nanewcollection valueforeachgroup.(Contrast thiswithgrouping inSQL,\nwhichonlyallowsustogenerate anaggregate value(e.g.,SUM)pergroup.)\nSuppose thatforeachyearwewanttofindthelastnarnesofauthors who\nwroteabookpublished inthatyear.Wegroupbyyearofpublication and\ngenerate alistofla..\"tnamesforeachyear:\nFOR$pINDISTINCT\ndoc(www.ourbookstore.com/books.xml)/BOOKLIST/BOOK/PUBLISHED\nRETURN\n<RESULT>\n$p,\nFOR$aINDISTINCT /BOOKLIST/BOOK[PUBLISHED=$pJ/AUTHOR\nRETURN$a\n</RESULT>\nThekeyword ,DI8TINC}T elirninates duplicates fronlthecollection returned by\na,pathexpression. UsingtheXMLdocurnent inFigure7.2asinput,theabove\nqueryproduces thefollowing result:\n<RESULT>: <PUBLISHED>1980</PUBLISHED>\n<LASTNAME>Feynman</LASTNAME>\n<LASTNAME>Narayan</LASTNAME>\n</RESULT>\n<RESULT> <PUBLISHED>1981</PUBLISHED>\n<LASTNAME>Narayan</LASTNAME>\n</RESULT>", "982": "952 CHAPTER 2\u00a5\"f\n27.8EFFICIENT EVALUATION OFXMLQUERIES\nX.Query operates onXKJILdataandproduces XTvILdataasoutput.Inorderto\nbeabletoevaluate queriesefficiently, weneedtoaddressthefollo\\ving issues.\n\u2022Storage: \\Vecanuseanexisting storagesysterIllikearelational orobject\noriented systerllordesignanewstorageforInatforX1tILdoclunents. There\nareseveralwaystousearelational systenltostoreXML.Oneofthernis\ntostoretheX1VILdataasCharacter LargeObjects (CLOBs). (CLOBS\nwerediscussed inChapter 23.)Inthiscase,hc)\\vever, wecannotexploit\nthequeryprocessing infrastructure provided bytherelational systerrland\nwouldinsteadhavetoprocessXQuery outsidethedatabase systenl. In\nordertocircumvent thisproblenl, weneedtoidentify aschernaaccording\ntowhichtheXMLdatacanbestored. rr'hesepointsarediscussed in\nSection27.8.1.\n\u2022Indexing: Pathexpressions addalotofrichness toXQuery andyield\nlllanynewaccesspatterns overthedata.Ifweusearelational systemfor\nstoringXMLdata,thenweareconstrained touseonlyrelational indexes\nliketheB-n\u00b7ee.However, ifweuseanativestorageengine,thenwehave\ntheoptionofbuilding novelindexstructures forpathexpressions, someof\nwhicharediscussed inSection27.8.2.\n\u2022QueryOptimization: Optirnization ofqueriesinXQuery isanopen\nproblern. Theworksofarinthisareacanbedividedintothreeparts.'rhe\nfirstisdeveloping analgebraforXQuery, analogous torelational algebra.\nThesecondresearch direction isproviding statistics forpathexpression\nqueries. Finally, SOlneworkhasaddressed sirnplification ofqueriesbyex\u00ad\nploiting constraints onthedata.Sincequeryoptirnization forX.Query is\nstillataprelirninary stage,wedonotcoveritinthischapter.\nAnother issuetobeconsidered whiledesigning ane\\vstoragesysteulforX1.1L\ndataistheverbosity ofrepeated tags.AsweseeinSection 27.8.1)usinga\nrelational storagesysteluaddresses thisproblern sincetagnarnesarenotstored\nrepeatedly. Ifontheotherhand,we\\vanttobuildanativestoragesystcrn,then\nthernannerinwhichtheX.~lLdataiscornpressed becornes significant. Several\ncornpression. algorithrHs aTeknownthatachieve cOlnpression ratioscloseto\nrelational storage, 1n1t\\vedonotdiscussther11here.\n27.8.1StoringXMLinRDBMS\n()n(~nEtturalcandidate forstoringX1JILdataisarelational dataJKlse systern.\nTheruainissuesinvolved instoringXJ\\;ILdatainarelational systelTIare:", "983": "IRandXlvILData 953},)\nCommercial database systems andXML:wianyrelational andobjeet\u00ad\nrelational database systerllvendors arecurrently lookingintosupport for\nXMLintheirdatabase engines. Severalvendorsofobject-oriented database!\niI!Inanagenlent systems already offerdatabase enginesthatcanstoreXML i\ndata'whosecontents canbeaccessed through graphical 11serinterfacesorJI\nserver-side Javaextensions.\n+++-,~~-~,.~.\"-_.~ ..~ ~___._ _._~._._-_.\ngenre format TITLE PUBLISHED\nAUTHOR\n~~\nFIRSTNAME LASTNAME\nFigure27.8Bookstore X:NILDTDElement Relationships\nIIC;hoiceofrelational scherr~a: InordertouseanRDBMS, weneedascherna.\nvVhatrelational schemashouldweuseevenassuming thattheXMLdata\nCOUleswithan&'Ssociated scherna?\nIIQueries: QueriesonXMLdataareinXQuery wherea\" arelational systern\ncanonlyhandle S(~L.Queries inXQuery therefore needtobetranslated\nintoSQL.\nIIIIlecon8tructioT~: rrheoutputofXQuery isX~1L.T1hus,theresultofaS(~L\nqueryneedstobeconverted backintoXNIL.\nMapping XMLDatatoRelations\n\\lVeillustrate thernapping processthrough ourbookstore exarnple. rrhenesting\nrela,tionships alIlongthedifferent elernents intheDTDissho\\vninFigure27.8.\nrrheedgesindicate thenatureofthenesting.\n()newaytoderiveal'clation.al schelnaisasfollovvs. \\VebeginattheBOOKLIST\nelernent anelcreate (1relation tostoreit.rrraversing downfroInBOOKLIST, we\ngetBOOKfoIlc)\\ving (l.*edge.Thisedgeindic.ates that \\~lestoretheBOOKelernents\ninaseparate reJation. l'r;:l,versing furtherdown,weseethatallelcrnents and", "984": "954 CHAPTER 27\nattributes nested\\vithinBOOKoccurat1I10Stonce.Hence,wecanstorethenl\ninthesaInerelation a..\"BOOK.Theresulting relational schelIla Relschernal is\nshownbelow.\nBOOKLIST( id:integer)\nBOOK(booklistid: integer,\n author_firstna'me: string,\nauthor_lastnarne: string,title:string,\npublished: string,genre:string,format:string)\nBOOK.booklistid connects BOOKtoBOoKLIST. SinceaDTDhasonlyonebase\ntype,string, theonlybasetypeusedintheaboveschelnaisstring. The\nconstraints expressed throughtheDTDareexpressed intherelational schema.\nForinstance, sinceeveryBOOKmusthaveaTITLEchild,weIllustconstrain the\ntitlecolumntobenon-null.\nAlternatively, iftheDrrDischanged toallowBOOKtohavemorethanone\nAUTHORchild,thentheAUTHORelements cannotbestoredinthesallierelation\nasBOOK.Thischangeyieldsthefollowing relational schema Relschema2.\nBOOKLIST( id:integer)\nBOOK(id:integer, booklistid: integer,\ntitle:string,published: string,genre:string,for1nat:string)\nAUTHoR( bookid:integer, firstname: string,lastname: string)\nThecolumn AUTHOR. bookidconnects AUTHORtoBOOK.\nQueryProcessing\nConsider thefollowing example queryagain:\nFOR\n$bINdoc(www.ourbookstore.com/books.xml)/BOOKLIST/BooK\nWHERE$b/PUBLISHED='1980'\nRETURN\n<RESULT> $b/AUTHOR/FIRSTNAME, $b/AUTHOR/LASTNAME </RESULT>\nIfthenlapping between theXMLdataandrelational tablesisknown,then\nwecanconstruct aSQLquerythatreturnsallcolunlIls thatareneededto\nreconstruct theresultXlvILdocuIIlent forthisquery.(JonditioIlS enforced by\nthepathexpressions andtheWHEREclausearetranslated intoequivalent con\u00ad\nditionsintheS(~Lquery.VVeobtainthefollowing equivalent SQL queryifwe\nusellel,C3chernal El...'3ourrelational scherna.\nSELECT BOOK.author.J: irstname, BOOK.author ~astname", "985": "SELECT\nFROM\nWHEREIRandXMLData\nFROM BOOK,BOOKLIST\nWHEREBOOKLIST.id =BOOK.booklistid\nANDBOOK.published='1980'\nTheresultsthusreturned bytherelational queryprocessor arethentagged,\noutsidetherelational systern, asspecified bytheRETURNclause.Thisisthe\nresultofthereconstruct'ion phase.\nInordertounderstand thisbetter,consider whathappens ifweallowaBOOK\ntohave111ultiple AUTHORchildren. Assume thatweuseRel8chema2 asour\nrelational schema. Processing theFORandWHEREclausestellsusthatitis\nnecessary tojoinrelations BOOKLIST andBOOKwithaselection ontheBOOK\nrelation corresponding totheyearcondition intheabovequery.Sincethe\nRETURNclauseneedsinformation aboutAUTHORelements, weneedtofurther\njointheBOOKrelationwiththeAUTHOR relationandprojectthejir8tname\nandlastname columns inthelatter.Finally,sinceeachbindingofthevariable\n$bintheabovequeryproduces oneRESULTelement, andsinceeachBOOKis\nnowallowedtohavemorethanoneAUTHOR, weneedtoprojecttheidcolumn\noftheBOOKrelation. Basedontheseobservations, weobtainthefollowing\nequivalent SQLquery:\nBOOK.id, AUTHOR.firstname ,AUTHOR.lastname\nBOOK,BOOKLIST, AUTHOR\nBOOKLIST.id =BOOK.booklistid AND\nBOOK.id =AUTHOR.bookid ANDBOOK.published='1980'\nGROUPBYBOOK.id\nT'heresultisgrouped byBOOK.id. Thetaggeroutsidethedatabase system\nnowreceives results clustered bytheBOOKelement andcantagtheresulting\ntuplesonthefly.\nPublishing Relational DataasXML\nSinceXlV1Lhaselnerged asthestandard dataexchange forrnatforbusiness\napplications, itisnecessary topublishexisting business dataasXML.NJost\noperational business dataisstoredinrelational systerns. Consequently, 111ech\u00ad\nanisrnshave be~~nproposed topublishsuchdataasXlV1Ldocul11ents. These\ninvolvealanguage forspecifying henvtotagandstructure relational dataand\nanirnplernentation tocarryouttheconversion. This111apping isinSCHnesense\nthereverseoftheXl\\1:L-to- relationaJ rnapping usedtostoreXlVILdata.'The\nconversion processInirnicsthereconstruction pha..'3cwhen\\veexecuteXQuery\nusingarelational systern. Thepublished Xl\\1Ldatacanbethought of<:1...')an\n.X.lVIT..;vic\u00a5lofrelational data.Thisviewcanbequeriedusing X(~uery. One", "986": "956 CHAPTER 27\nlnethod ofexecuting XCluery onsuchvie'wsistotranslate thCIIlintoSQLand\nthCIlconstruct theXrvlLresult.\n27.8.2Indexing XMLRepositories\nPathexpressions areattheheartofallproposed XIVILquerylanguages, in\nparticular XQuery. Anaturalquestion thatarisesishowtoindexX:NILdata\ntosupport pathexpression evaluation. Theainlofthissectionistogivea\nflavoroftheindexing techniques proposed forthisprobleul. vVeconsider the\nOENIrnodelofsenlistructured data,'wherethedataisself-describing andthere\nisnoseparate scherna.\nUsingaB+TreetoIndexValues\nConsider thefollowing XQuery exaluple, whichwediscussed earlieronthe\nbookstore XMLdatainFigure7.2.TheOEMrepresentation ofthisdatais\nshowninFigure27.7.\nFOR\n$bINdoc(www.ourbookstore.com/books.xml)/BOOKLIST/BOOK\nWHERE$b/PUBLISHED='1980'\nRETURN\n<RESULT> $b/AUTHOR/FIRSTNAME, $b/AUTHOR/LASTNAME </RESULT>\nThisqueryspecifies joinsalIlongtheobjectswithlabelsBOOKLIST, BOOK,\nAUTHOR, FIRSTNAME, LASTNAME andPUBLISHED \\vithaselection condition on\nPUBLISHED objects.\nLetussupposethat\\veareevaluating thisqueryintheabsenceofanyindexes\nforpathexpressions. I-Io\\vever, wedohaveavalueindexsuchasaB-T'reethat\nenablesustofindtheidsofallobjectswithlabelPUBLISHED andvalue1980.\nThereareseveral\\vaysofexecuting thisqueryunderthesea'3surnptions.\nForinstance, \\vecouldbeginatthedocurncnt rootandtraverse downthedata\ngraphthrough theBOOKLIST objecttotheBOOKobjects. Byfurthertraversing\nthedatagraphdownwards, foreachBOOKobjectwecancheckwhether itsat\u00ad\nisfiesthevaluc'predicate\n (PUBLISHED=~1980'). Finally,forthoseBOOKobjects\nthatsatisfythepredicate, wecanfindtherelevant FIRSTNAME andLASTNAME\nobjects. Thisapproach corresponds toatop-down evaluation ofthequery.\nAlternatively, \\vecouldbeginbyusingthevalueindextofindallPUBLISHED\nol)jectsthatsatisfyPUBLISHED='1980'. Ifthedatagraphcanbetraversed in\nthereversedirectiono\u00b7that is,givenanobject,\\vecanfinditsparent-~~then we", "987": "IRand-\",[AILData 957;\nFigure27.9PathExpressions inaB-Tree\ncanfindallparentsofthePUBLISHED objectsretaining onlythosethathave\nlabelBOOK.Wecancontinue inthismanner untilwefindtheFIRSTNAME and\nLASTNAME objectsofinterest. Observe thatweneedtoperforrll alljoinsinthe\nqueryonthefly.\nIndexing onStructure vs.Value\nNowletusaskourselves whether traditional indexing solutions liketheB-Tree\ncanbeusedtoindexpathexpressions. WecanusetheB-Treetorllapapath\nexpression totheidsofallobjectsreturned byit.Theideaistotreatall\npathexpressions asstringsandordertherIllexicographically. Everyleafentry\nintheB-Treecontains astringrepresenting a,pathexpression andalistof\nidscorresponding toitsresult.Figure27.9showshowsuchaB-Tree\\vould\nlook.Letuscontrast thiswiththetraditional problern ofindexing awell\u00ad\nordered dornainlikeintegers forpointqueries. Inthelattercase,thenurnber\nofdistinct pointqueriesthatcanbeposedisjustthernllnber ofdatavalues\nandsoislinearinthedatasize.\nThescenario \\vithpathindexing isfundarnentally difI(J,rent----the varietyof\nwaysinwhich\\ivecancornbine tagstoforrn(sirnple) pathexpressions C011\u00ad\npledwiththepowerofplacing//separators leadstoarnuchlargernurnber\nofpossible pathexpressions. Forinstance, anAUTHORclcrnent intheexarn\u00ad\npIeinFigure21.7isreturned &'3partoftheqllcries BOOKLIST/BOOK/ AUTHOR,\n/ /AUTHOR, //BOOK//AUTHOR, BOOKLIST / /AUTHORandsoOIl.Thenurnber of\ndistinct queriescaninfactbeexponential inthedatasize(lneasured intenns\nofthernunberofXIVILelelnents) inthe\\V01'stcase.Thisis\\vhatrnotivates the\nseaxchforalternative strategies toindexpathexpressions.", "988": "958\nFigure27.10 Example PathIndexCHAPTER 27\nTheapproach takenistorepresent themapping between apathexpression and\nitsresultbymeansofastructural sunlIllary whichtakesthefornlofanother\nlabeled, directed graph.rrheideaistopreserve allthepathsinthedatagraph\ninthesurllrnary graph,whilehavingfarfewernodesandedges.Anextent\nisassociated witheachnodeintheSUllllnary. Theextentofanindexnode\nisasubsetofthedatanodes.Thesurnmary graphalongwiththeextents\nconstitutes apathindex.Apathexpression isevaluated usingtheindexby\nevaluating itagainstthesumrnary graphandthentakingtheunionofthe\nextentsofallrnatching nodes.Thisyieldstheindexresultofthepathexpression\nquery.Theindexcoversapathexpression iftheindexresultistheeorrect\nresult;obviously, wecanuseanindextoevaluate apathexpression onlyifthe\nindexcoversit.\nConsider thestructural SUlnrnary showninFigure27.10.rrhisisapathindex\nforthedatainFigure27.7.Tlhenurnbers shownbesidethenodescorrespond\ntotherespective extents. Letusnowexarnine howthisindexcanchangethe\ntop-down evaluation oftheexaruple queryusedearliertoillustrate B+tree\nvalueindexes.\nrrhetop-down evaluation a..soutlined abovebeginsatthedocurnent rootand\ntraverses downtotheBOOKobjects. rrhiscanbeachieved rnoreefficiently by\nthepathindex.Insteadoftraversing thedatagraph,\\vecantraverse thepath\nindexdowntotheBOOKobjectintheindexandlookupitsextent,whichgives\nustheidsofallBOOKobjectsthatrnatchthepathexpression intheFORclause.\nTherestoftheevaluation thenproceeds asbefore.1'hus,thepathindexsaves\nusfrornperfonning joinsbyessentially precorIlputing thern.VVenoteherethat\nthepathindexshowninFigure27.10isisornorphic totheDTDschcIIlagraph\nShO\\VllinFigure27.8.Thisdriveshornethepointthatthepathindex\\vithout\ntheextentsisastructural SUHllnary ofthedata.", "989": ".lRandXlvfLData 9511\nrrheahovepathindexistheStrongDataguide. If\\vetreatpathexpressions\nasstrings, thenthedataguide isthetrierepresenting thern.Thetrieisa\nwell-knowndatastructure usedtosearchregularexpressions overtext.This\nshowsthedeeperunitybetween theresearch onindexing textandtheX.NIL\npathindexing work.Severalotherpathindexeshavebeenalsoproposed for\nsenli-structured data,andthisisanactiveareaofresearch.\n27.9REVIEW QUESTIONS\nAnsvvers tothereviewquestions canbefoundinthelistedsections.\n\u2022Whatisinformation retrieval? (Section 27.1)\n\u2022Whataresomeofthedifferences between DBMSandIRsystems? Describe\nthedifferences between arankedqueryandaboolean query.(Section\n27.2)\n\u2022Whatisthevectorspacemodel,andwhatareitsadvantages? (Section\n27.2.1)\n\u2022WhatisTF/IDFterrnweighting, andwhydoweweighbyboth?Wedowe\neliminate stopwords?Whatislengthnorrnalization, andwhyisitdone?\n(Section 27.2.2)\n\u2022Howcanwemeasure document similarity? (Sections 27.2.3)\n\u2022Whatareprecision andrecall,andhowdotheyrelatetoeachother?(Sec\u00ad\ntion27.2.4)\n\u2022Describe thefollowing twoindexstructures fortext:Inverted indexand\nsignature file.Whatisabit-sliced signature file?(Section 27.3)\n\u2022llowarewebsearchenginesarchitected? Ilowdoesthe\"hubsandau\u00ad\nthorities\" a.lgorithrn work?Canyouillustrate itonasrnallsetofpages?\n(Section 27.4)\nl1li\\iVhatsupport isthereforrnanaging textinaf)BI\\1S?(Section 27.5)\nIIDescibetheOE~'1datarnodelforsernistructured data.(Section 27.6)\nII\\iVhataretheelernents ofXQuery? \\;Vhatisapathexpression? Whatis\nanFLWRexpression? flowcanweordertheoutputofquery?flowdo,ve\ngroupqueryoutputs? (Section 27.7)\n\u2022Describe howXTvILdatacanbestoredinarelational I)B~1S.How dowe\nrna,pXrvlLdatatorelations? Can,veusethequeryprocessing infrastruc\u00ad\ntureoftherelational DBIvIS? ITovvdo'wepublishrelational dataasXI\\1L?\n(Section 27.8.1)", "990": "960\n\u2022I-Iowdoweindexcollections ofXNILdoeunlents? \\rVhatisthedifference\nbetvveen indexing onstructure versusindexing onvalue?vVhatisapath\nindex'?(Section 27.8.2)\nEXERCISES\nExercise 27.1Carryoutthefollowing tasks.\n1.GivenanASCIIfile,cOInpute thefrequency ofeachwordandcreateaplotsiInilarto\nFigure27.3.(Feelfreetousepublicdornain plotting software.) Runtheprogralll on\nthecollection offilescurrently inyourdirectory andseewhether thedistribution of\nfrequencies isZipfian. Howcanyouusesuchplotstocreatelistsofstopwords?\n2.ThePorterstenliller iswidelyused,andcodeirnplernenting itisfreelyavailable. Down\u00ad\nloadacopy,andrunitonyourcollection ofdocuInents.\n3.OnecriticisIn ofthevectorspacenlodelanditsuseinsirnilarity checking isthatittreats\ntennsasoccurring independently ofeachother.Inpractice, Inanywordstendtooccur\ntogether (e.g.,ambulance andemergency). Writeaprogram thatscansanASCIIfileand\nlistsallpairsofwordsthatoccurwithin5wordsofeachother.Foreachpairofwords,\nyounowhaveafrequency, andshouldbeabletocreateaplotlikeFigure27.3withpairs\nofwordsontheX-axis.Runthisprogram onsomesampledocuIll\u20acnt collections. What\ndotheresultssuggestaboutco-occurrences ofwords?\nExercise 27.2Assunle youaregivenadocurnent database thatcontains SIXdocuments.\nAfterstemming, thedocurnents containthefollowing ternlS:\nl-I5~i'ii~~tJ Terrns _..__.._.__..._~\n1 carrnanufacturer riondaauto.__.._...__... ~..._...-\n2 autocornputer navigation\n3 Hondanavigation\n4 11lanufactllrer cOlnputer IB1\\,1\n5 IBNIpersonal cOInputer-6--\u00b7--,\u00b7\u00b7\u00b7,,\"\"m \".\"'\"._.._,,--carBeetleV\\V\n._---------''---------_. __._.._..-__..-\nAnswerthefollowing questions.\n1.8ho\\vtheresultofcreating aninverted fileonthedocurncnts.\n2.Showtheresultofcreating asignature filewilhawidthof5bits.Construct yourO\\Vll\nhashing function thatrnapstermstobitpositions.\n3.Evaluate thefollowing boolea.n queriesusingtheinverted fileandthesignature filethat\nyoucreated: 'car','IBM'AND'COIuputer', 'IB\"NPAND'car','Illl\\'.pOR'<.tuto',and 'IB~'I'\nAND'cornputer' AND'rnanufacturer'.\n4.Assurnethatthequeryloaclagainstthedocurnent databa.se consistsofexactlythequeries\nthatwerestatedintheprevious question. Alsoc1SS11rnethateachofthesequeriesis\nevaluated exactly OIlCC.\n(a)Design <1signature filewithawidthof:3bitsanddesignahashing function that\nminimizes theoverallnurnber offalsepositives retrieved \\vhonevaluating the", "991": "IRand)(l\\;fLData 961\n(b)Designasignature filewithawidthof6bitsandahashing function thatIlliniInizes\ntheoverallnUlnber offalsepositives.\n(c)Assume youwanttoconstruct asignature file.vVhatisthesInallest signature\nwidththatallowsyoutoevaluate allquerieswithout retrieving anyfalsepositives?\n5.Consider thefollowing rankedqueries: 'car,'UH..ICOIIlputer' lIIB~/1car',IIBl\\lauto',and\n'IBl\\1COIllputer rnanufacturer'.\n(a)Calculate theIDFforeverytenninthedatabase.\n(b)Foreachdoculnent, showitsdoctunent vector.\n(c)Foreachquery,calculate therelevance ofeachdoclunent inthedatabase, withand\nwithout thelengthnorrnalization step.\n(d)Describe howyouwouldusetheinverted indextoidentify thetoptwodocuments\nthatIllatcheachquery.\n(e)Howwouldhavingtheinverted listssortedbyrelevance instead ofdocument id\naffectyouranswertotheprevious question?\n(f)Replace eachdocurnent withavariation thatcontains 10copiesofthesamedocu\u00ad\nment.Foreachquery,recompute therelevance ofeachdocument, withandwithout\nthelengthnormalization step.\nExercise 27.3Assume youaregiventhefollowing steIIllned docurnent database:\nTerms\n....- -\n1 car carIIlanufacturer car carHondaauto\n2 autocomputer navigation\n.......\"\"', ._---\n3 Hondanavigation auto\nmanufacturer computer IBl\\IIgraphics------4f---.----IBMpersonal IBMcomputer IBl\\II IBl\\I! IBMIBM 5\n6 carBeetleVWHonda_._..\nUsingthisdataba..'5e, repeattheprevious exercise.\nExercise 27.4YouareinchargeoftheGenghis ('Weexecute fast')searchengine. Youare\ndesigning yourserverclustertohandle500Inillionhitsadayand10billionpagesofindexed\ndata.Eachrnachine costs$1000,andcanstore10millionpagesandrespond to200queries\npersecond(against thesepages).\n1.Ifyouweregivenabudgetof$500,000 dollarsforpurchasing Inachines, andwererequired\ntoindexall10billionpages,couldyoudoit?\n2.WhatistheIIlinirIlurIl budgettoindexallpages?Ifyouassurnethateachquerycan\nbeanswered bylookingatdatainjustone(10rnillionpage)partition, andthatqueries\nareunifornlly distributed acrosspartitions, whatpeakload(innuruber ofqueriesper\nsecond) cansuchaclusterhandle?\n3.Howwouldyouranswertotheprevious question changeifeachquery,onaverage, ac\u00ad\ncessedtwopartitions?\n4.Whatistheruinirlllnl1 budgetrequired tohandlethedesiredloadof500rnillionhitsper\ndayifallqueriesareonasinglepartition? Assurnethatqueriesareuniforrnly distributed\nwithrespecttotirTleofday.", "992": "962 CHAPTgR ~7\n5.Howwouldyouranswertotheprevious question changeiftherllllnherofqueriesperday\nwentupto5billionhitsperday?Howwoulditchangeifthenumber ofpageswentup\nto100billion'?\n6.Assurnethateachqueryaccessesjustonepartition, thatqueriesareullifonnly distributed\nacrosspartitions, butthatatanygiventiulC,thepeakloadonapartition isupto10\ntimestheaverage load.WhatistherniniIlHlnl budgetforpurchasing Inachines inthis\nscenario?\n7.Takethecostforrnachines [raIntheprevious question andrnultiply itby10toreflect\nthecostsofIllaintenance, adrninistration, network bandwidth, etc.Thisanlount isyour\nannualcostofoperation. Assume thatyouchargeadvertisers 2centsperpage.What\nfraction ofyourinventory (i.e.,thetotalnUlllber ofpagesthatyouserveoverthecourse\nofayear)doyouhavetosellinordertomakeaprofit?\nExercise 27.5AssumethatthebasesetoftheHITSalgorithrn consists ofthesetofWeb\npagesdisplayed inthefollowing table.Anentryshouldbeinterpreted asfollows: Webpage\n1hashyperlinks topages5and6.\nIWebpage! PagesthatthispagehaslinkstoI\n1 56,7,_._..._.\n2 5,7\n\"\"'...........\n3 6,8_.\n4.-\n5 I,2\n..-\n6 1,3\n7 1,2\n8 4,--_._.__. --\n1.Runfiveiterations oftheHITSalgorithlll andfindthehighestrankedauthority andthe\nhighestrankedhub.\n2.Cornpute Google's PigeonRankforeachpage.\nExercise 27.6Consider thefollowing description ofitelllSshownintheEggface cornputer\nrnail-order catalog.\n\"Eggface sellshardware andsoftware. WesellthenewPalInPilotVfor$400;itspartnUlnber\nis345.WealsoselltheIBMThinkPad 570foronly$1999;itspartnUIllber is:3784.Vvesell\nbothbusiness andentertainrnent software. I:vlicrosoft Office2000hasjustarrivedandyou\ncanpurchase theStandard Edition foronly$140,partnumber 974;theProfessional Edition\nis$200,part975.'1'henewdesktop publishing software fromAdobecalledInDesign ishere\nforonly$200,part664:.\\iVecarrythenewestgaInesfromBlizzard sofhvare. Youcanstart\nplayingDiabloIIforonly$:30,petrtnurnber 12,andyoncanpurchase Starcraft foronly$10,\npartnlllIlber 812.Ourgoaliscornplete cllstorner satisfaction\u00b7\u00b7\u00b7\u00b7\u00b7-\u00b7if wedon'thavewhatyou\nwantinstock,we'llgiveyouSIOoffyournextpurchase!\"\n1.Designan11'r1.1Ldocllrnent thatdepictstheitelIlSofferedbyEggface.\n2.Createawell-formed XrvILdoculnent thatdescribes thecontents oftheEggfi:1Ce catalog.\n:'3.CreateaTYr.DforyourXI:vlLdocurnent andrnakesurethatthedocuJnent youcreated\ninthelastquestion isvalidwithrespecttothis1Y1'1),", "993": "IRand.IY!v.fLData 963\n4.WriteanXQuery querythatlistsallsoftware itemsinthecatalog, sortedbyprice.\n5.WriteanXQuery querythat,foreachvendor, listsallsoftware iterl1sfroInthatvendor\n(i.e.,onerowintheresultpervendor).\n6.WriteanXQuery querythatliststhepricesofallhardware itmllsinthecatalog.\n7.Depictthecatalogdatainthesemistructured datamodelasshowninFigure27.7.\n8.Buildadataguide forthisdata.Discusshowitcanbeused(ornot)foreachoftheabove\nqueries.\n9.Designarelational schelllatopublishthisdata.\nExercise 27.7Auniversity database contains infonnation aboutprofessors andthecourses\ntheyteach.Theuniversity hasdecidedtopublishthisinformation ontheWebandyouare\ninchargeoftheexecution. Youaregiventhefollowing information aboutthecontents ofthe\ndatabase:\nInthefallsernester 1999,thecourse'Introduction toDatabase Management Systems' was\ntaughtbyProfessor Ioannidis. ThecoursetookplaceMondays andWednesdays from 9~10\na.m.inroom101.Thediscussion sectionwasheldonFridays fTOIn9-10a.m.Alsointhefall\nsemester 1999,thecourse'Advanced Database Management Systems' wastaughtbyProfessor\nCarey. Thirtyfivestudents tookthatcoursewhichwasheldinroom110Tuesdays and\nThursdays from1-\u00b7-2p.m.Inthespringsemester 1999,thecourse'Introduction toDatabase\nManagement Systems' wastaughtbyU.N.OwenonTuesdays andThursdays frOIn3\u00b7_\u00b7-4p.m.\ninroom110.Sixtythreestudents wereenrolled; thediscussion sectionwasonThursdays\nfrom 4~5p.m.Theothercoursetaughtinthespringsemester was'Advanced Database\nManagement Systems' byProfessor Ioannidis, Monday, Wednesday, andFridayfrorn8-9a.m.\n1.Createawell-formed XIvILdocument thatcontains theuniversity database.\n2.CreateaDTDforyourXMLdocurnent. MakesurethattheXIvILdocurnent isvalid\nwithrespecttothisDTD.\n3.WriteanXQuery querythatliststhenamesofallprofessors intheordertheyarelisted\nontheWeb.\n4.WriteanXQuery querythatlistsallcoursestaughtin1999.Theresultshouldbe\ngrouped byprofessor, withonerowperprofessor, sortedbylastnarne.Foragiven\nprofessor, coursesshouldbeordered byBaIlIeandshouldnotcontain duplicates (Le.,\nevenifaprofessor teachesthesarnecoursetwicein1999,itshouldappearonlyoncein\ntheresult).\n5.Buildadataguide forthisdata.Discusshowitcanbeused(ornot)foreachoftheabove\nqueries.\n6.Designarelational schcrnatopublishthisdata.\n7.Describe theinfonnation inadifferent XMLdocurnent--a docurnent thatha,,5adifferent\nstructure. Create ;:'1.corresponding DTDandmakesurethatthedocurnent isvalid.Rc\u00ad\nfonnulate thequeriesyouwroteforpreceding partsofthisexercise toworkwiththenew\nDTD.\nExercise 27.8 C~onsider thedataba..5e oftheFa..rnilyWear clothesmanufacturer. F'anlily,\"Vear\nproduces threetypesofclothes: wornen's clothes, Incn'sclothes, andchildren's clothes.l\\Ih.m\ncanchoosebetween poloshirtsand.1'-shirts.Each poloshirtlul.salistofavailable colors,\nsizes,andaunifonn price.EachT-shirt ha..o;;aprice,alistofavailable colors,andalistof", "994": "964 C~HAPTER27\navailable sizes.vVornen havethesarnechoiceofpoloshirtsandT-shirts asIuen.Inaddition\nwornen Ci:Ulchoosebetween threetypesofjeans:sHInfit,ea\"syfit1andrelaxedfitjeans.Each\npairofjeans h~LSalistofpossible waistsizesandpossible lengths. Thepriceofapairofjeans\nonlydepends onitstype.Children canchoosebetween T-shirts andbaseball caps.Each\nT-shirthasaprice,alistofavailable colors,andalistofavailable patterns. T-shirts for\nchildren aUhavethesarnesize.Baseball capsCOlneinthreedifferent sizes:sInall,Iucdiurll,\nandlarge.Eachiternhasanoptional salespricethatisofferedonspecial occa.~ions. Write\nallqueriesinXQuery.\n1.DesignanXrv1LD1'DforFamilyWear sothatFamilyWear callpublishitscatalogonthe\nWeb.\n2.\"Vriteaquerytofindthemostexpensive iteIIlsoldbyF'aulilyWear.\n3.Writeaquerytofindtheaverage priceforeachclothestype.\n4.WriteaquerytolistalliternsthatcostInorethantheaverage fortheirtype;theresult\nInustcontain onerowpertypeintheorderthattypesarelistedontheWeb.Foreach\ntype,theitemsmustbelistedinincreasing orderbyprice.\n5.Writeaquerytofindallitelnswhosesalepriceisrnorethantwicethenormalpriceof\nsorneotheritern.\n6.Writeaquerytofindallitemswhosesalepriceisrnorethantwicethenonnalpriceof\nsomeotheritemwithinthesameclothestype.\n7.Buildadataguide forthisdata.Discusshowitcanbeused(ornot)foreachoftheabove\nqueries.\n8.Designarelational schematopublishthisdata.\nExercise 27.9Witheveryelement einanXl\\1Ldocument, suppose weassociate atriplet\nofnurnbers <begin, end,level>,wherebegindenotesthestartposition ofeinthedocurnent\nintermsofthebyteoffsetinthefile,enddenotes theendposition oftheelement, andlevel\nindicates thenestinglevelofe,withtherootelement starting atnestinglevelO.\n1.Express thecondition thatelement e1is(i)anancestor, (ii)theparentofelement e2in\ntermsofthesetriplets.\n2.Suppose everyelement hasaninternal system-generated idand,foreverytagnaUleI,we\nstorealistofidsofallelernents inthedocument havingtagI,thatis,aninverted list\nofidspertag.Alongwiththeelement id,wealsostorethetripletassociated withit,\nandsortthelistbythebeginpositions ofelernents. Now,suppose wewishtoevaluate\napathexpression allb.Theoutputofthejoinrnustbe<'ida,ich>pairssuchthatida\nandidbareidsofelements CuwithtagnameaandebwithtagIlaIllebrespectively, and\nCaisanancestor ofeb.ItIllustbesortedbytheCOlllposite key<begi:nposition ofea,\nbeginposition ofeb>.\nDesignanalgoritllln thatrnergesthelistsforaandbandperforrns thisjoin.Thenurnber\nofposition cornparisoIls rnustbelinearintheinputandoutputsizes.Hint:Theapproach\nissirnilartoasort-lnerge oftwosortedlistsofintegers.\n~).Suppose thatwehaveksortedlistsofintegers wherekisaconstant. Assurne thereare\nnoduplicates; thatis,eachvalueoccursinexactlyonelistandexactlyonce.Designan\nalgoritlnn tornergetheselistswherethenurnber ofcornparisons islinearintheinput\nsize.\n4.Next,suppose wewishtoperfonn thejoinall/a2/1...//ak(again, k;isaconstant). The\noutputofthejoinIllllStbealistofk-tuples <id1,id2, .\u2022.,'idk>suchthat'idiistheid", "995": "IIIand){lvILData 965\nofanelernent eiwithtagnarne (Lia.ndCiisanancestor ofCi+lforall1::s>i::;k-1.\nThelistlnustbesortedbytheconlposite key<beginposition of(;1~...be-gcinposition\nofCk>.Extendthealgorithnls youdesigned inparts(2)and(3)tocOlupllte thisjoin.\nThenuruber ofposition cornparisons IllustbelinearinthecOlllbined inplltandoutput\nsize.\nExercise 27.10Thisexercise exalnines whypathindexing forXrvlLdataisdifferent frorll\nconventional indexing probleills suchasindexing alinearly ordered dOlnain forpointand\nrangequeries. Thefollowing illodelhasbeenproposed fortheproblenl ofindexing ingeneral:\nTheinputtotheproblern consists of(i)adOlnain ofelerr18nts \"D,(ii)adatainstance Iwhich\nisafinitesubsetof'D,and(iii)afinitesetofqueriesQ;eachqueryisanon\u00b7\u00b7,ernpty subsetof\nI.Thistriplet<D,I,Q>represents theindexed workload. Anindexing scherne Sforthis\nworkload essentially groupsthedataelernents intofixedsizeblocksofsizeB.Fonnally, Sis\nacollection ofblocks{51,52,...,5kJ,whereeachblockisasubsetofIcontaining exactlyB\nelements. Theseblocksmusttogether exhaust I;thatis,I=51UEh...USk;.\n1.Suppose Disthesetofpositive integers andIconsists ofintegers fronl1ton.Qconsists\nofallpointqueries; thatis,ofsingletons {I},{2},...,{n}.Suppose wewanttoindex\nthisworkload usingaB+treeinwhicheachleaflevelblockcanholdexactly [integers.\nWhatistheblocksizeofthisindexing schelne? Whatisthenumber ofblocksused?\n2.Thestorageredundancy ofanindexing scherneSisthemaxilllurn nUlllber ofblocksthat\ncontainanelenlCnt ofI.Whatisthestorageredundancy oftheB+treeusedinpart(1)\nabove'?\n~3.DefinetheaccesscostofaqueryQinQunderscherneStobetherninirnum number of\nblocksofSthatcoverit.Theaccessoverhead ofQisitsaccesscostdividedbyitsideal\naccesscost,whichisIIQI/B\"l.WhatistheaccesscostofanyqueryundertheB+tree\nschemeofpart(I)?Whatabouttheaccessoverhead?\n4.Theaccessoverhead oftheindexing scherneitselfistheITlaxinllun accessoverhead mnong\nallqueriesinQ.ShowthatthisvaluecanneverbehigherthanB.Whatistheaccess\noverhead oftheB+treescherne?\n5.Wenowdefineaworkload forpathindexing. ThedomainD={i:iisapositive integer}.\nThisisintuitively thesetofallobjectidentifiers. Aninstance canbeanyfinitesubsetof\n'D.InordertodefineQ,weilnposeatreestructure onthesetofobjectidentifiers in[.\nThus,iftherearenidentifiers inI,wedefineatreeTwithnnodesandassociate every\nnodewithexactlyoneidentifier frornI.Thetreeisrootedandnode-labeled wherethe\nnodelabelscornefronlaninfinitesetoflabelsZ:.TherootofTha.sadistinguished label\ncalledroot.Now,Qcontains asubset5oftheobjectidentifiers in1ifSistheresult\nofsornepathexpression onT.rrhe cl~hSSofpathexpressions weconsider involves only\nsirnplcpathexpressions; thatis,expressions ofthefonnPE=rooV,1h82[2...inwhere\neach81isasepara.tor whichcaneitherbe/or/ /andeachlzisalabelfroIn}::.This\nexpression returnsthesetofallobjectidentifiers corresponding tonodesinTtha.thave\napathrnatching PBconling intothem.\nShowthatforanyT)thereisa.pathindexing workload suchthatanyindexing scheme\nwithredundancy (ItIuostTwillhaveaccessoverhead B\u00b7\u00b7\u00b7\u00b7..,1.\nExercise 27.11rrhisexercise introduces thenotionofgraphsim:lLlation inthecontext of\nqueryInininlization. Consider thefollowing kindofconstraints onthedata:(1)llequired\nparentconstraints) wherewecanspecifythattheparent ()fanelement oftagbalwayshas\ntaga,and(2)Required rmcestor constraints, wherewecanspecifythatthatHJlelelnent of\nUtgbalwayshasanancestor oftaga\"", "996": "966 CHAPTER 27\n1.Werepresent apathexpres..\"ion queryPB=rootsllts212 ...In,whereeachSiisasepa\u00ad\nratorandeachIiisalabel,asadirected graphwithonenodeforrootandoneforeach\nIi.EdgesgofroIllrootto11andfromIitoli+l.Anedgeisaparentedgeoranancestor\nedgeaccording towhether therespective separator isjorjj.Werepresent aparent\nedgefrOIn 11to'Uinthetextas1L-+vandanancestor edgeas1L:::::>v.\nRepresent thepathexpression root//ajbjc a.~agraph,asasimpleexercise.\n2.Theconstraints arealsorepresented &'3adirected graphinthefollowing lnanner. Create\nanodeforeachtagname.Aparent(ancestor) edgeispresentfrorntagnanleatotag\nHalllebifthereisaconstraint asserting thateverybelmnent rnusthaveanaparent\n(ancestor). Arguethatthisconstraint graphmustbeacyclicfortheconstraints tobe\nmeaningful; thatis,fortheretobedatainstances thatsatisfythem.\n3.Asimulation isabinaryrelation :Sonthenodesoftworooteddirected acyclicgraphs\nG1andG2thatsatisfiesthefollowing condition: Ifu:Sv,whereuisanodeinG1and\nvisanodeinG2,thenforeachnode'u'---+u,theremustbev'--)0vsuchthatu':Sv'\nandforeachu\":::::>u,theremustbev\"thatisanancestor ofv(i.e.,hassmnepathto\nv)suchthatutI:Sv\".Showthatthereisauniquelargestsimulation relation:sm.If\nu::;mVthenuissaidtobesirnulated byv.\n4.Showthatthepathexpression rootlIblIecanberewritten asjIeifandonlyifthee\nnodeinthequerygraphcanbesimulated bytheenodeintheconstraint graph.\n5.Thepathexpression Illjsj+llj+l ...In(j>1)isasuffixofrootsdlS2l2 ...In.Itisan\nequivalent suffixiftheirresultsarethesameforalldatabase instances thatsatisfythe\nconstraints. Showthatthishappens ifIjinthequerygraphcanbesimulated byljin\ntheconstraint graph.\nBIBLIOGRAPHIC NOTES\nIntroductory reading material oninfonnation retrieval includes thestandard textbooks by\nSaltonandMcGill[646]andbyvanRijsbergen [753].Collections ofarticlesforthenlore\nadvanced readerhavebeeneditedbyJonesandWillett[411]andbyFrakesandBaeza-Yates\n[279].Querying textrepositories hasbeenstudied extensively ininformation retrieval; see\n[626]forarecentsurvey. Faloutsos overviews indexing rnethods fortextdatabases [257].\nInverted filesarediscussed in[540]andsignature filesarediscussed in[259].Zobel,I:vloffat,\nandRarnanlOhanarao giveacornparison ofinverted filesandsignature files[802].Asurveyof\nincrernental updates toinverted indexesispresented in[179].Otheraspectsofinforrnation\nretrieval andindexing inthecontext ofdatabases areaddressed in[604], [290], [656], and\n[803]\"arnollgothers. [~~~~O]studiestheproblem ofdiscovering textresources ontheWeb.\nThebookbyWitten, ~loffat,andBellha'3alotofmaterial oncornpression techniques for\ndocument databases [780].\nThenUlnber ofcitation countsasallleasure ofscientific impacthasfirstbeenstudied by\nGarfield U307];seealso[763].Usageofhypertext ualinfonna1,ion toirnprovethequalityof\nsearchengines lU1sbeenproposed bySpertus [699]andbyWeisse1,al.[771].TheHITS\nalgorithln wasdeveloped byJonKleinberg [438].Concurrently, BrinandPagedeveloped the\nPagerank (nowcalledPigeonRank) algoritlnn, whichalsotakeshyperlinks between page..c;into\naccount [116].Athorough analysis andcornparison ofseveralrecently proposed algorithms\nfordeterrnining authoritative pagesispresented in[106].Thediscovery ofstructure inthe\nWorldWideWebiscurrently averyactiveareaofresearch; seeforexaruple theworkby\nGibsoneta1.[~n6].", "997": "IRand-\"YNILData 9Q7\nThereisalotofresearch onsCluistructured datainthedataba.'5e cOIluI1unity. TheT'siunnis\ndataintegration systeInusesas\u20acruistructured dataInodeltocopewithpossible heterogeneity\nofdatasources [584,583]..vVorkondescribing thestructure ofsemistructured databa.,es can\nbefoundin[561].\\\\TangandLiuconsider scherna discovery forseInistructured documents\n[766].fvlapping between relational andXMLrepresentations isdiscussed in[271,676,103]\nand [1~~4].\nSeveral newquerylanguages forsemistructured datahavebeendeveloped: LOREL (602),\nQuilt[152],UnQL[124],StruQL [270],WebSQL (528),andXML-QL [217].ThecurrentW3C\nstandard, XQuery, isdescribed in[153].Thelatestversionofseveralstandards rnentioned\ninthischapter, including XML,XSchenla, XPath,andXQuery, canbefoundatthewebsite\noftheWorldWideWebConsortiuln (www.w3.org). Kweelt [645]isanopensourcesystem\nthatsupports Quilt,andisaconvenient platform forsysterlls experimentation thatcanbe\nobtained onlineathttp://k'weelt.sourceforge .net.\nLOREisadatabase management systemdesigned forsemistructured data[518].Queryop\u00ad\ntinlization forsemistructured dataisaddressed in[5]and[321],whichproposed theStrong\nDataguide. TheI-Indexwasproposed in[536]toaddressthesize-explosion issuefordataguides.\nAnother XMLindexing schenleisproposed in[196].Recentwork[419]aimstoextendthe\nframework ofstructure indexestocoverspecificsubsetsofpathexpressions. Selectivity esti\u00ad\nrnationforXMLpathexpressions isdiscussed in[6].Thetheoryofindexability proposed by\nHellerstein etal.in[375]enablesaformalanalysis ofthepathindexing problenl, whichturns\nouttobeharderthantraditional indexing.\nTherehasbeenalotofworkonusingseluistructured datamodelsforWebdataandseveral\nWebquerysystems havebeendeveloped: WebSQL [528],W3QS[445],WebLog [461],We\u00ad\nbOQL[39],STRUDEL [269],ARANEUS [46]'andFLORID [379].[275]isagoodoverview\nofdatabase research inthecontextoftheWeb.", "998": "28\nL~~.~~SPATIAL DATA\nMANAGEMENT\n...Whatisspatialdata,andhowcanweclassifyit?\n..Whatapplications drivetheneedforspatialdatanlanagenlent?\n..Whatarespatialindexesandhowaretheydifferent instructure from\nnon-spatial data?\n..Howcanweusespace-filling curvesforindexing spatialdata?\n..Whataredirectory-based approaches toindexing spatialdata?\n..WhatareRtreesandhowtotheywork?\n..Whatspecialissuesdowehavetobeawareofwhenindexing high\u00ad\ndimensional data?\n..Keyconcepts: Spatialdata,spatialextent, location, boundary,\npointdata,regiondata,ra...o;;;terdata,featurevector,vectordata,spa\u00ad\ntialquery,nearestneighbor query,spatialjoin,content-based image\nretrieval, spatialindex,space-filling curve,Z-orclering, gridfile,Rtree,\nR+tree,R*tree,generalized searchtree,contrast.\nNothing puzzlesrnemorethantiTneandspace;a.ndyetnothing puzzlesIneless,\nasIneverthinkabouttheIn.\n....Charles Larnb\nIVlanyapplications involvelargecollections ofspatialobjects; andquerying, in\u00ad\ndexing,andrnaintaining suchcollections requires S()lnespecialized techniques.\nInthischapter, wernotivate spatialdatalnanagenlent andprovideanintro\u00ad\nductiontotherequired techniques.\n968", "999": "81J(LtialDatalvfanagctnent 969t\n.....---,\nSQL/MM: SpatialTheSQL/Mlvl standard supports points,lines,and\n2-dirnensional (planarorsurface)data.f\\lture extensions areexpected to\nsupport 3-dhnensional (voIUlnetric) andLl-din1ensional (spatia-temporal)\ndataas\\veIl.Thesenewdatatypesaresupported through atypehi\u00ad\nerarchythatrefinesthetypeST_Geometry. Subtypes includeST_Curve\nandST_Surface, andthesearefurtherrefinedthrough ST-LineString,\nST_Polygon, etc.Thernethods definedforthetype ST_Geonl(~try sup\u00ad\nport(pointset)intersection ofobjects, union,difference, equality, contain\u00ad\nment,cornputation oftheconvexhull,andothersiInilarspatialoperations.\nrrheSQL/MM: Spatialstandard hasbeendesigned withaneyetoconl\u00ad\npatibility withrelatedstandards suchasthoseproposed bytheOpenGIS\n(Geographic Inforrnation Systenls) Consortiunl.\nWeintroduce thedifferent kindsofspatialdataandqueriesinSection28.1and\ndiscussseveralimportant applications inSection28.2.Weexplainwhyindexing\nstructures sucha')B+treesarenotadequate forhandling spatialdatainSection\n28.3.Wediscussthreeapproaches toindexing spatialdatainSections 28.4\nthrough 28.6:InSection28.4,wediscussindexing techniques ba.sedonspace\u00ad\nfillingcurves;inSection28.5,wediscusstheGridfile,anindexing technique\nthatpartitions thedataspaceintononoverlapping regions;andinSection28.6,\nwediscusstheRtree,anindexing technique basedonhierarchical partitioning\nofthedataspaceintopossibly overlapping regions. Finally, inSection28.7\nwediscuss S0111eissuesthatariseinindexing datasets withalargenurnber of\ndiInensions.\n28.1TYPESOFSPATIAL DATAANDQUERIES\nWeusetheternlspatialdatainabroadsense,covering rnultidirnensional\npoints,lines,rectangles, polygons, cubes,andothergeoilletric objects. Aspa\u00ad\ntialdataobjectoccupies acertainregionofspace,calleditsspatialextent,\nwhichischaracterized byitslocation andboundary.\nFraInthepointofviewofaDBMS,wecanclassifyspatialdata&'3beingeither\np()'intdataorTegiondata.\nPointData:Apointhasaspatialextentcharacterized cOIllpletely byits\nlocation; intuitively, itoccupies nospa..ceandhasnoclssociated areaorvoh.llne.\nPointdataconsistsofacollection ofpointsinaInultidirrH:~nsional space.Point\ndatastoredinadataba.se canbeba,,'3edondirectrnCi::1Enlrernents orgenerated\nbytransfonning dataobtained through rnea,surcrnents forea.,seofstorageand\nquerying. Rasterdataisanexarnple ofdirectly rneasured pointdataand", "1000": "970 CHAPTER 2&\nincludes bitrnaps orpixelInapssuchassatellite imagery. Eachpixelstores\naruea..'3ured value(e.g.,ternperature orcolor)foracorresponding location in\nspace.Another exarnple ofsuchrneasured pointdataisrnedical iInagery such\n<:4'1three-dhnensional llulgnetic resonance irnaging(l\\tIRI)brainscans.feature\nvector'sextracted frornirnages,text,orsignals,sucha...')tirneseriesareexamples\nofpointdataobtained bytransforrning adataobject.Aswewillsee,itisoften\neasiertousesucharepresentation ofthedata,insteadoftheactualirnageor\nsignal,toanswerqueries.\nRegionData:Aregionhasaspatialextentwithalocation andaboundary.\nThelocation canbethought ofa..\"theposition ofafixed'anchorpoint'forthe\nregion,suchasitscentroid. Intwodirnensions, theboundary canbevisualized\nasaline(forfiniteregions, aclosedloop),andinthreediInensions, itisa\nsurface. Regiondataconsists ofacollection ofregions. Regiondatastoredin\nadatabase istypically asimplegeornetric approxirnation toanactualdataob\u00ad\nject.Vectordataistheternlusedtodescribe suchgeometric approximations,\nconstructed usingpoints,linesegrnents, polygons, spheres, cubes,andthelike.\nManyexamples ofregiondataariseingeographic applications. Forinstance,\nroadsandriverscanberepresented asacollection oflinesegrnents, andcoun\u00ad\ntries,states,andlakescanberepresented aspolygons. Otherexarnples arise\nincomputer-aided designapplications. Forinstance, anairplane wingnlight\nbernodeled asawirejra'm,eusingacollection ofpolygons (thatintuitively tile\nthewireframesurfaceapproximating thewing),andatubularobjectrI1aybe\nrnodeled asthedifference between twoconcentric cylinders.\nQueriesthatariseoverspatialdataareofthreeruaintypes:spatialrange\nqucr'les, nearestneighbor' queries,andspatialjoinqueries.\nSpatial ItangeQueries: Inaddition tornultidimensional queries, such ~.kS,\n\"Findallernployees withsalaries between $50,000 and$60,000andagesbe\u00ad\ntween40and50,\"wecanaskqueriessuchas\"Findallcitieswithin50rnilesof\n:NIadison\" or\"Findallriversin\\Visconsin.\" Aspatialrangequery ha~'3ana..'3SO\u00ad\neiatedregion(vvithalocation andboundary). Inthepresence ofregiondata,\nspatialfflngequeriescanreturnallregionsthatoverlapthespecified rangeor\nallregions contained withinthespecified range.Bothvariants ofspatialrange\nqueriesareuseful,andalgorithrns forevaluating onevariantareea.silyadapted\ntosolvetheother.H,angequeriesoccurina\\videvarietyofapplications, in\u00ad\ncludingrelational queries,casqueries,andCAD/CA1Vlqueries.\nNearest Neighbor Queries: Atypicalqueryis\"Findthe10citiesnearest\ntowladison.\" \\Veusuallvwanttheanswers ordered by\u00b7distance toMadison,,1 ,\nthatis,byproxil11ity. Suchqueriesareespecially irnportant inthecontextof\nrnultirnedia databases, whereanobject(e.g.,irnages) isrepresented byapoint,", "1001": "SpatialData!v!a'nagernwnt 971\nand'siInilar' objectsarefoundbyretrieving objectswhoserepresentative points\nareclosesttothepointrepresenting thequeryobject.\nSpatialJainQueries: Typical exarnples include\"Findpairsofcitieswithin\n200rnilesofeachother\"and\"Findallcitiesnearalake.\"Thesequeriescan\nbequiteexpensive toevaluate. Ifweconsider arelation inwhicheachtupleis\napointrepresenting acityoralake,thepreceding queriescanbeanswered by\najoinofthisrelation withitself,Vorherethejoincondition specifies thedistance\nbetween twornatching tuples.Ofcourse,ifcitiesandlakesarerepresented\ninInoredetailandhaveaspatialextent,boththeIneaning ofsuchqueries\n(arewelookingforcitieswhosecentroids are\\vithin200Inilesofeachotheror\ncitieswhoseboundaries conlewithin200rnilesofeachother?), andthequery\nevaluation strategies become morecornplex. Still,theessential character ofa\nspatialjoinqueryisretained.\nThesekindsofqueriesareverycommon andariseinlllostapplications ofspatial\ndata.Someapplications alsorequirespecialized operations suchasinterpola\u00ad\ntionofllleasurelnents atasetoflocations toobtainvaluesfortherneasured\nattribute overanentireregion.\n28.2APPLICATIONS INVOLVING SPATIAL DATA\nManyapplications involvespatialdata.Evenatraditional relation withk\nfieldscanbethought ofasacollection ofk-diInensional points,andaswe\nseeinSection28.3,certainrelational queriescanbeexecuted fasterbyusing\nindexing techniques designed forspatialdata.Inthissection, however, we\nconcentrate ona,pplications inwhichspatialdataplaysacentralroleandin\nwhichefficient handling ofspatialdataisessential forgoodperforrnance.\nGeogT'aphic InfoTTnat'ion SystcTns ((jIS)dealextensively withspatialdata,in\u00ad\ncluding points,lines,andt\\\\TO-orthree-diInensional regions. Forexalnple, a\nrnapcontains locations ofsrnallobjects (points), riversandhighways (lines),\nandcitiesandlakes(regions). A(assysternrnustefficiently rnanage two\u00ad\ndirnensional andthree-dirnensional data...'3cts.Alltheclassesofspatialqueries\nwedescribed axisenaturally, andbothpointdataandregiondatarnust b(~\nhandled. Cornrnercial GISsysterns suchasArcInfo arein\\videusetoday,and\n~ v\nobjectdatabase systerns rtirlltosupport: (jISapplications aswell.\n()oTnptdCT- aideddesignandrnanufactv,T\"ing (CAD/CiAM)SystCIllS andrnedical\nirnaging systcrIls storespatialobjects, suchassurfaces ofdesignobjects(e.g.:\nthefuselage ofanaircraft). A.s\\vith(}ISsystelI1S, bothpointandregiondata\nrnustbestored.Ilangequeriesandspatialjoinqueriesareprobably thernost\ncornrnon queries,andspatialintegrity constraints, suehc1S\"ThereIllustbe", "1002": "972 (;HAPTER 28\narnininuUll clearance ofonefootbet\\veen thewheelandthefuselage,\" canbe\nveryuseful.(CAD/CAIVI wa\"arnajorreasonbehindthedeveloplnent ofobject\ndatabases. )\nA1'uli'i'm,edia databases, \\vhichcontainrnultiIncdia objectssuch ct.-I;;)images,text,\nandvariouskindsoftirne-series data(e.g.,audio),alsorequirespatialdata1na11\u00ad\nagernent. Inparticular, findingobjectsshnilartoa,givenobjectisacomnlon\nqueryinarllultirncdia systern,andapopular approach toanswering siInilar\u00ad\nityqueriesinvolves firstrnapping lIlultilnedia datatoa,collection ofpoints,\ncalledfeature vectors. Asirnilarity queryisthenconverted totheproblenl\noffindingthenearestneighbors ofthepointthatrepresents thequeryobject.\nInrnedical imagedatabases, westoredigitized t'wo-dirnensional andthree\u00ad\ndirnensional ilnagessuchasX-raysorJ\\1RIirnages. Fingerprints (together with\ninforrnation identifying thefingerprinted individual) canbestoredinanimage\ndatabase, andwecansearchforfingerprints thatnlatchagivenfingerprint.\nPhotographs frorndriver's licenses canbestoredinadatabase, andwecan\nsearchforfacesthatrnatchagivenface.Suchimagedatabase applications rely\noncontent-based imageretrieval (e.g.,findimagesshnilartoagivenirn\u00ad\nage).Goingbeyondirnages,wecanstoreadatabase ofvideoclipsandsearch\nforclipsinwhichascenechanges, orinwhichthereisaparticular kindof\nobject.Wecanstoreadatabase ofsignalsortim,e-series andlookforsirnilar\ntiule-series. Wecanstoreacollection oftextdocuments andsearchforshnilar\ndocurnents (i.e.,dealingwithsimilartopics).\nFeature vectorsrepresenting rnultirnedia objectsaretypically pointsinahigh\u00ad\ndimensional space.Forexarnple, wecanobtainfeaturevectorsfrolnatext\nobjectbyusingalistofkeywords (orconcepts) andnotingwhichkeywords are\npresent; wethusgetavectorofIs(thecorresponding keyword ispresent) and\nOs(thecorresponding keyword isInissing in thetextobject)whoselengthis\nequaltothenurnber ofkeywords inourlist.Listsofseveralhundred words\narecornrnonly used.vVecanobtainfeaturevectorsfroInaninlagebylooking\natitscolordistribution (thelevelsofred,green,andblueforeachpixel)orby\nusingthefirstseveralcoefficients ofamathernatical function (e.g.,theHough\ntransfonn) thatcloselyapproxirnates theshapesintheirnage.Ingeneral, given\nanarbitrary signal,'wecanrepresent itusingarnathernatical function having\nastandard seriesofternlSandapproxirnate itbystoringthecoefficients ofthe\nlnostsignificant tenns.\nvVhenrnapping rnultirnedia datatoacollection ofpoints,itisirnportant to\nensurethatathereisarneasure ofdistance betweent\\vo pointsthatcaptures\nthenotionofsirnilarity bct\\veen thecorresponding rnultilnedia objects. Thus,\ntwoirnagesthatrnaptot\\VOnearbypointsInustbeInoresirnilarthantwo\nirnagesthatrnaptot\"vopointsfarfrolHeachother.()nceobjectsarernapped", "1003": "SpatialData A1anagen~ent\nr-~ ~.-,,,\\,1i ,t r.....\",............. - - '\"'I\n80 ,,:I ~80~\u2022 1,!\nI~!I-,\n70IjI70\u2022I\n~,\nIII I~-____.\u2022\u2022_\u2022\u2022_J\n~I 60 AI\n,~II60\n\"I',i\n~\\\nI\"250I~II-50I:Crn I,II rn, ~II40IIII 40\nIIII\nI30 III 30\nI1.:I I\n20I I20I\u2022I\nLI\\I I I\n10I.'10I I\u2022!\nII L_...._.! !\n_..-:>- ..;>-\n111213 age 111213 age\nFigure 28.1Clustering ofDataEntriesinB+'freevs.SpatialIndexes\nintoasuitable coordinate space,findingsiInilarimages,siInilardocuments, or\nsirnilartilne-series canbeIllodeled asfindingpointsthatareclosetoeachother:\nWemapthequeryobjecttoapointandlookforitsnearestneighbors. TherIlost\nCOl1UllOn kindofspatialdatainlllultinledia applications ispointdata,andthe\nlllostCOllllIlon queryisnearestneighbor. Incontrast toGISandCAD/CAM,\nthedataisofhighdirnensionality (usually 10orrnoredirnensions).\n28.3INTRODUCTION TOSPATIAL INDEXES\nAmultidimensional orspatial index,incontrast toaB-t-tree,utilizesseHne\nkindofspatialrelationship toorganize data,entries,witheachkeyvalueseen\nasapoint(orregion,forregiondata)inak-dimensional space,wherekisthe\nnumber offieldsinthesearchkeyfortheindex.\nInaB+treeindex,thet\\vo-diJnensional spaceof(age,8a0valuesislinearized--\u00b7-\u00ad\nthatis,pointsinthetwo-dirnensional doruain aretotallyordered\u00b7\u00b7\u00b7\u00b7 ..\u00b7\u00b7\u00b7bysorting\nonagefirstandthenonsal.InFigure28.1,thedottedlineindicates thelinear\norderinwhichpointsarestoredinaB-+tree.Incontrast, aspatialindex.stores\ndataentriesbaA'3edontheirproxirnity intheunderlying t\\vo-dirnensional space.\nInFigure28.1,theboxesindicate huwpointsarestoredinaspatialindex.\nI.Jctuscorrlpare a13-+\u00b7treeindexonkey(age,8a0withaspatialindexonthe\nspaceofageandsalvalues,usingseveralexalnple queries:\n1.age<12:TheB\u00b7+treeindexperforrns verywell.1\\8wewillsec,aspatial\nindexhandlessuchaqueryqllitewell, although itcannotrnatehaB+-tree\nindexinthiscasc.", "1004": "974 CHAPTER d8\n2.sal<20:TheB-+-treeindexisofnouse,sinceitdoesnotInatchthis\nselection. Incontr&')t, thespatialindexhandles thisqueryjustas\\vell Bo,,\"\"\ntheprevious selection OIlage.\n~3.age<121\\sal<20:TheB+treeindexeffectively utilizesonlytheselection\nonage.If1110sttuplessatisfytheageselection, itperforrns poorly.The\nspatialindexfullyutilizesbothselections andreturnsonlytuplesthat\nsatisfyboththeageandsalconditions. Toachievethis\\vithB+tree\nindexes, wehavetocreatetwoseparate indexesonageandsal,retrieve\nridsoftuplessatisfying theageselection byusingtheindexonageand\nretrieveridsoftuplessatisfying thesalcondition byusingtheindexonsal,\nintersect theserids,thenretrievethetuples\\viththeserids.\nSpatialindexesareidealforqueriessuchas\"Findthe10nearestneighbors of\nagivenpoint\"and,\"Findallpointswithinacertaindistance ofagivenpoint.\"\nThedrawback withrespecttoaB+treeindexisthatif(alrnost) alldataentries\naretoberetrieved inageorder,aspatialindexislikelytobeslowerthanaB+\ntreeindexinwhichageisthefirstfieldinthesearchkey.\n28.3.1Overview ofProposed IndexStructures\nManyspatialindexstructures havebeenproposed. Somearedesigned primarily\ntoindexcollections ofpointsalthough theycanbeadapted tohandleregions,\nandSaInehandleregiondatanaturally. ExaInples ofindexstructures forpoint\ndataincludeGridfiles,hEtrees,KDtrees, PointQuadtrees,and SI~trees.\nExamples ofindexstructures thathandleregions &'3wellaspointdatainclude\nIlegionQuadtrees,Rtrees,andSKDtrees.Theselistsarefarfromc()lnplete;\ntherearernanyvariants oftheseindexstructures andITlanyentirely distinct\nindexstructures.\n1\"hereisasyetnoconsensus onthe'best'spatialindexstructure. I-Iowever,\nIltreeshavebeenwidelyirnplcInented andfoundtheirwayintocOHllnercial\nDBMSs. Thisisduetotheirrelative sirnplicity, theirabilitytohandleboth\npointandregiondata,andtheirperforrnance,\\vhich isatleastcornparable to\n1norecornplex. structures.\n'VVediscussthreeapproaches thataredistinctand,takentogether, illustrate of\nInanyofthepr6posed indexing aJternatives. First,vve discussindexstructures\nthatrelyonspace-filling c'urvcstoorganize points.Webeginbydiscussing Z\u00ad\nordering forpointdata,andthenforregionelata,whichisessentiall~y theiclea\nbehindllegionQuadtrees.Ilegion (~uadtreesillustrate anindexing approach\nbclEiedonrecursive subdivision ofthernultidiInensional space,independent of\ntheactualdataset. rfhereareseveralvariants ofRegion (~uadtrees.", "1005": "SpatialData1'\\;!anagc1nent 979\nSecond, wediscussGridfiles,whichillustrate howanExtendible Ha.-,hing style\ndirectory canbeusedtoindexspatialdata.Ivlanyindexstructures suchas\nBangfiles,B1.Lddytrees,andlv!'ult'ilevel Gr'idfileshavebeenproposed refining\nthebasicidea.Finally,\\vediscussRtrees,whichalsorecursively subdivide the\nmuitidilllensional space.Incontra.'3t toRegionQuadtrees,thedecolllposition\nofspaceutilizedinanRtreedepends ontheindexed data.,'3et. \\lVecanthink\nofR.treesasanadaptation oftheB+treeideatospatialdata.Manyvariants\nofRtreeshavebeenproposed, including Celltrees,HilbeTtRtrees,PackedII\ntr'ees,R*trees,R+trees,TVtTees,and..,:rtrees.\n28.4INDEXING BASEDONSPACE-FILLING CURVES\nSpace-filling curvesarebasedontheassulnption thatanyattribute valuecanbe\nrepresented withSaInefixednUlnherofbits,saykbits.Theluaximulu nUluber\nofvaluesalongeachdirnension istherefore 2k.v\\leconsider atwo-dimensional\ndatasetforsirnplicity, although theapproach canhandleanynUluberofdiluen\u00ad\nsions.\nZ-ordering withtwobits Z-ordering withthreebits Hilbertcurvewiththreebits\no,......o,......,......000o,......--oo0o,......,......,......\no0111\n110\n101\n100\n011\n010\n001\n000.-'-----_...L--.-L....-_-L-~_\nogg111\n110\n101\n100\nall\n010\n001\n000-_--+-->O~~~~~~\nooo11 15\n10 14\n01 11\n1000---?>--\n00011011\nFigure28.2Spa.ceFillingCurves\nAspace-filling curveirnposes alinearordering onthedornain, asillustrated\ninFigure28.2.ThefirstcurveshowstheZ-ordering curvefordornains with\n2-bitrepresentations ofattribute values.Agivendatc'tsetcontains asubsetof\nthepointsinthedornain, andtheseareShC)\\Vll.asfilledcirclesinthefigure.\nDornain pointsJlotinthegivendatasetareshownasunfilledcircles.Consider\nthepointwithX=01andy\"=11inthefirstcurve.Thepointha\",sZ-value\n0111,obtained byinterleaving thebitsoftheXandY'\"values;vvetakethefirst\n..\\'\"bit(0),thenthefirstyrbit(1),thenthesecondXbit(1),andfinallythe\nsecondY bit(1).Indecirnalrepresentation, theZ-value0111isequalto7,and\nthepointX:=01andy\"=11hastheZ-value7shownnexttoitinFigure", "1006": "97f3 CHAPTER 28\n28.2.l'hisistheeighthdOlllainpoint'visited' bythespace-fining curve,which\nstartsatpointX=00andY-:=00(Z-value0).\nThepointsinadatac;etarestoredinZ-valueorderandindexed byatraditional\nindexing structure suchasaB+tree.Thatis,theZ-vaJueofapointisstored\ntogether \\viththepointandisthesearchkeyfortheB+tree.(Actually, \\ve\nneednotneedstoretheXand Y'~valuesforapointifwestoretheZ-value, since\nwecanCOlllpute thernfrolntheZ-valuebyextracting theinterleaved bits.)To\ninsertapoint,\\veCOlnpnte itsZ-valueandinsertitintotheB+tree.Deletion\nandsearcharesinlilarly basedonCOlllputing theZ-valueandusingthestandard\nB+treeaJgorithrns.\nTheadvantage ofthisapproach overusingaB+treeindexonS0111ecornbination\noftheXandYfieldsisthatpointsareclustered together byspatialproxirnity\ninthe...X\"--y\"space.Spatialqueriesoverthe.X_,.}Tspacenowtranslate intolinear\nrangequeriesovertheordering ofZ-values andareefficiently answered using\ntheB+treeonZ-values.\nThespatialclustering ofpointsachieved bytheZ-ordering curveisseenrnore\nclearlyinthesecondcurveinFigure28.2,whichshowstheZ-ordering curve\nfordornains with3-bitrepresentations ofattribute values.Ifwevisualize the\nspaceofallpointsasfourquadrants, thecurvevisitsallpointsina.quadra,nt\nbeforenlovingontoanotherquadrant. ThisIneansthatallpointsinaquadrant\narestoredtogether. Thisproperty holdsrecursively withineachquadrant as\nwell~each ofthefoursubquadrants iscornpletely traversed beforethecurve\nlnovestoanother subquadrant. Thus,allpointsinasubquadrant arestored\ntogether.\nTheZ-ordering curveachieves goodspatialclustering ofpoints,butitcanbe\ninrproved orl.Intuitively, thecurveoccasionally Inakeslongdiagonal 'juInps,'\nandthepointsconnected bythejurnps,\\vhilefarapartinthex,\u00b7,y~spaceof\npoints,arenonetheless closeinZ-ordering. rrheTHIbertcurve,shownasthe\nthirdcurveinFigure28.2,addresses thisproblern.\n28.4.1RegionQuadTreesandZ..Ordering: RegionData\nZ-ordering givE~susa\\vaytogrouppointsaccording tospatialproxiInity. \\Vhat\nifwehaveregiondata?rrhekeyistoundersta,nd ho\\vZ-ordering recursively\ndecornposes thedataspaceintoquadrants andsubquadrants, (1\",';illustrated in\nFigure 28.~~.\nTheR,egion (~uadtreestructure corresponds directlytotherecursive decornpo\u00ad\nsitionofthedataspace.Eachnodeinthetreecorresponds toasquare-shaped", "1007": "SpatialDataJ1vfanagenu:nt\n11\n10\n01\n00\nFigure 28.3Z-Ordering andRegionQuadTrees\nregionofthedataspace.Asspecialcases,therootcorresponds totheentire\ndataspace,andS0111eleafnodescorrespond toexactlyonepoint.Eachin\u00ad\nternalnodehasfourchildren, corresponding tothefourquadrants intowhich\nthespacecorresponding tothenodeispartitioned: 00identifies thebottom\nleftquadrant, 01identifies thetopleftquadrant, 10identifies thebottornright\nquadrant, and11identifies thetoprightquadrant.\nInFigure28.3,consider thechildren oftheroot.Allpointsinthequadrant\ncorresponding tothe00childhaveZ-values thatbeginwith00,allpointsin\nthequadrant corresponding tothe01childhaveZ-values thatbeginwith01,\nandsoon.Infact,theZ-valueofapointcanbeobtained bytraversing the\npathfroIntheroottotheleafnodeforthepointandconcatenating alltheedge\nlabels.\nConsider theregionrepresented bytherounded rectangle inFigure28.3.Sup\u00ad\nposethattherectangle objectisstoredintheDBMSandgiventheunique\nidentifier (aid)R.Rincludes allpointsinthe01quadrant oftherootaswell\nasthepointswithZ-values 1and3,which areinthe00quadrant oftheroot.\nInthefigure,thenodesforpoints1and3andthe01quadrant oftherootare\nshown'withdarkboundaries. Together, thedarknodesrepresent therectangle\nR.ffhethreerecords(0001,R),(OOll,R),and(01,R)canbeusedtostorethis\ninfonnation. ThefirstfieldofeachrecordisaZ-valuc; therecordsa,reclus\u00ad\nteredandindexed onthiscolurunusingaB+tree.Thus,aB+treeisusedto\nirnplcInent aH,(~gionQuadtree,just&'3itwasusedtoirnplernent Z-ordering.\nNotethataregionobjectcanusuallybestoredusingfewerrecordsifitis\nsufficient torepresent itatacoarserlevelofdetail.Forexarl1ple, rectangle R\ncanberepresented usingt\\VOrecords (00,R)and(01,R).Thisapproxirnates R\nbyusingthebottorn-Ieft andtop-leftqua.drants oftheroot.", "1008": "978 CHAPTER 28\n1~heRegionQuadtreeideacanbegeneralized beyondtwodilncnsions. Ink\ndirnensions, ateachnodewepartition thespaceinto2ksubregions; fork==2,\n\\vepartition thespaceintofourequalparts(quadrants). vVewillnotdiscuss\nthedetails.\n28.4.2SpatialQueriesUsingZ-Ordering\nRangequeriescanbehandled bytranslating thequeryintoacollection of\nregions, eachrepresented byaZ-value. (vVesawhowtodothisinourdiscussion\nofregiondataandR,egionQuadtrees.)WethensearchtheB+treetofind\nrnatching dataiterns.\nNearestneighbor queriescanalsobehandled, although theyarealittletrickier\nbecause distance intheZ-valuespacedoesnotalwayscorrespond welltodis\u00ad\ntanceintheoriginalX-Ycoordinate space(recallthediagonal jumpsinthe\nZ-ordercurve).Thebasicideaistofirstcompute theZ-valueofthequeryand\nfindthedatapointwiththeclosestZ-valuebyusingtheB+tree.Then,to\nrnakesurewearenotoverlooking anypointsthatarecloserintheX-Yspace,\nwecornpute theactualdistance rbetween thequerypointandtheretrieved\ndatapointandissuearangequerycentered atthequerypointandwithradius\nr.Wecheckallretrieved pointsandreturntheoneclosesttothequerypoint.\nSpatialjoinscanbehandled byextending theapproach torangequeries.\n28.5GRIDFILES\nIncontrast totheZ-ordering approach, whichpartitions thedataspaceinde\u00ad\npendent ofanyone dataset, theGridfilepartitions thedataspaceinaway\nthatreflectsthedatadistribution inagivendataset. rrheInethocl isdesigned\ntoguarantee thatanypoint q'U,CTy(aquerythatretrieves theillfonnation asso\u00ad\nciatedwiththequer:ypoint)canbeansvvered in,atrnost,twodiska,ccesses.\nGridfilesrelyuponagriddirectory toidentify thedata,pagecontaining a\ndesiredpoint.rrhegriddirectory issirnilartothedirectory usedinExtendible\nIIashing (seeChapter 11).vVhen seaTching forapoint,we firstfindtheC01'1'e\u00ad\nsponcling entryinthegriddirectory. Thegriddirectory entry,likethedirectory\nentryinExtendible flashing, identifies thepageonwhichthedesiredpointis\nstored,ifthepointisinthedatabase. Tounderstand theCjridfilestructure,\n\\veneedtounderstand ho\\vtofindthegriddirectory entryforagiverlpoint.\n\\Vedescribe the(jridfilestructure fortwo-dirnensional data.IThernethod\ncanbegeneralized toanynurnber ofdilnensions, but\\verestrictourselves to\nthet\\vo-diInensional C(1.'3eforsirnplicity. TheC;riclfilepartitions sl>(1ceinto", "1009": "SpatialDataA1anagernent 979\nrectangular regionsusinglinesparalleltotheaxes.Therefore, wecandescribe\naGridfilepartitioning byspecifying thepointsatwhicheach&,xisis'cut.'If\nthe,Xaxisiscutinto'isegrnents andthey\"axisiscutintojsegments, wehave\natotalofixjpartitions. Thegriddirectory isan'ibyjarraywithoneentry\nperpartition. Thisdescription isInaintained inanarraycalledalinearscale;\nthereisonelinearscaleperCLxis.\nLI,~~:~~ ~~~~~ ~~~,~-.~?'!S __: ...\n: I I\nI01000 1500 1700 ~25003500::....\n1 _Query: (1800,~ut)\nI\nI\nII\n1F\"-\u2022\u2022\u2022\u2022\u2022~~-\nI I I\nI Ia I\nI I I\nI I \u2022 I\nI I I\nI If I\nI I \u2022 I\nI I I\nI Ik :-~-~.~~--+,\nIP\nI\nI \u2022\n: z\nI\nL ,I---_ ,~._~~_.--_.-\n,--+-~- ...,.,..-+---1\nGRIDDIRECTORY StoredonDisk\nLINEAR SCALEFORY-AXIS\nFigure28.4Searching foraPointinaGridFile\nFigure28.4illustrates howwesearchforapointusingaGridfileindex.First,\nweusethelinearscalestofindthe..,X-segulent towhichthe.LYvalueofthegiven\npointbelongsandtheYsegrnent towhichthey\"valuebelongs. Thisidentifies\ntheentryofthegriddirectory forthegivenpoint.Weassurnethatalllinear\nscalesarestoredinrnainrnernory, andtherefore thisstepdoesnotrequireany\nl/C).Next,wefetchthegriddirectory entry. Since thegriddirectory rnaybe\ntoolargeto.fitinrnainrnenlory, itisstoredondisk.Flowever, wecanidentify\nthediskpagecontaining agivenentryandfetchitinoneI/Obecausethegrid\ndirectory entriesarearra,nged sequentially ineitherrow\\vise orcohuunwise\norder.Thegriddirectory entrygivesustheIDofthedatapagecontaining the\ndesiredpoint,andthispagecannowberetrieved inonel/C).'rhus,wecan\nretrieve apointint\\VOl/Os.onel/C)forthedirectory entryandoneforthe\ndatapage.\nR.angequeriesandnearestneighbor queriesaree&l;)ilyanswered usingtheCjrid\nfile.B-br rttngequeries, weusethelinearscaJestoidentify thesetofgrid\ndirectory entriestofetch.Fornearestneighbor queries, wefirstretrieve the\ngriddirectory entryforthegivenpointandsearchthedatapagetowhichit\nPOit1tS.Ifthisdatapageiscrnpty,\\ve usethelinearscalestoretrievethedata\nentriesforgridpartitions thatareadjacent tothepartition thatcontains the", "1010": "980 C~HAPTER 28\nquerypoint.Weretrieve allthedatapointswithinthesepartitions andcheck\nthernfornearness tothegivenpoint.\nTheGridfilereliesupontheproperty thatagriddirectory entrypointstoa\npagethatcontains thedesireddatapoint(ifthepointisinthedataba,se). T'his\nrneansthat\\veareforcedtosplitthegriddirectory\u00b7\u00b7\u00b7\u00b7\u00b7and therefore alinear\nscalealongthesplitting dirnension\u00b7\u00b7-\u00b7-\u00b7\u00b7-if adatapageisfullandanewpointis\ninserted tothatpage.Toobtaingoodspaceutilization, weallowseveralgrid\ndirectory entriestopointtothesaInepage.Thatis,severalpartitions ofthe\nspaceInaybernapped tothesaInephysical page,a.slongasthesetofpoints\nacrossallthesepartitions fitsonasinglepage.\n3 4\nA\nB\nc2\nFigure 28.5Inserting PointsintoaGridFile\nInsertion ofpointsintoaGridfileisillustrated inFigure28.5,whichhasfour\nparts,eachillustrating asnapshot ofaGridfile.Eachsnapshot showsjustthe\ngriddirectory andthedatapages;thelinearscalesareornitted forsirnplicity.\nInitially (thetop-leftpartofthefigure),thereareonlythreepoints,allof\nwhichfitintoasinglepage(A).'rhegriddirectory contains asingleentry,\nwhichcoverstheentiredataspaceandpointstopageA.\nInthisexaInple, weaSSUlnethatthecapacity ofadatapageisthreepoints.\nTherefore, 'whena11e\\Vpointisinserted, weneedanadditional datapage.We\narealsoforcedtosplitthegriddirectory toaccornrnodate anentryforthenew\npage.\\\u00a5edothisbysplitting alongtheXaxistoobtaintwoequalregions;\noneoftheseregionspointstopageAandtheotherpointstothenewdata\npageB.Thedatapointsareredistributed acrosspagesAandBtoreflectthe\npartitioningofthegriddirectory. 1'heresultisshowninthetop-right partof\nFigure28.5.\nThenextpart(bottorll left)ofFigure28.5illustrates theGridfileaftertwo\nrnoreinsertions. rrheinsertion ofpoint5forcesustosplitthegriddirectory\nagain,because point5isintheregionthatpointstopageA,andpageAis", "1011": "SpatialIJataNfanagc'rnent 981\nalreadyfull.Sincewesplitalongthe...X\"axisintheprevious split,\\venowsplit\nalongthe1/\"axis,andredistribute thepointsinpageAacrex..,spageAanda\nIle\\Vdatapage,C.(Choosing thea.xistosplitinaround-robin fashionisoneof\nseveralpossible splitting policies.) ()bservethatsplitting theregionthatpoints\ntopageAalsocaiusesasplitoftheregionthatpointstopageB,leadingtot\\VO\nregionspointing topageB.Inserting point6nextisstraightforward becauseit\nisinaregionthatpointstopage13,andpageBh<:1...1;)spaceforthenewpoint.\nNext,consider thebottonlrightpartofthefigure.Itshowstheexarnple file\naftertheinsertion oftwoadditional points,7and8.Theinsertion ofpoint7\nfillspageC,andthesubsequent insertion ofpoint8causesanother split.This\ntiIne,wesplitalongthe~Xaxisandredistribute thepointsinpageCacross\nCandthenewdatapage,D.Observe howthegriddirectory ispartitioned\nthemostinthosepartsofthedataspacethatcontainthernostpoints-\u00b7\u00b7-the\npartitioning issensitive todatadistribution, likethepartitioning inExtendible\nHashing, andhandlesskeweddistributions well.\nFinally, consider thepotential insertion ofpoints9and10,whichareshown\naslightcirclestoindicatethattheresultoftheseinsertions isnotreflected in\nthedatapages.Inserting point9fillspageB,andsubsequently inserting point\n10requires anewdatapage.However, thegriddirectory doesnothavetobe\nsplit further~ points6and9canbeinpageB,points3and10cangotoanew\npageE,andthesecondgriddirectory entrythatpointstopageBcanbereset\ntopointtopageE.\nDeletion ofpointsfromaGridfileiscOITlplicated. Whenadatapagefallsbelow\nSaIneoccupancy threshold, suchas,lessthanhalf-full, itluustbernergedwith\nscnueotherdatapagetornaintain goodspaceutilization. Wedonotgointo\nthedetailsbeyondnotingthat,tosiInplify deletion, aconve:\u00a3'ity requirernent is\nplacedonthesetofgriddirectory entriesthatpointtoasingledatapage:The\nregiondefinedbythissetofgriddirectory erd'riesrnustbeconve:r.\n28.5.1Adapting GridFilestoHandleRegions\nTherearetwobasicapproaches tohandling regiondatainaGridfile,nei\u00ad\ntherofwhichissatisfactory. First,vvecanrepresent aregionbyapointina\nhigher-dirnens~onal space.E'orexarnple, aboxintvvodiInensions canberepre\u00ad\nsentedasafour-dirnensional pointbystoring t\\VOdiagonal cornerpointsofthe\nbox.Thisapproach doesnotsupport nearestneighbor andspatialjoinqueries,\nsincedistances intheoriginalspacearenotreflected inthedistances between\npointsinthehigher-dirnensional space.f'urther, thisapproach increases the\ndirnensionality ofthestoreddata,which leads tovariousproblcrns (seeSection\n28.7).", "1012": "982 CHAPTER 28\nThesecondapproach istostorearecordrepresenting theregionobjectineach\ngridpartition thatoverlaps theregionobject.Thisisunsatisfactory becauseit\nleadstoalotofadditional recordsand111akesinsertion anddeletion expensive.\nInSUIJllnary, theGridfileisnotagoodstructure forstoringregiondata.\n28.6RTREES: POINTANDREGION DATA\nTheRtreeisanadaptation oftheB+treetohandlespatialdata,anditisa\nheight-balanced datastructure, liketheB+tree.ThesearchkeyforanIltree\nisacollection ofintervals, withoneintervalperdiInension. Wecanthinkof\nasearchkeyvalueasaboxbounded bytheintervals; eachsideoftheboxis\nparalleltoanaxis.WerefertosearchkeyvaluesinanRtreea'Sbounding\nboxes.\nAdataentryconsists ofapair(n-dim,ensional box,riel),whererididentifies an\nobjectandtheboxisthesmallest boxthatcontains theobject.Asaspecial\ncase,theboxisapointifthedataobjectisapointinsteadofaregion.Data\nentriesarestoredinleafnodes.Non-leaf nodescontain indexentriesofthe\nforIll(n-dimensional box,pointertoachildnode).Theboxatnon-leaf node\nNisthesrnallest boxthatcontains allboxesassociated withthechildnodes;\nintuitively, itboundstheregioncontaining alldataobjectsstoredinthesubtree\nrootedatnodeN.\nFigure28.6showstwoviewsofanexample Rtree.Inthefirstview,weseethe\ntreestructure. Inthesecondview,weseehowthedataobjectsandbounding\nboxesaredistributed inspace.\nRoot\n1~1~-\n ~~':~~l\n~~~~j I\u00a74III\nR2 ---1 Itt:::-:::\u00b7:::~::::::::::::::::::::::::::\u00b7:::\u00b7::::-:::::=:~;-I\n------------,----~---,.-......,;J..:::::::::=:::==j'j\nR6L._\nIR151,\u00b7-----'\nFigure 28.6TwoViewsofanExample RTree\nThereare19regionsintheexarnple tree.R,egiollsRBthrough R19represent\ndataobjectsandareshowninthetree(1..'3dataentriesattheleaflevel.The\nentryR.8*,forexarnple, consists ofthebounding boxforregionItsandthe\nridoftheunderlying dataol>ject.R,egions IIIthrough 117represent boundirlg", "1013": "81)(ltialDataNfanagenl,cnt\nboxesforinternal nodesinthetree.RegionRl,forexanlple, isthebounding\nboxforthespacecontaining theleftsubtree, whichincludes dataobjectsRB,\nR9,RIO,Rll,R12,R13,andR14.\nThebounding boxesfortwochildren ofagivennodecanoverlap; forex,unplc,\ntheboxesforthechildren oftherootnode,RlandR2,overlap. rrhis111eans\nthatrnorethanoneleafnodecouldaccornrnodate agivendataobjectwhile\nsatisfying allbounding boxconstraints. However, everydataobjectisstored\ninexactlyoneleafnode,evenifitsbounding boxfallswithintheregionscor\u00ad\nresponding totwoorIllorehigher-level nodes.Forexarnple, consider thedata\nobjectrepresented byR9.Itiscontained withinbothR3andR4andcouldbe\nplacedineitherthefirstorthesecondleafnode(goingfromlefttorightinthe\ntree).Wehavechosentoinsertitintotheleft-rnost leafnode;itisnotinserted\nanywhere elseinthetree.(WediscussthecriteriausedtoBlakesuchchoices\ninSection28.6.2.)\n28.6.1Queries\nTosearchforapoint,wecornpute itsbounding boxB,whichisjustthepoint,\nandstartattherootofthetree.Wetestthebounding boxforeachchildof\ntheroottoseeifitoverlaps thequeryboxB,andifso,wesearchthesubtree\nrootedatthechild.Ifmorethanonechildoftheroothasabounding box\nthatoverlaps B,welTIUStsearchallthecorresponding subtrees. Thisisan\nirnportant difference withrespecttoB+trees:TheseaTchfaTevenasingle\npointcanleadusdownseveralpathsinthetree.Whenwegettotheleaflevel,\nwechecktoseeifthenodecontains thedesiredpoint.Itispossible that\u00b7we\ndonotvisitanyleafnode------this happens whenthequerypointisinaregion\nnotcoveredbyanyoftheboxesassociated withleafnodes.Ifthesearchdoes\nnotvisitanyleafpages,weknowthatthequerypointisnotintheindexed\ndataset.\nSearches forregionobjectsandrangequeriesarehandled sirnilarly byCOluput\u00ad\ningabounding boxforthedesiredregionandproceeding asinthesearchfor\nanobject.Forarangequery,whenwegettotheleaflevelweITlllstretrieve\nallregionobjectsthatbelongthereandtest\"vhether theyoverlap(orarecon\u00ad\ntainedin,depending onthequery)thegivenrange.Thereasonforthistest\nisthat,evenifthebounding boxforanobjectoverlaps thequeryregion,the\nobjectitselfrnaynot!\nAsanexalnple, suppose wewanttofindallobjectsthatoverlapourquery\nregion,andthequeryregionhappens tobetheboxrepresenting objectR8.\nWestartattherootandfindthatthequeryboxoverlaps RJbutnotR2.\nl\"herefore, wesearchtheleftsubtreebutnottherightsubtree. Wethenfind", "1014": "984 (;HAPTER 28\nthatthequeryboxoverlaps R,3butnotRAorItS.Soweseal\"ehthele:ft-rnost\nleafandfindobjectRB.Asanother exarnple, suppose thatthequeryregion\ncoincides \\vithIl9ratherthanRB.A.gain,thequeryboxoverlaps RJbutnot\nR,2andsowesearch(only)theleftsubtree. Nowwefindthatthequerybox\noverlaps bothR3andR,4butnotH,5.'Votherefore searchthechildren pointed\ntobytheentriesforR3andHA.\nAsarefinernent tothebasicsearchstrategy, wecanapproxirnate thequery\nregionbyaconvexregiondefinedbyacollection oflinearconstraints, rather\nthanabounding box,andtestthisconvexregionforoverlapwiththebounding\nboxesofinternal nodesa'Swesearchdownthetree.Thebenefitisthataconvex\nregionisatighterapproxirnation thanabox,andtherefore wecansometirnes\ndetectthatthereisnooverlapalthough theintersection ofhounding boxesis\nnonernpty. 'rhecostisthattheoverlaptestisInoreexpensive, butthisisa\npureCPUcostandnegligible incOillparison tothepotential I/Osavings.\nNatethatusingconvexregionstoapproximate theregionsassociated with\nnodesintheIltreewouldalsoreducethelikelihood offalseoverlaps-----the\nbounding regionsoverlap, butthedataobjectdoesnotoverlapthequery\nregion-\u00b7\u00b7-but thecostofstoringconvexregiondescriptions isrlluchhigherthan\nthecostofstoringbounding boxdescriptions.\n1'0searchforthenearestneighbors ofagivenpoint,weproceed asinasearch\nforthepointitself.Weretrieve allpointsintheleavesthatweexarnine a.s\npartofthissearchandreturnthepointclosesttothequerypoint.Ifwedo\nnotvisitanyleaves,thenwereplacethequerypointbyasrnallboxcentered\natthequerypointandrepeatthesearch.Ifwestilldonotvisitanyleaves,we\nincrease thesizeoftheboxandsearchagain,continuing inthisfashionuntil\nwevisitaleafnode.'Vethenconsider allpointsretrieved froIllleafnodesin\nthisiteration ofthesearchandreturnthepointclosesttothequerypoint.\n28.6.2InsertandDeleteOperations\nToinsertadataobjectwithridT,wecornpute thebounding boxBforthe\nobjectandinsertthepair(B,r)intothetree.Westartattherootnodeand\ntraverse asinglepathfrorHtheroottoaleaf(incontrast tosearching, where\n\"vocouldtraverse severalsuchpaths).Ateachlevel,'wechoosethechildnode\n\\V~hosebounding boxneedstheleastenla.rgcruent (intennsoftheincrease inits\narea)tocoverthebox[3.Ifseveralchilclren havebounding boxesthatcover13\n(orthatrequirethesarriCenlargcrnent inordertocover13),frornthesechildren,\n\u00b7wechoosetheonewiththeslnallest bounding box.", "1015": "SpatialI)ata!v{anageTnent\nAttheleaflevel,weinserttheobject,andifnecessary weenlargethebounding\nboxoftheleaftocoverboxB.Ifwehavetoenlargethebounding boxfor\ntheleaf,thisIllUStbepropagated toancestors oftheleaf-after theinsertion is\ncOlnpleted, thebounding boxforeverynodeIIlUstcoverthebounding boxfor\nalldescendants. Iftheleafnodelacksspaceforthenewobject,weIllUStsplit\nthenodeandredistribute entries between theoldleafandthenewnode.\\lVe\nlllustthenadjustthebounding boxfortheoldleafandinsertthebounding\nboxforthenewleafintotheparentoftheleaf.Again,thesechanges could\npropagate upthetree.\nr----- -----\nI I\nI\n~~~~~~=tt::::::11\nI I\nI I\n,r-~ I\n/ I I\nBADSPLIT I R3 I~DOODSPLIT\n~--++--t-r----;---+--+~\nI\nFigure28.7Alternative Redistributions inaNodeSplit\nItisimportant tominimize theoverlapbetween bounding boxesintheRtree\nbecauseoverlapcausesustosearchdownmultiple paths.Theamountofoverlap\nisgreatlyinfluenced byhowentriesaredistributed whenanodeissplit.Figure\n28.7illustrates twoalternative redistributions duringanodesplit.Thereare\nfourregions,Rl,R2,R3,andR4,tobedistributed acrosstwopages.Thefirst\nsplit(showninbrokenlines)putsRlandR,2ononepageandR3andR4on\ntheother.Thesecondsplit(showninsolidlines)putsRlandR4ononepage\nandR2andR,3ontheother.Clearly,thetotalareaofthebounding boxesfor\nthenewpagesislnuchlesswiththesecondsplit.\nMinirnizing overlapusingagoodinsertion algorithrll isveryirnportant forgood\nsearchperforrnance. AvariantoftheR,tree,calledtheR*tree,introduces the\nconceptofforcedreinserts toreduceoverlap: vVhenanodeoverflows, rather\nthansplititirnrnedia,tely, werernovesennernunberofentries(about ~30percent\nofthenode'scontents workswell)andreinsertthernintothetree.Thisrnay\nresultinallentriesfittinginsidesorneexisting pageandelirninate theneedfor\nasplit.The ~,*treeinsertion algoritlllIlS alsotrytoIninirnize boxpeTirneteT8\nrathertha.nbo:rareas.\nTodeleteadataobjectfrOIDanH,tree,vvehavetoproceed asinthesearch\nalgoritlun andpotentially ex(unine severalleaves.Iftheobjectisinthetree,\n\"vercrnoveit.Inprinciple,\\ve cantrytoshrinkthebounding boxforthe", "1016": "986 CHAPTER 28\nleafcontaining theobjectandthebounding boxesforallancestor nodes.In\npractice, deletion isoftenirnplernented bysirnplyrernoving theobject.\nAnother variant,calledtheR+tree,avoidsoverlapbyinserting anobjectinto\nlllultiple leavesifnecessary. Consider theinsertion ofanobjectwithbounding\nboxBatanodelV.IfboxBoverlaps theboxesassociated withmorethan\nonechildofN,theobjectisinserted intothesubtreeassociated witheach\nsuchchild.Forthepurposes ofinsertion intochildCwithbounding boxBe,\ntheobject's bounding boxisconsidered tobetheoverlapofBandBe.1The\nadvantage ofthemorecornplex insertion strategy isthatsearches cannow\nproceed alongasinglepathfrolntheroottoaleaf.\n28.6.3Concurrency Control\nl'hecostofimplernenting concurrency controlalgorithms isoftenoverlooked in\ndiscussions ofspatialindexstructures. l'hisisjustifiable inenvironments where\nthedataisrarelyupdated andqueriesarepredominant. Ingeneral, however,\nthiscostcangreatlyinfluence thechoiceofindexstructure.\nWepresented asimpleconcurrency controlalgorithm forB+treesinSection\n17.5.2:Searches proceed fromroottoaleafobtaining sharedlocksonnodes;\nanodeisunlocked assoonasachildislocked.Insertsproceed fromroottoa\nleafobtaining exclusive locks;anodeisunlocked afterachildislockedifthe\nchildisnotfull.Thisalgorithrn canbeadapted toRtreesbylllodifying the\ninsertalgorithm toreleasealockonanodeonlyifthelockedchildhasspace\nanditsregioncontains theregionfortheinserted entry(thusensuring thatthe\nregionmodifications donotpropagate tothenodebeingunlocked).\nWepresented anindexlockingtechnique forB+\u00b7treesinSection17.5.1,which\nlocksarangeofvaluesandprevents newentriesinthisrangefrornbeinginserted\nintothetree.Thistechnique isusedtoavoidthephantorn problern. Nowlet\nusconsider howtoadapttheindexlockingapproach toRtrees.Theba...\"icidea\nistolocktheindexpagethatcontains orwouldcontainentrieswithkeyvalues\ninthelockedrange.InR,trees,overlapbetween regionsassociated withthe\nchildren ofanodecouldforceustolockseveral(non-leaf) nodesondifferent\npathsfrorntheroottoSOH1Cleaf.Additional cornplica ..tionsa.risefronlhavingto\ndealwithchanges\"inpi:lIticular, enlargernents duetoinsertions ....\u00b7intheregions\noflockednodes.vVithout goingintofurtherdetail,itshouldbeclearthatindex\nlockingtoavoidphant0l11 insertions inH.treesisbothharderandlessefficient\nthanin13+trees.Further, idea\",')suchae:;forcedreinsertion inIt*treesand\n----__--\n1Insertion intoanR+treeinvolves additional details. Forexample, ifboxBisnotcontained inthe\ncollection ofboxes associat(~d withthechildren ofNwhoseboxes13overlaps, oneofthechildnm must\nluweitsboxenlarged sothat13iscontajned inthecollection ofboxesassoci<lf;ed with thf~children.", "1017": "SpatialData!vIanage7Tu~nt 98}\nrIlultiple insertions ofanobjectinR+treesnlakeindexlockingprohibitively\nexpenSIve.\n28.6.4Generalized SearchTrees\nTheB+treeandRtreeindexstructures aresirnilarin111anyrespects: Both\nareheight-balanced, inwhichsearches startattherootofthetreeandproceed\ntowardtheleaves;eachnodecoversaportionoftheunderlying dataspace,and\nthechildren ofanodecoverasubregion oftheregionassociated withthenode.\nThereareirnportant differences ofcourse-for exa111ple, thespaceislinearized\nintheB+treerepresentation butnotintheRtree\u00b7~\u00b7\u00b7~~but thecornrnon features\nleadtostrikingsiruilarities inthealgorithms forinsertion, deletion, search,and\nevenconcurrency control.\nThegeneralized searchtree(GiST) abstracts theessential features oftree\nindexstructures andprovides 'template' algorithms forinsertion, deletion, and\nsearching. TheideaisthatanORDBMS cansupport thesetemplate algorithnls\nandthereby makeiteasyforanadvanced database usertoimplement specific\nindexstructures, suchasRtreesorvariants, without nlakingchangestoany\nsystemcode.Theeffortinvolved inwritingtheextension 1nethods isl11uchless\nthanthatinvolved inilIlplementing anewindexing 111ethod frolIlscratch, and\ntheperformance oftheGiSTte111plate algorithms iscornparable tospecialized\ncode.(Forconcurrency control, 1110reefficient approaches areapplicable if\nweexploittheproperties thatdistinguish B+treesfromRtrees.However,\nB+treesareirnplernented directly inmostcOllllIlercial DBMSs, andtheGiST\napproach isintended tosupport 1noreconlplex treeindexes.)\nrrheternplatealgorithlIls callonasetofextension methods specifictoapar\u00ad\nticularindexstructure, andthese111UStbesupplied bytheirnplernentor. For\nexarnple, thesearchte1nplate searches allchildren ofanodewhoseregionis\nconsistent withthequery.InaB-t-treetheregiona.ssociated withanodeis\narangeofkeyvalues~andinanRtree,theregionisspatial. Thecheckto\nseewhether aregionisconsistent withthequeryregionisspecifictotheindex\nstructure andisanexarnple ofanextension rnethod. Asanotherexa.rnple ofan\nextension rnethod, consider ho\\;ytochoosethechildofanIltreenodetoinsert\nanewentryinto.Thischoicecanbernadebasedon\\vhichcandidate child's\nregionneedsexpanded theleast;anextension rnethod isrequired tocalculate\ntherequired expansions forcandidate children andchoosethechildintoVlhich\ntoinserttheentry.", "1018": "988 (;HAPTER 28\n28.7ISSUESINHIGH-DIMENSIONAL INDEXING\nThespatialindexing techniques justdiscussed ''larkquite\\vellfort\\VO-and\nthree-dirnensional dat&\"ets, whichareencountered inIllanyapplications ofspa\u00ad\ntialdata.InSCHneapplications, suchascontent-based ilnageretrieval ortext\nindexing, however, thenurIlberofdirnensions canbelarge(tensofdirnensions\narenotunCOtnlnon). Indexing suchhigh-dirnensional datapresents uniquechal\u00ad\nlenges,andne\\'ltechniques arerequired. Forexanlple, sequential scanbecomes\nsuperior toR,treesevenwhensearching forasinglepointfordatasets with\n1norethanaboutadozendirnensions.\nIIigh-dirnensional datasets aretypically collections ofpoints,notregions, and\nnearestneighbor queriesarethernostcotnrIlon kindofqueries. Searching for\nthenearestneighbor ofaquerypointisrneaningful whenthedistance frotnthe\nquerypointtoitsnearestneighbor islessthanthedistance tootherpoints.\nAttheveryleast,wewantthenearestneighbor tobeappreciably closerthan\nthedatapointfarthest fromthequerypoint.High-dimensional dataposesa\npotential problem: Forawiderangeofdatadistributions, asdimensionality d\nincreases, thedistance (frolllanygivenquerypoint)tothenearestneighbor\ngrowscloserandclosertothedistance tothefarthestdatapoint!Searching\nfornearestneighbors isnotlneaningful insuchsituations.\nInmanyapplications, high-dirnensional datamaynotsufferfrorntheseprob\u00ad\nlenlsandmaybeamenable toindexing. However, itisadvisable tocheckhigh\u00ad\ndimensional datasets tornakesurethatnearestneighbor queriesaremeaningful.\nLetuscalltheratioofthedistance (frornaquerypoint)tothenearestneigh\u00ad\nbortothedistance tothefarthest pointthecontrast inthedataset. Wecan\nmeasure thecontra.'3t ofadatasetbygenerating anumber ofsarnplequeries,\nmeasuring distances tothenearestandfarthest pointsforeachofthesesarIlple\nqueriesandcornputing theratiosofthesedistances, andtakingtheaverage\nofthe111easured ratios.Inapplications thatcallforthenearestneighbor, we\nshouldfirstensurethatdatasets havegoodcontrast byernpirical testsofthe\ndata.\n28.8REVIEW QUESTIONS\nAnswers toth~reviewquestions canbefoundinthelistedsections.\n\u2022vVhatarethecharacteristics ofspatialdata?vVhatisaspatialextent?\nWhatarethedifferences between spatialrangequeries, nearestneighbor\nqueries,andspatialjoinqueries? (Section 28.1)", "1019": "SpatialData1\\1an,age'lnent 989\n$\nIJIINalneseveralapplications thatdeal,,\"ithspatialdataandspecifytheir\nrequircrnents onadatabase systeln. \\Vhatisafeaturevectorandho\\visit\nused?(Section 28.2)\nIIIvVhatisaIIlulti-dirnensional index'?\\\\Thatisaspatialindex?\\tVhatare\nthedifferences bet\\vccn aspatialindexandaB+tree?(Section 28.3)\nIlIl\\iVhatisaspace-filling curve,andhovvcanitbeusedtodesignaspatial\nindex? Describe aspatialindexstructure ba\"oscdonspace-filling curves.\n(Section 28.4)\nIIWhatdatastructures arelnaintained fortheGridfileindex? Howdo\ninsertion anddeletion inaGridfilework?Forwhattypesofqueriesand\ndataareGridfilesespecially suitable andwhy?(Section 28.5)\nIIWhatisanRtree?\"Vhatisthestructure ofdataentriesinRtrees?\nHowcanwelninimize theoverlapbetween bounding boxeswhensplitting\nnodes?lIowdoesconcurrency controlina Rtreework?Describe ageneric\nteulplate fortree-structured indexes. (Section 28.6)\n\u2022Whyisindexing high-dilnensional dataverydifficult? Whatistheilnpact\nofthedirrlensionality onnearestneighbor queries? Whatisthecontrast of\nadataset? (Section 28.7)\nEXERCISES\nExercise 28.1Answerthefollowing questions briefly:\n1.Howispointspatialdatadifferent frolllnonspatial data?\n2.Howispointdatadifferent fronlregiondata?\n~).Describe threecornrnon kindsofspatialqueries.\n4.Whyarenearestneighbor queriesirnportant inrnultin1edia applications?\n5.Howisa13+treeindexdifferent froIllaspatialindex?vVhenwouldyouusea13+tree\nindexoveraspatialindexforpointdata?vVhenwouldyouuseaspatialindexovera\n13+treeindexforpointdata?\n6.vVhatistherelationship between Z-ordering andRegionQuadtrees?\n7.Compare Z-ordering andH.ilbertcurvesastechniques toclusterspatialdata.\nExercise 28.2Consider Figure28.3,\\vhichillustrates Z-ordering andRegionQuadtrees.\nAnswerthefollowing questions.\n1.Consider theregioncOInposed ofthepointswiththeseZ-values: 4,5,6,and7.lVlarkthe\nnodesthatrepresent thisregionintheRegionQuadtreeshowninFigure28.:3.(Expand\nthetreeifnecessary.)\n2.llepeatthepreceding exercise fortheregioncornposed ofthepointswithZ-vaJues 1and\n~~.", "1020": "990 CHAPTER 28\n3.Repeatitfortheregioncomposed ofthepointswithZ-values 1and2.\n4.RepeatitfortheregioncOll1posed ofthepointswithZ-values 0and1.\n5.Repeatitfortheregioncoruposed ofthepointswithZ-values 3and12.\n6.Repeatitfortheregioncmnposed ofthepointswithZ-values 12and15.\n7.RepeatitfortheregionCOITlposed ofthepointswithZ-values 1,3,9,and11.\n8.RepeatitfortheregionCOITlposed ofthepointswithZ-values 3,6,9,and12.\n9.RepeatitfortheregionCOITlposed ofthepointswithZ-values 9,11, 12,and14.\n10.Repeatitfortheregioncornposed ofthepointswithZ-values 8,9,10,and11.\nExercise 28.3Thisexercise alsoreferstoFigure28.3.\n1.Consider theregionrepresented bythe01childoftherootintheRegionQuadtree\nshowninFigure28.3.WhataretheZ-values ofpointsinthisregion?\n2.Repeatthepreceding exercise fortheregionrepresented bythe10childoftherootand\nthe01childofthe00childoftheroot.\n3.ListtheZ-values offouradjacent datapointsdistributed acrossthefourchildren ofthe\nrootintheRegionQuadtree.\n4.Consider thealternative approaches ofindexing atwo-dimensional pointdatasetusinga\nB+treeindex:(i)onthecomposite searchkey(X,Y),(ii)ontheZ-ordering computed\novertheXandYvalues.Assuming thatXandYvaluescanberepresented usingtwo\nbitseach,showanexample datasetandqueryillustrating eachofthesecases:\n(a)Thealternative ofindexing ontheCOITlposite queryisfaster.\n(b)Thealternative ofindexing ontheZ-valueisfaster.\nExercise 28.4Consider theGridfileinstance withthreepoints1,2,and3showninthe\nfirstpartofFigure28.5.\n1.ShowtheGridfileafterinserting eachofthesepoints,intheordertheyarelisted:(),9,\n10,7,8,4,and5.\n2.Assumethatdeletions arehandled bysirnplyrernoving thedeletedpoints,withnoat\u00ad\nterl1pttomergeemptyorunderfull pages.Canyousuggestasirupleconcurrency control\nschemeforGridfiles?\n3.DiscusstheuseofGridfilestohandleregiondata.\nExercise 28.5Answer eachofthefollowing questions independently withrespecttotheR\ntreeshowninFigure28.6.(Thatis,don'tconsider theinsertions corresponding toother\nquestions whenanswering agivenquestion.)\n1.Showthebounding boxofanewobjectthatcanbeinserted intoR4butnotinton:3.\n2.Showthebounding boxofanewobjectthatiscontained inbothRlandR6butis\ninserted intoR6.\n3.Showthebounding boxofanewobjectthatiscontained inbothRlandR6andis\ninserted intoRl.Inwhichleafnodeisthisobjectplaced?\n4.Showthebounding boxofanewobjectthatcouldbeinserted intoeitherR4orR5but\nisplacedinR5basedontheprinciple ofleastexpansion ofthebounding boxarea.", "1021": "8pat'ialDatal\\lanagernent 991\n5.GivenanexarIlple ofanobjectsuchthatsearching fortheobjecttakesustoboththe\nRlandR2subtrees.\n6.GiveaneXCllnple querythattakesustonodesRaandR5.(Explain ifthereisnosuch\nquery.)\n7.Giveanexanlple querythattakesustonodesR3andR4butnottoR5.(Explain if\nthereisnosuchquery.)\n8.GiveaneXaInple querythattakesustonodesRaandR5butnottoR4.(Explain if\nthereisnosuchquery.)\nBIBLIOGRAPHIC NOTES\nSeveralmultidimensional indexing techniques havebeenproposed. TheseincludeBangfiles\n[286],Gridfiles[565],hBtrees[491]'KDBtrees[630],Pyrarnid trees[80]Quadtrees[649],\nRtrees[350],R*trees[72],R+trees,theTVtree,andtheVAfile[767].[322]discusses\nhowtosearchRtreesforregionsdefinedbylinearconstraints. Severalvariations ofthese,\nandseveralotherdistinct techniques, havealsobeenproposed; Samet's text[650]dealswith\nmanyofthem.Agoodrecentsurveyis[294].\nTheuseofHilbertcurvesforlinearizing multidimensional dataisproposed in[263].[118]isan\nearlypaperdiscussing spatialjoins.Hellerstein, Naughton, andPfefferpropose ageneralized\ntreeindexthatcanbespecialized toobtainmanyofthespecifictreeindexes mentioned\nearlier[376].Concurrency controlandrecovery issuesforthisgeneralized indexarediscussed\nin[447].Hellerstein, Koutsoupias, andPapadinlitriou discussthecomplexity ofindexing\nschemes [377],inparticular rangequeries, andBeyereta1.discusstheproblerlls arisingwith\nhighdimensionality [93].Faloutsos provides agoodoverview ofhowtosearchmultirnedia\ndatabases bycontent [258].Arecenttrendistowards spatiotemporal applications, suchas\ntracking rnovingobjects[782].", "1022": "29\nFURTHER\n REi\\DING\n..Whatisnext?\n..Keyconcepts: TPmonitors, real-tirne transactions; dataintegra\u00ad\ntion;mobiledata;mainmeInory databa.~es; multimedia databases;\nGIS;tenlporal databases; Bioinformatics; infonnation visualization\nThisisnottheend.Itisnoteventhebeginning oftheend.Butitis,perhaps,\ntheendofthebeginning.\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-\u00b7Winston Churchill\nInthisbook,weconcentrated onrelational databa.'3e systerus anddiscussed\nseveralfundaruental issuesindetail.However, ourcoverage ofthedatabase\narea,andindeedeventherelational database H,rea,isfarfromexhaustive. In\nthischapter, welookbrieflyatseveraltopicsvvedidnotcover,withthegoalof\ngivingthereaderSOUleperspective andindicating directions forfurtherstudy.\nvVebeginwithadiscussion ofadvanced transaction processing concepts in\nSection 29.1.vVediscussintegrated accesstodatafrOUlrnultiple databases in\nSection29.2andtouchonInobileapplications thatconnecttodatabases inSec\u00ad\ntion29.3.\\Veconsider theirnpactofincreasingly largerrnainInenlory sizesin\nSection 29.4.\\Vediscussrnultirnedia databctses inSection 29.5,geographic in\u00ad\nforrnation systerns inSection 29.G,tcrnporaJ datainSection 29.7,andsequence\ndatainSection29.8.\\Veconclude withalookatinforrnation visualization in\nS\u00b7,t\u00b7.')0C)k.ec,Ion....J\u2022\u2022'.\n992", "1023": "FUTthcr-Read'ing 99a\nT'heapplications coveredinthischapterpushthelirnitsofcurrently available\ndatabase technology anddrivethedeveloprnent ofnewtechniques. Asevenour\nbriefcoverage indicates, Innch\\vorkliesaheadforthedatabase field!\n29.1ADVANCED TRANSACTION PROCESSING\nTheconceptofatransaction haswideapplicability foravarietyofdistributed\ncOlnputing tasks,suchasairlinereservations, inventory rnanagernent, andelec\u00ad\ntronicCOlnnlerce.\n29.1.1Transaction Processing Monitors\nCornplex applications areoftenbuiltontopofseveralresource managers,\nsuchasdatabase managernent systenls, operating systerns, userinterfaces, and\nmessaging software. Atransaction processing (TP)monitor gluestogether\ntheservicesofseveralresource managers andprovides application programmers\nauniform interface fordeveloping transactions withtheACIDproperties. In\naddition toproviding auniform interface totheservices ofdifl'erent resource\nillanagers, aTPrnonitor alsoroutestransactions totheappropriate resource\nrnanagers. Finally, aTPmonitor ensuresthatanapplication behaves asa\ntransaction byimplernenting concurrency control, logging, andrecovery func\u00ad\ntionsandbyexploiting thetransaction processing capabilities oftheunderlying\nresource rnanagers.\nTPrnonitors areusedinenvironments whereapplications requireadvanced\nfeatures, suchasaccesstornultiple resource lllanagers, sophisticated request\nrouting (alsocalledworkflow management); assigning priorities totrans\u00ad\nactionsanddoingpriority-based load-balancing acrossservers,andsoon.A\nDBlVISprovides lllanyofthefunctions supported byaTPmonitor inaddition\ntoprocessing queriesanddatabase updates efficiently. ADBMSisappropri\u00ad\nateforenvironrnents wherethewealthoftransaction rnanagernent capabilities\nprovided byaTPrnonitor isnotnecessary and,inparticular, \\vhereveryhigh\nscalability (withrespecttotransaction processing activity) andinteroperability\narenotessential.\nThetransaction processing capabilities ofdatabase systerlls areirnproving con\u00ad\ntinually. ForeKarnple, rnanyvendorsofferdistributed DBMSproducts todayin\nwhichatransaction canexecuteacrossseveralresource rnanagers, eachofwhich\nisaDBMS.Currently, alltheDBlVISsInustbefrornthesaInevendor;however,\nastransaction-oriented services frorndifferent vendors becom.ernorestandard\u00ad\nized,distributed, heterogeneous DBlV'ISs shouldbecorneavailable. Eventually,\nperhaps, thefunctions ofcurrentrrprnonitors willalsobeavailable inrnany", "1024": "994\nDBIV1Ss; fornow,'I'Prnonitors provide essential infrastructure forhigh-end\ntransaction processing ellviroIllnents.\n29.1.2NewTransaction Models\nConsider anapplication suchascornputer-aided design,inwhichusersretrieve\nlargedesignobjectsfroInadatabase andinteractively analyzeand1110difythenl.\nEachtransaction takesalongtiIne---Ininutes orevenhours,whereas theTPC\nbench1nark transactions takeunderamillisecond-----and holdinglocksthislong\naffectsperfonnance. F\\uther, ifacrashoccurs,undoing anactivetransaction\ncOlllpletely isunsatisfactory, sinceconsiderable usereffortmaybelost.Ideally,\nwewanttorestore1nostoftheactionsofanactivetransaction andreSlune\nexecution. Finally, ifseveralusersareconcurrently developing adesign,they\nnlaywanttoseechanges beingrnadebyotherswithout waitinguntiltheend\nofthetransaction thatchangesthedata.\nToaddress theneedsoflong-duration activities, severalrefinements ofthe\ntransaction concept havebeenproposed. Thebasicideaistotreateachtrans\u00ad\nactionasacollection ofrelatedsubtransactions. Subtransactions canacquire\nlocks,andthechangesmadebyasubtransaction becomevisibletoothertrans\u00ad\nactionsafterthesubtransaction ends(andbeforethenlaintransaction ofwhich\nitisapartcommits). Inmultilevel transactions, locksheldbyasubtrans\u00ad\nactionarereleased whenthesubtransaction ends.Innestedtransactions,\nlocksheldbyasubtransaction areassigned totheparent(sub)transaction when\nthesubtransaction ends.Theserefinements tothetransaction concept havea\nsignificant effectonconcurrency controlandrecovery algorithnls.\n29.1.3Real-Time DBMSs\nSOllIetransactions 1nustbeexecuted withinauser-specified deadline. Ahard\ndeadline Ineansthevalueofthetransaction iszeroafterthedeadline. For\nexa1nple, inaDBMSdesigned torecordbetsonhorseraces,atransaction\nplacingabetisworthless oncetheracebegins. Suchatransaction should\nnotbeexecuted; thebetshouldnotbeplaced. Asoftdeadline rIlcal1Sthe\nvalueofthetransaction decrccl..'3cs afterthedeadline, eventually goingtozero.\n:Forexarnple, inaDB1rlSdesigned tornonitor S(Hneactivity (e.g.,ac01nplex\nreactor), atransaction thatlooksupthecurrentreadingofasensorrnustbe\nexecuted withinasl10rttiIne,sa.y,onesecond.Thelongerittakestoexecute\nthetra.nsaction, thelessusefulthereadingbecorn.es. Inareal-tirne DBl\\1S,the\ngoalisto1naxirnize thevalueofexecuted transactions, andtheDBlVIS 111Ust\nprioritize transactions, takingtheirdeadlines intoaccount.", "1025": "[furtherIleading\n29.2DATAINTEGRATION995\n$\nAsdatab&ses proliferate, userswanttoaccessdatafronlrnorethanonesource.\nForexaulple, ifseveraltravelagentsrnarkettheirtravelpackages through the\nWeb,custorners wouldliketocornpare packages fromdifferent agents.Arnore\ntraditional exaruple isthatlargeorganizations typically haveseveraldatabases,\ncreated(andrnaintained) bydifferent divisions, suchasSales,Production, and\nPurchasing. \\i\\Thilethesedatabases containmuchcommon inforrnation, deter\u00ad\nminingtheexactrelationship between tablesindifferent databases canbea\ncomplicated problem. Forexample, pricesinonedatabase mightbeindol\u00ad\nlarsperdozenitems,whilepricesinanotherdatabase mightbeindollarsper\nitelll.Thedevelopruent ofXMLDTDs(seeSection7.4.3)offersthepronlise\nthatsuchsernantic rnisrnatches canbeavoidedifallpartiesconforrll toasingle\nstandard DTD.However, therearemanylegacydatabases andrllostdornains\nstilldonothaveagreed-upon DTDs;theproblem ofselllantic rnismatches will\nbeencountered frequently fortheforeseeable future.\nSemantic mismatches canberesolved andhiddenfronlusersbydefining rela\u00ad\ntionalviewsoverthetablesfromthetwodatabases. Defining acollection of\nviewstogive agroupofusersauniform presentation ofrelevant datafrorn\nrnultiple databases iscalledsemantic integration. Creating viewsthatmask\nsernantic mismatches inanaturalmannerisadifficulttaskandhasbeenwidely\nstudied. Inpractice, thetaskisrlladeharderbecause thescheruas ofexisting\ndatabases areoftenpoorlydocumented; hence,itisdifficulttoevenunderstand\nthemeaning ofrowsinexisting tables,letalonedefineunifying viewsacross\nseveraltablesfrorlldifferent databases.\nIftheunderlying databases arernanaged usingdifl\"erent DBlVISs, asisoften\nthecase,SaInekindof'middleware' rnustbeusedtoevaluate queriesoverthe\nintegrating views,retrieving dataatqueryexecution tirnebyusingprotocols\nsuchasOpenDatabase Connectivity (ODBC) togiveeachunderlying databa ..'3c\nauniforrn interface, asdiscussed inChapter 6.Alternatively, theintegrating\nviewscanbenlaterialized andstoredinadatawarehouse, asdiscussed in\nChapter 25.Queriescanthenbeexecuted overthewarehoused datawithout\naccessing thesourceDBlVISsatrun-tirne.\n29.3MOBILE DATABASES\nTheavailability ofportable coruputers andwirelesseorrnnunications hascreated\nanevvbreedofnornadic database users.At onelevel,theseusersaresirnply\naccessing adataba.>se through anetwork, whichissilnilartodistributed DBMSs.\nAtanother level,thenetwork a:swellasdataandusercharacteristics nowhave\nseveralnovelproperties, Wllichaffectb<l..sicassurnptioI1S inrnanycornponents", "1026": "996 (;HAPTER 49\nofaDB~fS~ including thequery engine~transaction rnanager, andrecovery\nInanager:\n\u20221Isersareconnected through a\\vireless linkwhoseband,vidth is10times\nlessthanEthernet and100tiIIleslessthanATMnetworks. COIIul1unication\ncostsaretherefore significantly higherinproportion toI/OandCPUcosts.\n11Users'locations constantly change,andInobilecorllputers havealiInited\nbattery life.'Therefore, thetruecOllullunication costsreflectconnection\ntiIneandbatteryusageinaddition tobytestransferred andchangecon\u00ad\nstantlydepending onlocation. Dataisfrequently replicated tolninirnize\nthecostofaccessing itfromdifferent locations.\n\u2022Asausermovesaround,datacouldbeaccessed froInmultiple database\nserverswithinasingletransaction. Thelikelihood oflosingconnections\nisalsolnnchgreaterthaninatraditional network. Centralized transac\u00ad\ntionrnanagenlent maytherefore beirnpractical, especially ifsornedatais\nresident atthemobilecomputers. Wemayinfacthavetogiveupon\nACIDtransactions anddevelopalternative notionsofconsistency foruser\nprograms.\n29.4MAINMEMORY DATABASES\nThepriceofrnainllleInory isnowlowenoughthatwecanbuyenoughmain\nrnernory toholdtheentiredatabase formanyapplications; with64-bitad\u00ad\ndressing, rnodernCPUsalsohaveverylargeaddressspaces.Sornecommercial\nsysterns nowhaveseveralgigabytes ofrrlainIneInory. ThisshiftproInpts areex\u00ad\narnination ofscnnebasicDBMSdesigndecisions, sincediskaccesses nolonger\ndorninate processing tilueforaInemory-resident database:\n\u2022lVlainnlerllory doesnotsurvivesystelllcrashes, andsowestillhaveto\niluplernent loggingandrecovery toensuretransaction atolnicity anddura\u00ad\nbility.Logrecordsrnustbewrittentostablestorageatconlluittirne,and\nthisprocesscouldbecorneabottleneck. Torninirnize thisproblern, rather\nthancomnlit eachtransaction ,1Sitconlpletes, wecancollectcOlupleted\ntransactions andcornlnit theIuinbatches; thisiscalledgroupcommit.\nRecovery algorithrns canalsobeoptirnized, sincepagesrarelyhavetobe\nvvrrittenouttorrlakeroornforotherpages.\n\u2022Theirnplerrlentation ofin-lnelnory operations hastobeoptinlized carefully,\nsincediskaccesses arenolongerthelirniting factorforperforrnance.\n\u2022 Ane,vcriterion llUlstbeconsidered whileoptirnizing queries,thealllount\nofspacerequired toexecuteaplan.ItisiInportant torninirnize thespace", "1027": "FUTther llearling 991\noverhead because exceeding available physical Incrnory wouldleadtoswap\u00ad\npingpagestodisk(through theoperating systcrIl '8virtualrncillory ruech\u00ad\nanisIIls), greatlyslo\\vingdo\\vnexecution.\n\u2022Page-oriented datastructures becolue lessiInportant (sincepagesare110\nlongertheunitofdataretrieval), andclustering isnotilnportant (since\nthecostofaccessing anyregionofIIlainrneIIlory isuniforrn).\n29.5MULTIMEDIA DATABASES\nInanobject-relational DB~1S,userscandefineADTs\\vithappropriate rneth\u00ad\nods,whichisanirnprovement overanRDBI\\1S. Nonetheless, supporting just\nADTsfallsshortofwhatisrequired todealwithverylargecollections of\nmultimedia objects, including audio,irnages, freetext,textnlarkedupin\nHTMLorvariants, sequence data,andvideos.Illustrative applications include\nNASA's EGSproject, whichaimstocreatearepository ofsatellite irnagery;\ntheJIUlnanGenorne project, whichiscreating databases ofgeneticinforrnation\nsuchasGenBank; andNSF/DARPA's DigitalLibraries project, whichaiInsto\nputentirelibraries intodatabase systems andmakethelllaccessible through\ncOlnputer networks. Industrial applications, suchascollaborative developnlent\nofengineering designs, alsorequiremultimedia database rnanagernent andare\nbeingaddressed byseveralvendors.\nWeoutlinesomeapplications andchallenges inthisarea:\n\u2022Content-Based Retrieval: Users111Ustbeabletospecifyselection concli\u00ad\ntionsbasedonthecontents ofrllultilnedia objects. Forexanlplc, userslllay\nsearchforinlagesusingqueriessuchas\"Findallirnagesthataresirnilarto\nthisimage\"and\"Findallinlagesthatcontainatlea\"tthreeairplanes.\" As\ninulgesareinserted intothedatabase, theDBMSlllUStanalyzethernand\nautomatically eJ:tractfeaturesthathelpanswersuchcontent-based queries.\n1~hisinforrnation canthenbeusedtosearchforinlagesthatsatisfyagiven\nquery, ae;,;discussed inChapter 28.Asanother exarnple, userswouldliketo\nsearchfordocurnents ofinterestusinginfonnation retrieval techniques and\nkeyword searches. Vendors arernovingtowardincorporating suchtech\u00ad\nniquesintoDBMSproducts. ItisstillnotclearhowthesedOlnain-specific\nretrieval andsearchtechniques canbecorubined effectively \\vithtraditional\nDBIvISquei-ies. R,csearch intoabstract datatypesand()R,DBMS query\nprocessing hasprovided astarting point,butlnoreworkisneeded.\nIIManaging Repositories ofLargeObjects: Traditionally, DBlVISshave\nconcentrated ontablesthatcontainalargenurnberoftuples,eachof\\vhich\nisrelatively srnaii.()nceIllultilnedia objectssuchasirnages,soundclips,\nandvideosarestoredinadatabase, individual objectsofverylargesize", "1028": "998 CHAPTER 39\nhavetobehandled efficiently. Forexample, compression techniques lllUSt\nbecarefully integrated intotheDBIvlSenvironrnent. Asanotherexarnple,\ndistributed DBMSs HUlstdevelop techniques toefficiently retrieve such\nobjects. Retrieval ofr11ultir11edia objectsinadistributed systernhasbeen\naddressed inliInitedcontexts, suchasclient-server systerns, butingeneral\nreulains adifficultprobleul.\n\u2022Video-On-Denland: lVlanycornpanies wanttoprovidevideo-on-denland\nservicesthatenableuserstodialintoaserverandrequestaparticular\nvideo.ThevideoInustthenbedelivered totheuser'sCOI11puter inrealtime,\nreliablyandinexpensively. Ideally,usersnlustbeabletoperform farniliar\nVCRfunctions suchasfast-forward andreverse. Fronladatabase perspec\u00ad\ntive,theserverhastocontend withspecialized real-time constraints; video\ndelivery ratesmustbesynchronized attheserverandattheclient,taking\nintoaccountthecharacteristics ofthecommunication network.\n29.6GEOGRAPHIC INFORMATION SYSTEMS\nGeographic Information Systems (GIS)containspatialinformation about\ncities,states,countries, streets,highways, lakes,rivers,andothergeographical\nfeatures andsupport applications tocombine suchspatialinformation with\nnon-spatial data.Asdiscussed inChapter 28,spatialdataisstoredineither\nrasterorvectorformats. Inaddition, thereisoftenaterTIporal dirnension, a'S\nwhenwemeasure rainfallatseverallocations overtime.Animportant issue\nwithspatialdatasets ishowtointegrate datafroInrnultiple sources, sinceeach\nsourcernayrecorddatausingadifferent coordinate systemtoidentifylocations.\nNowletusconsider howspatialdatainaGISisanalyzed. Spatialinforma\u00ad\ntionislllostnaturally thought ofasbeingoverlaid onmaps.rTypicalqueries\ninclude\"Whatcitieslieon1-94between Madison andChicago?\" and\"What\nistheshortest routefromMadison toSt.Louis?\" Thesekinds of queriescan\nbeaddressed usingthetechniques discussed inChapter 28.Anemerging ap\u00ad\nplication isin-vehicle navigation aids.WithGlobalPositioning Systcrn(CPS)\ntechnology, acar'slocation canbepinpointed, andbyaccessing adataba.se of\nlocalrnaps,adrivercanreceivedirections froInhisorhercurrentlocation toa\ndesireddestination; thisapplication alsoinvolves rnobiledataba..'3e access!\nInaddition, manyapplications involveinterpolating rneasurernents atcertain\nlocations acrossanentireregiontoobtainarnodelandcornbining overlapping\nrnodels. Forexarnple, if\\-vehaverneasured rainfallatcertainlocations, wecan\nusetheTriangulated Irregular Network (TIN)approach totriangulate\ntheregion,withtheloeations atwhichwehavemeasurcrnents beingthever\u00ad\nticesofthetriangles. Then,weusesorneforrnofinterpolation toestirnate", "1029": "}tuTther Reading 999\ntherainfallatpointswithintriangles. Interpolation, triangulation, Il1apover\u00ad\nlays,visualization ofspatialdata,andrnanyotherdornain-specific operations\naresupported inGISproducts sucha,,'3ESRI Systerlls' ARC-Info. l'he1'efore,\n\\vhilespatialqueryprocessing techniques asdiscussed inChapter 28arean\nirnportant partofaGISproduct, considerable additional functionality rnustbe\nincorporated aswell.Howbesttoextend0ltDB1.1Ssystenls withthisaddi\u00ad\ntionalfunctionality isanirnportant problenl yettoberesolved. Agreeing on\nstandards fordatarepresentation forrnats andcoordinate systeuls isanother\nlTIajorchallenge facingthefield.\n29.7TEMPORAL DATABASES\nConsider thefollowing query:\"Findthelongestinterval inwhichthesame\npersonmanaged twodifferent departlTIents.\" Manyissuesareassociated with\nrepresenting telnporal dataandsupporting suchqueries. Weneedtobeableto\ndistinguish thetimesduringwhichsOlnething istrueintherealworld(valid\ntime)fromthetimesitistrueinthedatabase (transaction time). The\nperiodduringwhichagivenpersonrnanaged adepartrnent canbeindicated by\ntwofieldsfromandto,andqueriesmustreasonabouttimeintervals. further,\ntemporal queriesrequiretheDBMStobeawareoftheanolTIalies associated\nwithcalendars (suchasleapyears).\n29.8BIOLOGICAL DATABASES\nBiolnfornlatics isanemerging fieldattheintersection ofBiologyandCOHlputer\nScience. FraInadatabase standpoint, therapidlygrowingdatainthisarea h~LS\n(atlea..'3t)twointeresting characteristics. First,alotoflooselystr'UchLTcd data\niswidelyexchanged, leadingtointerestinintegration ofsuchdata.Thisha\",,,\nrnotivated SOlneoftheresearch intheareaofXMLrepositories.\nThesecondinteresting featureissequence data.DNAsequences arebeing\ngenerated atarapidpacebythebiological cOllnnunity. Thefieldofbiological\ninforrnation rnanagernent andanalysis ha\"sbecorneverypopularinrecentyears,\ncalledbioinformatics. Biological data,suchasDNAsequence data,charac\u00ad\nterizedbycornplex structure andnurnerous relationships arnongdataelernents,\nrllanyoverlapping andincoruplete orerroneous datafragrnents (because experi\u00ad\nInentally collected datafroIllseveralgroups,oftenworking onrelatedproblelIls,\nisstoredinthedataba\"ses), aneedtofrequently changethedataba ..se8chcrna\nitselfasne\u00a5lkindsofrelationships inthedataarediscovered, andtheneedto\nrnaintain severalversions ofdataforarchivalandreference.", "1030": "IOOO CHAPTER ~g\n29.9INFORMATION VISUALIZATION\nAscoruputors becoule fasterandrnainrnornory cheaper, itbeconies increa ...~\u00ad\ninglyfeasibletocreatevisualpresentations ofdata,ratherthanjusttext-b&'3ed\nreports. Datavisualization rnakesiteasierforuserstounderstand theinfor\u00ad\nInationinlargecornplex data..'3ets. Thechallenge hereistolTlakeiteasyfor\nuserstodevelopvisualpresentations oftheirdataandinteractively querysuch\npresentations. Although anurnber ofdatavisualization toolsareavailable,\nefficient visualization oflargedatasets presents Inanychallenges.\nTheneedforvisualization isespecially irnportant inthecontextofdecision\nsupport; whenconfronted withlargequantities ofhigh-dhnensional dataand\nvariouskinds ofdatasUffirnaries produced byusinganalysis toolssuchasSQL,\nOLAP,anddatall1iningalgorithrns, theinforrnation canbeoverwhehning.\nVisualizing thedata,together withthegenerated sumrnaries, canbeapowerful\nwaytosiftthrough thisinfonnation andspotinteresting trendsorpatterns.\nThehurnaneye,afterall,isverygoodatfindingpatterns. Agoodframework\nfordatamininglTIUstcombine analytic toolstoprocessdataandbringout\nlatentanolllalies ortrendswithavisualization environment inwhichauser\ncannoticethesepatterns andinteractively drilldowntotheoriginaldatafor\nfurtheranalysis.\n29.10SUMMARY\n'rhedatabase areacontinues togrowvigorously, interrnsofbothtechnology\nandapplications. Thefundarnental rea...,onforthisgrowthisthattheamount\nofinforrnation storE~dandprocessed usingcomputers isgrowing rapidly. Re\u00ad\ngardless ofthenatureofthedataandtheintended applications, usersneed\ndatabase rnanagernent systemsandtheirservices (concurrent access,crashre\u00ad\ncovery, ea...,yandefficient querying, etc.)a'3thevohllueofdataincreases. As\ntherangeofapplications isbroadened, however, SOIlICshortcornings ofcurrent\nDBMSs becoIneseriouslilTlitations. Theseproblerus arebeingactively studied\ninthedatabase research cornrnunity.\n'Thecoverage inthisbookprovides anintroduction, butisnotintended tocover\nallaspectsofdatab<:\"k'3e systerns. Anlplernaterial isavailable forfurtherstudy,\nasthischapterHlustrates, andwehopethatthereaderisrnotivated topursue\ntheleadsinthebibliography. Bonvoyage!", "1031": "FU7theTRecui'ing\nBffiLIOGRAPHIC NOTES1001\n[338]contains aconlprehensive treatnlent ofall&<spectsoftransaction processing. See[241J\nforseveralpapersthatdescribe newtransaction modelsfornontraditional applications such\nasCAD/CATv1. [1,577,696,711,761] areSaIneoftheInanypapersonreal-tirne databases.\nDetenllining whichentities arethesameacrossdifferent databases isadifficult probleIn;\nitisanexample ofasemantic lllisrnatch. Resolving suchnlismatches h3..\"beenaddressed\ninrIlanypapers, including [424,476,641,663].[389]isanoverview oftheoretical workin\nthisarea.Alsoseethebibliographic notesforChapter 22forreferences torelatedworkon\nrnultidatabases, andseethenotesforChapter 2forreferences toworkonviewintegration.\n[304]isanearlypaperonmainmernory databa..ses. [102,406]describe theDalirnainrllerllory\nstoragemanager. [421]surveys visualization idiomsdesigned forlargedatabases, and[342]\ndiscusses visualization fordatamining.\nVisualization systerns fordatabases includeDataSpace [592],DEVise [489],IVEE[27],the\nMineset suitefromSGI,Tioga[31],andVisDB[420].Inaddition, anumber ofgeneraltools\nareavailable fordatavisualization.\nQuerying textrepositories hasbeenstudiedextensively ininformation retrieval; see[626]for\narecentsurvey. Thistopichasgenerated considerable interest inthedatabase cOITnnunity\nrecently because ofthewidespread useoftheWeb,whichcontains manytextsources. In\nparticular, HTMLdOCUITlents havesonlestructure ifweinterpret linksasedgesinagraph.\nSuchdocuments areexamples ofselllistructured data;see[2]foragoodoverview. Recent\npapersonqueriesovertheWebinclude [2,445,527,564].\nSee[576]forasurveyofmultimedia issuesindatabase management. Therehasbeenmuch\nrecentinterestindatabase issuesinamobilecomputing environment; forexample, [387,398].\nSee[395]foracollection ofarticlesonthissubject. [728]contains severalarticlesthatcover\nallaspects oftelnporal databases. Theuseofconstraints indatabases hasbeenactively\ninvestigated inrecentyears;[416]isagoodoverview. Geographic Infonnation SysteIT1S have\nalsobeenstudied extensively; [586]describes theParadise systern, which isnotable forits\nscalability.\n'Thebook[794]contains detailed discussions ofternporal databases (including theTSQL2\nlanguage, whichisinfluencing theSQLstandard), spatialandnnIltimedia databases, and\nuncertainty indataba.ses.", "1032": "30\nTHEMINIBASE SOFTWARE\nPractice isthebestofallinstructors.\n-Publius Syrus,42B.C.\nMinibase isasmallrelational DBMS,together withasuiteofvisualization\ntools,thathasbeendeveloped forusewiththisbook.Whilethebookrnakes\nnodirectreference tothesoftware andcanbeusedindependently, Minibase\noffersinstructors anopportunity todesignavarietyofhands-on &'3signments,\nwithorwithout programming. Toseeanonlinedescription ofthesoftware,\nvisitthisURL:\nhttp://www.cs.wisc.edu/-dbbook/minibase.html\nThesoftware isavailable freelythrough ftp.Byregistering themselves asusers\nattheUR,Lforthebook,instructors canreceiveprompt notification ofany\nInajorbugreportsandfixes.Sarnpleprojectassignments, whichelaborate on\nSOIneofthebrieflysketched ideasintheproject-basedexercises attheendof\nchapters, canbeseenat\nhttp://www.cs.wisc.edu/-dbbook/minihwk.html\nInstructors shouldconsider making sillalllllodifications toeach::t..ssignlnent\ntodiscourage undesin1ble 'codereuse'bystudents; assignrnent handouts for\u00ad\nrnatted usingLatexareavailable byftp.Instructors canalsoobtainsolu\u00ad\ntionstotheseassiglunents bycontacting theauthors (raghu@cs. wise.edu,\njohannes@cs. cornell. edu).\n30.1WHATISAVAILABLE\nNIiniba.se isintcllded tosnpplCIllent theuseofacornrnercial DBlVfSsuchas\n()racleorSybaseincourseprojects, nottoreplacetheIn.\\VhileacornlnerciaJ\nDBl\\r1.SisidealforSC:~Lassignrnents, itdoesnothelpstudents understand hovv\ntheDBNISw'orks.IVlinibase isintended toaddressthelatterissue;thesubset\nofS(~Lthatitsupports isintentionally kept8rnall,andstudents shouldalso\nbeaskedtouseaconnnercialDBIVlS forwritingSQLqueriesandprograrns.\n1002", "1033": "TheN!inibase Soft'wo/re 1003\nt\n:NIinibaseisprovided onanas-isbasiswithno\\varrantics orrestrictions for\neducational orpersonal use.Itincludes thefol1o\\ving:\n\u2022Codeforasl11al1single-user relational DB1VIS,including aparserandquery\noptirnizer forasubsetofSQL,andcOlnponents designed tobe(re)written\nbystudents asprojectassignrnents: heapfiles,buffer1nanager, B+trees,\nBorting,andjo'ins.\n30.2OVERVIEW OFMINIBASE ASSIGNMENTS\nSeveralassignrnents involving theuseofl\\!linibase aredescribed here.Eachof\nthesehasbeentestedinacoursealready, butthedetailsofhowl\\!linibase is\nsetupmightvaryatyourschool,soyou111ayhavetornodifythea..'3Sigluncnts\naccordingly. Ifyouplantousetheseassignrnents, youareadvisedtodownload\nandtrythernatyoursitewellinadvance ofhanding therntostudents. We\nhavedoneourbesttotestanddocurnent theseassignrnents andtheMinibase\nsoftware, butbugsundoubtedly persist. PleasereportbugsatthisURL:\nhttp://www.cs.wisc.edu/-dbbook/minibase.comments.html\nWehopeuserswillcontribute bugfixes,additional projectassignments, and\nextensions toMinibase. Thesewillbernadepublicly available through the\nMinibase site,together withpointers totheauthors.\nInseveralassignrnents, students areaskedtorewriteacornponent ofMinibase.\nThebookprovides thenecessary background foralltheseassignrnents, and\nthecl-'3signrnent handout provides additional systern-Ievel details. Theonline\nI-rrMLdocurnentation provides anovervic\\v ofthesoftv.rare, inparticular the\ncorllponent interfaces, andcanbedownloaded andinstalled ateachschoolthat\nusesMinibcl-'3e. ~rheprojects thatfollowshouldbeassigned aftercovering the\nrelevctnt rnaterial fro1lltheindicated chapter:\nIIBufferManager (Chapter 9):Students c\\,regivencodeforthelayer\nthat rnanag(~s spaceondiskandsupports theconcept ofpages\\vithpage\nids.~rheyarea\"skedtoi1nplelnent abufferlnanager thatbringsrequested\npagesintoInelnory iftheyan.'.notalready there.()nevariation ofthis\nassignrnent couldusediffererlt repla,ceruent policies. Students areaskedto\naSSlllneasingle-user enVir0l11nent, vvithnoconcurrency controlorrecovery\n1nanagclnent.\n11IIIHFPage(Chapter 9):Students rllust\\vrite codethatrnanages records\nonapageusing (1,slot-directory pa,geforrnattokeeptrackoftherecords.\nPossible variants includefixed-length versusvariable-length recordsand\nothervvaystokeeptrackofrecordsonapagf'..", "1034": "1004 CHAPTER 30\n\u2022HeapFiles(Chapter 9):{,IsingtheHFpageandbuffermanager code,\nstludents areaskedtoinlplernent alayerthatsupports theabstraction of\nfilesofunordered pages,thatis,heapfiles.\n\u2022B+Trees(Chapter 10):Thisisoneofthelnorecornplex assignrnents.\nStudents havetoimplernent apageclassthatInaintains recordsinsorted\nordervvithinapageandiUlplernent theB+treeindexstructure toiInposea\nsortorderacrossseveralleaf-level pages.Indexesstore(key,record-pointer)\npairsinleafpages,anddatarecordsarestoredseparately (inheapfiles).\nShnilarassignments caneasilybecreatedforLinearHashing orExtendible\nIIa.'1hing indexstructures.\n\u2022External sorting (Chapter 13):Building onthebuffermanager and\nheapfilelayers,students areaskedtoirnplelnent external 111erge-sort. The\nenlphasis isonrninimizing I/Oratherthanonthein-melnory sortusedto\ncreatesortedruns.\n\u2022Sort-Merge Join(Chapter 14):Building uponthecodeforexternal\nsorting, students areaskedtoimplelnent thesort-merge joinalgorithm.\nThisassignment canbeeasilylnodified tocreateassignments thatinvolve\notherjoinalgorithms.\n\u2022IndexNested-Loop Join(Chapter 14):rrhisassignrnent issilnilarto\nthesort-merge joinassignruent, butreliesonB+tree(orotherindexing)\ncode,insteadofsortingcode.\n30.3ACKNOWLEDGMENTS\nTheMinibase software wasinpiredbyMinirel, asInallrelational DBMSde\u00ad\nveloped byDavidDeWittforinstructional use.l\\rlinibase wa'Sdeveloped bya\nlargenUlllberofdedicated students overalongtilne,andthedesignwasguided\nbyMikeCareyandR.Ralnakrishnan. Seetheonlinedocurnentation formore\nonrvlinibase's history.", "1035": "REFERENCES\n[1]R.Abbottand,H.Garcia-Nlolina. Scheduling real-titne transactions: Aperfonnance\nevaluation. ACNfTransactions onDatabase SY8te7ns: 17(3),1992.\n[2]S.Abiteboul. Querying serni-structured data.InIntl.Conf.onDatabase Theory, 1997.\n[~3]S.Abiteboul, R.Hull,andV.Vianu.Fo'U'ndations ofDatabases. Addison- vVesley, 1995.\n[4]S.Abiteboul andP.Kanellakis. Objectidentity asaquerylanguage prirnitive. InProc.\nACMSIGAI0D Conf.ontheNIanagerrtent ofData,1989.\n[5]S.Abiteboul andV.Vianu.Regularpathquerieswithconstraints. InProc.ACMSymp.\nonPrinciples ofDatabase Systems, 1997.\n[6]A.Aboulnaga, A.R.Almneldeen, andJ.F.Naughton. Estimating theselectivity of\nXMLpathexpressions forInternet scaleapplications. InProceedings ofVLDB,2001.\n[7]S.Acharya, P.B.Gibbons, V.Poosala, andS.Ramaswamy. TheAquaapproxinu\\te\nqueryanswering system. InProc.AClvISIGMOD Conf.ontheManagem,ent ofData,\npages574-576. ACl\\!IPress,1999.\n[8]S.Acharya, P.B.Gibbons, V.Poosala, andS.Ramaswamy. Joinsynopses forapprox\u00ad\nirnatequeryanswering. InProc.ACMSIGNJOD Conf.onthe]l,1anagernent ofData,\npages 275~286. ACMPress,1999.\n[9]K.Achyutuni, E.Omiecinski, andS.Navathe. Twotechniques foron-lineindexrnod\u00ad\nification insharednothing parallel databases. InProc.ACMSIGMOD Conf.onthe\nJvIanagement ofData,1996.\n[10]S.Adali,K.Candan, Y.Papakonstantinou, andV.Subrahrnanian. Querycachingand\noptirnization indistributed rnediator systems. InPr\u00b7oc.ACMSIGlvIOD Conf.onthe\nNIanagernent ofData,1996.\n[11].NtE.Adiba. Derived relations: AunifiedrnechanisHl forviews,snapshots anddis\u00ad\ntributed data.InProc.Intl.Conf.onVeryLa\u00b7rgeDatabases, 1981.\n[12]S.Agarwal: R.Agrawal, P.Deshpande, A.Gupta,J.Naughton, R.Rmnakrishnan, and\nS.Sarawagi. Onthecornputation ofInultidinlCnsionaJ aggregates. InProc.Intl.Conf.\nonVeryLargeDatabases, 1996.\n[la]R.C.Agarwal, C. C.Aggarwal, andV. V.V.Prasad. Atreeprojection algorithrn\nforgeneration offrequent iternsets.]()'unl,alofParallel andDistributed Cornputing,\nG1U~):~~50\u00b7\u00b7-\"371: 2001.\n[14]D. Agntwal andA.ElAbbadi. Thegeneralized treequorurn protocol: Anefficient\napproach forrnanaging replicated data.ACA1Trn'nsactions onDatabase Systems,17(4),\n1992.\n[15]D.Agrawal, A.ElAbbadi, andR.Jeffers. Usingdelayed cornlnitrnent inlockingpro\u00ad\ntocolsforreal-tirne databases. InProc.AC/1;18IGA.fOD Conf.ontheNlanagerncnt of\nData,19H2.\n1005", "1036": "1006 DATABASE NIANAGElYfENT SYSTEIVIS\n[16]R.Agrawal, LvI.Carey,and1\\/tLivny. Concurrency control pcrfornlance-ulOdeling:\nAlternatives andilnplications. InProf.AClvfSIG/dOD Conf.(rntheIlfanagement of\nData,1985.\n[17]R.Agrawal andD.De\\iVitt. Integrated concurrency controlandrecovery Hlccha\u00ad\nniSII1s:Designandperforrnance evaluation. AC.A1T'ransaciions onDatabase SystenlS,\n10(4):529---564, 1985.\n[18]R..Agra\\val andN.Gehani. ODE(Object Database andEnvirolllnent): Thelanguage\nandthedatarnode!.InProc.ACA1SIGA10D ConIontheA:lanage'l7tent ofData,1989.\n[19]R.Agrawal, J.E.Gehrke, D.Gunopulos, andP.Raghavan. Autoillatic subspace clus\u00ad\nteringofhighdirnensional datafordatarnining. InProc.ACl\\!ISIGJvIOD Conlon\nIVIanagement ofData,1998.\n[20]R.Agrawal, T.Imielinski, andA.Swanli.Database rnining: Aperformance perspective.\nIEEETransactions onKnowledge andDataEngi'neering, 5(6):914--925, December 1993.\n[21]R.Agrawal, H.NIannila, R.Srikant,H.Toivonen, andA.I.Verkamo. Fastdiscovery of\nassociation rules.InU.M.Fayyad, G.Piatetsky-Shapiro, P.Srnyth,andR.UthurusanlY,\neditors, Advances inKnowledge Discovery andDataMining,chapter 12,pages307-328.\nAAAI/NIIT Press,1996.\n[22]R.Agrawal, G.Psaila,E.Wimmers, andM.Zaot.Querying shapesofhistories. In\nPTOC.Inti.Conf.onVeryLargeDatabases, 1995.\n[23]R.Agrawal andJ.Shafer.Parallel miningofassociation rules.IEEETransactions on\nKnowledge andDataEngineering, 8(6):962-969, 1996.\n[24]R.Agrawal andR.Srikant. Miningsequential patterns. InProc.IEEEInti.Conj.on\nDataEngineering, 1995.\n[25]R.Agrawal, P.Stolorz, andG.Piatetsky-Shapiro, editors. Proc.Intl.Conf.onKnowl-\u00ad\nedgeDiscovery andDataMining. AAAIPress,1998.\n[26]R.Ahad,K.BapaRao, andD.McLeod. Onestimating thecardinality oftheprojection\nofadatabase relation. ACiVfTTansactions onDatabase Systerns, 14(1):28~-40, 1989.\n[27]C.Ahlberg andE.Wistr\u00b7and. IVEE:Aninformation visualization exploration environ\u00ad\nHlCnt.InIntl.Sy'mp.onInjoTrnation V'isualization, 1995.\n[28]A.Aho,C.Beeri,andJ.Ulhnan. Thetheoryofjoinsinrelational databases. ACAf\nTransactions onDatabase System,s, 4(~3):297--314, 1979.\n[29]A.Aho,J.Hopcroft, andJ.Ulhnan. TheDesignandAnalysis ofComputeT Algorithrns.\nAddison- Wesley, 1983.\nP30]A.Aha,Y.Sagiv,andJ.Ulhnan. Equivalences aIllongrelational expressions. SIAA1\nJ01LTnal ofCornput'l.ng, 8(2):218--246, 1979.\n[31]A.Aiken,.1.Chen,IvI.Stonebraker, andA.VVoodruff. rr'ioga-2: Adirectrnanipulation\ndatabase visualization envirOIunent. InPT()c.IEEEIntl.ConIonDataEng'ineeT'ing,\n1996.\n[:32]A.Aiken,.J.Widorn, and.J.Hellerstein. Staticanalysis techniques forpredicting the\nbehavior ofactivedatabase rules.ACl\\11Jransactions onDatabase Systems, 20(1):3-41,\n1995.\n[:3:3]A.AilanHlki, IO).De\\Vitt,lVI. Hill,andNI.Skounakis. \\\\leaving relations forcache\nperfonnance. InPTOC.Intl.Conj.on-VeT~1JLwgeDataBases,2001.\n[:34]N.Alon,P.13.Gibbons,Y. rVlatias,andIV!.Szegedy. ]'racking joina,ndself-join sizesin\nlirnitedstorage. InProc.ACAf8yrnp08iurn onPri.nC'iples ofDatabase Syste'ln8,Philadc\u00ad\nplphia,Pennsylvania, 1999.", "1037": "RE~FERENC!E8 1007\n~\n[35]N.AloIl,Y.iYfatias, andNtSzegedy. Thespacecmllplexity ofapproxilnating the\nfrequency mornents. InProc.oftheACAf81rrnp.onTheoryofComputing, pages20.-29,\n1996.\n[36JE.An\\vl.-lr,L.J\\1augis, andU.Chakravarthy. Anewperspective OIlrulesupport for\nobject-oriented databa..-;es. InProc.AC/I;fSIGAfOD Conf.ontheA1arwgernent ofData,\n1993.\n[37]K.Apt,H.Blair,andA.\\iValker. Tm,vards atheoryofdeclarative knowledge. In\nJ.1IIinker, editor,PO'undations ofDeductive Databases andLogicProg'rarnm.ing. J\\1organ\nKaufInann, 1988.\n[38]W.Arrnstrong. Dependency structures ofdatabase relationships. InProc.IFIP\nCongress, 1974.\n[39]G.Arocena andA.O.Iv1endelzon. WebOQL: restructuring doculnents, databases and\nwebs.InProc.Inti.Conf.onDataEngineering, 1988.\n[40]Iv!.Astrahan, rv1.Blasgen, D.Chaluberlin, K.Eswaran, J.Gray,P.Griffiths, W.King,\nR.Lorie,P.McJones, J.1I1ehl,G.Putzolu, 1.Traiger, B.Wade,andV.Watson. Systenl\nR:arelational approach todatabase Inanageluent. ACMTransactions onDatabase\nSysterns, 1(2):97~~137,1976.\n[41J:tvI.Atkinson, P.Bailey,K.Chishohn, P.Cockshott, andR.Morrison. Anapproach to\npersistent programming. InReadings inObject-Oriented Databases. eds.S.B.Zdonik\nandD.1\\lIaier,Morgan Kaufmann, 1990.\n[42]:tvI.Atkinson andP.Buneman. Typesandpersistence indatabase programming lan\u00ad\nguages. ACJvICornputing Sur'Veys, 19(2):105-\"-190, 1987.\n[43]R.Attar,P.Bernstein, andN.Goodman. Siteinitialization, recovery, andback-up ina\ndistributed database systern. IEEETransactions onSoftware Engineering, 10(6):645--\u00ad\n650,1983.\n[44]P.Atzeni, L.Cabibbo, andG.Mecca. Isalog:Adeclarative language forcomplex\nobjectswithhierarchies. InP'roc.IEEEIntl.ConIonDataEngineering, 1993.\n[45]P.AtzeniandV.DeAntonellis. Relational Database Theory. Benjarnill-Culnmings,\n1993.\n[46]P.Atzeni,G.1Vlecca,andP..lVlerialdo. Toweavetheweb.InP'roc.Intl.Conf.Very\nLaTyeDataBases,1997.\n[47]H..Avnur, .1.Hellerstein, B.Lo,C.Olston,B.Rarnan, V.Ranlan, T.Roth,andK.Wylie.\nControl: Continuous outputandnavigation technology withrefinernent onlineInProc.\nACA1SIGNIOD Conf.onthefvlanagement ofData,1998.\n[48]R.Avnurand.J.~tHellcrstcin. Eddies: Continuously adaptive queryprocessing. In\np.roc.ACAl8IGA10D ConIonthefvfanagernent ofData,pages261\u00b7..272.AC1Vl,2000.\n[49JB.Babcock, S.Babu,I'vl.Datal',R.l\\Jlotwani, andJ.Widom. 1Vlodelsandissuesindata\nstreanlsysterns. InProc.ACMSyrnp.on onPrinciples ofDatabase Systems, 2002.\n[50JS.BahuandJ.\\Vidoln. Continous queriesoverdatastrealIlS. AC1\\;[SIGA10D Record,\n:30(3):109-\u00b7120, 2001.\n[51]D.BadalandG.Popek.Costandperfonnance analysis ofsenHlntic integrit,Y validation\nruethods. InProc.ACA1SIGJl.10D Conf. OTtthe!I/[anagernent ofData,1979.\n(52]A.Badia,D.VanGucht,andIv!.Gyssens. Querying withgeneralized quantifiers. In\nApplicabons ofLOg'lCDatabases. cd.R.Ranutkrishnan, KillwerAcadelnic, 1995.\n[5:3]1.Balbin,G.Port,K.RanUll110hanarao, andK..Nleenakshi. Efficient bottorn-up COInpu\u00ad\ntationofqueriesonstratified dcl.tabc\\...;;;es ..fo'UTT/,alofLogicPTograrnrn'in!ll 11(:3):295\u00b7<~44,\n1991.", "1038": "1008 DATABASE lVIANAGEIVIENT SYSTElVl;;\n[54]1.BalbinandK.Rarnarllohanarao. Ageneralization ofthedifferential approach to\nrecursive querye'laluation. JournalofLoqicProgrmnm,ing, 4(3):259\"-262, 1987.\n[55}_F.Bancilhon, C.Delobel, andP.Kanellakis. Building anOb.iect-Oriented Database\nSystem. Morgan Kaufnlann, 1991.\n[56]F.Bancilhon clndS.Khoshafian. Acalculus forcorIlplex objects. Jml'rnal ofC01npnter\nandSystem Sciences, :38(2):~~26--\"\"\"340, HJ89.\n[57].F.BancilhoIl, D.l\\1aier,Y.Sagiv,andJ.Ullnlan. IVIagicsetsandotherstrangeways\ntoinlplement logicprogranlS. InA()AlSy\u00b7mp.onPrinciples ofDatabase Systerns, 1986.\n[58]F.Bancilhon andH.Rarnakrishnan. Ananlateur's introduction torecursive query\nprocessing strategies. InProc.ACAlSIG1\\,I0D Conf.onthe .ft.,1anage'f1~ent ofData,\n1986.\n[59]F.Bancilhon andN.Spyratos. Updatesenlantics ofrelational views.ACMTransactions\nonDatabase Systems, 6(4):557--575, 1981.\n[60]E.Baralis, S.Ceri,andS.Paraboschi. lVlodularization techniques foractiverulesdesign.\nACAITransactions onDatabase Syste'ms, 21(1):1-29, 1996.\n[61]D.Barbara, W.DUNlouchel, C.Faloutsos, P.J.Haas,J.1\\1.Hellerstein, Y.E. Ioannidis,\nH.V.Jagadish, T.Johnson, R.T.Ng,V.Poosala, K.A.Ross,andK.C.Sevcik.The\nNewJerseydatareduction report.DataEngineering Bulletin, 20(4):3-45, 1997.\n[62]R.Barquin andH.Edelstein. Planning andDesigning theDataWarehouse. Prentice\u00ad\nHall,1997.\n[63]C.Batini,S.Ceri,andS.Navathe. Database Design:AnEntityRelationship Approach.\nBenjarnin/Cummings Publishers, 1992.\n[64]C.Batini, IvI.Lenzerini, andS.Navathe. Acomparative analysis ofruethodologies for\ndatabase schemaintegration. AONIComputing Surveys, 18(4):323-364, 1986.\n[65]D.Batory,J.Barnett, J.Garza,K.Smith,K.Tsukuda, B.Twichell, andT.Wise.\nGENESIS: Anextensible database 11lanageruent system. InS.ZdonikandD.Maier,\neditors, Readings inObject-Oriented Databases. Ivlorgan Kaufrnann, 1990.\n[66]B.Baugsto andJ.Greipslancl. Parallel sortingrnethods forlargedata volunH~s ona\nhypercube database cornputer. InProc.Intl.vVorkshop onDatabase JvIachines, 1989.\n[67]R.J.Bayardo. Efficiently ruininglongpatterns frorndatabases. InProc.ACAlSICA10D\nInt!.Con].onJvIanagernent ofData,pages85-93.AClVlPress,1998.\n[68]R.J.Bayardo, R.Agrawal, andD.Gunopulos. Constraint-based ruleruininginlarge,\ndensedatabases. DataAIiningandKnowledge Discovery, 4(2/3):217\u00b7\u00b7\u00b7240, 2000.\n[69]R.BayerandE.~/IcCreight. Organization andrnaintenance oflargeordered indexes.\nActaInfoT'TrWtica,1(3):173-189, 1972.\n[70JR.BayerandIVI.Schkolnick. Concurrency ofoperations onB-trees. Actalnforrnal;ica,\n9(.1):1--21,1977.\n[71]IV1.Beck,D.Bitton,and\\\\T.\\Nilkinson. Sortinglargefilesonabackend rTIultiprocessor.\nIEEE7'ransdct'ions onC'omp'uters, 37(7):769--778, 1988.\n[72]N.Becknlann, H.-P.Kriegel, R.Schneider, andB.Seeger. TheR*tree:Anefficient\nandrobustaccessruethod forpointsandrectangles. InProc.ACAISIGAI0D Conf.on\ntheAfanagernent ofData,1990.\n[7~3]C.Beeri,R.Fagin,and.J.Howard. Acomplete axiOluatization offunctional andrnul\u00ad\ntivalued dependencies indatabase relations. InProc.A01\\4SIG/vIOD Con].onthe\n1\\1anagernent ofData,1977.", "1039": "REFEREIVCES lOQ9\n[74]C.BeeriandP..Honeylnall. Preserving functional dependencies. SIA1HJournal of\nComputing, lO(:3):G4T\u00b7-656, 1982.\n[75]C.BeeriandT.ivIilo.Amodelforactiveobject-oriented database. InProc.Intl.Conf.\nonlleryLargeDatabases, 1991.\n[76}C.Beeri,S.Naqvi,R.Rmnakrishnan, O.Shmueli, andS.Tsur.Setsandnegation in\nalogicdatabase language (LDLI).InACNfSymp.onPrirtciples ofDatabase Systems,\n1987.\n[77]C.BeeriandR.RaIllakrishnan. Onthepowerofrnagic.InAC1\\1Syrnp.onPrinciples\nofDatabase Sy8terns, 1987.\n[78]D.BellandJ.GriIDson. Dist1'ib1lted Database Systems. AddisoIl- \\\\lesley,1992.\n[79]J.Bentley andJ.~'riedman. Datastructures forrangesearching. ACAlCornputing\n8'urveys, 13(3):397-\u00b7409, 1979.\n[80]S.Berchtold, C.Bohm,andH.-P.Kriegel. Thepyramid-tree: breaking thecurseof\ndimensionality. InACMSIG1\\10D Conf.onthel\\lanagement ofData,1998.\n[81]P.Bernstein. Synthesizing thirdnormalformrelations fromfunctional dependencies.\nACMTransactions onDatabase Systerns, 1(4):277-298, 1976.\n[82]P.Bernstein, B.Blaustein, andE.Clarke. Fastmaintenance ofsernantic integrity\nassertions usingredundant aggregate data.InProc.Intl.Conf.onVeryLargeDatabases,\n1980.\n[83]P.Bernstein andD.Chiu.Usingsenli-joins tosolverelational queries. Journal ofthe\nACM,28(1):25-40, 1981.\n[84]P.Bernstein andN.Goodman. Tirnestamp-based algorithms forconcurrency controlin\ndistributed database systems. InProc.Intl.Conf.onVeryLargeDatabases, 1980.\n[85]P.Bernstein andN.Goodman. Concurrency controlindistributed database systems.\nAClVfComputing S1Lrveys, 13(2):185-222, 1981.\n[86]P.Bernstein andN.Goodlnan. Powerofnaturalsemijoins. SIAMJournalofCorrtput'ing,\n10(4):751-~771, 1981.\n[87]P.Bernstein andN.Goodulan. Multiversion concurrency control-Theory andalgo\u00ad\nrithms. AClVITransactions onDatabase Systerns, 8(4):465-483, 1983.\n[88]P.Bernstein, N.Goodnlan, E.Wong,C.Reeve,andJ.Rothnie. Queryprocessing ina\nsysternfordistributed databases (SDD-1 ).AC1\\111ransactions onDatabase Systerns,\n6(4):602\u00b7\u00b7~~625, 1981.\n[89]P.Bernstein, V.Hadzilacos, andN.Goodlnan. Conc'u,rrency Cont'rolandRecovery in\nDatabase System,s. Addison- vVesley,1987.\n[90]P.Bernstein andE.Newcomer. Pr\"inciples ofTransaction Processing. rvlorgan Kauf\u00ad\nmann,1997.\n[91]P.Bernstein, D.Shiprnan, andJ.Rothnie. Concurrency controlinaSystCIllfordis\u00ad\ntributed databa ..'5es(SDD-l). ACAITransactions onDatabase Systerns, 5(1):18-51,\n1980.\n[92]P.Bernstein, D.Shiprnan, and\\V.Wong.Forrnalaspectsofserializability indatabase\nconcurrency control. IEEE7r'CLnsactions onSoftware Engineering, 5(;3):203-\u00b7\u00b7-21G, 1979.\n[9~3]K.Beyer,J.Goldstein, R.RaInakrishnan, andU.Shaft.\\\\Thenisnearest neighbor\nrneaningful? InIEEEInternational Conference onDatabase Theory, 1999.\n[94]K.BeyerandR.Rarnakrishnan. BottOlIl-UP cornputatioll ofsparseandicebergcubes\nInProc.ACA1SIGlVfOD ()onf.ontheAlanagernent ofData,1999.", "1040": "1010 DATABASE lVIANAGEMENT SYSTEJ\\iS\n[95]B.Bhargava, editor.Concurrency Control andReliability inDiBt1~ibuted Systc'ms. Van\nNostrand Reinhold, 1987.\n[96]A.Biliris.Theperfornutnce ofthreedatabase storagestructures forr.nanaging large\nobjects. InProc.ACAfSIGAfOf) Conf.ontheAianagC'Tnent ofData,1992.\n[97]J.BiskupandB.Convent. Afonnalviewintegration method. InProc.ACA1SIClvIOD\nConf.onthel\\1anagem,ent ofData,1986.\n[98]J.Biskup,U.Dayal,andP.Bernstein. Synthesizing independent database schenlas. In\nProc.ACi\\1SICA,iOD Conf.ontheA'ianage7nent ofData,1979.\n[99JD.BittonandD.DevVitt. Duplicate recordelimination inlargedatafiles.ACA1\nTransactions onDatabase System.s, 8(2):255-265, 1983.\n[100]J.Blakeley, P.-A.Larson,andF'.TOInpa. Efficiently updating lllaterialized views.In\nProc.AC1V[SIGN/OD Conf.unthellfanagem,ent ofData,1986.\n[101]Iv1.Blasgen andK.Eswaran. Ontheevaluation ofqueriesinadatabase systenl. Tech\u00ad\nnicalreport,IBMFJ(R.J1745),SanJose,1975.\n[102]P.Bohannon, D.Leinbaugh, R.Rastogi, S.Seshadri, A.Silberschatz, andS.Sudarshan.\nLogicalandphysical versioning inmainmemory databases. InProc.Intl.Conf.onVery\nLargeDatabases, 1997.\n(103]P.Bohannon, J.Freire,P.Roy,andJ.Siuleon. FromXMLschematorelations: A\ncost-based approach toXMLstorage. InProceedings ofICDE,2002.\n[104]P.BonnetandD.E.Shasha. Database Tuning: Pr'lnciples, Experirnents, andTrou\u00ad\nbleshooting Techniq1Les. J\\lIorgan Kaufrnann Publishers, 2002.\n[105]G.Booch,1.Jacobson, andJ.Rurnbaugh. TheUnifiedModel'lng Language UserGuide.\nAddison-Wesley, 1998.\n[106]A.Borodin, G.Roberts, J.Rosenthal, andP.Tsaparas. Finding authorities andhubs\nfrornlinkstructures onRoberts G.O.theworldwideweb.InWorldWideWebCon\u00ad\nference, pages 415~429, 2001.\n[107]R.BoyceandD.Chamberlin. SEQUEL: Astructured Englishquerylanguage. InPTOC.\nACMSIGAIOD Conf.onthelvfanagement ofData,1974.\n[108]P.S.BradleyandU.1\\1.Fayyad. Refining initialpointsforK-1\\1eans clustering. InPr'oc.\nIntl.Conlon IHachine Learning, pages91--'-99.:NIorgan Kaufnlann, San:Francisco, CA,\n1998.\n[109]P.S.Bradley, U.N!.Fayyad, andC.Reina. Scaling clustering algorithnls tolarge\ndataba.ses. InPr\u00b7oc.Intl.Conlon Knowledge D'lscoveTy andDatafvhning, 1998.\n[lID]K.Bratbergscngen. I-lashing rnethods andrelational algebraoperations. InPr\u00b7oc.Intl.\nConIonVeryLca:qeDatabases, 1984.\n[111]L.Brcilnan, J.II.Friechnan,ItA.Olshen,and C~.J.Stone.Classificat'ion CLndReg'rcssion\nTrees.Wadsworth, Belrnont. CA,1984.\n[112]Y.Breitbart, H.Garcia-l\\/Iolina, andA.Silberschatz. Overvic\\v ofllluitidataba,c.;e trans\u00ad\nactionrnanagernent. Inp.roc.Ina.C'onf.on1/eryLargeDatabases, 1992.\n[11~3]Y.Breitbeut, A.Silberschatz, andG.Thornpson. Reliable transaction rllanagcrllent in\nallmltidatabase systerll. InProc.A()A:[SIGA/[OD Conf.onthel\\![anagernen,t ofData,\n1990.\n[114JY.Breitba.rt, A.Silberschatz, and C~.Thompson. Ana,pproach torecovery Inanagcrnent\nin1:1lIlultidataba.sc system. InPTOC.IntI.Conf.on\\/er~yLargeDatabases, 1992.", "1041": "1011\n\\1\n[115]S.Brin,R.wlotwani, andC.Silverstein. Beyond Inarketbaskets: Generalizing a\"c;,..;;ocia\u00ad\ntionrulestocorrelations. InProc.ACJVlSIGlvfOD Conf.onthelvfanagement ofData,\n1997.\n[116]S.BrinandL.Page.Theanatorny ofalarge-scale hypertextual websearchengine.In\nProceediT/,gs of7thItFoddWideWebConference, 1998.\n(117)S.Brin,R.rvlotwani, J.D.lHlrnan, andS.Tsur.Dynaruic itertlsetcounting andinlplica\u00ad\ntionrulesforrnarketba\"c;ketdata.InProc.ACiV[SlGlvl0D lntl.Conf.onA'[anagement\nofData,pages255\u00b7\u00b7\u00b7264. ACIVIPress,1997.\n[118]T.Brinkhofl', H.-P.Kriegel, andR.Schneider. Cornparison ofapproximations ofcOlllplex\nobjectsusedforapproximation-ba..'3ed queryprocessing inspatialdatabase systerIls. In\nProc.IEEEIntZ.Conf.onDataEngineering, 1993.\n[119]K.Brown, M.Carey,and~LLivny.Goal-oriented bufl'errnanagement revisited. In\nProc.ACj\\;fSIC.NI0D Conf.ontheNJanagernent ofData,1996.\n[120]N.Bruno, S.Chaudhuri, andL.Gravano. Top-kselection queries overrelational\ndatabases: ~fapping strategies andperformance evaluation. AC1v!Transactions on\nDatabase System,s, Toappear, 2002.\n[121]F.Bry.Towards anefficient evaluation ofgeneralqueries: Quantifier anddisjunction\nprocessing revisited. InProc.AC}.;1SIC1vl0D Conf.ontheManagement ofData,1989.\n[122]F.BryandR.Manthey. Checking consistency ofdatabase constraints: Alogicalbasis.\nInProc.Intl.Conf.onVeryLargeDatabases, 1986.\n[12~~]P.Bunernan andE.Clemons. Efficiently rnonitoring relational databases. ACNfTrans\u00ad\nactionsonDatabase Systerns, 4(3),1979.\n[124]P.Bunernan, S.Davidson, G.Hillebrand, andD.Suciu.Aquerylanguage andoptimiza\u00ad\ntiontechniques forunstructured data.InProc.ACMSIG.1I.10D Conf.onManagement\nofData,1996.\n[125]P.Buneman, S.Naqvi,V.Tannen, andL.Wong. Principles ofprograrnrning with\ncomplex objectsandcollection types.Theoretical Compl1ter Science, 149(1)::3-48,1995.\n[126]D.Burdick, l\\!I.Calirnlim, andJ.E.Gehrke. lVlafia:Arnaxirnal frequent itemsetalga\u00ad\nritlullfortransactional databases. InProc.Intl.Conf.onDataEngineerving (JCDE).\nIEEECornputer Society, 2001.\n[127]l\\!I.Carey.Granularity hierarchies inconcurrency control.InACA1..9yrnp.onPrinciples\nofDatabase Systern8, 198~3.\n[128].LvI.Carey,D.Charnberlin, S.Narayanan, B.Vance,D.Doole,S.Rielau,R.Swagerrnan,\nandN.lVlattos.0-0,what'shappening toDB2?InPrnc.ACAfSICAI0D Conf.onthe\nA/anagernent ofData,1999.\n[129] ~/I.Carey,D.DeWitt,NtFranklin, N.HaIl,N1. ~lcAuliffe, .1.Naughton, D.Schuh,\nJVI.SOlOlIlOIl, C.'rau,O.Tsatalos, S.White,andtvI.Zwilling. Shoring uppersistent\napplications. InPlue.AC)AfSIGAI0D Can].onthel'vlanagernent ofData,1994.\n[1~30)rvL Carey,D.De\\Vitt, G.Graefe,D.Haight, .1.Richardson, D.Schuh,E.Shekita, and\nS.Vandenberg. TheEXODUS Extensible DBtv1Sproject: Anovervimv. InS.Zdonik\nandD.l\\!:Iaier,editors, Readings 'inOb,jed-Oriented Databases. l\\Iorgan K.aufrnann, 1990.\n[1~n)1\\'1.Carey,IJ.De\\Vitt, and.1.Naughton. The007benchrnark. InP.roc. ACiV!SICA/OD\nConj.on,thefl.Ianagernent ofData, 199;~.\n[132)~J. Carey,D.DevVitt, J.Na,ughton, ~LAsgarian, J.Gehrke,andD.Shah.TheBUGK\\{\nobject-rehltional benchlnark. InProc.ACA.1S'IGAIOD Conj.ontheA[anagernent of\nData,1997.", "1042": "1012 DATABASE NIANAGElVIENT SVSTEN\\S\n[1:33]Ivi.Carey,D.DeWitt, J.Richardson, andE.Shekita. ObjectandfilernanageInent in\ntheExodusextensible database system. InPr'Oc.IntI.Conf.onVeryLar:qeDatabases,\n1986.\n[1;34]M.Carey,D.Florescu, Z.Ives,Y.Lu,J.Shanmugasundaraul, E.Shekita, andS.Sub\u00ad\n.f<:llnanian. XPF;RANTO: publishing object-relational dataasXNIL.InPr'oceedings of\ntheThirdInteT7wt'ional lIVOTkshop ontheWebandDatabases, Nlay2000.\n[1:35]rvi.CareyandD.Kosslllan. Onsaying\"Enough Already!\" inSQLInProc.ACA1\nSIGlvlOD Conf.onthelvlanagernent ofData,1997.\n[136]M.CareyandD.Kossrnan. Reducing thebraking distance ofanSQLqueryengineIn\nPTOC.Intl.Conf.on\"{ler1jLargeDatabases, 1998.\n[137]11.CareyandM.LivllY.Conflict detection tradeoffs forreplicated data.ACA1Trans\u00ad\nactionsonDatabase Systerns, 16(4),1991.\n[138]M.Casanova, L.Tuchennan, andA.F\\utado. Enforcing inclusion dependencies and\nreferential integrity. InProc.Intl.Conf.on\"{leryLargeDatabases, 1988.\n[139]M.Casanova andM.Vidal.Towards asoundviewintegration lnethodology. InAC1\\1.\nSymp.onPrinciples ofDatabase Systems, 1983.\n[140]S.Castano, M.Fugini,G.Martella, andP.Samarati. Database Security. Addison\u00ad\nWesley, 1995.\n[141]R.Cattell. TheObjectDatabase Standard: ODMG-93 (Release 1.1).MorganKaufmann,\n1994.\n[142]S.Ceri,P.Fraternali, S.Paraboschi, andL.Tanca.Activerulelnanagement inChimera.\nInJ.WidomandS.Ceri,editors, ActiveDatabase Systems. Morgan Kaufmann, 1996.\n[143]S.Ceri,G.Gottlob, andL.Tanca.LogicProgramming andDatabases. Springer Verlag,\n1990.\n[144]S.CeriandG.Pelagatti. Distributed Database Design: Principles andSystems.\nMcGraw-Hill, 1984.\n[145]S.CeriandJ.Widom. Deriving production rulesforconstraint maintenance. InProc.\nIntl.Conf.on\"{leTyLargeDatabases, 1990.\n[146]F.Cesarini, M.Missikoff, andG.Soda.Anexpertsystelnapproach fordatabase appli\u00ad\ncationtuning. DataandKnowledge Engineering, 8:35\"'55, 1992.\n[147]U.Chakravarthy. Architectures andrnonitoring techniques foractivedatabases: An\nevaluation. DataandKnowledge Engineering, 16(1):1'-26, 1995.\n[1.48]U.Chakravarthy, .1.Grant,andJ.Minker. Logic-based approach tosemantic query\noptimization. ACAITran8actions onDatabase Systern8, 15(2):162\u00b7\u00b7\u00b7\u00b7207, 1990.\n[149]I).Charnberlill. UsingtheNewDB2.Morgan Kaufrnann, 1996.\n[150]D.Chaluberlin, M.Astrahan, M.Blasgen, J.Gray,W.King,B.Lindsay, R.Lode,\n.1.Ivlehl,T.Price,P.Selinger, 1V1.Schkolnick, D.Slutz,I.Traiger, B.Wade,andR.Yost.\nAhistoryandevaluation ofSystemRComm7J:nication.s oftheACM,24(10):m32\"\"'646,\n1981.\n[151]D.Charnberlin,tv1. Astrahan, K.Eswaran, P.Griffiths, R.Lorie,.J.f\\.1ehl, P.Reisner,\nandB.Wade.Sequel2:aunifiedapproach todatadefinition, manipulation, andcontrol.\nIB1v1JournalofReseaT(;h andDeveloprnent, 20(6):560\"\"\"575, 1976.\n[152]D.Charnberlin, D.Florescu, a,nd.1.Robie.Quilt:anXIvILquerylanguage forhetero\u00ad\ngeneousdatasources. InP1YJceeclings ofWebDB, Dalla.,s,'TX,May2000.", "1043": "1013\nt\n[153]D.ChaInberlin! D.Florescu, J.Robie,.1.Sinwoll, andivI.Stefanescu. XQuery: Aquery\nlanguage forXivIL.World\\VideWeb ConsortiUJIl, http://www .w3.org!TR!xquery, Feb\n2000.\n[154]A.Chandra andD.Harel. Structure andcomplexity ofrelational queries. J.CornputeT\nandSY.5ternSciences, 25:99--128, 1982.\n[155]A.Chandra andP.Ivlerlin.Optinlal ilnplernentation ofconjunctive queriesinrelational\ndatabases. InProc.ACiVlSIGACT Syrnp.onTheo'ryofCo'mp'uting, 1977.\n[156]]\\;1.Chandy, L.Haas,andJ.1/Iisra.Distributed deadlock detection. ACA,lTrunsact'ions\nonCo'mputer SY.5tel1~S, 1(3):144--156, 198~~.\n[157]C.ChangandD.Leu.Ivlulti-key sortingasafileorganization schenlewhenqueriesare\nnotequallylikely.InProc.Intl.Syrnp.onDatabase Systems forAdvanced Applications,\n1989.\n[158]D.ChangandD.Harkey. Client/serverdataaccesswithJavaand...YML.JohnWiley\nandSons,1998.\n[159]M.Charikar, S.Chaudhuri, R.Motwani, andV.R.Narasayya. Towards estimation\nerrorguarantees fordistinctvalues.InProc.ACAfSymposium onPrinciples ofDatabase\nSystems, pages 268~279. ACM,2000.\n[160]D.Chatziantoniou andK.Ross.Groupwise processing ofrelational queries. InProc.\nInti.ConIonVeryLargeDatabases, 1997.\n[161]S.Chaudhuri andU.Dayal.Anoverview ofdatawarehousing andOLAPtechnology.\nSIGMOD RecoTd, 26(1):65-74, 1997.\n[162]S.Chaudhuri andD.Madigan, editors. Proc.ACMSIGKDD Inti.ConfeTence onKnowl\u00ad\nedgeDiscovery andDatalvIining. ACIvIPress,1999.\n[163]S.Chaudhuri andV.Narasayya. Anefficient cost-driven indexselection toolforMi\u00ad\ncrosoftSQLServer.InProc.Inti.Conf.onVeryLargeDatabases, 1997.\n[164]S.Chaudhuri andV.R.Narasayya. Autoadrnin 'what-if' indexanalysis utility.InPr'Oc.\nACMSIGMOD Inti.Conf.onlvIanagernent ofData,1998.\n[165]S.Chaudhuri andK.Shirrl.Optimization ofquerieswithuser-defined predicates. In\nPr'Oc.Intl.Conf.onVeryLargeDatabases, 1996.\n[166]S.Chaudhuri andK.Shirn.Optimization querieswithaggregate views.InIntl.Conf.\nonExtending Database Technology, 1996.\n[167]S.Chaudhuri, G.Das,andV.R.Narasayya. Arobust,optirrlization-hased approach\nforapproximate answering ofaggregate queries. InProc.AC]t;JSIG1v/OD Conf.onthe\nManagement ofData,2001.\n[168]J.Cheiney, P.Faudenlay, R.J'vfichel,andJ.Thevenin. Areliableparallelbackend using\nrnultiattribute clustering andselect-join operator. InProc.Intl.Conf.onVeryLm:qe\nDatabases, 1986.\n[169]C.ChenandN.Roussopoulos. Adaptive databa~e bufferrnanagernent usingquery\nfeedback. InProc.Inti.Conj.onVeryLar:qeDatabases, 199;3.\n[170JC.ChenandN.Roussopoulos. Adaptive selectivity estimation usingqueryfeedback.\nInProc.ACMSIGMOD Conf.ontheManage1nent ofData,1994.\n[171]P.M.Chen,E.K.Lee,G.A.Gibson, R.H.Katz,andD.A.Patterson. RAID:High\u00ad\nperforrnance, reliablesecondary storage. AClvIComputing SuT7H':-YS, 26(2):14,5\u00b7 ....185,June\n1994.\n[172}P.P.Chen.Theentity-relationship rnodel-\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7toward aunifiedviewofdata.ACMTrans\u00ad\nactionsonDatabase System,s, 1(1):9--36, 1976.", "1044": "1014 I)ATABASE NIANAGENIENT SVSTEiVlS\n[173]Y.Chen,G.Dong,J.Han,B.vv.Wah,andJ.vVang. 1Vlulti-dinlcnsional regression\nanalysis oftinIe-series datastrearllS. InPro\u00a3:.Intl.ConIonVeryLaryeDatnBases,\n2002.\n[174]D.\\V.Cheung, .1.Han,V.T'.Ng,andC.Y.Wong. ~i[aintenance ofdiscovered association\nrulesinlargedatabases: Anincrernental updating technique. InP1Y)c.InLConf.Data\nEngineer\"ing, 1996.\n[175]D.VV.Cheung, V.T.Ng,andB.W.Tarn?viaintenance ofdiscovered knowledge: A\ncaseinrnlllti-level association rules.InProc.Inti.Conf.onKnowledge Discover:lI and\nDataA1in:ing. AAAIPress,1996.\n[176]D.Childs.Feasibility ofasettheoretical data structure-~\"A generalstructure basedon\nareconstructed definition ofrelation. Proc.Tri-annual IFIPConference, 1968.\n[177]D.Chimenti, R.Garnboa, R.Krishnarnurthy, S.Naqvi,S.Tsur,andC.Zaniolo. Thelell\nsystemprototype. IEEETra'nsactions onKnowledge andDataEngineering, 2(1):76\"-90,\n1990.\n[178]F.ChinandG.Ozsoyoglu. Statistical database design.AClv/TTansactions onDatabase\nSysterns, 6(1):113--139, 1981.\n[179]T.-C.ChiuehandL.Huang.Efficient real-time indexupdates intextretrieval systems.\n[180]J.ChOillicki. Real-time integrity constraints. InACMSymp.onPrinciples ofDatabase\nSyste'ms, 1992.\n[181]H.-T.ChouandD.DeWitt. Anevaluation ofbufferrnanagelnent strategies forrelational\ndatabase systerns. InProc.Intl.Conf.onVeTyLargeDatabases, 1985.\n[182]P.Chrysanthis andK.Ramarnritharn. Acta:Aframework forspecifying andreason\u00ad\ningabouttransaction structure andbehavior. InProc.ACMSIGN/OD Conf.onthe\nlvlanagement ofData,1990.\n[183]F.Chu,.J.Halpern, andP.Seshadri. Leastexpected costqueryoptinlization: An\nexercise inutilityACMSymp.onPrinciples ofDatabase System,s, 1999.\n[184]F.Civelek, A.Dogac,andS.Spaccapietra. Anexpertsysternapproach toviewdefinition\nandintegration. InPr'oc.Entity-Relationship ConfeTence, 1988.\n[185]R..Cochrane, H.Pirahesh, andN.Mattos. Integrating triggers anddeclarative con\u00ad\nstraints inSQLdatabase systems. InPr'Oc.Intl.Conf.onVeryLargeDatabases, 1996.\n[186]CODASYL. ReportoftheCODASYL DataBaseTaskGroup.ACM,1971.\n[187]E. Codd.Arelational lllodelofdataforlargeshareddatabanks.Cornmunications of\ntheAC-\"'f, 1~~(6):377--<387, 1970.\n[188]E.Codd.Further norrnalization ofthedatabaserelational rnodeLInR.Rustin,editor,\nDataBaseSystetn8. Prentice Hall,1972.\n[189JE.Codd.Relational cOlnpleteness ofdatabasesub-languages. Inll.Rustin, editor,\nDataBaseSystem,s. Prentice Hall,1972.\n[190]E.Codd.Extending thedatabase relational lnodeltocapture rnoreIllCC1ning. AClv[\nTrnnsactions onDatabase 8ystcrns, 4(4):~{97\"\"'4:34, 19n).\n[191]E.Codd.Twelverulesforon-lineanalytic processing. CornputC'rwoTld, April 1~31995.\n[192]L.Colby,T.Griffin,L.Libkin, 1.Nhunick, aneiH.'Trickey. Algorith.IllS fordeferred view\nrnaintenance. InPrnc.AC?I.!SIGAfOD ConIontheA1anagernent ofData,1996.\n[19:3]L.Colby,A.Kawaguchi, D.Lieuwen, 1.l\\'l111nick, i:tndK.11.oss.Supporting nnIltiple\nviewrnaintenance policies: Concepts, algorithnls, andperformance analysis. InFmc.\nACAl8IGA10D ()onj.ontheA1anagernent ofData,1997.", "1045": "REFEREIVC}ES 1015\n[194}D.COIner.Theubiquitous B-tree.ACA1C.SU7\"l.Jeys, 11(2):121\u00b7\u00b71:37, 1979.\n[195]D.Connolly, editor. XlvfLPriru:iples, ToolsandTechniques. O'Reilly &Associates,\nSebastopol, USA,1997.\n[196JB.Cooper, N.Sample, :tVl.J.Franklin, G.R.Hjalta':ion, and:NtShadmon. Afastindex\nforsenlistructured data.InProceedings ofVLDB,2001.\n[197JD.Copeland andD.I\\1aier.Making SMALLTALK adatabase systerll. InProc.ACJi1\nSIGA10D Conf.onthelvfanagerment ofData,1984.\n[198]G.CornellandK.Abdali. CGIPrograrnm'ing WithJava.PrenticeHall, 1998.\n[199}C.Cortes,K.Fisher,D.Pregibon, andA.Rogers. Hancock: alanguage forextracting\nsignatures fronldatastrearllS. InProc.ACMSIGKDD Inti.Conference onKnowledge\nDiscovery andDataA1ining, pages 9~-17.AAAIPress,2000.\n[200]J.Daenlen andV.RijrrleIl. TheDesignofRijndael: AES-TheAdvanced Encryption\nStandard (Information Security andCryptogTaphy). Springer Verlag, 2002.\n[201]M.Datal',A.Gionis,P.Indyk,andR..Motwani. Maintaining streamstatistics over\nslidingwindows. InPTOC.oftheAnnual ACM-SIAJvf Symp.onDiscrete Algorithms,\n2002.\n[202]C.Date.Acritique oftheSQLdatabase language. ACidSIGM\u00b7OD Record, 14(3):8-54,\n1984.\n[203]C.Date.Relational Database: Selected Writings. Addison-Wesley, 1986.\n[204]C.Date.AnIntroduction toDatabase Systems. Addison-Wesley, 7edition, 1999.\n[205]C.DateandR.Fagin. SiIIlpieconditiolls forguaranteeing highernorrnalformsIn\nrelational databases. ACAITransactions onDatabase Systerns, 17(3),1992.\n[206]C.DateandD.:NIcGoveran. AGuidetoSybaseandSQLServer.Addison-Wesley, 1993.\n[207]U.DayalandP.Bernstein. Ontheupdatability ofrelational views.InProc.Intl.Conf.\nonVeryLargeDatabases, 1978.\n[208]U.DayalandP.Bernstein. Onthecorrecttranslation ofupdateoperations onrelational\nviews.ACAfTransactions onDatabase Systems, 7(3),1982.\n[209]P.DeBraandJ.Paredaens. Horizontal decompositions forhandling exceptions toFDs.\nInH.Gallaire, .1.Minkel', andJ.-M.Nicola..'5, editors, Advances inDatabase Theory,.\nPlenurIl Press,1981.\n[210]J.DeepandP.Holfelder. Developing CGIapplications withPerLWiley,1996.\n[211]C.Delobel. Norrrialization andhierarchial dependencies intherelational datamodel.\nACAITTansactions onDatabase Systerns, ~~(~3):201-222, 1978.\n[212]D.Denning. Securestatistical databa'5es withrandOlIl sC1nlplequeries. ACA1TTansac\u00ad\ntionsonDatabase Systems, 5(~3):291-'--315, 1980.\n[21~3]D.E.Denning. Cryptogrnphy andData8ec'UT'ity. AddisOI1- Wesley, 1982.\n[214]M.Derr,S.Nlorishita, andG.Phipps.Theglue-nail deductive database systern: Design,\nimplernentation, andevaluation. VLDBJournal, 3(2):123- ..-160,1994.\n[215]A.Deshpailde. Aniruplelnentation fornestedrelational databases. l'echnical report,\nPhDthesis,Indiana University, 1989.\n[216]P.I)eshpande, K.RaInasaIny,A.Shukla,andJ.F.Naughton. Caching rIlultidirnensional\nqueriesusingchunks.InProc.ACiV!SIGA10D Ina.Conf.onA1anagernent ofData,1998.\n[217]A.Deutsch, :tvtFernandez, D.Florescu, A.Levy,andD.Sueiu.XI\\1L-QL: Aquerylan\u00ad\nguageforXJ\\tlL.WorldWide WebConsortium, http://WTilTN .w3.org/TR/NOTE-xml-ql,\nAug1998.", "1046": "1016 I)ATABASE lVIANAGEMENT SYSTEfvlS\n(218]O.e.a.Deux.Thestoryof02.IEEE7'rft1lSact<ions onKnowlen,ge andDataBnfliTtecring,\n2(1),1990.\n[219]D.DeVvitt, II.-T.Chou,FeKatz,andA.Klug.Designandinlplenlcntation ofthe\nWisconsin Storage Systern. Software Practice a'ndExperience, 15(10):943--962, 1985.\n[220]D.De\\Vitt, H.Gerber, G.Graefe,.lVL Heytens,K.Kumar, andNI.i\\1uralikrishna.\nGanuua-\u00b7\u00b7\u00b7\u00b7-\u00b7\u00b7A highperforrnance dataflow databa..o;;;e Inachine. InPr'Oc.Intl.Conf.onVery\nLa'l~qeDatllbases, 1.986.\n[221]D.DeWitt andJ.Gray.Parallel database systenls: Thefutureofhigh-perfornlance\ndatabase systerIls. Cornm:unications oftheACA1,35(6):85-98, 1992.\n[222]D.DeWitt, R.Katz,F.Olken,L.Shapiro, M.Stonebraker, andD.vVood.Inlplelnen\u00ad\ntationtechniques forrnainmenlory databases. InProc.AC1l18IG1'vfOD Conf.onthe\nAIanagement ofDat.a,1984.\n(223]D.DeWitt, J.Naughton, andD.Schneider. Parallelsortingonashared-nothing archi\u00ad\ntectureusingprobabilistic splitting. InProc.Conf.onParnllel andDistributed Infor\u00ad\nrnation Systerns, 1991.\n[224]D.DeWitt, J.Naughton, D.Schneider, andS.Seshadri. Practical skewhandling in\nparalleljoins.InProc.Inti.Conf.onVeryLargeDatabases, 1992.\n[225]O.Diaz,N.Paton,andP.Gray.Rulernanagenlent inobject-oriented databases: A\nuniform approach. InProc.Ina.Conf.onVeryLaryeDatabases, 1991.\n[226]S.Dietrich. Extension tables:Mernorelations inlogicprogramming. InProc.Intl.\n8yrrtp.onLogicProgramming, 1987.\n[227]W.DiffieandM.E.Hellman. Newdirections incryptography. IEEElrnnsactions on\nInformation Theory, 22(6):644~654, 1976.\n[228]P.Domingos andG.Hulten. Mininghigh-speed datastrearns. InPr'Oc.ACM8IGI(DD\nInti.ConfeTence on}(nowledge Discovery andDatalVlining. AAAIPress,2000.\n[229]D.Donjerkovic andR.Ramakrishnan. Probabilistic optiInization oftopNqueriesIn\nPTOC.Inti.Conf.onVeryLargeDatabases, 1999.\n[230]W.DuandA.Eltnagarrnid. Quasi-serializability: Acorrectness criterion forglobal\nconcurrency controlininterbase. InProc.Intl.Conf.onVeryLa'ryeDatabases, 1989.\n(231]\\V.Du,R.Krishnarnurthy, andM.-C.Shan.Queryoptiruization inaheterogeneous\nDBlVIS. InPTOC.Int!.ConIonVeTyLaTgeDatabase8, 1992.\n[232]R.C.DubesandA..Jain.Clustering f\\1ethodologies inExplonLtory DataAnalysi.s,\nAdvances 'inC01npnters. Acadelnic Press,NewYork,1980.\n[233]N.Duppe!. Parallel SQLonTANDE1\\1 'sNonStop SQL.IEEECOA1PCON, 1989.\n[2:34]H..Edelstein. Thechallenge ofreplication, Parts1and2.DBAfS: Database andClient\u00ad\nServerSolutions, 1995.\n[235J\\V.Effelsberg andT.Haerder. Principles ofdatabase bufferrnanagement. AC1\\l[Trans\u00ad\nactions on,Database Systems, ~)(4):560--595, 1984.\n[236]1\\/['H.Eich.Aclassification andcOlTlparison ofrnainlTlCrnory database recovery tech\u00ad\nniques.InPrOf:.IEEEIntZ.Conf.onDataEngineering, 1987.\n(2~37JA.Eisenberg andJ.TYlelton. SQL:1999 ,forrnerly kno\\vnasSQL:3ACNfSIG.A10D\nRecord, 28(1):1:31\u00b7-1~38, 1999.\n[238]A.ElAbbadi. Adaptive protocols forrnanaging replicated distributed databases. In\nIEBB8yrnp. 011Parnllel andDistributed Proccs\"in,g, 1991.", "1047": "REFERE1VCE\", 1017\n,$\n[239]A.EIAbbadi, D.Skeen,andF.Cristiano Anefficient, fault-tolerant protocol forrepli\u00ad\ncateddatamanagenlent. InACk[Syn\"tp.onPrinciples ofDatabaBc Systems, 1985.\n[240JC.Ellis.Concurrency inLinearHashing. AClv[Trnnsuct'lons all,Database Sllsterns,\n12(2):195\u00b7\u00b7\u00b7\u00b7\u00b7217, 1987.\n[241]A.Ehnagarrnid. Database Trunsaction J.vfodelsfaTAd'uanced Applications. l\\ilorgan\nKaufIllann,1992.\n[242]A.Elrnagannid, J.,Hng,\\V.Kinl,O.Bukhres, andA.Zhang. GlobalcOllunitability\ninliluitidatabase systerns. IEEETransactions onj(rwwledge andDataBngirteering,\n8(5):816824, 1996.\n[243]A.Elrnagarrnid, A.Sheth,andN1.Liu.Deadlock detection algorithms indistributed\ndatabase systenls. InProc..IEEEIntl.Conf.onDataEngineering, 1986.\n[244]R.ElmasriandS.Navathe. Objectintegration indatabase design.InProc.IEEEIntl.\nConf.onDataEngineer'ing, 1984.\n[245]R.EhnasriandS.Navathe. Fundamentals ofDatabase Systems. Benjamin-Curnrnings,\n3edition, 2000.\n[246]R.Epstein. Techniques forprocessing ofaggregates inrelational database systeIlls.\nTechnical report,DC-Berkeley, Electronics Research Laboratory, M798,1979.\n[247]R.Epstein, M.Stonebraker, andE.Wong.Distributed queryprocessing inarelational\ndatabasesystem. InProc.AC!vISICAI0D Conf.onthe!vlanagement ofData,1978.\n[248]M.Ester,H.-P.Kriegel, J.Sander, M.Wimmer, andX.Xu.Incremental clustering for\nmininginadatawarehousing environment. InProc.Intl.Conf.OnVeryLargeData\nBases,1998.\n[249]M.Ester,H.-P.Kriegel, J.Sander,andX.Xu.Adensity-based algorithm fordiscov\u00ad\neringclusters inlargespatialdatabases withnoise.InProc.Intl.ConI.onKnowledge\nDiscovery inDatabases andDataJl;/ining, 1995.\n[250]J\\1.Ester,H.-P.Kriegel, andX.Xu.Adatabase interface forclustering inlargespatial\ndatabases. InProc.Intl.ConI.onKnowledge Discovery inDatabases andDataMining,\n1995.\n[251]K.Eswaran andD.Chamberlin. Functional specification ofasubsysteIll fordatabase\nintegrity. InProc.Intl.ConI.onVeryLar:qeDatabases, 1975.\n[252]K.Eswaran, .J.Gray,R.Lorie,and1.Thaiger. Thenotionsofconsistency andpredicate\nlocksinadatabasesystern. CornrnunicatJons oftheAC!v[, 19(11):624~-6~3~3, 1976.\n[253]\n[254]\n[256]\n[257]\n[258]\n[259]R.Fagin. ~1ultivalued dependencies a.ndanewnornmlfonnforrelational databases.\nAC]v[Trnnsact'ions onDatabase Systerns, 2(~3):262\u00b7278, 1977.\nR.Fagin.Normal fonnsandrelational database operators. InProc.AC.l\\.:fSlCAI0D\nConf.ontheJvlanagernent ofData,1979.\nR.Fagin.Anonnalformforrelational databclses thatisba...'3edondornains andkeys.\nAC.J\\,fTrnnsactions onDatabase Systerns, 6(;3):~)87-~415,198!.\nR.Fagin,.1.Nievergelt, N.Pippenger, andH.Strong.Extendible Hashing--\u00b7a fastaccess\nrnethod fordynarnic files.ACit!Transactions onDatabase Systems, 4(3),1979.\nC.Faloutsos. Accessrnethods fortext.ACl\\lCmn]Juting Survey\", 17(1):49~\"74, 1985.\nC.Faloutsos. 8eaTC~hing l\\Iultirnedia Databases byContent KluwerAcadernic, 1996.\nC.I.i'aloutsos andS.Christodoulakis. Signature files:Anaccessrnethod fordocurnents\nanditsanalytical perforrnance evaluation. ACAlT1'anBact'ions onOificeInforrnal'ion\nSystems, 2(4):267288, 1984.", "1048": "1018 DA.'I'ABASE NIANAGEivIENT SYSTEI\\1S\n[260]C.Faloutsos andH.Jagadish. OnB-Treeindicesforskeweddistributions. InProc.Inti.\nConf.onVeryLargeDataba ..ges,1992.\n[261JC.Faloutsos, R.Ng,and T.Sellis.Predictive loadcontrolforflexiblebufferallocation.\nInProc.Intl.Conf.on\\feryLaryeDatabases, 1991.\n[262JC.Faloutsos, M.Ranganathan, andY.ivfanolopoulos. Fa..\"tsubsequence lnatching in\ntitne-series databases. InProc.ACA1SIGAfOD Conj.ontheA1anagement ofData,\n1994.\n[263]C.Faloutsos andS.Rasenlan. Fractals forsecondary keyretrieval. InAC1\\I1Symp.on\nPr~inciples ofDatabase 8yste'ms, 1989.\n[264]M.Fang,N.ShivakuIIlar, H.Garcia-Molina, R.Motwani, andJ.D.Ullrnan. Cornputing\nicebergqueriesefficiently. InProc.Intl.ConlOn VeryLargeDataBases,1998.\n[265]U.Fayyad, G.Piatetsky-Shapiro, andP.Srnyth.TheKDDprocessforextracting useful\nknowledge fromvolumes ofdata.Co'rnmunications oftheACJvI,39(11):27--34, 1996.\n[266]U.Fayyad, G.Piatetsky-Shapiro, P.Smyth,andR.Uthurusamy, editors. Advances in\nKnowledge Discovery andDataMining. MITPress,1996.\n[267]U.FayyadandE.Simoudis. Dataminingandknowledge discovery: T'utorial notes.In\nInti.JointConf.onArtificial Intelligence, 1997.\n[268]U.M.FayyadandR.Uthurusamy, editors. Proc.Intl.ConI'onKnowledge Discovery\nandDataMining. AAAIPress,1995.\n[269]M.Fernandez, D.Florescu, J.Kang,A.Y.Levy,andD.Suciu.STRUDEL: AWebsite\nmanagement system. InProc.ACMSIGMOD Conf.onManagement ofData,1997.\n[270]M.Fernandez, D.Florescu, A.Y.Levy,andD.Suciu.Aquerylanguage foraWeb-site\nmanagement system. SIGMOD Record(ACMSpecialInterest GrouponManagement\nofData),26(3):4-11, 1997.\n[271]]\\II.Fernandez, D.Suciu,andW.Tan.SilkRoute: tradingbetween relations andXML.\nInProceedings oftheWWW9, 2000.\n[272]S.Finkelstein, M.Schkolnick, andP.Tiberio. Physical database designforrelational\ndatabases. IBMResearch ReviewRJ5034,1986.\n[273]D.Fishrnan, D.Beech,H.Cate,E.Chow,T.Connors, J.Davis,N.Derrett, C.Hoch,\nW.Kent,P.Lyngbaek, B.Nlahbod, M..-A.Neirnat, T.Ryan,andM.-C.Shan.Iris:an\nobject-oriented database rnanagernent systemACMTransactions onOfficeInfor\"mation\nSysterns, 5(1):48--69, 1987.\n[274JC.Flerning andB.vonHalle.IIandbook ofRelational Database Desig'n.Addison-Wesley,\n1989.\n[275]D.Florescu, A.Y.Levy,andA.O.IVlendelzon. Database techniques fortheWorld\u00ad\nWideWeb:Asurvey. SIGlvl0D Record(ACMSpecialInterest GrouponlYfanagement.\nofData),27(a):59\u00b7\u00b774, 1998.\n[276]vV.Fordand:LvI.S.Balun.Sec7.lreElectnJrt'ic Cornrnerrx: Building theInfrastructure for\nDigital8-ignaturcs andBnc'ryption (2ndEdition). Prentice Hall,2000.\n[277]F.F'otouhiahdS.Prarnanik. OptirnaJ secondary storageaccesssequence forperfonning\nrelational join.IEEE7'ransactions onj{nowledge andDataEngineering, 1(:3):J18\u00b7\u00b7';328,\nl!)89.\n[278J:LvI.I''owlerandK.Scott.[fAILD'lstilled: Applying theS't(J/ndaTd Object.A1.odeli'11,g Lan\u00ad\nguage.Addison-\\Nesley, 1999.\n[279]\\N.B.FrakesandR.Baeza-Yates, editors. Inforrnation Retrieval: J)al;a8tructuTes and\nAlgorithms. PrenticeHall, 1992.", "1049": "REFERENCES 1019\n[280JP.Franaszek, J.Robinson, andA.Thornasian. Concurrency controlforhighcontention\nenvironrnents. ACArfTransactions onDatabase Systems, 17(2),1992.\n[281]P.Franazsek, J.Robinson, andA.Thornasian. Accessinvariance anditsuseinhigh\ncontention enviroIlrnents. InProc.IEEEIntel'nat'ional Conference onDataEng'ineering,\n1990.\n[282]NI.Franklin. Concurrency controlandrecovery. InHandbook ofCOmp'l.lter Science,\nA.B.Tucker(ed.))eRePress,1996.\n[283]IV1.:FrankliIl, N1.Carey,andIV1.Livny.Localdiskcaching forclient-server database\nsysterlls. InPrnc.Intl.Conj.onVeryLargeDatabases, 1993.\n[284]IV1.Franklin, B.Jonsson, andD.Kosslnan. Perfonnance tradeoffs forclient-server query\nprocessing. InProc.AC]l.lSIGMOD Conj.ontheManagernent ofData,1996.\n[285]P.Fraternali andL.Tanca.Astructured approach forthedefinition ofthesemantics\nofactivedatabases. AeMTrYlnsactions onDatabase Systems, 20(4):414---471, 1995.\n[286]M.W.Freeston. TheBANGfile:AnewkindofGridFile.InProc.ACMSIGMOD\nConj.ontheJvIanagement ofData,1987.\n[287].1.Freytag. Arule-based viewofqueryoptimization. InProc.ACJvISIGJvIOD Conj.on\ntheManagernent ofData,1987.\n[288]O.Friesen, A.Lefebvre, andL.Vieille.VALIDITY: Applications ofaDOODsystem.\nInIntZ.Can/.onExtending Database Technology, 1996.\n[289]J.FryandE.Sibley.Evolution ofdata-base management systems. ACMComputing\nSurveys, 8(1):7-42, 1976.\n[290]N.Fuhr.Adecision-theoretic approach todatabase selection innetworked ir.AClvI\nTransactions onDatabase Systems, 17(3),1999.\n[291]T.Fukuda, Y.Morimoto, S.Morishita, andT.Tokuyama. Miningoptinlized association\nrulesfornumeric attributes. InACJvISyrnp.on.Principles ofDatabase Systems, 1996.\n[292]A.F\\utado andM.Casanova. Updating relational views.InQueryProcessing in\nDatabase Systems. eds.W.Kiln,D.S.ReinerandD.S.Batory,Springer-Verlag, 1985.\n[293]S.Fushin1i, M.Kitsuregawa, andH.Tanaka. Anoverview ofthesystems software\nofaparallel relational database machine: Grace.InProc.Intl.Conf.onVeryLarge\nDatabases, 1986.\n[294]V.GaedeandO.Guenther. Multidinlensional accessrnethods. C01nputing Surveys,\n30(2):170---231, 1998.\n[295]H.Gallaire, J.IV1inker, and.1.-11.Nicolas(eds.).Advances inDatabase TheoT1.J) Vols.1\nand2.Plenum Press,1984.\n[296]H.Gallaire andJ.l\\!Iinker (cds.).LogicandDataBases.Plcnurn Press,1978.\n[297]S.Ganguly, \\tv.Hasan,andR.Krishnarnurthy. Queryoptirnizatioll forparallelexecu\u00ad\ntion.InPTOC.ACAlSIGAfOD Conj.ontheA1anagement ofData,1992.\n[298JR.GanskiandH.\\i\\long.Optirnization ofnestedSQL qUf~riesrevisited. InPTOC.AOAI\nSIGAI0D C7onj.ontheAlanagement ofData,1987.\n[299)V.Ganti,.1.Gehrke, andR.Rmnakrishnan. DenlOu: rniningandrnonitoring evolving\ndata.IEEETrnnsaclions onKnO'llJledgc andDataEnginee1\"ing, 1;\u00b7:~(1),2001.\n[:300]V.Ganti,J.Gehrke,R.H.arn::lkrishnan, and\\tV.-Y.Loh.Focus:afranH~\\Vork forrneasur\u00ad\ningchanges indatacharacteristics. InPr'Oc.AOf'llSyrnposiurT1 on,Principlcs ofDataba.se\nBysterns, 1999.", "1050": "1020 DATABASE J\\'IANAGElVIENT SYSTEN!S\n(301]V.Ganti,J.E.Gehrke, andR.RaIuakrishnan. Cactus\u00b7-clustering categorical datausing\nsununaries. InPruG.ACAlIntI.Conf.onKnowledge Discovery inDatabases, 1999.\n[302]V.Ganti,R.Rarnakrishnan, .T.E.Gehrke, A.Powell,andJ.French. Clustering large\ndatasets inarbitrary lnetricspaces.InFroe.IEEEIntI.Conf.DataEngineering, 1999.\n[~30a]H.Garcia-IvIolina andD.Barbara. Howtoassignvotesinadistributed systenl. Jou17~al\noftheACAJ,32(4),1985.\n[~304JH.Garcia-J\\Iolina, R.Lipton,andJ.Valdes.A11lassive Inemory systernmachine. IEEE\nTran8action.s onCompute'rs, C33(4)::391'-'-399, 1984.\n[305]H.Garcia-rvIolina, J.Ullman, andJ.Widom. Database SY8tem,s: TheCO'mplete Book\nPrentice Hall,2001.\n[306]H.Garcia-:Nlolina andG.Wiederhold. Read-only transactions inadistributed database.\nACMTransactions onDatabase Syste'ms, 7(2):209~234, 1982.\n[307JE.Garfield. Citation analysis asatoolinjournalevaluation. Science, 178(4060):471\u00ad\n479,1972.\n[308]A.GargandC.Gotlieb. Orderpreserving keytransformations. ACMTransaction8 on\nDatabase Systems, 11(2):213--234, 1986.\n[309]J.E.Gehrke, V.Ganti,R.Ramakrishnan, andW.-Y.Loh.Boat:Optimistic decision\ntreeconstruction. InProc.ACNISIGNIOD Conj.onManagnwnt ofData,1999.\n[310]J.E.Gehrke, F.Korn,andD.Srivastava. Oncomputing correlated aggregates over\ncontinual datastreams. InProc.ACNISIGil/lOD Conj.onthel\\1anagement ofData,\n2001.\n[311]J.E.Gehrke, R.RaInakrishnan, andV.Ganti.Rainforest: Aframework forfastdecision\ntreeconstruction oflargedatasets. InProc.Intl.Conf.onVeryLargeDatabases, 1998.\n[312]S.P.Ghosh.DataBaseOrganization forDataManage'rnent (2nded.).Academic Press,\n1986.\n[313]P.B.Gibbons, Y.l\\1atias,andV.Poosala. Fastincrelnental rnaintenance ofapproximate\nhistogran1s. InProe.oftheConf.onVeryLargeDatabases, 1997.\n[314]P.B.Gibbons andY.Matias. Newsarnpling-based summary statistics forirnproving\napproximate queryanswers. InProc.ACMSIGNIOD Conf.ontheNlanagement of\nData,pages331-342. ACMPress,1998.\n[~n5]D.Gibson,J.N1.Kleinberg, andP.Raghavan. Clustering categorical data:Anapproach\nbasedondynamical systems. InProc.Int!.Conj.VeryLaTgeDataBases,1998.\n[316]D.Gibson, J.:N1.Kleinberg, andP.Raghavan. Inferring webcomrnunities fronllink\ntopology. InProc.AC/vIConj.onHypertext, 1998.\n[317JG.A.Gibson. Redundant DiskArrays: Reliable: Parallel Secondary Storage. AnACl\\1\nDistinguished Dissertation 1991.:NUTPress,1992.\n[318]D.Gifford. vVeighted votingforreplicated data.InACAtfSyrnp.onOperating Systems\nPrinciples, 1979.\n[319]A.C.Gilbert, Y.Kotidis~ S.Muthukrishnan, andN1.J.Strauss. Surfingwavelets 011\nstreams: One-pass sumrnaries forapproximate aggregate queries. InProc.oftheConf.\nonVeryLargeDatabases, 2001..\n[320]C.F.Goldfarb andP.Prescod. The)(MLHandbook. PrenticeHall, 1998.\n[321]R.Goldnlan and.1.vVidorIl. DataGuides: enabling queryforrnulation andoptiInization\ninsemistructured databases. In.Proc.Intl.Conf.onVeryLargeDataBases,pa,ges\n436--445, H~97.", "1051": "1021\n[322]J.GoldsteinlR.Ramakrishnan, U.Shaft,andJ.-B.Yu.Processing queries bylinear\nconstraints. InProc.ACAlSyrnposiurn onPl'ineiples ofDatabase Sy8telns, 1997.\n(32:3]G.Graefe. Encapsulation ofparallelisln intheVolcano queryprocessing systeul. In\nProc.ACAtf8IGA-fOD Con].ontheJvfanagernent ofData,1990.\n(324]G.Graefe.Queryevaluation techniques forlargedatabases. AGA\u00a3Cornp'uti>ng Surveysl\n25(2),1993.\n[325]G.GraefelR.Bunker, andS.Cooper. Ha.\"hjoinsandhashtealnsilllnicrosoft SQL\nServer:InProc.Inti.Conlon VeryLar:qeDatabases, 1998.\n[:326]G.GraefeandD.De\\iVitt. TheExodus optirnizer generator. InProc.ACi\\,1SIGAlOD\nConf.onthe1vfanagernent ofData,1987.\n[327]G.GraefeandK.\u00a5lard.Dynanlic queryoptimization plans.InProc.ACAlSIG1vfOD\nConf.ontheAlanagement ofData,1989.\n[328]M.Graham, A.:Nlendelzon, andM.Vardi.Notions ofdependency satisfaction. Journal\noftheACiVf,33(1):105-129, 1986.\n[329]G.Grahne. ThePToblem oflncornplete Inform,ation inRelational Databases. Springer\u00ad\nVerlag, 1991.\n[~~~~O]L.Gravano, H.Garcia-lVlolina, andA.Tornasic. Gloss:text-source discovery overthe\ninternet. ACAfTransactions onDatabase Systerns, 24(2),1999.\n[331]J.Gray.Notesondatabaseoperating systems. InOperating Systems: AnAdvanced\nCourse. eds.Bayer,Grahanl, andSeegmuller, Springer-Verlag, 1978.\n[332]J.Gray.Thetransaction concept: Virtuesandlilnitations. InPT'oc.Intl.Conf.onVery\nLaTgeDatabases, 1981.\n[333]J.Gray.Transparency initsplace~the caseagainsttransparent accesstogeographically\ndistributed data.Tandem ComputeT's: TR-8.9-1, 1989.\n[334].J.Gray.TheBench'markHandbook: foT'Database andTransaction Processing System,s.\n1\\1organ Kaufmann, 1991.\n[3:3.5].J.Gray,A.Bosworth, A.Layrnan, andH.Pirahesh. Datacube:Arelational aggregation\noperator generalizing group-by, cross-tab andsub-totals. InProc.IEEEIntl.COrtf.on\nDataEngineering, 1996.\n[:3:36]J.Gray,R.Lorie,G.Putzolu, and1.Traiger. Granularity oflocksanddegrees of\nconsistency inashareddatabase.InProc.ofIFf?Working Conf.on1I,lodelling of\nDataBaselvfanagement 8ysterns, 1977.\n[:3:37]..J.Gray,P.McJones, ]\\:1.Blasgen, B.Lindsay, R.Lorie,G.Putzolu, T.Price,and\n1.Traiger. Therecovery manager oftheSysternRdatabase Inanager. ACA1C;ornp'llf'ing\nS'vrvcys, 13(2):223\"'242, 1981.\n[3:38]J.GrayandA.Reuter. TTansaction Processing: Concepts andTechniq11es. rv10rgan\nKaufmann, 1992.\n[339]P.Gray.Logic.AlgebralandDatabases. John\\\\liley,1984.\n[:3,10]1\\-1.Greenwald andS.Khanna. Space-efficient onlinecornputation ofquantile SUlIlluaries.\nInProc.AC1\\1SlGJt10D Conf.onA1anagement ofData,2001.\n[:341]P.Griffiths andB.\"Vade.Anauthorization rnechanisrn forarelational databC:kse system.\n/leAfrlhlnsactions onDatabase 8yslerns, 1(:3):242---255, 1976.\n[:342JG.Grinsteill. VisualizaJion anddatarnining. InInti.Con].onKnowledge Disco'uery in\nDatabases, 1996.", "1052": "1022 DATABASE rvlANAGEfvlENT SYSTE\u00a5S\n[343]S.Guha,N.lVlishra, R.lVIotwani, andL.O'CaHaghan. Clustering datastreanlS. In\nProc.oftheAnnlwl SYlnp.onFoundations ofCornputer Seience, 2000.\n[~~44]S.Guha,R.Rastogi, andK.Shilll.Cure:anefficient clustering algorithrn forlarge\ndataba.,,;;es. InProc.AClvlSIGlvfOD Conf.onA1anagernent ofData,1998.\n[345]S.Guha,N.Kondas, andK.Shirn.Datastreamsandhistogralns. InProc.oftheACA:f\nSymp.onTheoryofComputing, 2001.\n[346]D.Gunopulos, H.l\\1annila, R.Khardon, andH.Toivonen. Datarnining, hypergraph\ntransversals, andrnachine learning. InProc.AC}v[Syrnposium onPrinciples ofDatabase\nSystem,s, pages209-216, 1997.\n[347]D.Gunopulos, H.Nlannila, andS.Saluja. Discovering allmostspecificsentences by\nrandomized algorithms. InProc.oftheInti.Conf.onDatabase Theory,voluille1186of\nLecture NotesinCo'mputer Science, pages215-229. Springer, 1997.\n[348]A.Guptaand1.Munlick. Materialized Views:Techniques] Implementations] andAp\u00ad\nplications MITPress,1999.\n[349]A.Gupta,I.Munlick, andV.Subrahmanian. Maintaining viewsincrementally. InProc.\nACNISIG1vfOD Conf.onthelvIanagement ofData,1993.\n[350]A.Guttman. R-trees: adynarnic indexstructure forspatialsearching. InProc.ACM\nSIGMOD Conf.onthelvfanagernent ofData,1984.\n[351]L.Haas,W.Chang,G.Lohman, J.McPherson, P.Wilrns,G.Lapis,B.Lindsay, H.Pi\u00ad\nrahesh, M.Carey,andE.Shekita. Starburst mid-flight: Asthedustclears.IEEE\nTransactions onKnowledge andDataEngineering, 2(1),1990.\n[352]P.Haas,J.Naughton, S.Seshadri, andL.Stokes. Sanlpling-based estimation ofthe\nnumber ofdistinct valuesofanattribute. InProc.Intl.Conf.onVeryLargeDatabases,\n1995.\n[353]P.HaasandA.Swarni.Sampling-based selectivity estinlation forjoinsusingaugmented\nfrequent valuestatistics. InPrne.IEEEIntl.Conf.onDataEngineering, 1995.\n[354]P.J.Haasand.J.M.Hellerstein. Ripplejoinsforonlineaggregation. InProc.AClvI\nSIGMOD Conf.ontheA:fanagement ofData,pages287-298. ACMPress,1999.\n[355]T.Haerder andA.Reuter. Principles oftransaction oriented database recovery-a\ntaxonorny. ACMCornputing Surveys, 15(4),1982.\n[356)U.HaliciandA.Dogac. Concurrency controlindistributed databases through tirne\nintervals andshort-term locks.IEEETransaction8 onSoftwaTe Engineering, 15(8):994-\u00ad\n100~3,1989.\n[;357]N1.HalLCOTeWebPrograrnrning: IfTML]Java,CGI J\u20ac.1Javasc'lipt. Prentice-Hall,\n1997.\n[358)P.Hall.Optirnization ofasinlpleexpression inarelational databasesystern. IBM\nJournal ofResearch andDevelop'ment, 20(3):244--257, 1976.\n[;359]G.Harnilton, R.G.Cattell, and1:1.Fisher. JDBCDatabase Accc.ssWithJava:A\nTutorial andAnnotated Refe-rence. JavaSeries.Addison-Wesley, 1997.\n[360]IVI.Harnrner andD.lIIcLeod. Semantic integrity inarelational databa,sesystem. In\nProc.Intl.Conf.onVeryLargeDatabases, 1975.\n[~~61]J.HanandY.Fu.IJiscovery ofrnultiple-Ievel association rulesfrornlargedatabases.\nInPr'Oc.Intl.Conf.onVer'YLar:qeDatabases, 1995.\n[:362]D.Hanel.Constr\"uction andAsscssrnent ofClassification Rules.John\\,\\liley&SOilS,\nChichester, England, 1997.t", "1053": "lO~3\n[:36:3]J.Hanandivi.Kamber. Datalvlining: Cancellt\" andTechn'iques. iv1.organ Kauflnann\nPublishers, 2000.\n[364]J,Han,J.Pei,andY.Yin.wIiningfrequent patterns without candidate generation. In\nProc.ACAri8IGlvfOD Inti,Conf.onlvfanagernent ofData,pages 1~12,2000.\n[;365]E.Hanson. Aperfonnanee analysis ofvie-\\vlllaterialization strategies. InProc.ACAf\n8IOA10D Conf.ontheA1anagement ofData,1987.\n[366]E.Hanson. Rulecondition testingandactionexecution inAriel.InProc.ACAfSIGA10D\nConf.ontheAfanagernent ofData,1992.\n[367]V.Harinarayan, i\\.Rajaralnan,andJ.Ulhnan. Implelnenting datacubesefficiently. In\nProc.ACAfSIGltfOD Conf.arttheManagement ofData,1996.\n[368]J.Haritsa, 1V1.Carey,and11.Livny.Onbeingoptilnistic aboutreal-tilne constraints.\nInACA'1Syrnp.onp,,'inciples ofDatabase Systems, 1990.\n[369]J.Harrison andS.Dietrich. Nlaintenance ofrnaterialized viewsindeductive databases:\nAnupdatepropagation approach. InProc.Workshop onDeductive Databases, 1992.\n[370]T.Ha..stie, R..Tibshirani, andJ.H.Friednlan. TheElements ofStatistical Learning:\nDataMining, Inference, andPrediction. Springer Verlag,2001.\n[371]D.Heckennan. Bayesian networks forknowledge discovery. InAdvances inKnowledge\nDiscovery andDataMining. eds.U.M.Fayyad, G.Piatetsky-Shapiro, P.SInyth,andR..\nUthurusaIny, MITPress,1996.\n[372]D.Heckerman, H.Mannila, D.Pregibon, andR,Uthurusamy, editors. Proc..Intl.Conf.\nonKnowledge Disc07Jery andDataA1ining. AAAIPress,1997.\n[373]J.Hellerstein. Optimization andexecution techniques forquerieswithexpensive meth\u00ad\nods.Ph,D.thesis,University ofWisconsin-Aladison, 1995.\n[374]J.Hellerstein, P.Haas,andH.Wang. Onlineaggregation InProc.ACMSIGNIOD\nConf.ontheNlanagernent ofData,1997.\n[~375]J.Hellerstein, E.Koutsoupias, andC.Papadirnitriou. Ontheanalysis ofindexing\nschemes. InProceed'ings oftheACN!Syrnposi7.lm, onPrinciples ofDatabase Systems,\npages 249~256. AClVIPress,1997.\n[376].1.Hellerstein, .1.Naughton, andA.Pfeffer. Generalized searchtreesfordatabase sys\u00ad\ntems.InPrnc.Inti.Conf.onVeryLar:qeDatabases, 1995.\n[377]J.N1.Hellerstein, E.Koutsoupias, andC.H.Papadirrlitriotl. Ontheanalysis ofindexing\nschclnes. InPTOC.ACAfSymposium, onPrinciples ofDatabase SysterrLs, pages249\u00b7\u00b7\u00b7\u00b7256,\n1997.\n[:378]C.Hidber Onlineassociation rulernining. InProc.ACAfSIGNfOD ()onf.on,the\nAfanagernent ofData,pages145\u00b7\u00b7\u00b7\u00b7-156, 1999.\n[:379]R.H.imnlcrocder, G.Lausen, B.Ludaescher, andC.Schlepphorst. Onadeclarative\nsernantics forWebqueries. Lect-ure Notes'inComputer Science, 1341:386\u00b7\u00b7...;398, 1997.\nU~80]C.-'1'.Ho,R.Agrawal, N.rvIegiddo, andR.Srikant. RangequeriesinOLAPdatacubes.\nInProc.ACAlSIGN/OJ) Conf.ontheA1anagernent ofData,1997.\n[:381JS.Holzner. Xl'l/[LCornplete. ?v1cCraw-Hill, 1998.\n[:382]I).Hong,T.Johnson, andU.Chakravarthy. Real-tirne transaction scheduling: Acost\nconscious approach. InPr'Oc.ACAfSIGAfOD Conf.ontheAlanagcment ofData,1993.\n[383J\\V.HongandIv1.Stonebraker. Optirnization ofparallelqueryexecution plansinXPRS.\nInProc.Intl.Conf.onParallel andDistributed Injo-rmation 8ystem,8, 1991.", "1054": "1024 DATABASE IviANAGEMENT SYSTEMS\n[:384}\\\u00a5.-C.HOllandG.Ozsoyoglu. Statistical estimators foraggregate relational algebra\nqueries. AG1VfTransactions onDatabase Systems, 16(4),1991.\n[385]H.HsiaoandD.DeWitt. Aperformance studyofthreehighavailability datareplication\nstrategies. InPr-oe.Inti.Conf.o'nParallel andD'istributed Info'rmation Systerrts, 1991.\n[386JJ.Huang,J.Stankovic, K.RamaIllrithaIll, andD.Towsley. Experimental evaluation of\nreal-tirneoptiInistic concurrency controlSChell1es. InProc.Intl.Conf.onVeryLa'rge\nDatabases, 1991.\n[387}Y.Huang,A.Sistla,andO.vVolfson. Datareplication forrrlObilecOlnputers. InProc.\nAC.L\\>fSIGA10D Conj.onthe.A1anagement ofData,1994.\n[388]Y.HuangandO.Wolfson. AcOlnpetitive dynarnic datareplication algorithm. InProc.\nIEEECSIEEEInti.Conf.onDataEngineering, 1993.\n[389]R.Hull.Managing semantic heterogeneity indatabases: Atheoretical perspective. In\nACMSymp.onPrinciples ofDatabase Syste'ms, 1997.\n[390]R.HullandR.King.Semantic database modeling: Survey,applications, andresearch\nissues.ACMCornputing Surveys, 19(19):201-260, 1987.\n[391JR.HullandJ.SuoAlgebraic andcalculus querylanguages forrecursively typedcomplex\nobjects. Journal ofComputer andSystemSciences, 47(1):121-156, 1993.\n[392]R.HullandM.Yoshikawa. ILOG:Declarative creation andrnanipulation ofobject\u00ad\nidentifiers. InProc.Inti.Conf.onVeryLargeDatabases, 1990.\n[393]G.Hulten, L.Spencer, andP.Domingos. MiningtillIe-changing datastrearns. InProc.\nAClvISIGKDD Intl.Conference onKnowledge Discovery andDatal\\!Jining, pages97\u00ad\n106.AAAIPress,2001.\n[394]J.Hunter. JavaServletProgramming. O'Reilly Associates, Inc.,1998.\n[395]T.Imielinski andH.Korth(eds.).MobileComputing. KluwerAcadeluic, 1996.\n[396]T.Imielinski andW.Lipski.Incomplete information inrelational databases. Journal\noftheAClvI,31(4):761-791, 1984.\n[~{97]T.Imielinski andH.Mannila. Adatabase perspective onknowledge discovery. Com\u00ad\nmunications oftheACM,38(11):58-64, 1996.\n[398JT.Imielinski, S.Viswanathan, andB.Badrinath. Energyefficient indexing onair.In\nProc.ACMSIGJv!OD Conf.ontheManagement ofData,1994.\n[399]Y.Ioannidis. Queryoptimization. InHandbook ofComp'uteT Science. ed.A.B.Tucker,\nCRCPress,1996.\n[400]Y.Ioannidis andS.Christodoulakis. Optirnal histograms forliIlliting worst-case error\npropagation inthesizeofjoinresults.ACMTransactions onDatabw,e Systems, 1993.\n[401]Y.Ioannidis andY.Kang.Randornized algorithms foroptimizing largejoinqueries. In\nProc.ACA1SIGlvl0D Conf.ontheJvfanagement ofData,1990.\n[402]Y.Ioannidis andY.Kang.I.left-deep vs.bushytrees:Ananalysis ofstrategy spaces\nanditsirnplications forqueryoptirnization. InPTOC.ACAfSIG1VfOD Conf.onthe\njVfanagemerd ofData,1991.\n[403]Y.Ioannidis, R.Ng,K.Shirn,andT.Sellis.Parall1etric queryprocessing. InPn)c.Ina.\nConf.onVeryLargeDatabases, 1992.\n[404]Y.Ioannidis andR.Rarnakrishnan. Containment ofconjunctive queries: Beyond rela\u00ad\ntions (l\"Ssets.ACA1TransactioTl,s onDatabase Sy8terns, 20(3):288--324, 1995.\n[405JY.E.Ioannidis. Universality ofserialhistograrns. InProc.Intl.Conf.onVe'ryLarge\nDatabase8, 199:3.", "1055": "REF\"1ERENGES 1025\n~\n[406]H..Jagadish, D.Lieuwen, R. Rastogi, A.Silberschatz, andS.Sudarshan. Dali:A\nhighperfonnance Inain-rnClnory storagernanager. InProc.Inti.Conf.onVeryLa'rge\nDatabases, 1994.\n[407]A.K.JainandR.C.Dubes.Algor'ithrns forClllster'ing Data.PrenticeHall, 1988.\n[408]S.JajodiaandD.Mutchler. Dynamic votingalgorithllls forrnaintaining theconsistency\nofareplicated database. ACA,1Transact'ions onDatabase Systerns, 15(2):23{}-280, 1990.\n(409)S.JajodiaandR.Sandhu. Polyinstantiation integrity inmultilevel relations. InProc.\nIEEESyrnp.onSecurity andPT'ivacy, 1990.\n[410]NI.JarkeandJ.Koch.Queryoptimization indatabase systerns. ACA1Cornputing\nSUT'veys, 16(2):111-152, 1984.\n[411]K.S.JonesandP.Willett, editors. Readings inInformation RetT'ieval. IvIultimedia\nInfonnation andSystems. Morgan Kaufmann Publishers, 1997.\n[412]J..louandP.Fischer. Thecomplexity ofrecognizing 3NFschemes. Inforrnation Pro\u00ad\ncessingLetters,14(4):187---190, 1983.\n[413]N.KabraandD.J.DeWitt. Efficient mid-query re-optirnization ofsub-optimal query\nexecution plans.InProc.ACMSIGMOD Intl.Conf.onlvIanagement ofData,1998.\n[414]Y.Kambayashi, M.Yoshikawa, andS.Yajirna. Queryprocessing fordistributed\ndatabases usinggeneralized semi-joins. InProc.ACMSIGMOD Conf.onthelvlan\u00ad\nagement ofData,1982.\n[415]P.Kanellakis. Elements ofrelational database theory. InHandbook ofTheoretical\nComputer Science. ed.J.VanLeeuwen, Elsevier, 1991.\n[416]P.Kanellakis. Constraint programming anddatabase languages: Atutorial. InACM\nSymp.onPrinciples ofDatabase Systems, 1995.\n[417]H.Kargupta andP.Chan,editors. Advances inDistributed andParallel Knowledge\nDiscovery. MITPress,2000.\n[418]L.Kaufman andP.Rousseeuw. Finding GroupsinData:AnIntroduction toCluster\u00ad\nAnalysis. JohnWileyandSons,1990.\n[419]R.Kaushik, P.Bohannon, J.F.Naughton, andH.F.Korth. Covering indexes for\nbranching pathexpression queries. InProceedings ofSIG!v[OD, 2002.\n[420]D.KeirnandH.-P.Kriegel. VisDB:asystemforvisualizing largedatabases. InPTOC.\nACMSIGMOD Conf.ontheManagement ofData,1995.\n[421]D.KeirnandH.-P.Kriegel. Visualization techniques formininglargedatabases: A\ncomparison. IEEETransactions onKnowledge andDataEngineering, 8(6):923-----938,\n1996.\n[422)A.Keller.Algorithrns fortranslating viewupdatestodatabase updates forviewsinvolv\u00ad\ningselections, projections, andjoins.ACAfSyrnp.onPrinciples ofDatabase Syste'ms,\n1985.\n[423]\\V.Kent.DataandReality, BasicAss'LLTnptions inDataProcessing Reconsidered. North\u00ad\nHolland, 1978.\n[424]W.Kent,R.Ahrned,J.Albert, IVI.Ketabchi, andfv1.-C.Shan.Objectidentification in\nrnulti-database systerns. InIFIPIntl.Conf.onDataS'ernantics, 1992.\n[425]L.Kerschberg, A.Klug,andD.Tsichritzis. Ataxonorny ofdatarnodels. InSysterns\nfaTLm:qeDataBases.eds.P.C.Lockernann andE.J.Neuhold, North-Holland, 1977.\n[426]VV'.Kiessling. Onsenlantic reefsandefficient processing ofcorrelation querieswith\naggregates. InPr-oc.Intl.Conf.onVeryLar:geDatabases, 1985.", "1056": "1026 I)ATABASE JVIANAGE?v1ENT SYSTEtvi~\n[427JIvi.Kifer,\\V.Kiln,andY.Sagiv.Querying object-oriented databases. InProc.ACAJ\nSIOlviODCon,j. onthelvfanagerncnt ofData,1992.\n[428J1V1:. Kifer,G.Lausen, andJ.\\tVu.Logicalfoundations ofobject-oriented andfraIne-based\nlanguages ..lou'rnal oftheAOA4,42(4):741-\u00b7\u00b7\u00b7\u00b7843, 1995.\n[429J:tv1.KiferandE.Lozinskii. Sygraf: lrnpleuwIlting logicprograrns inadatabase style.\nIEEETransactions onSoftware Bngineering, 14(7):922-935, 1988.\n[4:30]W.Kirn.Onoptimizing anSQL-likenestedquery.AONfTransactions onDatabase\nSystents, 7(3),1982.\n[431]\\V.Kirn.Object-oriented database systerIls: Prornise, reality,andfuture.InProc.Intl.\nConIonVe1'yLargeDatabase8, H)9~3.\n[432]V\\l.Kim,J.Garza,N.Ballou,andD.Woelk.Architecture oftheORION next-gcneration\ndatabasc systeln. IEEETransactions onKnowledge andDataEngineering, 2(1):109\u00b7'\"\n124,1990.\n[433]W.KilnandF.Lochovsky (eds.).Object-Oriented Concepts, Databa8es, andApplica\u00ad\nt'ions.Addison-Wesley, 1989.\n[434]W.Kim,D.Reiner, andD.Batory (eds.). Quer1.JProcessing inDatabase Systems.\nSpringer Verlag,1984.\n[435]W.Kirn(ed.).A10dern Database Systerns. ACMPressandAddison-Wesley, 1995.\n[436]R.Kimball. TheDataWarehO'lL8e Toolkit.JohnWileyandSons,1996.\n[437]J.King.Quist:Asystemforsemantic queryoptilnization inrelational databases. In\nPTOC.Inti.Conf.onVeryLargeDatabases, 1981.\n[438]J.M.Kleinberg. Authoritative sourcesinahyperlinked environrnent. InProc.AClV!\n-SIAlV!Syrnp.onDiscrete AlgoTithrns, 1998.\n[439]A.Klug.Equivalence ofrelational algebra andrelational calculus querylanguages\nhavingaggregate fUIlctions. Jov,1twl oftheAClV[,29(3):699-717, 1982.\n[440]A.Klug.Onconjunctive queriescontaining inequalities. JouTnaloftheACA1,35(1):146--\u00ad\n160,1988.\n[441]E.Knapp. Deadlock detection indistributed databa.ses. ACA1'C01npu,t'ing Sur''Vcys,\n19(4):30:l<{28, 1987.\n[442]D.Knuth. TheArtofCornpv,{cr Pr-ograrnrning, Vol.3-- ..-\"-Sorting andSear-ching. Addison\u00ad\nWesley, 1973.\n[443]G.KochandK.Loney. Or-acle: TheCornplete Reference. OraclePress,Osborne\u00ad\nlVlcGraw-Hill, 1995.\n[444]\\tV.Kohler. Asurveyoftechniques forsynchronization andrecovery indecentralized\ncornputer systerns. AC1\\lf()ornputing S1Lr~lJeys, 1:3(2):149 ..--184,1981.\n[445]D.Konopnicki andO.Shmueli. W:3QS: AsysternforWW\\Vquerying. InProc.IEEE\nIntl.Conf.onDataBng'ine(:T'ing, 1997.\n[446]F.Korn,H.Jagadish, andC.Faloutsos. I~fficiently supporting adhocqueriesinlarge\ndatasets oftirnesequences. InPTOC.AeA1SIGllifOD Conf.onA1anagernent ofData,\n1997.\n[4471lYtKornacker, C.fvlohan, etndJ.Hellerstein. Concurrency andrecovery ingeneralized\nsearchtrees.InProc.ACMSIGJI.;10D Conf.onthe!'v1anagenwnt ofData,1997.\n[448]II.Korth,N.Soparkar, andA.Silberschatz. Triggered real-tilne databa..\"es withconsis\u00ad\ntencyconstraints. InPTOC.1ntLConf.onVeryLargeIJatabase8, 1990.", "1057": "REJ?ERE1VCES lCl;27\n[449]H.F.Korth. Deadlock freedoIIl usingedgelocks.ACAJTrunsact'ions onDatabase\n8:t/stem,s,7(4):6;32--..652,1982.\n[450JI).Kosslnann. Thestateoftheartindistributed queryprocessing. ACAtfCornputing\nBuT'veys, :32(4) :422-~\u00b74G9, 2000.\n[451]Y.KotidisandN.Roussopoulos. Analternative storageorganization forROLAP ag\u00ad\ngregateviewsbasedoncubetrees. InProc.A(;.NfSIGAI0D Inti.Conf.onAlanagernent\nofData,1998.\n[452JN.Krishnakulllar andA.Bernstein. Highthroughput escrowalgorithrns forreplicated\ndatabases. InProc.Intl.Conf.onVeryLargeDatabases, 1992.\n[45~1]R.Krishnarllurthy, H.Boral,andC.Zaniolo. Optilnization ofnonrecursive queries. In\nProc.Inti.Conf.onVeryLargeDatabases, 1986.\n[454]J.Kuhns. Logicalaspectsofquestion answering bycOlnputer. Technical report,Rand\nCorporation, R?\\1-5428-Pr., 1967.\n[455]V.Kumar. Perjorrnance ofCOnC'/1,Trency ContTol lv1echanisrns inCentralized Database\nSysterns. PrenticeHall, 1996.\n[456]H.KungandP.Lehillan. Concurrent lnanipulation ofbinarysearchtrees.AClv1Trans\u00ad\nactionsonDatabase Systems, 5(3):354-382, 1980.\n[457]H.KungandJ.Robinson. Onoptimistic rnethods forconcurrency control. PTOC.Inti.\nConf.onVeryLargeDatabases, 1979.\n[458]D.Kuo.Modelandverification ofadatamanager basedonARIES. InInti.Conf.on\nDatabase Theory, 1992.\n[459]M.LaCroix andA.Pirotte. Domain oriented relational languages. InPTOC.Inil.Conf.\nonVeryLargeDatabases, 1977.\n[460]M.-Y.LaiandW.Wilkinson. Distributed transaction management inJasmin. InProc.\nIntl.Conf.onVeTyLargeDatabases, 1984.\n[461]L.Lakshmanan, F.Sadri,and1.N.Subramanian. Adeclarative querylanguage for\nquerying andrestructuring theweb.InPr\"Oc.Inti.Conf.onRe8eaTch Issues,inData\nEngineeTing, 1996.\n[462]L.V.S.Lakshrnanan, Rayrnond '1'.Ng,J.Han,andA.Pang.Optirnization ofcon-\u00ad\nstrained frequent setquerieswith2-variable constraints. InPrvc.AC!vlSIGA10D Inti.\nConf.onAfanagernent ofData,pages157-168. ACMPress,1999.\n[46~i]C.Larn,G.Landis,J.Orenstein, andD.Weinreb. TheObjectstore database systern.\nCorn'l7'LuTt'ications oftheAC1vf,34(10),1991.\n[464]L.Laruport. TiIHe,clocksandtheordering ofeventsinadistributed system. Cornrnu\u00ad\n'nications oftheACAl,21(7):558---565, 1978.\n[465]B.l..larnpson andD.Lornet.Anewpresurned comnlitoptirnization fortwophasecOHauit.\nInProc.Intl.Conf.on-VeryLargeDatabases, 199:3.\n[466]B.Larnpson andH.Sturgis. Crashrecovery inadistributed datastorage systen1.\nTechnical teport,XeroxPARC,197fi.\n[467]C.Landwehr. Fonnalrnodelsofcornputer security. ACAlCornputing 5'uT'ueys, 13(:3):247\u00ad\n278,1981.\n[468]R.Langerak. Viewupdates inrelational databases withanindependent scheIne. A(7/1;1\n7hrnsactions onDat;abase Systems, 15(1):40-66, 1990.\n[469]P.-A.Larson. Linearhashing withoverflow-handling bylinearprobing. !lelv!7''rnnsac\u00ad\ntionsonDatabase Systems, 10(1):75---89,1985.", "1058": "1028 DATABASE JVIANAGEMENT SYSTEIVPS\n[470]P.-A.Larson. Linearhashing with separators~~-A dyuarnic hashing scheIlleachieving\none-access retrieval. AC!t:fTransact'ions onDatabase Systerns, 13(3):~366\u00b7-388, 1988.\n[471)P.-A.LarsonandG.Graefe.lVlernory 1vlanageluent DuringRunGeneration inExternal\nSorting. InPror:.ACAISIGAIOD Conf.onN!anagernent ofData,1998.\n[472JP.LehIuan andS.Yao.Efficient lockingforconcurrent operations onbtrees.ACN!\nTransactions onDatabase Systerns, 6(4):65(}--\u00b7670, 1981.\n[473}T.LeungandR.lVIuntz.Tenlporal queryprocessing andoptilllization inrllultiprocessor\ndatabase machines. InProc.Intl.Conf.on'VeryLargeDatabases, 1992.\n[474]IvtLeventhal, D.Lewis,and ~1.J:.'uchs. Designing XlvILInternet applications. The\nCharlesF.Goldfarb seriesonopeninfornlation managelnent. PrenticeHall, 1998.\n[475]P.Lewis,A.Bernstein, and1\\l1.Kifer.Databases and1ransaction Processing. Addison\n\\Vesley, 200l.\n[476]E.-P.LimandJ.Srivastava. Queryoptirnization andprocessing infederated database\nsystenls. InProc.Intl.Conf.onIntelligent Knowledge N[anagement, 1993.\n[477]B.Lindsay, J.McPherson, andH.Pirahesh. AdataInanageIllent extension architecture.\nInPTOC.AC]v[SIGMOD Conf.ontheManagement ofData,1987.\n[478]B.Lindsay, P.Selinger, C.Galtieri, J.Gray,R.Lorie,G.Putzolu, I.Traiger, and\nB.Wade.Notesondistributed databases. Technical report,RJ2571, SanJose,CA,\n1979.\n[479]D.-I.LinandZ.M.Kedem. Pincersearch:Anewalgorithnl fordiscovering themaxi\u00ad\nmUInfrequent set.Lecture NotesinComputer Science, 1377:105-77, 1998.\n[480]V.Linnemann, K.Kuspert, P.DadaIn, P.Pistol',R.Erbe,A.Kenlper, N.Sudkamp,\nG.Walch,andJ\\r1.Wallrath. Designandimplementation ofanextensible database\nmanagement systernsupporting userdefineddatatypesandfunctions. InProc.Intl.\nConf.onVeryLargeDatabases, 1988.\n[481]R.Lipton, J.Naughton, andD.Schneider. Practical selectivity estirnation through\nadaptive sanlpling. InProc.ACA1SIGN[OD Conf.onthel\\1anagement ofData,1990.\n[482]B.Liskov,A.Adya, J\\r1.Castro, ]\\1.Day,S.Ghemawat, R.Gruber, U.Maheshwari,\nA.Myers,andL.Shrira. Safeandefficient sharingofpersistent objectsinThor.In\nProc.ACMSIGN/OD Conf.ontheA1anagem,ent ofData,1996.\n[48;)]\"V.Litwin. LinearHashing: Anewtoolforfileandtableaddressing. InProc.Intl.\nConf.onVeryLargeDatabases, 1980.\n[484]W.Litwin.TrieHashing. InProc.ACNISIGAI0D Conf.ontheA1anagelnent ofData,\n1981.\n[485]W.LitwinandA.AbdellatiL J\\rIultidataln-Lc;e interoperability. IEEEComputeT,\n12(.1.9):l(}-\u00b7\u00b718,1986.\n[486]vV.Litwin,L.Nlark,andN.Roussopoulos. Interoperability ofrnultiple autonornous\ndatabases. AChICornputing Surveys, 22(~3),.1.990.\n[487]\\V.Litwin, NI.-A.Neirnat, andD.Schneider. LH*..u_/'r.scalable, distributed datastruc\u00ad\nture.AC/I;ITransactions onDatabase Systerns, 21(4):48(}\u00b7\"\u00b7525, 1996.\n[488]!vI.Liu,A.Sheth,andA.Singhal. Anadaptive concurrency controlstrategy fordis\u00ad\ntributed datab<:h'Sc systern. InPn)(;. IE'EEIntl.Can!.onDataBng'ineering, 1984.\n[489J:NI.Livny,R.Rarnakrishnan,K. Beyer,G.Chen,D.Donjerkovic, S.Lawande, .1.IvIyl\u00ad\nlyrnaki,andK.Wenger. DEVise: Integrated querying andvisualexploration oflarge\ndatasets. InPr\"Oc.AC!vfSIG/I;10D Con].ontheAfanagernent ofData,1997.", "1059": "1029\n[490]G.Lohrnau. Granuuar-like functional rulesforrepresenting queryoptiInization alter\u00ad\nnatives. InProG.AC1\\fSIGA\u00b7fOD ConIonthelvlanagement ofData,1988.\n[491JD.LometandB.Salzberg. ThehB-Tree:Arnultiattribute indexing lllethodwithgood'\nguaranteed perforrnance. ACJ\\;!Transactions onDataba.se Sy.stems, 15(4),1990.\n[492)D.LometandB.Salzberg. Accessmethod concurrency withrecovery. InProG.AC]tf\nSIGA10D Conf'.onthel\\Ilanagement ofData,1992.\n[493]R.Lorie.Physical integrity inalargesegnlented database. ACMTransactions on\nDatabase SystenL.s, 2(1):91-104, 1977.\n[494]R.LorieandH.Young.AlowCOlllll1Unication sortalgorithm foraparalleldatabase\nrnachine. InProG.Intl.Conf.onVeryLargeDatabase.s, 1989.\n[495]Y.LouandZ.Ozsoyoglu. LLO:Anobject-oriented deductive language withmethods\nandmethod inheritance. InProG.ACNfSIGlvlOD Conf.ontheManagement ofData,\n1991.\n[496]H.Lu,B.-C.Ooi,andK.-L.Tan(eds.).QueryProcessing inPar-allel Relat'ional Database\nSy.stems. IEEEComputer SocietyPress,1994.\n[497]C.Lucchesi andS.Osborn. Candidate keysforrelations. J.Com,puter andSystem\nSciences, 17(2):270-279, 1978.\n[498]V.Lum.Multi-attribute retrieval withcombined indexes. Communications oftheACM,\n1(11):660-665, 1970.\n[499]T.Lunt,D.Denning, R.Schell,M.Heckman, andW.Shockley. Theseaview security\nIllodel.IEEETransactions onSoftware Engineering, 16(6):593---607, 1990.\n[500]L.Mackert andG.Lohrnan. R*optimizer validation andperformance evaluation for\nlocal queries. Technical report,IBMRJ-4989, SanJose,CA,1986.\n[501]D.Maier.TheTheor-yofRelational Databases. Computer SciencePress,1983.\n[502]D..l\\1aier,A.Mendelzon, andY.Sagiv.Testingirnplication ofdatadependencies. ACM\nTr-ansactions onDatabase Systerns, 4(4),1979.\n[503}D.MaierandD.Warren. Cornputing wdhLogic:LogicProgrurnming withProlog.\nBenjaminjCurnnlings Publishers, 1988.\n[504]A.Makinouchi. Aconsideration onnormalfonnofnot-necessarily-nonnalized relation\nintherelational datarnodel.InProc.Intl.Conf.onVeryLar-geDatabases, 1977.\n[505]U..l\\1anber andR.Ladner. Concurrency controlinadynalnic searchstructure. ACiV!\nTr-ansact'ions OTtDatabase Systerns, 9(3):439\u00b7--455, 1984.\n[506]G.l\\1anku, S.Rajagopalan ,andB.Lindsay. HandolIl salnpling techniques forspace\nefficient onlineCOlTlputation oforderstatistics oflargedatasets. InP7\"OC.ACMSIGJvfOD\nConf.onNfanagement ofData,1999.\n[507]H.Ivlannila. lVfethods andproblerns indatanlining. InIntl.Conf.onDatabase Theory,\n1997.\n[508]H.f\\1annila andK.\u00b7-J.Raiha.DesignbyExarnple: Anapplication ofArlTlstrong relations.\nJournalofCornputcr- andSystemSciences, 3:3(2):126--141, 1986.\n[509]H.rvIannila andK.-J.Raiha. TheDe8'ignofRelational Databases. Addison-Wesley,\n1992.\n[510]H.f\\'lannila, H.Toivonen, andA.1.VerkarTlo. Discovering frequent episodes insequences.\nInPTOC.Intl.Conf.onKno'wledge Di8cover~1J inDatabases andDataA1'in:ing, 1995.\n[511]H..l\\ifannila, P.SIllyth,andD.J.Hanel.Principlc.s ofDataAl'ining. I\\lITPress,20tH.", "1060": "1030 DATABASE }\\/IANAGElvIENT SYSTEmS\n[512]IvI.Ivlannino, P.Chu,andT.Sager.Statistical profileestirnation indatabase SystCIUS.\n11C1\\[Comp'ltting Surveys, 20(:3):191-221, 1988.\n[513]V.l\\ilarkowitz. Representing processes intheextended entity-relationship Illodel. In\nProc.IEEEIntl.Conf.onDataEngineering, 1990.\n[514]V.1rfarkowitz. Safereferential integrity structures inrelational databases. InPr'Oc.Inti.\nConf.on~!eTYLargeDatabases, 1991.\n[515JY.~latias,J.S.Vitter,andNI.\\Vang.Dyumuic Iuaintenance ofwavelet-based his\u00ad\ntograrns. InProc.oftheConf.onl./eryLargeDatabases, 2000.\n[516JD.:NIcCarthy andU.Dayal.Thearchitecture ofanactivedata ba..~emanageIuent\nsystem. InProc.ACAlSIGA10D Conf.onthe]V!anagernent ofData,1989.\n[517]vV.wIcCune andL.Henschen. Nlaintaining stateconstraints inrelational databases: A\nprooftheoretic basis.Jo'urnaloftheACNf, 36(1):46~68, 1989.\n[518].1.IVIcHugh, S.Abiteboul, R.Goldman, D.Quass,andJ.Widom. Lore:Adatabase\nrnanagement systmuforsmnistructured data.ACJ11SIGN/aD Record,26(3):54----66, 1997.\n(519]S.Mehrotra, R.Rastogi, Y.Breitbart, H.Korth,andA.Silberschatz. Ensuring trans\u00ad\nactionatonlicity inrnultidatabase systerns. InACN!Symp.onPrinciples ofDatabase\nSysterns, 1992.\n[520]S.Mehrotra, R.Rastogi, H.Korth,andA.Silberschatz. Theconcurrency control\nproblem inmultidatabases: Characteristics andsolutions. InPTOC.ACA1SIGlvIOD\nCon].onthelvIanagement ofData,1992.\n[521]M.Mehta,R.Agrawal, andJ.Rissanen. SLIQ:Afastscalable classifier fordatanlining.\nInProc.IntZ.Conf.onExtending Databa8e Technology, 1996.\n[522]NI.lvlehta,V.Soloviev, andD.DeWitt. Batchscheduling inparalleldatabase systerns.\nInProc.IEEEInt!.Can].onDataEngineer\"ing, 1993.\n[523]J.rvlelton. Advanced SQL:1999,Under8tanding Under-8tanding Object-Relational and\nOther-Advanced Features. :Nlorgan Kaufmann, 2002.\n[524].1.l\\1eltonandA.Sirnon. Understanding theNewSQL:ACornplete Guide.lVIorgan\nKaufmann, 1993.\n[525].1.NIeltonandA.Sirnon. SQL:1.999, Under-standing Relational Language Components.\nNIorgan Kauflnann, 2002.\n[526]D.rvIenasce andR.rvIuntz. Locking anddeadlock detection indistributed databases.\nIEEETransact'ions onSoftware Bngineering, 5(3):195~222, 1979.\n[527]A.IVlendelzon andT.IvIilo.Forrnalrnodelsofwebqueries. InACIlISyrnp.onPr'inciples\nofDatabase Systems, 1997.\n[528]A.O.lVlendelzon, G.A.Nlihaila, andT.l\\lilo.Querying theWorld\\VideYVeb..l(mrnal\nonDigitalDibrar'ies, 1:54~-67, 1997.\n[529]R. 1\\1eo,G.Psaila,andS.Ceri.AnewSQL-likeopenltor forrniningassociation rules.\nInProc.Int!.Conf.onVery)LargeDatabases, 1996.\n[5:30]T.l\\'Ierrett. Theextended relational algebra, abasisforquerylanguages. InDatabases.\ned.Shneidennan, Acadmnic Press,1978.\n[5:31]T.IVlerrett. Relational Inforrnation System\",. RestonPul)lishing Cornpa,ny, 198:3.\n[532]D.1\\'1ichie, D.Spiegelhalter, andC.Taylor,editors. J\\.1ach:ine LearniTtg,. Ne'uTaland\nStatistical Classification. EllisHorwood, London, 1994.\n[5:3:3]J\\:Iicrosoft. lviicr080ft ODBC8.080ftuwre DeveloprnentKit andProgrnrrt1fWT'S Reference .\n.Nlicrosoft Press,1997.", "1061": "REFERENCES 1031\n(534)K.wIikkilineni andS.SuoAnevaluation ofrelationaJ joinalgorithIllS inapipelined query\nprocessing envirOlunent. .IEEETransactions onSoftware Eng'ineering, 14(6):S:38\u00b7\u00b7\u00b7\u00b7848,\n1988.\n(5:35JR.Nliller,Y.Ioannidis, andR.Ram,akrishnan. Thenseofinfonnation capacity in\nscheuHiintegration andtranslation. InProc..Inti.Conf.onVeryLm:qeDatabases, 199~~.\n[538]\n[543][539]\n[544]T.whloandD.Suein.Indexstructures forpathexpressions. In.IeDT:7thInternational\nC\"1onferenceonDatabase TheO'l~IJ,1999.\nJ.l\\!Iinker(cd.).Foundat'ions ofDeductive Databases andLogic Pr'Ogrnn~rning. l\\!Iorgan\nKauflllann, 1988.\nT.l\\!1inoura andG.Wiederhold. Resilient extended true-copy tokenschelneforadis\u00ad\ntributed datab&se. IEEETInnsactions inSoftware Engineer\"ing, 8(3):173~ 189,1982.\nG.Mitchell, U.Dayal,andS.Zdonik. Control ofanextensible queryoptimizer: A\nplanning-based approach. InProc.Inti.Con]'onVe7~1JLargeDatabases, 1993.\nA.Moffatand.J.Zobel.Self-indexing inverted filesforfasttextretrieval. ACA1Trans\u00ad\nactionsonInforiTwtion Systerns, 14(4):349'-\"'379, 1996.\nC.Mohan.ARIES/NT: Arecovery Inethod basedonwrite-ahead loggingfornested.In\nPTOC.Inti.Conf.onVeryLar'!1eDatabases, 1989.\nC.1I1ohan. Commit LSN:Anovelandsimple11lethod forreducing lockingandlatching\nintransaction processing systems. InPTOC.Inti.Conf.onVeryLargeDatabases, 1990.\nC.}\\tfohan. ARIES/LHS: Aconcurrency controlandrecovery rnethod usingwrite\u00ad\naheadloggingforlinearhashing withseparators. InProc.IEEEIntl.Conf.onData\nEngineer'ing, 1993.\nC.Mohan, D.Haderle, B.Lindsay, H.Pirahesh, andP.Schwarz. ARIES: atransaction\nrecovery rnethod supporting fine-granularity lockingandpartialrollbacks usingwrite\u00ad\naheadlogging. ACiVfTransactions onDatabase Systerns, 17(1):94\u00b7 ..-162,1992.\nC.MohanandF.Levine. ARIES/IN! Anefficient andhighconcurrency indexrnan\u00ad\nagerrlent rrlCthod usingwrite-ahead logging. InProc.ACAfSIGlV/OD ConIonthe\nlvfanage'ment ofData,1992.\n[546]C.lVIohanandB.Lindsay. Efficient cOlnrnitprotocols forthetreeofprocesses rnodelof\ndistributed transactions. InACA1SIGACT-SIGOPS Syrnp.onPrinciples ofDistributed\nCornputing, 1983.[545][541]\n[542][540]\n[547]C.l\\10han, B.Lindsay, andR.Obernlarck. Transaction rnanagernent intheR*dis\u00b7\u00b7\ntributed database rnanagClnent systern. ACAfTraruJaction8 onDatabase S'ystcrns,\n11(4):378\u00b7-<396, 1986.\n[548JC.Nlohanand1.Narang. Algoritlulls forcreating indexesforverylargetableswithout\nquiescing updates. InProc.ACAI8IGAI0D Conj.ontheAlanagement ofData,1992.\n[549]K.l\\v10rris,J.Naughton, 't'.Saraiya, J.Ullrnau, andA.VanGelder. YAWN! (Yet\nAnother \\Vindow onNAIL!).Databa.se Bngirwering, 6:211\u00b7\u00b7226, 1987.\n[5.50]A.NIotro.Superviews: Virtualintegration ofrnultiple databases. IEEEIhl'nsactions\nonSoftware En.gineering, 13(7):785\u00b7\u00b7\u00b7798, 1987.\n[551]A.1V1otroandP.Bunenla,n. Constructing superviews. Tnp.roc.AClVlS.lGJtvfOD Conf.\nontheJvlanagement ofData,1981.\n[552]R.rVlukkanmla.. l\\!lea.suring theeffectofdatadistribution andreplication Inodelson\nperforrnance evaluation ofdistributed database systerns. InProc.IEEEInti.ConIon\nDataEngineering, 1989.", "1062": "1032 DATABASE l\\1ANAGEIvIENT SYSTEMS\n[553J1.lvlunlick, S.Finkelstein, H.Pirahesh, andR.Rarnakrishnan. Nlagicisrelevant. In\nProc.ACNJSICA/OD Conf.onthe!vfanagcrnent ofData,1990.\n(554]1.N1ulllick, S.Finkelstein, H.Pirahesh, andR.Rmnakrishnan. l\\rlagicconditions. AC1\\1\nTransactions onDatabase Systems, 21('1):107-155, 1996.\n[555J1.~1umick, H.Pirahesh, andR.Ranlakrishnan. Duplicates andaggregates indeductive\ndatabases. IIIProc.Intl.Conf.onVeryLar:qeDatabases, 1990.\n[556]1.rvhllnick andK.Ross.Noodle: Alanguage fordeclarative querying inanobject\u00ad\noriented database. InIntl.Conf.onDeductive andObject-Oriented Databases, 1993.\n[557]1\\1.~1uralikrishna. Improved unnesting algorithrns forjoinaggregate SQLqueries. In\nProc.Intl.Conf.onVeryLar:qeDatabases, 1992.\n[558]Iv!.Muralikrishna andD.DeWitt. Equi-depth histograms forestirnating selectivity fac\u00ad\ntorsformulti-dimensional queries. InProc.AC1'vfSICMOD Conj.ontheManagement\nofData,1988.\n[559]S.Naqvi.Negation asfailureforfirst-order queries. InAClVISymp.onPrinciples of\nDatabase Systems, 1986.\n[560]M.Negri,G.Pelagatti, andL.Sbattella. :Formalsemantics ofSQLqueries. ACM\nTransactions onDatabase Systems, 16(3),1991.\n[561]S.Nestorov, J.Ullman, J.Weiner, andS.Chawathe. Representative objects: Con\u00ad\nciserepresentations ofsernistructured, hierarchical data.InProc.Intl.Conj.onData\nEngineering. IEEEComputer Society, 1997.\n[562]R.T.NgandJ.Han.Efficient andeffective clustering methods forspatialdatamining.\nInProc.Intl.Conj.onVeryLargeDatabases, Santiago, Chile,September 1994.\n[563]R.T.Ng,L.V.S.Lakshmanan, J.Han,andA.Pang.Exploratory llliningandpruning\noptirnizations ofconstrained association rules.InPr'Oc.AeMSIGMOD Intl.Conf.on\n1'vlanagernent ofData,pages13-24.ACl\\JIPress,1998.\n[564]T.Nguyen andV.Srinivasan. Accessing relational databases fromtheWorldWide\nWeb.InProc.ACMSIClvfOD Conj.on'theManagemen't ofData,1996.\n[565].1.Nievergelt, H.Hinterberger, andK.Sevcik.TheGridFile:Anadaptable symnletric\nrnultikey filestructure. A()MTransactions onDatabase Systerns, 9(1):38-,71, 1984.\n[566]C.Nyberg, T.Barclay, Z.Cvetanovic, J.Gray,andD.LonIet. Alphasort: acache\u00ad\nsensitive parallelexternal sort.VLDBJounwl,4(4):603\u00b7H\u00b7627,1995.\n[567]R.Obermarck. Globaldeadlock detection algorithrn. ACAfTrnnsactions onDa'tabase\nSystems, 7(2):187---208, 1981.\n[568]L.O'Callaghall, N.1Hshra, A.~'leyers()n, S.Guha,andR.IVIotwani. Strearning-data\nalgorithlns forhigh-quality clustering. InProc.oftheIntl.ConfeTencc onDataEngi-\u00b7\nneer'ing. IEEE,2002.\n[569]F.OlkenandD.Rotem. SiInplerandom sal1lpling fronlrelational databa'3\u20acs. InProc.\nIntl.Conj.onVeryLargeDatabases, la80.\n[570JF.OlkenandD.Rotern. 1\\1aintenance ofrnaterialized viewsofsarnpling queries. In\nProc.IEEEIntl.Conj.onDataEng'iru;cx'ing, 1992.\n[571]C.Olston,B.T.Loa,and.J.Wiclorn. Adaptive precision settingforcachedapproxiInatc\nvalues.InProc.ACAISIGlliOD Conj.ontheA1anagernent ofData,2001.\n[572]C.OlstonandJ.vVidOII1. Offering aprecision-perfonnance tradeoff foraggregation\nqueriesoverreplicated data.InPTOC.oftheConj.onVcr?!Lar:qcDatabases, pages\n144155, 2000.", "1063": "REFEREN()ES 1033\n[57:3]C.Olstonand.T.Widonl. Best-effort cachesynchronization withsourcecooperation. In\nProc.ACMSIGlv[OD Conf.onthe,lvfanagernent ofData,2002.\n[574]P.O'NeilandE.O'Neil.Database PrinC'iples ..Prograrnrning, andPerfonnance. Addison\n\\Vesley, 2edition, 2000.\n[575]P.O'NeilandD.Quass.IInproved queryperfonnance withvariantindexes. InProc.\nACAISIG1l:fOD Conf.ontheAlanagemertt ofData,1997.\n[576]B.Ozden,R.Rastogi, andA.Silberschatz. 1rfultilnedia support fordatabases. InACAf\nSym,p.onPrinciples ofDatabase Systems, 1997.\n[577]G.Ozsoyoglu, K.Du,S.GuruswanIy, and\\V.-C.Hou.Processing real-tirne, non\u00ad\naggregate querieswithtime-constraints inca.'le-db. InProc.IEEEInti.Conf.o'nData\nEngineering, 1992.\n[578]G.Ozsoyoglu, Z.Ozsoyoglu, andV.Matos.Extending relational algebraandrelational\ncalculus withset-valued attributes andaggregate functions. ACAlTransactions on\nDatabase Systems, 12(4):566-\u00b7\u00b7592, 1987.\n[579]Z.Ozsoyoglu andL.-Y.Yuan.Anewnormalformfornestedrelations. ACMTransac\u00ad\ntionsonDatabase Systerns, 12(1):111--136, 1987.\n[580]M.OzsuandP.Valduriez. Principles ofDistributed Database Systems. PrenticeHall,\n1991.\n[581]C.Papadimitriou. Theserializability ofconcurrent database updates. Journalofthe\nACM,26(4):631--653, 1979.\n[582]C.Papadimitriou. TheTheoryofDatabase Concurrency Control. Computer Science\nPress,1986.\n[583]Y.Papakonstantinou, S.Abiteboul, andH.Garcia-Molina. Objectfusioninmediator\nsystems. InProc.Intl.Conf.onVeryLargeDa'taBases,1996.\n[584]Y.Papakonstantinou, H.Garcia-Molina, and.1.Widom. Objectexchange acrosshet\u00ad\nerogeneous information sources. InProc.Inti.Conf.onDataEngineering, 1995.\n[585].1.ParkandA.Segev.Usingcomrnon subexpressions tooptimize lllultiple queries. In\nProc.IEEEInti.Conf.onDataEngineering, 1988.\n[586]J.Patel,.1.-B.Yu,K.Tufte,B.Nag,J.Burger, N.Hall,K.Rarnasarny, R.Lueder,\nC.Elllllan, J.Kupsch, S.Guo,D.DeWitt, and.T.Naughton. Building ascaleable geo\u00ad\nspatialDBl\\IIS:Technology, implernentation, andevaluation. InProc.ACMSIGA10D\nConf.onthelvlanagernent ofData,1997.\n[587]D.Patterson, G.Gibson, andR.Katz.RAID:redundant arraysofinexpensive disks.\nInProc.ACJi.1SIGA10D Conj.onthelv!anagernent ofData,1988.\n[588]H.-B.Paul,H.-J.Schek, 1VI.Scholl,G.vVeikurn, andU.Deppisch. Architecture and\nirnplernentation oftheDar.mstadt database kernelsystem. InProc.ACJi.1SIGlv!OD\nConj.ontheNfanagement ofData,1987.\n[.589]J.Peckhalli andF.IvIaryanski. Sernantic datalliodels. ACA1Cornpnting S'urveys,\n20(3):153--1'89, 1988.\n[590].T.PeiandJ.Han.CanwepushInoreconstraints intofrequent pattern ruining? In\nACAlSICKDD Conference, pages;350....\u00b7354,2000.\n[591].T.Pei,J.Han,andL.V.S.Lakshrnanan. 1Vfiningfrequent itenlsetswithconvertible\nconstraints. InPT()c.Intl.Conf.onDataEngin,eer\"ing (ICDE),pages433,442. IEEE\nCOluputer Society, 2001.", "1064": "1034\n DATABASEJVIA,NAGElvIENT SYSTEMS\n[592]E.Petajan,Y.Jean,D.Lieuwen, andV.Anuparn. Data-Space: Anautoillated visu\u00ad\nalization systenlforlarge datab~:k,;es. InProc.ofSPIE,ViS1WIDataEX1)lo7'ation and\nAnalysis, 1997.\n[593]S.Petrov. FiniteaxiOInatization oflanguages forrepresentation ofsysteIllproperties.\nIf' Q' 4-3''3'9''172'198()11,)OT'matt.on I..Jcunces, (:-d \" .'.\n[594]G.Piatetsky-Shapiro andC.Cornell. Accurate estinmtion ofthenurl1ber oftuples\nsatisfying acondition. InProc.ACiV!SIGlv!OD Conf.onthe!v!anagernent ofData,\n1984.\n[595]G.Piatetsky-Shapiro andW..1.Frawley, editors. Knowledge Di,scovery iTtDatabases.\nAAAI/~nT Press,J\\'IenloPark,CA,1991.\n[596]H.Pirahesh andJ.Hellerstein. Extensible/rule-based queryrewriteoptimization in\nstarburst. InProc.ACAlSIGA10D Conf.ontheManagernent ofData,1992.\n[597]N.Pitts-J\\laultis andC.Kirk.XA1Lblackbook:Indispensable problem solver.Corialis\nGroup,1998.\n[598]V.Poosala, Y.Ioannidis, P.Haas,andE.Shekita. Improved histogranls forselectivity\nestirnation ofrangepredicates. InProc.ACMSIGAt/OD Conf.ontheManagement: of\nData,1996.\n[599]C.Pu.Superdatabases forcomposition ofheterogeneous databases. InProc.IEEEIntl.\nConf.onDataEngineeTing, 1988.\n[600]C.PuandA.Leff.Replica controlindistributed systems: Anasynchronous approach.\nInProc.ACl\\lSIGlv10D Conf.ontheManagernent ofData,1991.\n[601]X.-L.QianandG.Wiederhold. Incrmnental recOInputation ofactiverelational expres\u00ad\nsions.IEEETransactions onKnowledge andDataEngineering, 3(3):337-341, 1990.\n[602]D.Quass,A.Rajaraman, Y.Sagiv,andJ.Ullman. Querying selnistructured heteroge\u00ad\nneousinforrnation. InProc.Intl.Conf.onDed'l.tctive andObject-Oriented Databases,\n1995.\n[603]J.R.Quinlan. C4.5:ProgTarns faTNfachine Learning. Morgan Kaufrnan, 1993.\n[604]H.G.rv1.R.Alonso, D.Barbara. Datacaching issuesinaninforrnation retrieval systerll.\nACN!Transactions onDatabase Systerns, 15(3),1990.\n[605]TheRAIDBook: AsourcebookforRAIDtechnology. TheRAIDAdvisory Board,\nhttp://www.raid-advisory.com.NorthGrafton.IvlA. Dec.1998.SixthEdition.\n[606]D.RafieicHIdA.J\\Jendelzon. Sirnilarity--based queriesfortirn.eseriesdata.InPT'(Jc.\nAClkfSIGl\\10D Conj.onthelvlanagernent ofData,1997.\n[607]M.Rarnakrishna. Anexactprobability rnodelforfinitehashtables.InPTOC.IEEEIntl.\nConf.onDataEngineer\"ing, 1988.\n[608]wI.Ramakrishna andP.-A.Larson. li'ileorganization usingcOlnposite perfecthashing.\nACAITransadio'ns onDatabase Systems, 14(2):2;:31,,26;3, 1989.\n[609]1.Ramakrishna.n, P.Rao,K.Sagonas, T.Swift,andD.Warren. Efficient tabling\nnrechanisrns forlogicprogranlS. InInti.Conf.onLog'icPrograrnrning, 1995.\n[610]R.Ramakrishnan, 1).I)onjerkovic, A,.RaJlganathan, K.Beyer,and.NI.Krishnaprasad.\nSRQL:Sortedrelationa.l querylanguage InPTOC.IEEEInU.Conj.onScientific and\nStatistical DBA:18, 1998.\n[GIl]R.Rarnakrishnan, D.Srivastava, andS.Slldarshan.Efficient bottom-up evaluation of\nlogicprograms. InTheStateoftheArtinComputer SY8lerns andSoftWtLTC EnginJ'J~rving.\ned.J.Vandewalle ,KlllwerAcadernic, 1992.", "1065": "lO~35\n[612]R.lliunakrishnan, D.Srivastava, S.Sudarshan~ andP.Seshadri. TheCORAL: deductive\ns:ystenl. VLDB Journlll~ ~3(2):161\u00b7-210~ 1994.\n[613JR.Ralnakrishnan~ S.Stolfo,R.J.Bayardo., and1.Parsa,editors. Proc.ACi\\;f8IGI{DD\nInil.Conference onJ{nowledgc Discovery andDataIV[ining. AAAIPress,2000.\n[614]R.Rarnakrishnan andJ.Ullrnan.A surveyofdeductive database systcrIls..IO'1lT'rwl of\nLogicPrvgrarrnning, 23(2):125149, 1995.\n[615)K.RanHtITIohanarao. Designoverview oftheAditideductive database system. InProc.\nIEEEIntI.Conf.onDataEngineering, 1991.\n[616]K.Rauuunohanarao, J.Shepherd, andR.Sacks-Davis. Partial-match retrieval fordy\u00ad\nnamicfilesusinglinearhashingwithpartialexpansions. InIntl.Conf.onFoundat'ions\nofDataOrganization andAlgorithrns, 1989.\n[617]V.Raman, B.Raman, andJ.:~v1.Hellerstein. Onlinedynamic reordering forinteractive\ndataprocessing. InProc.oftheConf.onVeryLargeDatabases, pages709--720. I:v10rgan\nKaufrnann, 1999.\n(618]S.Rao,A.Badia,andD.VanGucht.Providing bettersupport foraclassofdecision\nsupport queries. InProc.ACAISIG1\\10D Con].onthe1\\1anagement ofData,1996.\n[619)R.RastogiandK.Shim.Public:Adecision treeclassifier thatintegrates building and\npruning. InProc.Intl.Con]'onVeTyLargeDatabase8, 1998.\n[620]D.Reed.Implen1enting atomicactionsondecentralized data.ACMTranBaciions on\nDatabase Systems, 1(1):3~23,1983.\n[621]G.Reese.Database Programming With.IDBCandJava.O'Reilly&Associates, 1997.\n[622]R.Reiter.AsoundandsometiInes con1plete queryevaluation algorithrll forrelational\ndatabases withnullvalues.Jo'uTnaloftheACM, 33(2):349<~70, 1986.\n[623]E.Rescorla. SSLandTLS:Designing andBuilding SecureSystern8. Addison Wesley\nProfessional, 2000.\n[624]A.Reuter. Afasttransaction-oriented loggingscherneforundorecovery. IEEETrans\u00ad\nactionsonSoftware Engineering, 6(4):348--356, 1980.\n[625]A.Reuter.Performance analysis ofrecovery techniques. AClv[Trnnsact'ions onDatabase\nSy8terns, 9(4):526\u00b7\u00b7\u00b7\u00b7\u00b7559, 1984.\n[626]E.RiloffandL.Hollaar. rI'extdataba--c;;es andinfonnation retrieval. InHandbook of\nCornputer Science. ed.A.B.T'ucker,eRe1)ress,1996.\n[627]J.Rissanen. Independent cOlnponents ofrelations. ACMTran8action8 onDatabase\nSyste'm8, 2(4)::,317325, 1977.\n[628}R.Rivest.PartialIllatchretrieval algoritlulls. SIAlvlJournal onCornputing, 5(1):19---50,\n1976.\n[629]R.L.Rivest,A.Sharnir, andL.M.Adlernan. Arnethod forobtaining digitalsignatures\nandpublic-key cryptosysterns. Cornrnunications oftheACA1,21(2):12(}\u00b7\u00b7126, 1978.\n[6:~OJJ.T.H..obinson. TheKDBtree:Asearchstructure forlargerIlultidinlensional dynamic\nindexes. InProc.ACiVISIGAfOD Int.Conf.onM'anagement ofData,198.1.\n[G3l].J.H,ohrner, F.Lescocllr, a,nd.J.Kerisit. TheAlexander rnethod, atechnique forthe\nprocessing ofrecursive queries. NewGeneration Corrq)'lding, 4(~3):27~3~-285, 1986.\n[G:32]D.Rosenkrantz, R.Stearns, andP.Lewis.Systernlevelconcurrency controlfordis\u00ad\ntributed datatlClse systerns. AC\"\"1.iVf1\"1nnsactio1Ls onDatabase SY8tern,s1 ;:3(2),1978.\n[G:>3~:3]A.Rosenthal a.ndU.Chakravarthy. Anatorny ofarnodular rnultiple queryoptiInizer.\nInPTOC.Inil.Conf.o'n\"VeryLar:qeDalabCL8cs, 1988.", "1066": "1036 DATABASE IVlANAGEwiENT SYSTE~IS\n[634JK.RossandD.Srivastava. Fastcoruputation ofsparsedatacubes. InProc.Intl.Conf.\nonVeryLargeDatabases, HJ97.\n[635JK.Ross,D.Srivastava, andS.Sudarshan. Nfaterialized viewnlaintenance andintegrity\nconstraint checking: Trading spacefortinIe.InPnJC.ACA1SIG!vl0D Conf.onthe\nfl,Janagernent ofData,1996.\n[636]J.Rothl1ie, P.Bernstein, S.Fox,N.Goodnlan, M.HamITIer, T.Landers, C.Reeve,\nD.Shipman, andE.Wong.Introduction toasystelnfordistributed databa.'3es (SDD\n-1).AC!vlTransactions onDatabase Systems, 5(1),1980.\n[637]J.Rothnie andN.Goodman. Anoverview oftheprelirninary designofSDD-1:A\nsysternfordistributed databa')es.InProc.Berkeley Workshop onDist\",\"ibuted Data\nAlanagement andComputer NetwoTks, 1977.\n[638]N.Roussopoulos, Y.Kotidis, andM.Roussopoulos. Cubetree: Organization ofand\nbulkupdates onthedatacube.InPTOC.ACMSIGNIOD Conf.ontheManagement of\nData,1997.\n[639]S.RozenandD.Shasha. Usingfeaturesetcompromise toautomate physical database\ndesign.InProc.Intl.Conf.onVeTYLaTgeDatabases, 1991.\n[640]J.Rumbaugh, I.Jacobson, andG.Booch. TheUnifiedModeling Language Reference\nManual (Addison- WesleyObjectTechnology Series). Addison-Wesley, 1998.\n[641]M.Rusinkiewicz, A.Sheth,andG.Karabatis. Specifying interdatabase dependencies\ninamultidatabase environment. IEEEComputeT, 24(12),1991.\n[642]D.SaccaandC.Zaniolo. Magiccounting methods. InPTOC.ACMSIGMOD Conf.on\ntheManagement ofData,1987.\n[643]Y.SagivandM.Yannakakis. Equivalence amongexpressions withtheunionanddif\u00ad\nferenceoperators. JournaloftheAeNI,27(4):633~655, 1980.\n[644]K.Sagonas, T.Swift,andD.Warrell. XSBasanefficient deductive database engine.\nInPTOC.ACMSIGMOD Conf.ontheManagement ofData,1994.\n[645]A.Sahuguet, L.Dupont, andT.Nguyen. Kweelt: Querying XIvILinthenewmillenium.\nhttp://kweelt.sourceforge .net,Sept2000.\n[646]G.SaltonandM.J.McGill. IntToduetion tol\\!Iodern Information Retrieval. McGraw\u00ad\nHill,1983.\n[647]B.Salzberg, A.Tsukerman, J.Gray,M.Stewart, S.Uren,andB.Vaughan. Fastsort:\nAdistributed single-input single-output external sort.InPTOC.ACMSIGMOD Conf.\nontheManagement ofData,1990.\n[648]B.J.Salzberg. PileStructuTes. PrenticeHall, 1988.\n[649]H.Salnet.TheQuadTreeandrelatedhierarchical datastructures. ACAfComputing\nSUT1Jeys, 16(2),1984.\n[650]H.Sarnet. TheDesignandAnalysis ofSpatialDataStructures. Addison-Wesley, 1990.\n[651]J.Sander, 1\\1.Ester,H.-P.Kriegel, andX.Xu.Density-based clustering inspatial\ndataba')es. 1.ofDatallJiningandKnowledge DiscoveTY, 2(2),1998.\n[652]R.E.Sanders. ODBC3.5Developer's Guide.McGraw-Hill SeriesonDataWarehousing\nandData1tIanagelnent. McGraw-Hill, 1998.\n[653]S.Sarawagi andlVLStonebraker. Efficient organization oflargemultidirnensional arrays.\nInProc.IBEEInil.Conf.onDataEngineering, 1994.\n[654]S.Sarawagi, S.T'holnas, andR.Agrawal. Integrating miningwithrelational database\nsystems: Alternatives andinlplications. InPr-oc.ACMSIGMOD Intl.Conf.onNIan\u00ad\nagernent ofData,1998.", "1067": "REFERE1VCES 1037\u2022fu\n[655]A.Sava..,ere, E.Omiecinski, andS.Navathe. Anefficient algorithm forruiningassocia\u00ad\ntionrulesinlargedatabases. InProc.Intl.Conf.onVeryLargeDatabases, 1995.\n[656]P.Schauble. Spider:Amultiuser illfornlatioll retrieval systetllforsemistructured and\ndynanlic data.InP1'OC.AClVf8IGIRConference onResearch andDeveloprnent in\nInfor7nat.zon Retrieval, pages318-327,1993.\n[657]H.-J.Schek,H.-B.Paul,M.Scholl,andG.Weikulll. TheDASDBS project: Objects, ex\u00ad\nperiences, andfutureprojects. IEEETransactions onKnowledge andDataEngineering,\n2(1),1990.\n[658]1\\11.Schkolnick. Physical database designtechniques. InNYUSymp.onDatabase Design,\n1978.\n[659]M.Schkolnick andP.Sorenson. Theeffectsofdenormalization ondatabase performance.\nTechnical report, IB1.-1RJ3082, SanJose,CA,1981.\n[660]G.Schlageter. Optimistic methods forconcurrency controlindistributed database\nsystems. InProc.Intl.Conf.onVeryLargeDatabases, 1981.\n[661]B.Schneier. Applied Cryptography: Protocols, Algorithms, andSourceCodeinC.John\nWiley&Sons,1995.\n[662]E.Sciore.Acomplete axiomatization offulljoindependencies. Journal oftheACM,\n29(2):373--393, 1982.\n[663]E.Sciore,M.Siegel,andA.Rosenthal. Usingsemantic valuestofacilitate interop\u00ad\nerability amongheterogeneous information systems. ACMTransactions onDatabase\nSystems, 19(2):254-290, 1994.\n[664]A.SegevandJ.Park.Nlaintaining materialized viewsindistributed databases. InPr'oc.\nIEEEIntl.Conf.onDataEngineering, 1989.\n[665]A.SegevandA.Shoshani. Logicalrnodeling ofternporal data.Proc.ACMSIGMOD\nConf.ontheManagerr~ent ofData,1987.\n[666]P.Selfridge, D.Srivastava, andL.Wilson. IDEA:Interactive dataexploration and\nanalysis. InProc.ACMSIGMOD Conf.ontheManagement ofData,1996.\n[667]P.Selinger andM.Adiba.Accesspathselections indistributed databasemanagement\nsystems. InProc.Intl.Conf.onDataba8es., Brit'ishComputer Society, 1980.\n[668]P.Selinger, M.Astrahan, D.Charnberlin, R.Lorie,andT.Price.Accesspathselection\ninarelational database management system. InP1'OC.ACMSIGJt10D Conf.onthe\nlvfanagement ofData,1979.\n[669]T.K.Sellis.Multiple queryoptimization. AC!VITransactions onDatabase Systerns,\n13(1.):23\"..-52,1988.\n[670]P.Seshadri, J.Hellerstein, H.Pirahesh, T.Leung,R.Rarnakrishnan, D.Srivastava,\nP.Stuckey, andS.Sudarshan. Cost-based optirnization for~1agic:Algebra anditnple\u00ad\nmentation. InProc.ACiViSIGJt10D Conf.ontheManage'TT~ent ofData,1996.\n[671]P.Seshadri, 1\\1.Livny,andR.Ratnakrishnan. Thedesignandilnpletuentation ofa\nsequence database systern.InProc.Intl.Conf.onVeryLargeDatabases, 1996.\n[672JP.Seshadri, IV!.Livny,andR.Ramakrishnan. Theca.seforenhanced abstract data\ntypes.InProc.Intl.Conf.onVeT1jLar:qeDatabases, 1997.\n[67:3]P.Seshadri, H.Pirahesh, andT.Leung.Cornplex querydecorrelation. InProc.IBBE\nInti.Conf.onData Engineer~ing, 1996.\n[674].J.ShaferandR.Agrawal. S,PRINT: ascalable parallel classifier fordatatllining. In\nProc.Intl.Conf.onVe11/LargeDatabases, 1996.", "1068": "1038\n DATABASE~!1ANAGEMENT SYSTEtv'IS\n[675JJ.Shanumgac;undaraln, U.Fayyad, andP.Bradley. COlIlpressed datacubesforolapag\u00ad\ngTegatequeryapproxiInation OIlcontinuous dirnensions. InPr'oc.Inti.Conf.on}(nowl\u00ad\nedgeDi,sC01Jcry andDataJtyhn'ing (I{DD),1999.\n[676]J.Shaulllugasundaram, J.Kiernan, E.,T.Shekita, C.Fan,andJ.Funderburk. Querying\nXlVII\"viewsofrelational data.InPmc.Intl.Conf.onVety LargeDataBases,200l.\n[677]\u00b0L.Shapiro. .Joinprocessing indataba ..sesystenls withlargernainmemories. ACN!\nTransaction.s onDataba8e 8;ljsterns, 11(~3):239~264, 1986.\n[678]D.ShashaandN.Goodrnan. Concurrent searchstructure algorithnls. ACA1Tr'ansac\u00ad\ntionsonDatabase Systerns, 13:53.0..90,1988.\n[679]D.Shasha,E.Siruoll,andP.Valduriez. Sinlplerational guidance forchopping up\ntransactions. InProc.ACNJSIGlvfOD Conf.onthelvlanagement; ofData,1992.\n(680]H.Shatkay andS.Zdonik. Approxinlate queriesandrepresentations forlargedata\nsequences. InProc.IEEEIntl.Conf.onDataEngineering, 1996.\n[681]T.SheardandD.Sternple. Autonlatic verification ofdatabase transaction safety.AC\"J\\,1\nTrawwctions onDatabase Systerns, 1989.\n[682]S.ShenoyandZ.Ozsoyoglu. Designandirnplelnentation ofaseruantic queryoptiInizer.\nIEEETransactions onKnowledge andDataEngineering, 1(3):344'00-361, 1989.\n[683)P.Shenoy, J.Haritsa, S.Sudarshan, G.Bhalotia, M.Bawa,andD.Shah.Turbo\u00ad\ncharging vertical miningoflargedatabases. InProc.AClvISIGMOD Int!.Conf.on\nlvIanagernent ofData,pages 22~\u00b7\u00b7\u00b733,May2000.\n[684]A.ShethandJ.Larson. Federated database systerns fornlanaging distributed, hetero\u00ad\ngeneous, andautonomous databases. Computing Surveys, 22(3):183-'-236, 1990.\n(685]A.Sheth,J.Larson, A.Cornelio, andS.Navathe. Atoolforintegrating conceptual\nschemas anduserviews.InProc.IEEEIntl.Conf.onDataEngineering, 1988.\n[686]A.Shoshani. OLAPandstatistical databases: Sirnilarities anddifferences. InACM\nSyrnp.onPrinciples ofDatabase Systems, 1997.\n[687)A.Shukla, P.Deshpande, J.Naughton, andK.Rarnasalny. Storage estirnation for\nmultidirnensional aggregates inthepresence ofhierarchies. InPrnc.Intl.Conj.onVeTY\nLargeDatabases, 1996.\n[688]1\\11.Siegel,E.Sciore,andS.Salveter. Amethod forautornatic rulederivation tosupport\nsemantic queryoptirnization. ACNITransact;ions onDatabase 8ystems, 17(4),1992.\n[689]A.Silberschatz, H.Korth,andS.Sudarshan. Database System Concepts (4thed.).\nrVIcGraw-Hill, 4edition, 2001.\n[690]E.Simoll,J.Kiernan, andC.de1\\1aindreville. hnplernenting high-level activeruleson\ntopofrelational databases. InProc.Intl.Conj.onVeryLargeDatabases, 1992.\n[691]E.Silnoudis, .J.VVei,andU.1\\;1.Fayya.d, editors.Proc. Intl.Conf.onI{nowledge Dis\u00ad\ncoveryandDataAlining. AAAIPress,199fL\n(692]D.Skeen.Nonblocking COlnnlit protocols. InProc.ACAISIGA;fO[) Conf.ontheAIano\u00ad\nagcTnent ofData,1981.\n[GD~~]J.SrnithandD.Srnith.Database abstractions: Aggregation andgeneralization. ACAI\nTransact'ions 0'/1,Database SystcTns, 1(1):1051~3~~, 1977.\n[694]K.Slnithand]\\11.VVinslett. Entitymodeling inthel\\lLSrelational model.InProc.Inti.\nConf.onVC'7/LargeDatabases, 1992.\n[G95]P.SrnithandIvT.Barnes. PilesandDatabases: AnIntToduction. Addison- \\\\fesley, 1987.", "1069": "FlEFEREIVCES 1039\n[696JN.Soparkar, H.Korth,andA.Silberschatz. Databases withdeadline andcontingency\nconstraints. IEEETr-allsact'ions onK'nowledge andDataEngineering, 7(4):552\"-565,\n1995.\n[697]S.Spaccapietra, C.Parent,andY.Dupont. ~1odelindependent assertions forintegration\nofheterogeneous schemas. InPTOC.Intl.ConIon,VerllLargeDatabases, 1992.\n[698}S.Spaccapietra (ed.).Bnt'ity-Relationsh'ip Appr'oach: TenYeaTsofExper'ience in,I11,for\u00ad\nrnationModeling, Prnc.Entity-Relationship Conf.North-Holland, 1987.\n[699]E.Spertus. ParaSite: Ininingstructural infonnation ontheweb.InIntl.WorldWide\nWebConference, 1997.\n[700]R.SrikantandR.Agrawal. Mininggeneralized association rules.InProc.Intl.Conf.\non1len)LargeDatabases, 1995.\n[701]R.SrikantandR.Agrawal. MiningQuantitative Association RulesinLargeRelational\nTables.InPTOC.ACMSIGAtl0D ConI.onAtJanagement ofData,1996.\n[702]R.SrikantandR.Agrawal. MiningSequential Patterns: Generalizations andPerfor\u00ad\nmanceImprovements. InPr'Oc.Intl.ConI.onExtending Database Technology, 1996.\n[703]R.Srikant, Q.VU,andR.Agrawal. MiningAssociation RuleswithItemConstraints.\nInProc.Intl.Conf.onKnowledge Discovery inDatabases andDataMining, 1997.\n[704]V.Srinivasan andM.Carey.Performance ofB-Treeconcurrency controlalgorithms. In\nPTOC.ACMSIGlvIOD Conf.ontheManagement ofData,1991.\n[705]D.Srivastava, S.Dar,H.Jagadish, andA.Levy.Answering querieswithaggregation\nusingviews.InPTOC.Intl.Conf.onVeryLargeDatabases, 1996.\n[706]D.Srivastava, R.Ralnakrishnan, P.Seshadri, andS.Sudarshan. Coral++: Adding\nobject-orientation toalogicdatabase language. InPTOC.Intl.Conf.onVeryLarge\nDatabases, 1993.\n[707]J.Srivastava andD.Rotem.Analytical rnodeling ofmaterialized viewmaintenance. In\nACMSymp.onPrinciples ofDatabase Systems, 1988.\n[708]J.Srivastava, J.'Tan,andV.Lum.Tbsam: Anaccessnlethod forefficient processing of\nstatistical queries. IEEETransactions onKnowledge andDataEngineering, 1(4):414-\u00b7\u00ad\n42~~,1989.\n[709]D.Stacey.Replication: DB2,OracleorSybase? Database Prngramrning andDesign,\npages 42~50,December 1994.\n[710)P.Stachour andB.Thuraisingham. DesignofLDV:Amultilevel securerelational\ndatabase managenlent system.IEEE7iransactions onKnowledge andDataEngineering,\n2(2),1990.\n[71l}.J.Stankovic andW. Zhao.Onreal-time transactions. InProc.ACAJSIGMOD Conf.\nontheAIanagernent ofDataRecord,1988.\n[712]T.Steel.InterirnreportoftheANSI-SPARe studygroup.InP7'oc.ACA18IGMOD\nConf.ontheManagernent ofData,197.5.\n[713]IvtStonebraker. ltnplernentation ofintegrity constraints andviewsbyquerylllodifica\u00ad\ntion.InPrnc.ACAISIGAtfOD Conf.ontheManagernent ofData,1975.\n[714]M.Stonebraker. Concurrency controlandconsistency ofrnultiple copiesofdatain\nDistributed Ingres.IEEETransactions onSoftware BngineeT'ing, 5(3),1979.\n[715]IvI.Stonebraker. Operating systernsupport fordatabase ruanagement. Cornmunications\noftheACAtf, 14(7):412~\u00b7\u00b7418, 1981.", "1070": "1040 DATABASE l\\!IANAGENiENT SVS'I'g'iJ1S\n[716]?vI.Stonebraker. Inclusion ofnewtypesinrelational database systerns. InProc.IEEE\nInti.()onf.onDataEngineering, 1986.\n[717]1v1.Stonebraker. TheINGRBS Papers: Anatorny ofaRelational Database Systern.\nAddison- Wesley, 1986.\n[718JIV!.Stonebraker. 'ThedesignofthePostgres storage systern. InProc.Inti.Conf. OTt\n\\le'f7.)LargeDo,tabases, 1987.\n[719]IvI.Stonebraker. Db,iect-relational DBA1Ss-,-,,-The NeTtGreatWave.J\\tlorgan Kaufrnann,\nH)96.\n[720]:LvI.Stonebraker, J.f.):ew, K.Gardels, and.1.l\\'leredith. TheSequoia 2000storage\nbenchrnark. InProc.AClv[SIGi\\,fOD Conf.ontheAIanagernent ofData, 199~3.\n[721JwI.Stonebraker and.J.Hellerstein (eds).Read'ings inDatabase System,s. Nlorgan Kauf\u00ad\nrnann,2edition, 1994.\n[722]N1.Stonebraker, A.Jhingran, J.Goh,andS.Potarnianos. Onrules,procedures, caching\nandviewsindatabasesysterns. InUCBERL Jv19086, 1990.\n[723]M.Stonebraker andG.Kernnitz. ThePostgres next-generation database management\nsystem. Comrnunications oftheACM,34(10):78--92, 1991.\n[724]B.Subramanian, T.Leung,S.Vandenberg, andS.Zdonik. TheAQUAapproach to\nquerying listsandtreesinobject-oriented databases. InProc.IEEEInt!.Conf.onData\nEngineering, 1995.\n[725]W.Sun,Y.Ling,N.Rishe,andY.Deng.Aninstantandaccurate sizeestimation\nmethod forjoinsandselections inaretrieval-intensive environment. InProc.AC1\\1\n8IGMOD Conf.ontheManagernent ofData,1993.\n[726]A.SwamiandA.Gupta.Optirnization oflargejoinqueries: Conlbining heuristics and\ncOlnbinatorial techniques. InProc.ACiVf8IGJtv10D Conf.ontheManagement ofData,\n1989.\n[727]T.SwiftandD.Warren. Anabstract rnachine forSLGresolution: Definite programs.\nInIntl.LogicPrograrnming Syrnposium, 1994.\n[728]A.Tansel,J.Clifford, S.CacHa,S.Jajodia, A.Segev,andR.Snodgrass. Ternporal\nDatabases: TheoT\"'y, DesignandIm,plernentation. Benjarnin-Cummings, 1993.\n[729]Y.Tay,N.Coodrnan, andR.Suri.Locking perfornutnce incentralized databases. ACNI\nTransactions onDatabase Syste'fns, 10(4):415----462, 1985.\n(7~30]T.Teorey. Database lvlodeling andDesign: TheE-RApproach. lVlorgan Kaufrnann,\n1990.\n[7:31]rr.Teorey,D.-Q.-Yang,and.T.Fry.Alogicaldatabase designrnethodology forrela-\u00ad\ntionaldataba ..\"csusingtheextended entity-relationship rHode!. ACJlvfComputing Sur\u00ad\nveys,18(2):197----222, 1986.\n[7:32]H\"Thmnas. Arnajority consensus approach toconcurrency controlfornmltiple copy\ndatabases. ACl\\1'Trnn8acLions onDatabase S'ysterns, 4(2):180---209, 1979.\n[7:3:3]S.A.Thomas. 88LE1TL8Es.sent'ial8: Secnring the~Veb.John\\Viley&Sons,2000.\n[734]A.'ThOInasian. Concurrency control: ~1ethods, pcrforrnancc, andanalysis. ACA1Com\u00ad\nputingSurueys, 30(1):70----119, 1998.\n[7:35]A.T'l10111asian. Two-phase lockingperformance anditsthrashing behavior A()A1Com\u00ad\n]J'l1t:ingSurveys, :30(1):70-119, 1998.\n[7:36]S.'I'hOIua.') ,S.Bodagala, K.Alsabti, andS.Ranka. Anefficient algorithrn forthe\nincremental upclation ofa..ssociation rulesinlargedatabases. InProc.Intl.Conf.on\nj{nowledgc !Ji8covcrl/ andDataA1'ining.AAAIPress, 1997.", "1071": "1041\n[737]S.Todd.ThePeterlee relational testvehicle. IBAJ8ysterns Jour'no.l, 15(4):285\u00b7\u00b7-:307,\nHl76.\n(738)H.Toivonen. Sarnpling largedatabases forassociation rules.InPn)c.Inti.GonIon\nYeryLargeDatabases, 1996.\n[739]TPPerforrnance Council. TPCBenclllnark D:Standard specification, rev.1.2.Technical\nreport,http://www .tpc.org/dspec .html,1996.\n[740]1.Traiger, J.Gray,C.Galtieri, andB.Lindsay. T'ransactions andconsistency indis\u00ad\ntributed databa.,se systems. ACAITransactions onDataba8e Systerns, 25(9),1982.\n[741]1'vi.Tsangaris andJ.Naughton. Ontheperformance ofobjectclustering techniques. In\nProc.AClVISIGl\\10D Conf.onthe]Vlanagement ofData,1992.\n[742]D.-:N1.TsouandP.Fischer. Decomposition ofarelation schemeintoBoyce-C odd\nnonnalform.SIGACT News,14(3):23-29, 1982.\n[743)D.Tsur,J.D.Ullman, S.Abiteboul, C.Clifton,R.Motwani, S.Nestorov, andA.Rosen\u00ad\nthal.Queryflocks:Ageneralization ofassociation-rule mining.InProc.ACMSIGMOD\nConf.onManagernent ofData,pages1-12,1998.\n[744]A.Tucker(ed.).Computer- Science andEngineering Handbook. CRCPress,1996.\n[745]J.W.Thkey.Exploratory DataAnalysis. Addison-Wesley, 1977.\n[746]J.Ullman. TheU.R.strikesback.InACMSymp.onPrinciples ofDatabase Systems,\n1982.\n[747]J.Ullman. Principles ofDatabase andKnowledgebase Systems, Vols.1and2.Computer\nSciencePress,1989.\n[748)J.Ullman. Infonnation integration usinglogicalviews.InIntl.Conf.onDatabase\nTheory, 1997.\n(749)S.UrbanandL.Delcarnbre. Ananalysis ofthestructural, dynamic, andtemporal\naspectsofsemantic datamodels.InProc.IEEEIntl.Conf.onDataEngineering, 1986.\n[750]G.Valentin, M.Zuliani, D.C.Zilio,G.M.Lohman, andA.Skelley. Db2advisor: An\noptirnizer smartenoughtorecomrnend itsownindexes. InProc.Intl.Conf.onData\nEngineering (ICDE),pages101-110. IEEECOlnputer Society, 2000.\n[751]lVI.VanEmdenandR.Kowalski. Thesemantics ofpredicate logicasaprograrrnning\nlanguage. JournaloftheACM, 23(4):7:~3~742, 1976.\n[752]A.VanGelder.Negation asfailureusingtightderivations forgenerallogicprograms. In\nJ.Minker,editor,Fo'undations ofDeductive Databases andLogicProgTarnrn'ing. i\\1organ\nKaufmann, 1988.\n[753)C.J.vanRijsbergen. Infomwtion Retrieval. Butterworths, London, UnitedKingdorn,\n1990.\n[754]JvtVardi.Incomplete information anddefaultreasoning. InACMSymp.onPrinciples\nofDatabase Syste'ms, 1986.\n[755]M.Vardi.Fundamentals ofdependency theory. InTrendsinTheoretical CornputeT\nScience. ed.E.Borger,Computer SciencePress,1987.\n[756]L.Vieille.Recursive axiomsindeductive databases: Thequery-sub queryapproach. In\nIntl.Conf.onExpertDatabase Systems, 1986.\n(757]L.Vieille.FraInQSQtowards QoSaQ: globaloptimization ofrecursive queries. InIntl.\nCan].onEl:pertDatabase Systerns, 1988.\n[758]L.Vieille,P.Bayer,V.Kuchenhoff, andA.Lefebvre. EKS-VI, ashortoverview. In\nAAAI-90 Wor-kshop onKnowledge Baselvlanageutent Systerns, 1990.", "1072": "1042 DATABASE MANAGEMENT SYSTEMS\n[759].J.S.VitterandIvi.Wang.Approxirnate conlputation ofrnultidinlensional aggregates\nofsparsedatausingwavelets. InProc.ACMSICA10D Conf.ontheft..1anagc7nent of\nData,pages193-204. ACtvIPress,1999.\n[760]G.vonBultzingsloewen. Translating andoptinlizing SQLquerieshavingaggregates. In\nProc.Intl.Conf.onVeryLargeDatabases, 1987.\n[761]G.vonBultzingsloewen, K.Dittrich, C.Iochpe, R.-P.Liedtke, P.Lockemaun, and\nM.Schryro. Kardamom\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7-A dataflow database machine forreal-tiule applications. In\nProc.ACMSICNfOD Conf.ontheManagement ofData,1988.\n[762]G.Vossen. DataA10dels, Database Languages andDatabase lvlanagement Systems.\nAddison- Wesley, 1991.\n[763]N.Wade. Citation analysis: Anewtoolforscience administrators. Science,\n188(4183):429-432, 1975.\n[764]R.Wagner. Indexing designconsiderations. IBMSystems Journal, 12(4):351-367, 1973.\n[765]X.Wang,S.Jajodia, andV.Subrahmanian. Temporal modules: Anapproach toward\nfederated temporal databases. InProc.ACMSIGMOD Conf.ontheManagement of\nData,1993.\n[766]K.WangandH.Liu.Schemadiscovery forsemistructured data.InThirdInternational\nConference onKnowledge Discovery andDataMining(KDD-97),pages271-274, 1997.\n[767]R.Weber,H.Sehek,andS.Blott.Aquantitative analysis andperformance studyfor\nsimilarity-search methods inhigh-dimensional spaces.InProc.Inti.Conf.onVeryLarge\nDataBases,1998.\n[768]G.Weddell. Reasoning aboutfunctional dependencies generalized forsemantic data\nmodels. ACMTransactions onDatabase Systems, 17(1),1992.\n[769]W.Weih!.Theimpactofrecovery onconcurrency control. InACMSymp.onPrinciples\nofDatabase Systems, 1989.\n[770]G.Weikum andG.Vossen. Transactional Information Systems. Morgan Kaufrnann,\n2001.\n[771]R.Weiss,B.V.lez,M.A.Sheldon, C.Manprenlpre, P.Szilagyi, A.Duda,andD.K.\nGifford. HyPursuit: Ahierarchical network searchenginethatexploits content-link\nhypertext clustering. InProc.ACMConf.onHypertext, 1996.\n[772]C.White. Letthereplication battlebegin.InDatabase Progrnmm,ing andDesign,pages\n21-24,May1994.\n[773]S.White,M.Fisher,R.Cattell, G.Hanlilton, andIvLHapner. JDBCAPITutorial and\nReference: Universal DataAccessfortheJava2Platform. Addison-Wesley, 2edition,\n1999.\n[774]J.WidornandS.Ceri.ActiveDatabase Systerns. Morgan KaufInann, 1996.\n[775]G.Wiederhold. Database Design(2ndcd.). ~/1cGraw-Hill, 1983.\n[776]G.Wiederhold, S.Kaplan, andD.Sagalowicz. Physical database designresearch at\nStanford. IEEEDatabase Engineering, 1:117--\u00b7-119, 1983.\n(777]R.Williams, D.Daniels, L.H8.<1.S,G.Lapis,B.Lindsay, P.Ng,R.Oberrnarck,\nP.Selinger, A.v\\lalker, P.\"\"1'\"ilrns,andR.Yost.R*:Anoverview ofthearchitecture.\nTechnical report,IBIvIRJ3325, SanJose,CA,1981.\n[778]1\\1.S.Winslett. Arnodel-based approach toupdating databases with1ncornplete infor\u00ad\nmation. ACA1Transactions onDatabase Systerns, 1i3(2):167--196, 1988.", "1073": "REFERENCES 1043\n[779JG.vViorkowski andD.KulI.DB2:DesignandDeveloprnent Guide(8rded.).Addison\u00ad\nWesley, 1992.\n[780]1.H.Witten, A.rvloffat,andT.C.Bell.Alanaging Gigabytes: Compressing andIndexing\nDocuments andImages. VanNostrand Reinhold, 1994.\n[781]1.H.WittenandE.Frank.DataAfining: Pr'actical Machine Learning ToolsandTech\u00ad\nniqueswithJavaIm,plementations. Morgan Kaufmann Publishers, 1999.\n[782]O.Wolfson, A.Sistla,,B.Xu,J.Zhou,andS.Chamberlain. Domino: Databases for\nmovingobjectstracking. InPrnc.ACMSIGlvIOD Int.Conf.onAfanagement ofData,\n1999.\n[783]Y.YangandR.lI1iller.Association rulesoverintervaldata.InProc.ACMSIGlv/OD\nConf.ontheManagement ofData,1997.\n[784]K.Youssefi andE.Wong.Queryprocessing inarelational database management system.\nInProc.Intl.Conf.onVeryLaryeDatabases, 1979.\n[785]C.YuandC.Chang. Distributed queryprocessing. ACMComputing Surveys,\n16(4):399~433, 1984.\n[786]O.R.Zaiane,M.EI-Hajj, andP.Lu.FastParallel Association RuleMiningWithout\nCandidacy Generation. InProc.IEEEIntl.Conf.onDataMining(ICDM),200l.\n[787]M.J.Zaki.Scalable algorithms forassociation mining. InIEEETransactions on\nKnowledge andDataEngineering, volume12,pages372-390, May/June 2000.\n[788]M.J.ZakiandC.-T.Ho,editors. Large-Scale Parallel DataMining. Springer Verlag,\n2000.\n[789]C.Zaniolo. Analysis anddesignofrelational schemata. Technical report,Ph.D.Thesis,\nUCLA,TRUCLA-ENG-7669, 1976.\n[790]C.Zaniolo. Database relations withnullvalues. JournalofComputer andSystem\nSciences, 28(1):142~166, 1984.\n[791]C.Zaniolo. Thedatabase language GEM.InReadings inObject-Oriented Databases.\neds.S.B.ZdonikandD.Maier,Morgan Kaufmann, 1990.\n[792]C.Zaniolo. Active databa~e ruleswithtransaction-conscious stable-model semantics.\nInIntl.Conj.onDeductive andObject-Oriented Databases, 1996.\n[793]C.Zaniolo, N.Arni,andK.Ong.Negation andaggregates inrecursive rules:the\nLDL++ approach. InIntl.Conf.onDeductive andObject-Oriented Databases, 1993.\n[794]C.Zaniolo, S.Ceri,C.Faloutsos, R.Snodgrass, V.Subrahmanian, andR.Zicari.Ad\u00ad\nvancedDatabase Systems. Morgan Kaufmann, 1997.\n[795]S.Zdonik, U.Cetintemel, M.Cherniack, C.Convey, S.Lee,G.Seidlnan, M.Stone\u00ad\nbraker,N.Tatbul,andD.Carney Monitoring streams--\u00b7 ..\u00b7\u00b7Anewclassofdatamanage\u00ad\nmentapplications. InProc.Intl.Conf.onVeryLargeDataBases,2002.\n[796]S.ZdonikandD.lVfaier(eds.).Readings inObject-Oriented Databases. Morgan Kauf\u00ad\nrnann,1990.\n[797]A.Zhang,1.1.Nodine, B.Bhargava, andO.Bukhres. Ensuring relaxedatornicity for\n\u00a3le\"'Cibletransactions inmultidatabao:;e systerns. InPTOC.ACAfSIGMOD Conf.onthe\nlvlanaqe-rnent ofData,1994.\n[798]T.Zhang,R.Hamakrishnan, andIV!.Livny.BIRCH: anefficientdataclustering rnethod\nforverylargedatabases. InProc.AClvfSIGA10D Conf.onAlanagement ofData,1996.\n[799]Y.Zhao,P.Deshpande, J.F.Naughton, andA.Shukla. Silllultaneous optirnization\nandevaluation ofmultiple dirnensional queries. InProc.AClvlSIGlvlOD Intl.C'onj.on\nlvIanagernent ofData,1998.", "1074": "1044 D.ATABASE ~{ANAGErvIENT SYSTEItlS\n[800]Y.Zhuge,H.Garcia-1Vlo1ina, J.Hanuner, and.1.Widom. Viewmaintenance inaware\u00ad\nhousing enviroIllnent. InPl'oc.AGArfSIGAI0D Conf.ontheA,lanagernent ofData,\n1995.\n[801J111.,?vLZloof.Query-by-exaIllple: adatabase language. IBlv!System,s JO'1rmal, 16(4):324-\u00ad\n~~43,1977.\n[802JJ.Zobel,,A.tvloffat,andK.RalnarIlohanarao. Inverted filesversussignature filesfor\ntextindexing. ACA1Transactions onDatabase System,s, 23,1998.\n[80~{].J.Zobel,A.lVlotfat,andR.Sacks-Davis. Anefficient indexing technique forfulltext\ndatabases. InFroc.Intl.Co'nj.onVeryLargeDatabases., Iv!07:qanKaufman pubs.(San\n})'Q,ncisco\" CAyis]Vancou'veT, 1992.\n[804]U.Zukowski andB.Freitag.Thedeductive database systemLOLA.InProc.Intl.Conf.\nonLog'icProgramming andN'on-A10notonic Reasoning, 1997.", "1075": "AUTHOR INDEX\nAbbott, R.,578,1005,1001\nAbdali, K.,270,1015\nAbdellatif, A.,771,1029\nAbiteboul, S.,24,98,648,816,\n844,925,967,1005, 1030,\n1033,1041,1001\nAboulnaga, A.,967,1005\nAcharya, S.,888,1005\nAchyutuni, K.J.,578,1005\nAckaouy, E.,xxix\nAdali,S.,771,1005\nAdiba,M.E.,771,1005,1038\nAdleman, L.I\\i1.,722,1036\nAdya,A.,815,1029\nAgarwal, R.C.,924,1005\nAgarwal, S.,887,1005\nAggarwal, C.C.,924,1005\nAgrawal, D.,578,771,1005\nAgrawal, R.,181,602,815,887,\n924925, 1005~1006, 1008,\n1024,1030, 1037-~1039\nAhad,R.,516,1006\nAhlberg, C.,1006,1001\nAhmed, R.,1026,1001\nAho,A.V.,303,516,648,1006\nAiken,A.,181,1006,1001\nAilamaki, A.,1006\nAlameldeen, A.R.,9G7,1005\nAlbert,J.A.,xxxi,1026,1001\nAlon,N.,887\nAlonso,R.,966,10:35\nAlsabti, K.,925,1041\nAnupam, V.,10:34,1001\nAnwar, E.,181,1007\nApt,K.R.,845,1007\nArmstrong, W.W.,648,1007\nArni,N.,816,1044\nArocena, G.,967,1007\nAsgarian, Iv1.,691,1012\nAstrahan, MJvL98,180,516,\n1007,10121013, 1038\nAtkinson, M.P.,815816, 1007\nAttar,R.,771, 100~\nAtzeni,P.,24,98,648,8Ui,\n967,1007\nAvnur,R.,888,1007\nBabcock, B.,1007\nBalm,S.,888,1007\nBadal,D.Z.,98,1007\nBadia,A.,129,887,1007,10:35Badrinath, B.R.,1025,1001\nBaeza-Yates, R.,966,1019\nBailey,P.,1007\nBalbin, 1.,845,1008\nBallou,N.,815,1026\nBalsters, H.,xxxi\nBancilhon, F.,99,816, 845,\n1008\nBapaRao, K.V.,516,1006\nBaralis, E.,181,1008\nBarbara, D.,771,888,966,\n1008,1020,1035\nBarclay,T.,438,1033\nBarnes,I\\iLG.,:30:3,1039\nBarnett, J.R.,337,1008\nBarquin, R.,887,1008\nBatini,C.,55--56,1008\nBatory, D.S.,516,1008,1026\nBaugsto, B.A.W., 438,1008\nBaum,M.S.,722,1019\nBawa,Iv!.,924,1038\nBayardo, R.J.,924----\u00b7925, 1008,\n10:35\nBayer,P.,844,1042\nBayer,R.,369,1008\nBeck,M.,438,1008\nBeckmann, N.,991,1008\nBeech,D.,815,1018\nBeeri,C.,648,816, 845, 1006,\n1009\nBektas,H.,xxix\nBell,D.,771,1009\nBell,T.e.,966,104:3\nBentley, J.L.,~369,1009\nBerchtold, S.,991,1009\nBergstein, P.,xxxii\nBernstein, A.J.,24,771,\n1027-1028\nBernstein, P.A.,99,548,576,\n578,648,771,1007,\n10091010, 1015,HX36\nBeyer,K.S.,887,991,1010,\n1029,10:'35,lOCH\nBhalotia, G.,924,10:38\nBhargava, 13.K.,xxxii,771,\nHHO\nBiJiris,A.,337,1010\nBiskup,J.,56,648,UHO\nBitton, [).,/1:38,477,1008,1010\nBlajr,H.,845,1007\n1045Blakeley, J.A.,887,1010\nBlanchard, L.,xxx\nBlasgen, M.W.,98,477,602,\n1007, 1010, 1012,1022\nBlaustein, B.T.,99,1009\nBlott,S.,991,1043\nBodagala, S.,925,1041\nBohannon, P.,967,1010, 1026,\n1001\nBohm,C.,991,1009\nBonaparte, N.,847\nBonnet, P.,1010\nBooeh,G.,56,1010,1036\nBoral,H.,477,516,1027\nBoroclin, A.,966,1010\nBosworth, A.,887,1022\nBoyce,R.F.,180,1010\nBradley, P.S.,887,1010,1038,\n925\nBratbergsengen, K.,477,1010\nBreiman, L.,925,1010\nBreitbart, Y.,771,1010--1011,\n1030\nBrin,S.,924,966,1011\nBrinkhoff, T.,991,1011\nBrown,K.P.,:337,1011\nBruno,N.,888,1011\nBry,F.,99,845,1011\nBukhres, O.A.,771,1017\nBuneman, a.p.,56,181,\n815\u00b7816, 967,1007, 1011,\n1032\nBunker, R.,477,1021\nBurdick, D.,924,1011\nBurger,J.,10:34,IDOl\nBurke,E.,422\nCabibbo, L.,816,1007\nCai,L.,xxxi\nCalimlinl, M.,924,1011\nCa.mpbell, D.,xxxi\nCandan, K.S.,771,1005\nCarey, 1'1,11..1.,xxix,xxxi....\u00b7xxxii,\n:3:37,578,691,771,\n815816, 888,967,1004,\n1006,1011-1012, 1019,\n1022-102:3, J(J:39\nCarney, D.,888,1044\nCarroll,L.,440\nCasanova, M.A.,56,99,1012,\n1019", "1076": "1046\nCa.,>tano~ S.,722,1012\nCastro, :tv!.,815,1029\nCate,H.P.,815,1018\nCattell,R.G.G., 219,816,1012,\n102:3,1043\nCeri,S.,55,99,181,771,816,\n844,925,1008, 1012, 1031,\n1043\u00b7\"'\u00b71044, 1001\nCesarini, F.,691,1012\nCetintemel, U.,888,1044\nChakravarthy, U.S.,181,516,\n578,1007,1012,1024,\n1036\nChamberlain, S.,991,1043\nChamberlin, D.D.,98-99,\n180-181, 516,816,967,\n1007,1010--1013, 1017,\n1038\nChan,11.C.,771\nChan,P.,924,1025\nChandra, A.K.,516,845,1013\nChandy, M.K.,771,1013\nChang,C.C.,771,1013,1043\nChang,D.,270,1013\nChang,S.K.,771\nChang,W.,815,1022\nChanliau, M.,xxxi\nChao,D.,xxxi\nCharikar, M.,888,1013\nChatziantoniou, D.,887,1013\nChaudhuri, S.,691,816,\n887--888, 924,1011,1013\nChawathe, S.,967,1032\nCheiney, J.P.,477,1013\nChen,C.M.,337,516,1013\nChen,G.,1029,1001\nChen,H.,xxxi\nChen,J.,1006,1001\nChen,P.M.,337,1014\nChen,P.P.S.,1014\nChen,Y.,887,1014\nCheng,W.H.,771\nCherniack, :tv'L,888,1044\nCheung, D.J.,925,1014\nChilds,D.L.,98,1014\nChimenti, D.,844,1014\nChin,F.Y.,722,1014\nChisholm, K.,1007\nChiu,D.W.,771,1009\nChiueh, T-C.,966,1014\nChomicki, .1.,99,1014\nChou,H.,:3~H,815,101.4,1016\nChow,E.C.,815,1018\nChristodoulakis, S.,516,966,\n1025\nChrysanthis, P.K.,548,1014\nChu,F.,516,1014\nChu,!').,5Ui,l(l:30\nChurchill, W.,992Civelek, F.N.,56,1014\nClarke,EJvL,99,1009\nClemons, E.K.,181,1011\nClifford, J.,1041,1001\nClifton, C.,925,1041\nCochrane, R.J.,181,1014\nCockshott, P.,1007\nCodd,E.F.,98,129,648,887,\n1014..\u00b7..1015\nColby,L.S.,887,1015\nCollier, R.,25\nComer, D.,369, 1015\nConnell, C.,516\nConnolly, D.,270,1015\nConnors, T.,815,1018\nConvent, B.,56,1010\nConvey, C.,888,1044\nCooper, B.,967,1015\nCooper, S.,477,1021\nCopeland, D.,815,1015\nCornelio, A.,1039,56\nCornell, C.,516,1034\nCornell, G.,270,1015\nCortes,C.,888\nCosmadakis, 8.S.,99\nCristian, F.,771,1017\nCristodoulakis, S.,1018\nCvetanovic, Z.,438,1033\nDadam, P.,337,816,1028\nDaemen, J.,722,1015\nDaniels, D.,771,1043\nDar,S.,887,1040\nDas,G.,888,1013\nDatal',M.,888,1007\nDate,C.J.,24,98--99,637, 648,\n1015\nDavidson, S.,967,1011\nDavis,J.W.,815,1018\nDavis,K.C.,xxxi\nDayal,D.,99,181,516,648,\n771,887,1010, 1013, 1015,\n10301031\nDay,M.,815,1029\nDeAntonellis, V.,24,98,648,\n1007\nDei\\1aindreville, C.,181,1039\nDeBono, E.,304\nDeBra,P.,648,1015\nDeep,J.,270,1015\nDelcambre, L.M.L., xxxi,56,\n1042\nDelobel, C.,648,816,1008,\n1015\nDeng,Y.,516,1041\nDenning, D.E.,722,1015,1029\nDeppisch, U.,3:37,10;{4\nDerr,M.,1016\nDerrett, N.,815,1018\nDersta,dt, .J.,267AUTH(}R, INDF~X\nDeshpande, A.,816,1016\nDeshpande, P.,887,1005,1016,\n1039,1044\nDeutsch, A.,967,1016\nDeux,0.,815,1016\nDeWitt, D..J.)xxviii,337,438,\n477,516,602,691,\n770'--771, 815--816, 1004,\n1006,1010\u00b7\u00b7\u00b71012, 1014,\n1016,1021,1024--1025,\n1030,1032,10:34,1001\nDiaz,0.,181,1016\nDickens, C.,605\nDietrich, S.W.,845, 887, 1016,\n1023\nDiffie,W.,722,1016\nDimino, L.,xxxi\nDittrich, K.R.,816,1042,1001\nDogac,A.,56,771,1014,1023\nDomingos, P.,925,1016\nDomingos, R.,925,1024\nDong,G.,887,1014\nDonjerkovic, D.,xxix,516,\n887\u00b7\u00b7\u00b7-888, 1016,1029, 1035,\n1001\nDonne,J.,726\nDoole,D.,816,1011\nDoraiswamy, S.,xxxi\nDoyle,A.C.,773\nDubes,R.,925\nDubes,R.C.,1016,1025\nDu,K.,1033,1001\nDu,W.,771,1016\nDuda,A.,966,1043\nDuMouchel, W.,888,1008\nDupont, L.,967,1037\nDupont, Y.,56,1039\nDuppel, N.,477,1016\nEaglin,R.,xxxii\nEdelstein, H.,771,887,1008,\n1017\nEffelsberg, W.,:-3;37,1017\nEich,M.H.,xxxi,602,1017\nEisenberg, A.,180,816,1017\nElAbbadi, A.,578,771,1005,\n1017\nEI-Hajj, 11.,924,1043\nEllis,C.8.,578,1017\nEllman, C.,10~34,1001\nElmagarmid, A.K.,771,1000,\n1015-1017\nElmasri, R.,24,5Ei,1017\nEpstein, R.,477,771,1017\nErbe,R.,3:n,816,1028\nEster,M.,925,1017,1037\nEswaran, K.P.,98,180181,\n477,548,1007,uno,101':-3,\n1017", "1077": "AUTHOR INDEX\nFagin,R.,xxix,390,637, 648,\n1009,1015,1017--1018\nFalonts().,;, C.,181,:3:W,:369,\n816,844,888,925,966,\n991,1008, 1018, 1027,\n1044,1001\nFan,C.,967,1038\nFang,N!.,924,1018\nFandemay, P.,477,101:3\nFayyad, U.M.,887,924--925,\n1006,1010,1018,\n1038~-1039\nFendrich, .1.,xxxii\nFernandez, M.,967,1016,1018\nFinkelstein, S.J.,516,691,845,\n1018,1032\nFischer, C.N.,xxx\nFischer, P.C.,648,1025,1041\nFisher,K.,888\nFisher, iVI.,219,1023,1043\nFishman, D.H.,815,1018\nFitzgerald, E.,817\nFleming, C.C.,691,1019\nFlisakowski, S.,xxix~xxx\nFlorescu, D.,967,1012--1013,\n1016,1018-1019\nFord,W.,722,1019\nFotouhi, F.,477,1019\n:Fowler, M.,56,1019\nFox,S.,771,1036\nFrakes,W.B.,966,1019\nFranaszek, P.A.,578,1019\nFranazsek, P.A.,1019\nFrank,E.,924,1043\nFranklin, M.J.,771,815816,\n967,1011,1015,1019\n:Fraternali, P.,181,1012,1019\nFrawley, W.J.,924,1034\nFreeston, ~1.'W.,991,1019\nI~eire,.1.,967,1010\nFreitag, B.,844,1044\nFrench, .1.,1020\nFrew,.1.,691,1040\nFreytag, J.C.,516,1019\nFriedman, J.B.,:369,924925,\n1009----1010, 102:3\nFriesen,0.,816,1019\nFry,J.P.,24,56,99,1019,1041\nFuchs,IV!.,270,1028\nFu,Y.,925,1023\nFugini,M.G.,722,1012\nFuhr,N.,966,1019\nFukuda, 1'.,924, 1019\nFunderburk, .I.,967,10:38\nFurtado, A.1.,99,1012,1019\nFushimi, S.,477,1019\nGacHa,S.,1041,lOCH\nGaede,V.,991,1020Gallaire, H.,98.._\u00b799,648,844,\n1020\nGaltieri, C.A.,602,771,1028,\n1041\nGamboa, R.,844,1014\nGanguly, S.,771,1020\nGanski, R.A.,516,1020\nGanti,V.,925,1020\nGarcia-:Molina, H.,24,578,771,\n887,924,966----967, 1005,\n1010,1018,1020\u00b7..\u00b71021,\n1033-1035, 1044,1001\nGardels, K.,691,1040\nGarfield, E.,966,1020\nGarg,A.K.,390,1020\nGarza,J.F.,337,815,1008,\n1026\nGehani, N.H.,181,815,1006\nGehrke, .I.E.,691,888,\n924-925, 1006, 1011-~1012,\n1020\nGerber, R.H.,477,770,1016\nGhemawat, S.,815,1029\nGhosh,S.P.,303,1020\nGibbons, P.B.,887-888, 1005,\n1021\nGibson, D.,925, 966, 1021\nGibson, G.A.,337,1014,1021,\n1034\nGifford, D.K.,771,1021,1043\nGifford, K.,966\nGilbert, A.C.,888\nGionis,A.,888\nGoh,.1.,181,1040\nGoldfarb, C.F.,270,1021\nGoldman, R.,967,1021,1030\nGoldstein, .1.,xxxi,991,1010,\n1021\nGoldweber, M.,xxix\nGoodman, N.,57(),578,771,\n1007,1009, 1036, 1038,\n1041\nGopalan, H...,xxxi\nGotlieb, C.C.,390,1020\nGottlob, G.,844,1012\nGraefe, G.,xxxi,4:38,477,51G,\n770--771, 815,1011, 1016,\n1021,1028\nGraham, M.H.,648,1021\nGrahne, G.,98,1021\nGrant,.J.,516,1012\nGravano, L.,888,966,1011,\n1021\nGray,.LN.,98, 4:_~8,548,(i02,\n691,770--771, 887,1000,\nl007,]012, 10l(i~1017,\n1021-1022, 1028,103:3,\n1037,10411047\n$\nGray,PJvl.D., 24,181,IOI6,\n1022\nGreenwald, :NI.,887,1022\nGreipsland, J.F.,438,1008\nGriffin,T.,887,1015\nGriffiths, P.P.,98,180,602,\n722,1007,lCll:3,1022\nGrimson, J.,771,1009\nGrinstein, G.,1022,1001\nGrosky, W.,xxxi\nGruber, R.,815,1029\nGuenther, 0.,991,1020\nGuha,S.,888,925,1022,1033\nGunopulos, D.,924-~925, 1006,\n1008,1022\nGuo,S.,1034,1001\nGupta,A.,516,887,1005,\n1022,1041\nGuruswamy, S.,1033,1001\nGuttman, A.,991,1022\nGyssens, M.,129,1007\nHaas,L.M.,771,815,1013,\n1022,1043\nHaas,P.J.,516,888,\n1022---1023, 1034\nHaber,E.,xxx\nHaderle, D.,602,771,1031\nHadzilacos, V.,576,578,1009\nHaerder, T.,337,602,1017,\n1023\nHaight, D.M.,815,1011\nHaines, M.,xxix\nHalici,U.,771,1023\nHall,M.,270,1023\nHall,N.E.,815,1011,1034,\n1001\nHall,P.A.V., 477,102:'3\nHalpern, J.Y.,516,1014\nHamilton, G.,219,102:'3,104;3\nHammer, .1.,xxxi,887,1044\nHammer, M.,98,771,102:3,\n1036\nHan,J.,887,924\u00b7-925, 1014,\n102:3,1028,10:'32,:10:34\nHand,D.J.,924925, 1023,\n1D::W\nHanson, E.N.,181,887,102:3\nHapner, M.,219,104:3\nBarel,D.,845,101:3\nHarinarayan, V.,887, 102::~\nHaritsa, J.,578,924,1023, l(X38\nHarkey, D.,270,101:3\nHarrington, .I.,xxx\nHarris,S.,xxix\nHarrison, .I.,887,1023\nHa..san,\"V.,771,1020\nHass,P.or.,888,1008\nHa.stie,T.,924,1023\nHearst, M_,xxxii", "1078": "1048\nBeckerman, D.,!J24,1014,\n102:,3,1041\nHeckman, ?v1.,722,1029\nHeH<:md, P.,771\nHellerstein, JJv1.,xxix,181,\n516,772,816, 845, 888,\n967,991,1()06\u00b7_\u00b71008,\n10221024, 1027,\n1034,,\u00b7,,1035, 1038,1040,77:3\nHellman, lVLE.,722,1016\nHeilschen, L.J.,99,10:30\nHeytens,l\\ILL.,477,770,1016\nHidber, C.,925,1024\nHill,IvLD.,1006\nHillebrand, G.,967,1011\nHimmeroeder, R.,967,1024\nHinterberger, H.,991,1033\nHjaltason, G.R.,967,1015\nHoch,C.G.,815,1018\nHo,C-T.,887,924,1024,1044\nHolfelder, P.,270,1015\nHollaar, L.A.,966,1036,1001\nHolzner, S.,270,1024\nHoneyman, P.,648,1009\nHong,D.,578,1024\nHong,W.,771,1024\nHopcroft, J.E.,303,1006\nHou,W-C.,516,1024, 1033,\n1001\nHoward, .J.H.,648,1009\nHsiao,H.,771,1024\nHsu,C.,xxxii\nHuang, .1.,578, 1024\nHuang,L.,966,1014\nI-Iuang,W.,xxix\nHuang,Y.,771,1024,1001\nHull,H..,24,56,98,648,816,\n844,1005,1024,1001\nHulten, G.,925,1016,1024\nHunter, .1.,270,1024\nImielinski, T.,98,924,1006,\n1024-1025, 1001\nJoannidis, Y.E.,xxix,56,516,\n888,1008,1025,10:-n,\n10:34\nIochpe,C.,1042,lOCH\nIves,Z.,967,1012\nJacobson, 1.,56,1010,Hn6\nJacobsson, H.,xxxi\nJagadish, H.V.,:3:31,:369,\n887-,\u00b7888, 991,1008,1018,\n1025,1027,1040,lOCH\n.Ja-in,A.K.,925,1016,1025\nJajodia, S.,722,771,1025,\n1041,1042, 1001\n.larke,1vt,516,1025\nJean,1\".,10:34,1001\nJeffers,R.,578,1005\n.Jhingran, A.,181,1040Jing,.J.,771,1017\nJohnson, T.,578,888,1008,\n1024\nJones,K.S.,966,1025\nJonsson, B.T.,771,1019\nJou,J.H.,648,1025\nKabra,N.,516,1025,10:34,\n1001\nKambaya,shi, Y.,771,1025\nKamber, NI.,924,1023\nKane,S.,xx.xii\nKanellakis, P.C.,98,648,816,\n1005,1008,102,5,1001\nKang,J.,967,1018\nKang,Y.C.,516,1025\nKaplan, S..1.,1043\nKarabatis, G.,771,1036,1001\nKargupta, H.,924,1025\nKatz,R.H.,337,477,1014,\n1016,1034\nKaufman, L.,925,1025\nKaushik, R.,xxxii,967,1026,\n926\nKawaguchi, A.,xxxii,887,1015\nKeats,J.,130\nKedem, Z.I'v1.,924,1028\nKeim,D.A.,1026,1001\nKeller,A.M.,99,1026\nKemnitz, G.,815,1040\nKemper, A.A.,3:37,816,1028\nKent,W.,24,616,815,1018,\n1026,1001\nKerisit,J.M.,845,10:36\nKerschberg, L.,24,1026\nKetabchi, M.A.,1026,1001\nKhanna, S.,887,1022\nKhardon, R..,924,1022\nKhayyam, 0.,817\nKhoshafian, S.,816,1008\nKiernan, J.,181,967,\n10:38-1039\nKiessling, \\V.,516,1026\nKifer,Tvi.,24,xxix,816,845,\n1026,1028\nKimball, H..,887,1026\nKim,vV.,516,771,815..816,\n1017,1026\nKimmel, W.,xxx\nKing,.LT.,516,1026\nKing,R.,50,1024\nKing,VvT.F.,98,1007,1012\nKirk,(:.,270,10:34\nJ<'itsuregawa, ?Y1.,477,1019\nKleinberg, .1.R'!.,925,966, 1021,\n1026\nKlf.!in,J.D.,xxxi\nKlug,A.C.,24,129,:,337,516,\n1016,1026\nKnapp, E.,1027AlJ'rH()R INI)EX\nKnuth,D.E.,30:3,4:38,1027\nKoch,G.,99,1027\nKoch,J.,5Ui,1025\nKodavalla, H.,xxxi\nKohler,\\V.H.,1027\nKonopnicki, D.,967,1027,1001\nKornacker, M.,816, 991~1027\nKorn,F.,888,1027\nKorth,II.F.,24,578,771,967,\n1024,1026-1027, HX30,\n1039,IDOl\nKossman, D.,771,888, 10l2~\n1019,1027\nKotidis, Y.,887--888, 1027,\n1036\nKoudas, N.,888,1022\nKoutsoupias, E.,967,991,\n1023\u00b7--1024\nKowalski, R.A.,844,1042\nKriegel, H-P.,925, 991,\n1008--1009, 1011,1017,\n1026,1037,1001\nKrishnakumar, N.,771,1027\nKrishnamurthy, R.,516,771,\n844,1014,1016,1020,\n1027\nKrishnaprasad, NL,xxxi,887,\n10~35\nKuchenhoff, V.,844,1042\nKuhns, J.L.,98,129,1027\nKulkarni, K.,xxix\nKull,D.,691, 104~3\nKumar, K.B.,477,770,1016\nKumar,V.,578,1027\nKunchithapadarn, K.,xxx\nKung,H.T.,578,1027\nKuo,D.,1027\nKupsch, J.,1034,1001\nKuspert, IC,337,816,1028\nLaCroix, M.,129,1027\nLadner, R.E.,578, 10~30\nLai,:tv'L,578,1027\nLakslnnanan, L.V.S.,924925,\n967,1027-1028, 10~32, IO:~4\nLaIn,C.,815,1028\nLamport, L.,771,1028\nLampson, B.vV.,771,1028\nLanders, 'I'.A.,771,10:36\nLandis, G.,815,1028\nLandwehr, C.L.,722\nLangE~rak, R.,99,1028\nLapis,G.,771,815,1022,1043\nLarson, J.A.,56,771, lO::~9\nLarson,P.,390,'\u00b71:38,887,1010,\n1028,HX35\nL1St,M.,xxxii\nLausen, G.,8Ui,967,1024,\n1026\nLawan(lE~, S.,1029,1001", "1079": "~4lJT}I()R INDE~Y\nLayman, A.,887,1022\nLebowitz, F.,100\nLee,E.K.,337,1014\nLee,1V1.,xxix\nLee,S.,888,1044\nLefebvre, A.)816,844,1019,\n1042\nLeff,A.,771,1034\nLehman, P.L.,578,1027-\u00b7\u00b71028\nLeinbaugh, P.,1010,1001\nLenzerini, M.,56,1008\nLescoeur, F.,845,1036\nLeu,D.F.,1013\nLeung,T.vV.,816,1040\nLeung,T.Y.C., 516,845,887,\n1028,1038\nLeventhal, JV1.,270,1028\nLevine,F.,578,602,1032\nLevy,A.Y.,xxxii,887,967,\n1018'-1019, 1040\nLewis,D.,270,1028\nLewis,P.M.,24,771,1028,\n1036\nLey,lVI.,xxix\nLibkin, L.,887,1015\nLiedtke, H.,1042,1001\nLieuwen, D.F.,337,887,1015,\n1025,1034,1001\nLim,E-P.,771,1028,1001\nLin,D.,924,1028\nLin,K-I.,991\nLindsay, B.G.,xxxi,98,337,\n602,771,815, 887, 1012,\n1022,1028, 10~30-1032,\n1041,1043\nLing,Y., 516,1041\nLinnemann, V.,:3:37,816,1028\nLipski,vV.,98,1024\nLipton,R.J.,1020,516,1028,\nlOCH\nLiskov,13.,815, 1029\nLitwin,\\V.,390,771,1029\nLiu,H.,967,104:3\nLiu,1'/1.1'.,771,1017,1029\nLivny,tv'L,:3:37,578,771,816,\n887,925,1006,10111012,\n1019,102:3,1029,10:38,\n1044,1001\nLoclu)vsk~ F.,816,1026\nLockemann, P.C.,1042,1001\n1..,0,B.,888,1007\nLoh,\\>\\7-Y.,925,1020\nLohman, G.!vI.,516,691,771,\n815,1022, 1029, 1042\nLornet,D.B., 4~38,578,771,\n991,10281029, 10:3:3\nLone~K.,99,1027\nLoo,B.'1'.,771,10:nLorie,R.A.,98,180,438,51n,\n548,602,1007,1012,,\u00b7\u00b71013,\n1017,1022,1028-\u00b7\u00b7\u00b7\u00b71029,\n10:38\nLou,Y.,816,1029\nLozinskii, E.L.,845,1026.\nLucchesi, C.L.,648,1029\nLu,H.,770,1029\nLu,P.,924, 104~3\nLu,Y.,967,1012\nLudaescher, B.,967,1024\nLueder, R.,10~~4,1001\nLum,V.Y.,369,887,1029,\n1040\nLunt,T.,722,1029\nLupash, E.,xxxii\nLyngbaek, P.,815,1018\nMackert, L.F.,771,1029\nNlacNicol, R.,xxxi\nMadigan, D.,924,1013\nMahbod, E.,815,1018\nMah,T.,924\nMaheshwari, D.,815,1029\nNlaier,D.,24,98,648,815-\u00b7-816,\n844-845, 1008,1015,\n1029-\u00b710:30, 1044\nMakinouchi, A.,816,1030\nJVlanber, D.,578,1030\nManku, G.,887,1030\nJVlannila, H.,648,924\u00b7\u00b7925,\n1006,1014,1022--1024,\n1030,1041\nMannino, M.V.,516,1030\nManolopoulos, Y.,925,1018\nNlanprempre, C.,966,1043\nManthey, H.,99,lOll\nMark,1.,771,1029\nIvIarkowitz, V.JV!.,56,99,1030\n1vlartella, G.,722,1012\nMaryanski, P.,55,1034\nMatias, Y.,887\u00b7\u00b7\u00b7-888, 1021\nMatos,V.,129,816,10;n\n~vlattos, N.,181,816, 1011,\n1014\nIVlaugis, 1.,.,181,1007\nIVIcAuliffe, :N1.L.,815,1011\nl\\ilcCarthy, D.R.,181,1030\nlVIcCreight, E.l'vl.,369,1008\nMcCune, V'll.V'!.,99,10~'W\nMcGill, M.J.,966,10:37\nIVIcGoveran, D.,99,1015\nMcHugh, J.,967,lo:m\nl\\'1cJones, P.R.,98,602,1007,\n1022\nMclj~od, I).,98,516,1006,\n102:3\nMcPherson, .J.,3:37,815,1022,\n1028\nI:vlecca,G.,816,967,10071049\nwleenakshi, K.,845,1008\nIviegiddo, N.,887,1024\n?vlehl,J.\\N.,98,180,1007,\n1012..\u00b7\u00b71.01:3\nIVlehrotra, S.,771,10:.m\n?vIehta,lvI.,770,925,uno,HX38\n:NIelton, J.,xxix,xx.-xii,180,\n816, 887, 1017,1030\u00b7\u00b7\u00b7-1031\nN:lenasce, D.A.,771,1mn\nNlendelzon, A.O.,648,925,\n967,1007,10l9,1021,\n1029, 1031, 1035,1001\n:NIeo,R..,925,1031\nMeredith, J.,691,1040\nMerialdo, P.,967,1007\nIvlerlin, P.M.,516,1013\nMerrett, T.H.,129,303,1031\nMeyerson, A.,925,1033\n11ichel, H.,477,1013\nMichie, D.,925,1031\nMihaila, G.A.,967,1031\nJVIikkilineni, K.P.,477,10:31\nIvIiller,R.J.,56,924,1031,1043\nIvIilne,A.A.,550\nMilo,T.,816,967,1009,1031,\n1.001\nMinker, J.,98\u00b7\u00b7\u00b7\u00b7\u00b799,516,648,\n844,1007,1012, 1020,\n1031\nJVlinoura, T.,771,1031\nMishra, N.,925,1022,1033\nMisra,J.,771,1013\nMissikoff, M.,691,1012\nMitchell, G.,516,10:,31\nMoffat, A.,966,1031,\n104:3\u00b7\u00b7 ..\u00b71044\nMohan, (;.,xxix,xxxi,578,\n602,771,816,991,1027,\n10~n\u00b7\u00b7l032\nMoran,J.,xxxii\n1'l/lorimoto, Y.,924,1019\nMorishita, S.,844,924,10If>,\n1019\nMorris,K.A.,844,1032\nI\\!lorrison, R.,1007\nf\\\u00b710tro,A.,56,1032\nMotwarli, IL,888,924925,\n1007, 1011, 101:3,1018,\n1022,103:3,1041\nMukkamala, R.,771,HX32\nMumick, 1.S.,516,816,845,\n887,1015,1022,10:32\nf\\\u00b7luntz,ILIL,771,887,1028,\n10~31\nl\\iIuralikrishna,M., xxxi,477,\n516,770,1016, 10~12\nlvlutchlm', D.,771.,1025\nMuthukrishnan, S.,888\nlvIyers,A.C.,815,1029", "1080": "1050\n?vlyllymaki, J.,1029,1001\nNag,B.,1034,1001\nNaqvi,S.A.,816,844\u00b7--845,\n1009,1011, 1014, 1032\nNarang, L,578,10:32\nNarasayya, V.R.,691,888,1013\nNarayanan, S.,816,1011\nNash,0.,338\nNaughton, J.F.,1026,xxix,\n438,477,516,691, 770,\n815-816, 844, 887, 967,\n991,1005,1011 ~\u00b7\u00b71012,\n1016, 1022, 1024,1028,\n1032,1034,1039,1041,\n1044,1001\nNavathe, S.B.,24,55~56,578,\n924,1005, 1008, 1017,\n1037,1039\nNegri,M.,180,1032\nNeimat, M-A.,390,815,1018,\n1029\nNestorov, S.,925,967,1032,\n1041\nNewcomer, E.,548,1009\nNg,P.,771,1043\nNg,R.T.,337,888,924--925,\n1008,1018, 1025, 1028,\n1032\nNg,V.T.,925,1014\nNguyen, T.,967,1033, 1037,\n1001\nNicolas, J-M.,99,648,1020\nNievergelt, J.,390,991,1018,\n1033\nNodine, M.H.,771\nNoga,A.,887\nNyberg, C.,438, 1033\nObermarck, R.,771,\n10321033, 1043\nO'C(lllaghan, L.,925,1022,\n10:3:3\nOlken,F.,477,516,887,1016,\n10:3:3\nOlshen, R.A.,925,1010\nOlston,C.,771,10:3:3,888,1007\nOrniecinski, E.,578,924,1005,\n10:37\nOnassis, A.,889\nO'Neil,E.,24,1033\nO'Neil,P.,24,771,887,HJ:3:3\nOng,K.,816,1044\nOoi,B-C.,770,1029\nOracle, 651\nOrenstein, .I.,815,1028\nOsborn, S.1.,648,1029\nOsborne, R.,xxxii\nOzden,B.,1033,lOCH\nOzsoyoglu, G.,129,516,722,\n816,1014,1024,10:3:3,lOOI\nOzsoyoglu, 2.1\\11.,129,516,816,\n1029,1033,1038\nOzsu,M.T.,771,1033\nPage,L.,966,1011\nPang,A.,924925, 1028,1032\nPapadimitriou, C.H.,99,548,\n578,967,991,1023-1024,\n1033\nPapakonstantinou, Y.,771,\n967,1005,1033,...10:M\nParaboschi, S.,181,1008,1012\nParedaens, J.,648,1015\nParent,C.,56,1039\nPark,J.,516,887,10:34,1038\nPatel,JJvl.,1034,1001\nPaton,N.,181,1016\nPatterson, D.A.,337,1014,\n1034\nPaul,H.,337,815,1034,1037\nPeckham, J.,55,1034\nPei,J.,924,1023,1034\nPelagatti, G.,180,771,1012,\n1032\nPetajan, E.,1034,1001\nPetrov, S.V.,648,1034\nPetry,F.,xxxi\nPfeffer, A.,816,991,1024\nPhipps, G.,844,1016\nPiatetsky-Shapiro, G.,516,\n924,1006,1018,1034\nPiotr,1.,888\nPippenger, N.,:390,1018\nPirahesh, H.,181,3:37,516,\n602, 771, 815, 845, 887,\n1014,1022, 1028,\n1031-1032, 1034,1038\nPirotte,A.,129,1027\nPistol',P.,~337,816,1028\nPitts-Moultis, N.,270,1034\nPoosala, V.,516,888,1005,\n1008,10:34\nPope,A.,:370\nPopek,G.,1., ~)8,1007\nPort,G.S.,845,1008\nPotarnianos, S.,181,1040\nPowell, A.,1020\nPramanik, S.,477, 1019\nPrasad, V.V.V., 924,1005\nPregibon, 1).,888,924,1014,\n102:3,1041\nI)rescod, P.,270,1021\nPrice,T.G.,98,516,602,1012,\n1022,1m{8\nProck,A.,xxx\nPruyn.e, J.,xxix\nPsaila,G.,925,1006,1031\nPu,C.,771,10:34AlJTHOR, INDeX\nPutzolu, G.R.,98,578,602,\n1007,1022,1028\nQian,X.,887,1034\nQuass,D.,887,967,1030,\n10:331034\nQuinlan, J.R.,925,1035\nRafiei,D.,xxxi,925,1035\nRaghavan, P.,925,966,1006,\n1021\nRaiha,K-J.,648,10:30\nRajagopalan ,S.,887,1030\nRajaraman, A.,887,967,1023,\n1034\nRamakrishna, J\\lLV.,390,1035\nRamakrishnan, LV.,845,1035\nRamakrishnan, R.,56,516,\n816,844--845, 887~-888,\n924-\"925, 991,1004--1005,\n1008--1010, 1016,\n102(}\u00b71021, 1025,1029,\n1031'-1032, 1035, 1038,\n1040,1044,1001\nRamamohanarao, K.,390,\n844~845, 966,1008,1035,\n1044\nRamamritham, K.,548,578,\n1014,1024\nRamamurty, R.,xxx\nRaman, B.,888,1007\nRaman, V.,888,1007,1035\nRamasamy, K.,887,1016,\n10:34,1039,1001\nRamaswamy, S.,888,1005\nRanganathan, A.,887,1035\nRanganathan, M.,925,1018\nRanka,S.,925,1041\nRao,P.,845,1035\nRae,S.G.,887,10:35\nRastogi, R.,:337,771,925,\n1010,1.022,1025, 10~~0,\n10:3:3,10:35,1001\nRcarnes, Iv1.,xxx\nReed,D.P.,578,771,1.035\nRees(~,G.,219,10:35\nReeve,C.L.,771.,1009,1036\nReina,C.,925,uno\nReiner, D.S.,516,1026\nReisner, P.,180,101:1\nReiter,R.,98,10:35\nRengarajan, 1'.,xxxi\nR(~scorla, E.,722,HX35\nlleuter, A.,548,602,1000,\n1022...,102:3, 10~l6\nRichardson, J.E.,815,337,\n1011\u00b7\u00b7\u00b7\u00b7\u00b71012\nRiehuI,S.,816,1011\nRijrnen, V.,722,1015\nRiloff,E.,96G,l():.l6,1001\nRishe,N.,516,1041", "1081": "AUTHOR INDEX\nRis.<mnen, J.,648,925,1030,\n1036\nRivest,R.L.,390,722,1036\nRoberts, G.O.,966\nRobie,J.,967,1013\nRobinson, J.T.,578,991,1019,\n1027,1036\nRogers, A.,888\nRohmer, J.,845,10;36\nRosemall, S.,991,1018\nRosenkrantz, D.J.,771,10:36\nRosenthal, A.,516,925,\n10~36~1037, 1041,IDOl\nRosenthal, J.S.,966,1010\nRoss,K.A.,816,887\u00b7..\u00b7-888,1008,\n1013,1015,1032, 10~36\nRotem,D.,516,887,1033,1040\nRoth,T.,888,1007\nRothnie, J.B.,771,1009,1036\nRousseeuw, P.J.,925,1025\nRoussopoulos, M.,887,1036\nRoussopoulos, N.,337,516,\n771,887,991,1013, 1027,\n1029,1036\nRoy,P.,967,1010\nRozen,S.,691,1036\nRumbaugh, J.,56,1010,1036\nRusinkiewicz, M.,771,1036,\n1001\nRyan,T.A.,815,1018\nSacca,D.,845,1036\nSacks-Davis, R.,390,966,1035,\n1044\nSadri,F.,967,1027\nSagalowicz, D., 104~3\nSager,T.,516,1030\nSagiv,Y.,516,648,816,845,\n967,1006,1008, 1026,\n1029,10:34,10:36\nSagona.\" K.F.,844\u00b7\u00b7\u00b7845, 1035,\n1037\nSahuguet, A.,967,10:37\nSalton,G.,966,l(X)7\nSaluja,S.,924,1022\nSalveter, S.,516, 10~39\nSalzberg, B.J.,30:3,:n7,438,\n578,991,1029,1037\nSarnarati, P.,722,1012\nSamet, H.,991,10:37\nSample, N.,9G7,1015\nSander, .I.,925,1017,10:37\nSanders, It.E.,219,10:37\nSandhu, R.,722,1025\nSaraiya, Y.,844,1032\nSarawagi, S.,816, 887, 925,\n1005,10:37\nSathaye, A.,xxxii\nSavasere, A.,924,1037\nSbattella, L.,180,10:32Schauble, P.,966,1037\nSchek,H-J.,337,815,991,\n1034,1037,1043\nSchell,R.,722,1029\nSchiesl, G.,xxxii\nSchkolnick, IVLJVL,98,578,691,\n1008,1012,1018,1037\nSchlageter, G.,771,1037\nSchlepphorst, C.,967,1024\nSchneider, D.A.,390,438,477,\n516,770,1016,1028\u00b7\u00b7-1029\nSchneider, R.,991,1008,1011\nSchneier, B.,722, 10~n\nScholl,NLH.,337,815,1034,\n1037\nSchrefl,M.,xxxi\nSchryro, NI.,1042,1001\nSchuh,D.T.,815,1011\nSchumacher, L.,xxix\nSchwarz, P.,602,771,1031\nSciore,E.,516,648,1037, 1039,\n1001\nScott,K.,56\nScott,S.,1019\nSeeger,B.,991,1008\nSegev,A.,516,887,1034,1038,\n1041,1001\nSeidman, G.,888,1044\nSelfridge, P.G.,924,1038\nSelinger, P.G.,98,180,516,\n602,722, 771, 1012, 1028,\n1038,1043\nSellis,1'.K.,337,51G,991,\n1018, 1025, 1038\nSeshadri, P.,xxix,516,816,\n844'HB45,887,1014,1035,\n10:38,1040\nSeshadri, S.,477,516,1010,\n101(i,1022,1001\nSevcik,K.C.,888,991,1008,\n1033\nShaclrl1on, 1\\/1.,967,1015\nShafer,J.C.,924925, 100G,\n10:38\nShaft,U.,xxixxxx,991,HnO,\n1021\nShah,D.,691,924,1012,10:38\nShamir, A.,722,10:36\nShan,lvi-C.,815,1016,1018,\n1026,1.001\nShanmuga,'mndaram, :T.,887,\n967,1012, 10~38\nShapiro, L.D.,xxix,477,101(:),\n10:38\nShasha, L).,xxix,578,691,771,\n1010,lO:3E),1<.n8\nShatkay, H.,925,10:38\nSheard,'1'.,99,10:3810~1\nShekita, E.J.,337,51H,815,\n967,1011-\u00b7..\u00b71012,1022,\n1034,1038\nSheldon, NLA.,966,1043\nShelloy, P.,924,1038\nShenoy, S.T.,516,1038\nShepherd, J.,390,1035\nSheth,A.P.,56,771,1017,\n1029,103H,1039,1001,\n771\nShim,K.,816, 887~-888, 925,\n1013, 1022, 1025,1035\nShipman, D.W.,548,771,1009,\n1036\nShivakumar, N.,924,1018\nShmueli, 0.,845,967,1009,\n1027,1001\nShockley, W.,722,1029\nShoshani, A.,887,1038---1039\nShrira,L.,815,1029\nShukla, A.,xxix,887,1016,\n10~39,1044\nSibley,E.H.,24,1019\nSiegel,M.,516,1037, 1039,\n1001\nSilberschatz, A.,24,xxx,337,\n578,771,10101011, 1025,\n1027,1030, 1033, 1039,\n1001\nSilverstein, C.,1011\nSimeon, J.,967,1010,1013\nSimoll,A.H..,180,816,10:31\nSimon,E.,181,691,1038----1039\nSimoudis, E.,924,1018,1039\nSinghal, A.,771,1029\nSistla,A.P.,991,1024,104:3,\n1001\nSkeen,D.,771,1017,1039\nSkounakis, 1'.1.,1006\nSlack,J.1L,xxxi\nSlutz,D.R.,98,1012\nSmith,D.C.P., 55,1039\nSmith,J.M.,56,10:39\nSmith,K.P., :3~37,722,1008,\n10:39\nSlnith,P.D., :30~3, 10~39\nSmyth,P.,924,1006,1018,\n10:30\nSnodgrass, R.T.,181,816,844,\n1041,1044,lOCH\nSo,B.,xxix\nSoda,G.,691,1012\nSolomon, IvLH.,815,1011\nSoloviev, V.,770,HX30\nSon,S.H.,xxxi\nSoparka.r, N.,578,1027, 10~39,\n1001\nSorenson, P.,691,1037\nSpaccapietra, S.,5G,1014,1039", "1082": "1052\nSpeegle, G.,xxxi\nSpencer, L.,925,1024\nSpertus, E.,9{j6,1039\nSpiegelhalter, D.,].,925,1031\nSpiro,P.,xxxi\nSpyratos, N.,99,1008\nSrikant, R.,887,924925, 1006,\n1024,10:39\nSrinivasan, V.,578, 10~3~3,10:39,\n1001\nSriva..<;tava,D.,516,816,\n844-845, 887--888, 924,\n1035\u00b7..\u00b71036,1038,1040\nSrivastava, J.,771,887,1028,\n1040,1001\nStacey, D.,771,1040\nStachour, P.,722,1040\nStankovic, J.A.,578,1024,\n1040,1001\nStavropoulos, H.,xxix\nStearns, R.,771,1036\nSteel,T.B.,1040\nStefanescu, M.,967,1013\nStemple, D.,99,1038\nStewart, 1\\11.,438,10:37\nStokes, L.,516,1022\nStolfo,S.,924,1035\nStolorz, P.,924,1006\nStonebraker, M.,24,98..\u00b799,\n181,337,477,691,771,\n815-\"-816, 887,,,888, 1006,\n1016--1017, 1024,1037,\n1040,1044,1001\nStone,C.,J.,925,1010\nStrauss, IvLJ.,888\nStrong,R.R.,:390,1018\nStuckey, 1:>..1.,516, 845,1038\nSturgis, H.E.,771,1028\nSubrahmanian, V.S.,181,771,\n816, 844, 887,1005, 1022,\n1042,1044,1001\nSubralnanian, B.,816,1040\nSubramanian, LN.,967,1027\nSubramanian, S.,967,1012\nSueiu,D.,xxxii,967,1011,\n1018, l();31\nSu,,].,816,1024\nSu,S.1'.\\V., 477,1031\nSudarshan, S.,10:35,24,xxix,\n:B7,516,816,844'''845,\n887,924,1025,10351036,\n10:.38..\u00b71040.1001\nSudkamp, N.,:3:37,816,1028\nSUll,\\V.,516,1041\nSuri,R.,578,1041\nSwagerman,R., 816,1011\nSwarni, A.,516,924,1006,\n1022,1041Swift,T.,844845, lO:~5,1037,\n1041\nSzegedy, 1\\11.,887\nSzilagyi, P.,966,104:3\nTam,B.\\V.,925,lOlA\nTanaka, H.,477,1019\nTanca,L.,181,844,1012,1019\n'ran,C.K.,815,1011\nTan,J.S.,887,1040\nTan,K-L.,770,1029\nTan,\\V.C.,967,1018\nTang,N.,xxx\nTannen, V.B.,816,1011\nTansel,A.D.,1041,1001\nTatblll, N.,888,1044\nTa~1'.C.,578,1041\nTaylor,C.C.,925\nTaylor,C.C.,1031\nTeng,J.,xxxi\nTeorey,T.J.,55--\u00b756,99,1041\nTherber, A.,xx..x\nThevenin, .I.Ivi.,477,1013\nThomas, R.H.,771,1041\nThomas, S.,925,1037,1041\nThomas, S.A.,722,1041\nThomasian, A.,xxxi-xxxii,\n568, 578, 1019,1041\nThompson, C.R.,771,\n1010'''1011\nThuraisingham, B.,722,1040\nTiberio, P.,691,1018\nTibshirani, R.,924,102:3\nTodd,S.J.P.,98,1041\nToivonen, H.,924m-925,1006,\n1022,10:30,1041\nTokuyama, T.,924,1.019\nTomasic, A.,966,1021\nTompa,F.W.,887,1010\nTowsley, D.,578,1024\nrn'aiger, I.L.,98,548,602,771,\n1007,1012,1017, 1022,\n1028,1041\nTrickey, H.,887,1015\nTsangaris, :tv1.,816,1041\nTsapara.s, P.,966,1010\nTsatalos, O.G.,815,1011\nTsatsoulis, C.,xxxi\nTsichritzis, D.C.,24,1026\nTsotras, V.;xxxii\nTsou,D.,648,1041\nTsukerrnan, A.,4:38,10:37\nrl'sukuda, K.,;3:37,1008\n\"I'sur,D.,925,1041\nTsur,S.,844-\u00b7845, 924,1009,\n1011,1014\n'l\\leherman, L.,99,1012\nTucker, A.B.,24,1041\nTufu~,K.,10:34,10()}\nTukcy,J.\\N.,924,1041AUTHOR,INDEK\n'-rwi.chell, B.C.,337,1008\nUbelL1'1.,xxxi\nlJgur,A.,xxxii\nUllman, J.D.,24,xxx,56,98,\n:303,:390,5Hi,648,\n844~845, 887,924..\u00b7\u00b7925,\n9G7,1006,1008,1011,\n1018,1020,102:3,1032,\n1034\u00b7--1035, 1041..1042\nUrban,S.D.,56,1042\nlJren,S.,438,1037\nUthurusamy, R.,924,1006,\n1018\nValdes, .I.,1020,1001\nValduriez, P.,691, 771, 1033,\n1038\nValentin, G.,691,1042\nVanEmden, M.,844,1042\nVanGelder, A.,844....845,1032,\n1042\nVanGucht,D.,xxix,129,816,\n887,1007,1035\nVanRijsbergen, C.J.,966,1042\nVance,B.,816,1011\nVandenberg, S.1.,xxxi,\n815~-.g16, 1011,1040\nVardi,M.Y.,98,648,1021,\n1042\nVaughan, B.,438,1037\nVelez,B.,1043\nVelez,B.,966\nVerkamo, A.I.,924925,1006,\n1030\nVianu,V.,24,98,648,8Ui,\n844,967,1005,1001\nVidal,M.,56,1012\nVieille,1.,816, 844~845, 1019,\n1042\nViswanathan, S.,1025,1001\nVitter,J.S.,888\nVonBultzingsloewen, G.,516,\n1042,1001\nVonHalle,B.,691,1019\nVossen, G.,24,548,10421043\nVu,Q.,924,1039\n\\Vade,B.W.,98,180,602,722,\n1007, 1012-~lOl:3, 1022,\n1028\n\\Vade,N.,966,1042\nWagner, R.E.,:369,1042\n\\Vah,13.\\V.,887,1014\nWalch,G.,~n7,816,1028\n\\Valker, A.,771,845,1007,\n1.()!'l:3\n\\VaUrath, M.,a:nl81G,1028\n\\\"'ang,.J.,887,1014\n\\Vang,K.,967,104:.3\n'Nang,M.,xxxii,888\n\\Vang,X.S.,771,1042", "1083": "Ii[fTH()R LNDE.:X;\n'Nang:H.,888l102:3\nWard,K.,516,1021\n\\Varren, D.S.,844-845, 1030,\n10:35,10:37,1041\n\\Vatson, V.,98,1007\n\\Neber,R.,991,1043\n\\Veddell, G.E.,648,1043\n\\Vei,J.,10~~9\n\\Veihl,\\V.,602,1043\n\\Veikum, G.,3:37,548,815,\n1034,1037,1043\nWeiner, J.,967,1032\n\\Veinreb, D.,815,1028\n\\Veiss,R.,966,1043\nWenger, K.,1029,1001\nWest,IVI.,520\nWhitaker,M.,xxxii\nWhite,C.,771,104:3\nWhite,S.,219,1043\nWhite,S.J.,815,1011\nWidom, J.,24,99,181,771,\n887---888, 967,1006-1007,\n1012,1020--\u00b71021, 1030,\n1033\u00b71034, 1043~1044\nWiederhold, G.,24,xxix,30:3,\n:337,771,887,1020, 1031,\n1034,1043\nWilkinson, W.K.,438, 477,\n578,1008,1027\nWillett, P.,966,1025\nWilliams, R.,771,1043\nWilms,P.P.,771,815,1022,\n1043\nWilson, L.O.,924,1038\\Vinuner, 1'v1.,925\n\\Vimmers, E.L.,925,1006\n\\Vinslett, M.S.,99,722,10:39,\n104:3\n\\iViorkowski, G.,691,1043\n\\Vise,T.E.,:3:n,1008\n\\Vistrand, E.,1006,1001\n\\Vitten,LH.,924,966,104:3\nWoelk,D.,815,1026\nvVolfson, 0.,771,991,1024,\n1043,1001\n\\Yong,C.Y.,925,1014\nvVong,E.,516,771,1009,1017,\n1036,1043\nWong,H.K.T., 516,1020\nWong,L.,816,1011\n'Nang,W.,548,1009\nWood,D.,477,1016\nWoodruff, A.,1006,1001\nWright,F.L.,649\nWu,J.,816,1026\nWylie,K.,888,1007\nXu,E.,991,1043\nXu,X.,925,1017,1037\nYajima, S.,771,1025\nYang,D.,56,99,1041\nYang,Y.,924,1043\nYannakakis, Iv!.,516,1036\nYao,S.B.,578,1028\nYin,Y.,924,1023\nYoshikawa, Iv!.,771,816,\n1024---1025\nYossi,11.,887---888\nYost,R.A.,98,771,1012,104:3Young,H.C.,4:38,1029\nYoussefi, K.,516,104:3\nYuan,L.,816,10:3:3\nYa,C.T.,771,104:31044\n'{u,J-B.,m.n,1021,10:34,1001\nVue,K.B.,xxxi\nYurttas, S.:xx..:xi\nZaiane, O.R.,924, 104~3\nZaki,IvLJ.,924,1044\nZaniolo, C.,98,181:516,648,\n816,844--\u00b7--845, 1014,1027,\n1036, 1044, 1001\nZaot,:M.,925,1006\nZdonik, S.B.,x,xix,516,816,\n888,925,1031,1038, 1040,\n1044\nZhang,A.,771,1017\nZhang,T.,925,1044\nZhang,VV.,1044\nZhao,W.,1040,1001\nZhao,Y.,887,1044\nZhou,J.,991,1043\nZhuge,Y.,887,1044\nZiauddin, M.,xxxi\nZicari,R.,181,816,844,1044,\n1001\nZilio,D.C.,691,1042\nZloof,Iv1.M.,x,xix,98,1044\nZobel,J.,966,1031,1044\nZukowski, U.,844,1044\nZuliani, ~1.,691,1042\nZwilling, M.J.,815,1011", "1084": "SUBJECT INDEX\nINF,615\n2NF,619\n2PC,759,761\nblocking, 760\nwithPresumed Abort,762\n2PL,552\ndistributed databases, 755\n3NF,617,625,628\n3PC,762\n4NF,636\n5NF,638\nAprioriproperty, 893\nAbandoned privilege, 700\nAbort,522--523, 533, 535, 583,\n593,759\nAbstract datatypes,784--785\nACAschedule, 530\nAccesscontrol, 9,693-694\nAccessinvariance, 569\nAccessmodeinSQL,538\nAccesspath,398\nmostselective, 400\nAccessprivileges, 695\nAccesstimesfordisks,284,308\nACIDtransactions, 521\nActivedatabases, 132,168\nAdding tablesinSQL,91\nAdorned program, 839\nADTs,784--785\nencapsulation, 785\nstorage issues,799\nAdvanced Encryption Standard\n(AES),710\nAES,710\nAggregate functions in\nORDBMSs, 801\nAggregation inDatalog, 8:31\nAggregation inSQL,151,164\nAggregation intheERmodel,\n:39,84\nAlgebra\nrelational, 102\nALTER, 696\nAlternatives fordataentriesin\nanindex,276\nAnalysis phaseofrecovery, 580,\n588\nANSI,6,58\nAPI,195\nApplica.tion architectures, 2:36Application programmers, 21\nApplication programming\ninterface, 195\nApplication servers, 251,253\nArchitecture ofaDBIvIS, 19\nARIESrecovery algorithm,\n543, 580, 596\nArmstrong's Axioms, 612\nArraychunks, 800,870\nArrays, 781\nAssertions inSQL,167\nAssociation rules,897,900\nuseforprediction, 902\nwithcalendars, 900\nwithitemhierarchies, 899\nAsynchronous replication, 741,\n750--751, 871\nCapture andApply,752---753\nchangedatatable(CDT), 753\nconflict resolution, 751\npeer-to-peer, 751\nprimary site,751\nAtomic formulas, 118\nAtomicity, 521-522\nAttribute, 11\nAttribute closure, 614\nAttributes intheERmodel,29\nAttributes intherelational\nmodel,59\nAttributes inXNIL,229\nAudittrail,715\nAuthentication, 694\nAuthorities, 941\nAuthorization, 9,22\nAuthorization graph,701\nAuthorization ID,697\nAutocommit inJDBC,198\nAVCset,909\nAVG,151\nAvoiding cascading aborts, 5;~0\nAxioms forFDs,612\nB+trees,281,344\nbulk-loading, :360\ndeletion, :352\nforsorting, 4:33\nheight, ;3115\ninsertion, :.~48\nkeycompression, :358\nlocking, 561\norder, ;~45\n1054search,347\nselection operation, 442\nsequence set,345\nB+treesvs.ISA~1,292\nBags,780,782\nBasetable,87\nBCNF,616,622\nBell-LaPadula security model,\n706\nBenchmarks, 506,683,691\nBinding\nearlyvs.late,788\nBioinformatics, 999\nBIRCH, 912\nBirthsite,742\nBit-sliced signature files,939\nBitmap indexes, 866\nBitmapped joinindex,869\nBitmaps\nforspacemanagement, 317,\n328\nBlindwrites,528\nBLOBs, 775,799\nBlockevolution ofdata,916\nBlocknestedloopsjoin,455\nBlocked I/O,430\nBlocking, .5:3:3,865\nBlocksindisks,306\nBloomjoin, 748\nBoolean queries, 929\nBounding box,982\nBoyce-Codd nonnalform,616,\n622\nBuckets, 279\ninahashedfile,:371\ninhistograms, 486\nBufferframe,318\nBuffermanagement\nDBMS VS.OS,322\ndoublebufl'ering, 432\nforceapproach, 541\nrealsystems, :322\nreplacernent policy,:321\nsequential flooding, ;321\nstealapproach, 541\nBufferm,luager, 20,:305,:318\nforcingapage,:323\npagereplacement, :ng\u00b7320\npinning, ;U9\nprefetching, :322", "1085": "SUBJECT INDEX\nBufferpool, ~n8\nBuffered writes,571\nBuilding phaseinhashjoin,46:3\nBulkdatatypes,780\nBulk-loading 13+trees,360\nBushytrees,415\nCaching ofmethods, 802\nCADjCA:M, 971\nCalculus\nrelational, 116\nCalendric a..ssociation rules,900\nCandidate keys,29,64,76\nCapture andApply,752\nCardinality ofarelation, 61\nCartsian product, 105\nCASCADE inforeignkeys,71\nCascading aborts,530\nCascading operators, 488\nCascading StyleSheets,249\nCatalogs, 394--395, 480,483,\n741\nCategorical attribute, 905\nCentralized deadlock detection,\n756\nCentralized lockmanagement,\n755\nCertification authorities, 712\nCGI,251\nChained transactions, 536\nChangedatatable,753\nChange detection, 916\u00b7--917\nCharacter largeobject,776\nCheckpoint, 19,587\nfuzzy,587\nCheckpoints, 543\nChecksum, 307\nChoiceofindexes, 653\nChunking, 800,870\nClasshierarchies, :37,8:3\nClassinterface, 806\nClassification, 904-905\nClassification rules,905\nCla.'ssification trees,906\nClearance, 706\nClient-server architecture, 2:37,\n738\nCL013, 776\nClock,322\nClockpolicy, ~321\nCloseaniterator, 408\nClosure of1\"Ds,612\nCLR..s,584,592,596\nClustered file,277\nClustered files,287\nClustering, 277, 29:~,660,911\nCODASYL, D.B.T.G., 1014\nCollations inSQL,140\nCollection hierarchies, 789\nCollection hierarchy, 789Collection types,780\nCollisions, :379\nColumn, 59\nCommit, 523,535,58:3,759\nCommit protocols, 751,758\n2PC,759,761\n3PC,762\nCommunication costs,7:39,744,\n749\nCommunication protocol, 223\nCompensation logrecords, 584,\n592,596\nComplete axioms, 613\nComplex types,779,795\nvs.reference types,795\nComposite searchkeys,295,\n297\nCompressed histogram, 487\nCompression inB+trees,358\nComputer aideddesignand\nmanufacturing, 971\nConcatenated searchkeys,295,\n297\nConceptual design,13,27\ntuning, 669\nConceptual evaluation strategy,\n133\nConceptual schema, 13\nConcurrency, 9,17\nConcurrency control\nmultiversion, 572\noptimistic, 566\ntimestamp, 569\nConcurrent execution, 524\nConflict equivalence, 550\nConflict resolution, 751\nConflict serializability vs.\nserializability, 561\nConflict serializable schedule,\n550\nConflicting actions, 526\nConjunct, 445\nprimary, :399\nConjunctive normalform\n(CNF), :398,445\nConnection pooling, 200\nConnections in.IDBC,198\nConservative 2PL,559\nConsistency, 521\nContent typesinX1vlL,2:32\nContent-ba\",sed queries, 972,988\nConvoy phenomenon, 555\nCookie, 259\nCookies, 2,5~3\nCoordinator site,758\nCorrelated queries, 147,504,\n506\nCosinenormalization, 9:32\nCostestirnatioIl, 48248:31055\n~\nforADTmethods. 803\nrealsystems, 485\nCostmodel,440\nCOUNT, 151\nCovering constraints, 38\nCovertchannel, 708\nCrabbing, 5fi2\nCrashrecovery, 9,18,22,541,\n580, 583~584, 587--588,\n590,592,595-596\nCrawler, 9:39\nCREATE DOfvlAIN, 166\nCREATE statement\nSQL,696\nCREATE TABLE, 62\nCREATE TRIGGER, 169\nCREATE TYPE, 167\nCREATE VIEW,86\nCreating arelation inSQL,62\nCritical section, 567\nCross-product operation, 105\nCross-tabulation, 855\nC8564atWisconsin, xxviii\nCSS,249\nCUBEoperator, 857, 869, 887\nCursors inSQL,189,191\nCylinders indisks,306\nDali,1001\nDatadefinition language, 12\nDataDefinition Language\n(DDL), 12,62,131\nDatadictionary, 395\nDataEncryption Standard, 710\nDataEncryption Standard\n(DES),710\nDataentriesinanindex,276\nDataindependence, 9,15,74:3\ndistributed, 736\nlogical,15,87,7:36\nphysical, 15,736\nDataintegration, 995\nDatafvlanipulatioll Language,\n16\nDataivianiplliation Language\n(D1vlL), 131\nDatamining, 7,849,889\nDatamodel,10\nmultidimensional, 849\nsernantic, 10,27\nDatapartitioning, 7:30\nskew,7:30\nDatareduction, 747\nDataskew,7:30,73:3\nDatasource,195\nDatastreams, 916\nDatastriping inRAID,309-:310\nDatasllblanguage, 16\nDatawarehouse, 7,678,754,\n848,870871", "1086": "1056\ndean,871\nextract, 870\nload,871\nmetadata, 872\npurge,871\nrefresh. 871\ntransform, 871\nDatabase administrators, 21-\u00b722\nDatabase architecture\nClient-Server VS.\nCollaborating Servers, 738\nDatabase design\nconceptual design, 13,27\nforanORDBivIS, 79~J\nforOLAP, 85~3\nimpactofconcurrent access,\n678\nnormal forms,615\nnullvalues,608\nphysical, 291\nphysical design, 14,28,650\nrequirements analysis step,26\nroleofexpected workload, 650\nroleofinclusion dependencies,\n639\nschema refinement, 28,605\ntools,27\ntuning, 22,28,650, 667, 670\nDatabase management system,\n4\nDatabase tuning, 22,28,650,\n652,667\nDataba...,es, 4\nDataflow forparallelism, 7~31,\n733\nDataguides, 959\nDatalog, 818-\u00b7..\u00b7819,822\naggregation, 8:31\ncomparison withrelational\nalgebra, 830\ninputandoutput, 822\nleastfixpoint, 825-826\nlea..'3trnodel,824,826\nmodel,82:3\nrnultiset generation, 8:32\nnegation, 827\u00b7828\nrange-restriction and\nnegation, 828\nrules,819\nsafetyandrange-restriction,\n826\nstratification, 829\nDataSpace, lOCH\nDatesandtimesinSQL,140\nDB2\nIndexAdvisor, 665\nDBA.22\nDBIIibrary,2.52\nDBMS. 4DBrviSarchitecture, 19\nDBl\\ISvs.as.:322\nDDL,12\nDeadlines\nhardVS.soft,994\nDeadlock, 5:.n\ndetection, 556\ndistributed, 756\nglobal VS.local,756\nphantom, 757\nprevention, 558\nDecision support, 847\nDecision trees,906\npruning, 907\nsplitting attributes, 907\nDecompositions, 609\ndependency- preservation, 621\nhorizontal, 674\nintheabsence ofredundancy,\n674\ninto3NF,625\nintoBCNF, 622\nlossless-join, 619\nDecorrelation, 506\nDecryption, 709\nDeductions, 820\nDeductive databases, 820\naggregation, 831\nfixpoint semantics, 824\nleastfixpoint, 826\nleastmodel,826\nleastmodelsemantics, 82:3\n:Nlagicsetsrewriting, 838\nnegation, 827\u00b7-828\noptimization, 834\nrepeated inferences, 834\nSeminaive evaluation, 836\nunnecessary inferences, 834\nDeepequality, 790\nDenormalization, 652,6E)9,672\nDependency-preserving\ndecomposition, 621\nDependent attribute, 904\nDES,710\nDeskstar disk,308\nDEVise, 1001\nDifference operation, 105,141\nDigitalLibraries project, 997\nDigitalsignatures, 71:3\nDimensions, 849\nDirectory\nofpages,:326\nofslots,:329\nDirectory doubling, :175\nDirtybit,:.H8\nDirtypagetable,585,589\nDirtyread,526\nDiscretionary accesscontrol,\n695SUBJECT INDF~\nDisjunctive selection condition,\n445\nDiskarray, ~309\nDiskspa.cemanager, 21,:304,\n316\nDisktracks,30ti\nDisks,:305\naccesstimes,284,308\nblocks, ;306\ncontroller, 307\ncylinders, tracks,sectors, :306\nhead,307\nphysical structure, 306\nplatters, 306\nDistance function, 911\nDistinct typeinSQL,167\nDistributed dataindependence,\n736,743\nDistributed databases, 726\ncatalogs, 741\ncommit protocols, 758\nconcurrency control, 755\ndataindependence, 743\ndeadlock, 756\nfragmentation, 739\nglobalobjectnames, 742\nheterogeneous, 737\njoin,745\nlockmanagement, 755\nnaming, 741\noptimizatioIl, 749\nproject, 744\nqueryprocessing, 743\nrecovery, 755,7,58\nreplication, 741\nscan,744\nselect,744\nSemijoin andBloomjoin, 747\nsynchronous vs.asynchronous\nreplication, 750\ntransaction management, 755\ntransparency, 7:36\nupdates, 750\nDistributeddeadlock, 756\nDistributed queryprocessing,\n743\nDistributed transaction\nrnanagement I755\nDistributed transactions, 73G\nDivision, 109\ninSQL,150\nDivision operation, 109\nDl\\fL,16\nDocument typedeclarations\n(DTDs),2:31\nDocurncnt vector,9:30\nDoDsecurity levels,708\nDomain, 29,59", "1087": "SU:BJECJ1INDEX\nDomain constraints, 29,Gl,7:3,\n166\nDomain relational calculus, 122\nDomain-key normalform,648\nDoublebuffering, <1:32\nDrill-down, 854\nDriver,195\u00b7-196\nmanager, 195~196\ntypes,196\nDROP, 696\nDropping tablesinSQL,91\nDTDs,231\nDuplicates inanindex,278\nDuplicates inSQL,1:36\nDurability, 521--522\nDynamic databases, 560\nDynamic hashing, 373,379\nDynamic indexes, 344,373,:379\nDynamic linking, 786\nDynamic SQL,194\nEarlybinding, 788\nElectronic commerce, 221\nElements inX]\\;IL,228\nEmbedded SQL,187\nEncapsulation, 785\nEncryption, 709,712\nEnforcing integrity constraints,\n70\nEntities, 4,13\nEntityreferences inXML,229\nEntitysetsintheERmodel,28\nEnumerating alternative plans,\n492\nEquality\ndeepvs.shallow, 790\nEquality selection, 292\nEquidepth histogram, 487\nEquijoin, 108\nEquivalence ofrelational\nalgebra expressions, 414\nEquiwidth histogram, 487\nERmodel\naggregation, 39,84\nattribute domains, 29\nattributes, 29\nclasshierarchies, :37,8:3\ndescriptive attributes, 30\nentitiesandentitysets,28\nkeyconstraints, :32:33\nkeys,29\noverlapandcovering, :38\nparticipation constraints, 34,\n79\nEH.rnodel\nrelationships\nandrelationship sets,29\nmany-to-many, :3:3\nmany-to-one, :t3\none-to-many, :.3:3roles,:32\nweakentities, :35,82\nERP,7\nEventhandler, 247\nEventsactivating triggers, 168\nExample queries\nQ1,110,120, 123, 137, 145,\n147,154\nQ2,112,120,12:3,1:39,146\nQ3,11:3,139\nQ4,113,I:N\nQ5,113,141\nQ6,114, 142, 149\nQ7,115, 121, 123\nQ8,115\nQ9,116, 121, 124, 150\nQ10,116\nQ11,117,12:3,135\nQ12,119\nQ13,120\nQ14,121,124\nQ15,134\nQ16,138\nQ17,140\nQ18,140\nQ19,143\nQ20,144\nQ21,146\nQ22,148\nQ23,148\nQ24,149\nQ25,151\nQ26,151\nQ27,152\nQ28,152\nQ29, 15~3\nQ30,153\nq:n,154\nQ32,155\nQ33,158\nQ34,159\nQ35,160\nQ3G,160\nQ37,161\nExclusive locks, 5~n\nEXECSQL,187\nExecution plan,19\nExpensive predicates, 804\nExploratory dataanalysis, 849,\n890\nExpressions inSQL,L39,16::J\nExpressiv\u20ac~ power\nalgebra VS.calculus, 124\nExtendible hashing, ::173\ndirectory doubling, 375\nglobaldepth,::376\nlocaldeptlL377\nExtensibility\ninanoptimizer, 80:3lO5t7\nindexing ne,'\"types,800\nExtensible Markup Language\n(XtvIL), 228,231...\u00b7\u00b7232\nExtensible StyleLanguage\n(XSL),228\nExternal schema, 14\nExternal sorting, 422, 424, 428,\n4::30.4:32,732\nFailure\nmedia,541,580\nsystemcrash,541,580\nFalsepositives, 938\nFan-out, 282, ~345,358-359\nFeature vectors, 970,972\nField,59\nFIFO,322\nFifthnormalform,638\nFile,20\nofrecords, 275\nFileorganization, 274\nclustered, 287\nhashed, 279\nindexed, 276\nrandom, 284\nsorted,285\ntree,280\nFirstinfirstout(FIFO) policy,\n321\nFirstnormalform,615\nFixed-length records, 327\nFixpoint, 824\nNaiveevaluation, 835\nSeminaive evaluation, 836\nFixpoint evaluation\niterations, 834\nFbrcevs.no-force, 586\nForce-write, 583,759\n:Forcedreinserts, 985\nForcing pages, :~23,541,583\nForeign keyconstraints, 6Ei\nForeign keys,76\nversusaids,796\nFormulas, 118\nFourthnormalform,6:36\nFragmentation, 7:39,\u00b7\u00b7740\nFrequent itemsets, 89:3\naprioriproperty, 893\nFullydistributed lock\nmanagement, 756\nFunctional dependencies, 611\nArmstrong's Axioms, 612\nattribute closure, 614\nclosure, 612\nminimal cover,625\nprojecti0I1; 621\n.Fuzzycheckpoint, 587\nGateways, 737\nGenBank, 997\nGeneralization, :~8", "1088": "1058\nGeneralized SearchTn..'es,987\nGeographic Information\nSystems (GIS),971,998\nGetnexttuplet408\nGiST,801,987\nGlobaldeadlock detection, 756\nGlobaldepthinextendible\nha.shing, 376\nGRANT OPTION, 696\nGRANTstatement\nSQL,695,699\nGranting privileges inSQL,699\nGriddirectory, 978\nGridfiles,978\nconvexregions, 981\nGroupcommit, 996\nGrouping inSQL,154\nHashfunctions, 279,372, 379,\n735\nHashindexes, 279\nHashjoin,463\nparallel databa.ses, 733~~734\nHashpartitioning, 730\nHashed files,279\nHeapfiles,20,276, 284, 324\nHeightofatree,282,345\nHeterogeneous databases, 737\ngateways, 737\nHierarchical clustering, 912\nHierarchical datamodel,6\nHierarchical deadlock\ndetection, 757\nHistograms, 485,--486\ncompressed, 487\nequidepth, 487\nequiwidth, 487\nrealsystems, 485\nHorizontal decomposition, 674\nHorizontal fragmentation,\n739~-740\nHostlanguage, 16,187\nHotspots,535,674, 678, 680\nHT~/lL, 226,228,1001\ntags,226\nHTf,,1LFonus,242\nHTTP\nabsence ofstate,258\nrequest, 224\nresponse, 224\nHTTPprotocol, 223\nHubs,941\nHmnan Genome project, 997\nHybrid ha..shjoin,465\nHyperText Markup Language\n(HTML), 226,228\nIBlvIDB2,167, ~322,,32:3, :327,\n331,333, 357, 359.422,\n446,45245:3, 485, 496,\n500,506,573,582,709,776,780,790,818,869,\n882\nIceberg queries, 896\nIdentifying owner,36\nIDS,6\n1mplementation\naggregation, 469\njoins,455,457..,\u00b7458,465\nhash, 46~3\nnestedloops,454\nprojections, 447--449\nhashing, 449\nsorting, 448\nselections, 401,441---442,\n444---446\nwithdisjunction, 446\nB+tree,442\nhashindex,444\nnodisjunction, 445\nnoindex,401,441~442\nset-operations, 468\nIMS,6\nInclusion dependencies, 639\nIncremental algorithms, 403\nIndex,14,276\nduplicate dataentries, 278\nalternatives fordataentries,\n276\nB+tree,344\nbitmap, 866\nclustered VB.unclustered, 277\ncomposite key,295\nconcatenated key,295\ndataentry,276\ndynamic, 344, 373, 379\nequality query,295\nequality vs.rangeselection,\n292\nextendible hashing, 373\nfan-out, 282\nh&,,;h,279, ~371\nbuckets, :371\nha.shfunctions, ~372\nprimary andoverflow pages,\n371\ninSQL,299\nISAM,341\nlinearhaBhing, :379\nmatching aselection, 296,398\nmultidimensional, 97:3\nprimary VS.secondary, 277\nrangequeriesandcomposite\nkeyindexes, 295\nspatial, 97:3\nstatic,:,341\nstatichashing, :371\ntree,280\nunclustered, 288 289\nunique, 278SlJBJECT INl)EOC\nIndexadvisor, 66:3\nIndexconfiguration, 663\nIndexentries, 3:39\nIndexlocking, 561\nIndexnestedloopsjoin,402,\n457\nIndexselection, 65:3\nIndextuning,667\nIndex-only evaluation, 293,402\nIndex-only plans,662\nIndex-only scan,452, 471, 495\nIndexes\nchoice,291\nIndexing newdatatypes,800\nInference andsecurity, 715\nInferences, 820\nInformation retrieval, 927\nInformix, 322-323, 327,331,\n:333,359,422, 446,\n452~453, 485,500,506,\n573,582,709,776, 780,\n866,869\nInformix DDS,167,790\nInheritance hierarchies, 37,83\nInheritance inobject\ndatabases, 787\nInheritance ofattributes, 37\nInsertable-into views,89\nInstance ofarelation, 59\nInstance ofarelationship set,\n30\nIntegration, 995\nIntegrity constraints, 9,12,32,\n34,38,6:3,79\ninSQL,167\nspatial, 971\ndomain, 61,73\nforeignkey,66\ninSQL,165--\u00b7-166\nkey,64\ntransactions inSQL,72\nIntelligent Miner,914\nInterface foraclass,80l)\nInterference, 728\nInternet databases, 7\nInterprocess communication\n(IPC),802\nIntersection operation, 104,141\nInversedocument frequency\n(IDF),9:31\nInverted indexes, ~):35\nISAhierarchies, :37,899\nISAtvl,292,341\nISO,6,58\nIsolation, 521\nIsolation level.199\nIsolation levelinSQL,5:38\nREADUNCO?vlMITTED.\n5:39", "1089": "SUBJECT INDEX\nREPEATABLE READ, 5:39\nSERlALIZABLE, 5~39\nItemset, 89~3\naprioriproperty, 893\nfrequent, 893\nsupport, 89~3\nIterations, 834\nIterator interface, 408\nIVEE,1001\nJava\nservlet, 254\nJavaDatabase Connectivity\n(JDBC), 195,219,737,\n870\nJavavirtualmachine, 786\nJavaScript,245\nJDBC,195, 198, 219,737,870\narchitecture, 196\nautocommit, 198\nconnection, 198\ndatasource,196\nDatabase.lVletaData class,205\ndrivermanagement, 198\ndrivermanager, 195-196\nExceptions, 203\nPrepared Statement class,200\nResultSet class,201\nWarnings, 203\nJDBCURL,198\nJDs,638\nJoindependencies, 6:38\nJoins,107\nBloomjoin, 748\ndefinition, 107\ndistributed databases, 745\nequijoin, 108\nimplementation, 454,463\nblocknestedloops,455\nhybridhash,465\nindexnestedloops,457\nsort-nwrge,458\nnatural join,108\nouter,164\nparallel databases, 732,7:34\nSernijoin, 747\nKDD,891\nKey,29,6ll\nKeycompression, :358\nKeyconstraints, :32\u00b7<n\nKeys\ncandidate, 64,76\ncandidate vs.search,280\ncomposite search,295\nforeign, 76\nforeignkey,6G\nprirnary, 65\nKeysconstraints, 64~-65\nKnowledge discovery, 890\nLarg(}object,776LastLSN I585\nLatch,555\nLatebinding, 788\nLeastfixpoints, 822,825\nLeastmodel=leastfixpoint,\n826\nLeastmodels, 822,824\nLeastrecently used(LRU)\npolicy,:321\nLeft-deep trees,415\nLegalrelation instance, 6:3\nLevelcounter inlinearha..\"hing,\n~379\nLevelsofabstraction, 12\nLexicon, 935\nLinearhashing, 379\nfamilyofhashfunctions, 379\nlevelcounter, 379\nLinearrecursion, 831\nLinearscales,979\nLOB,776\nLocaldeadlock detection, 756\nLocaldepthinextendible\nhashing, 377\nLocators, 776\nLockdowngrades, 556\nLockescalation, 566\nLockmanager, 21,554\ndistributed databases, 755\nLockupgrade, 555\nLock-coupling, 562\nLocking, 18\ndowngrading, 556\nB+trees,561\nconcurrency, 678\nConservative 2PL,559\ndistributed databases, 755\nexclusive locks,531\nlockescalation, 566\nlockupgrade, 555\nIIlultiple-granularity, 564\nperformance implications, 678\nsharedlocks,5:n\nStrict2PL,5:31\nupdate locks,556\nLocking protocol, 18,5:30\nLog,18,522, 542, 582\nabortrecord, 58~3\ncornrnit record, 58:3\ncompensation record(CLR),\n58:3\nendrecord, 58:3\nforce-write, 58:3\nlastLSN, 585\npageLSN, 582\nsequence number (LSN),582\ntail,582\nupdaterecordformat, 58:.3\nWAL,18lO~9\nLogrecord\nprevLSN field,583\ntransID field,583\ntypefield,583\nLog-based Capture, 752\nLogicaldataindependence, 15,\n87,7:36\nviews,15\nLogicalschema, 13,27\nLossless-join decomposition,\n619\nLostupdate, 529\nLRU,:322\nMachine learning, 890\n.lViagicSets,506\nMagicsets,837-838\nMainmemory databases, 996\nNlandatory accesscontrol, 695\nobjectsandsubjects, 706\nlVlany-to-many relationship, 33\nMany-to-one relationship, 33\nMarket basket,892\nMarkup languages, 226\nNlastercopy,751\nMa.\"terlogrecord,587\nMatching index,398\nNlatching pha.\"einhashjoin,\n463\nMaterialization ofintermediate\ntables,407\nMaterialization ofviews,874\nMaterialized views\nrefresh, 876\nMathNIL, 2:35\nMAX,151\n.Nlean-time-to-failure, 311\nIvleasures, 849\n:tY1ediafailure,541, 580, 595\nlVlediarecovery, 595\nMedical imaging, 971\nlVlelton\n,1.,781\n:MeIIlory hierarchy, :305\nIVlergeoperator, 731\nMergesort,424\nlVletadata, :.394,872\nI'vlethods\ncaching, 802\ninterpreted VB.compiled, 802\nsecurity, 801\n.lVlicrosoft SQLServer, :322-<32:3,\n:327,:3::n,:3::3:3,:357,:359,\n422, 446\u00b7~\u00b7447, 452--453,\n485,49G,500, 506, 57:3,\n582,665,709,776,8G6,\n869,882\nI\\IIN,151\nlV1ineset, 1001\nMiniba ..sesoftware, 1002", "1090": "1060\nMinimal cover,625\nI'vIirroring inRAID, ~n~3\nLvlobiledatabases, 995\nl\\'Iodel, 82:.3\nrVlodelmaintenance. 916\nl'vlodifying atableinSQL,62\nMOLAP,850\nj'viostrecently llsedCMRU)\npolicy,321\nlv'IRP,7\n.MRU,:322\nl\\ilultidataba..se system, 737\n.lVlultidimensional datamodel,\n849\nMultilevel relations, 707\nIv1ultilevel transactions, 994\nMultimedia databases, 972,997\nMultiple-granularity locking,\n564\nMultiple-query optimization,\n507\nMultisets, 135,780,782\nMultivalued dependencies, 634\nMultiversion concurrency\ncontrol, 572\nMVDs,634\nNaivefixpoint evaluation, 835\nNamedconstraints inSQL,66\nNaming indistributed systems,\n741\nNatural join,108\nNatural language searches, 930\nNearest neighbor queries, 970\nNegation inDatalog, 828\nNegative border, 919\nNestedcollections, 783,798\nNestedloopsjoin,454\nNestedqueries, 145\nimplementation, 504\nNestf~drelations\nnesting, 784\nullIwsting, 78:3\nNestedtransactions, 535,994\nNesting operation, 784\nNetwork datamodel,6\nNOAC'rION inforeign key\"s,\n71\nNon-preemptive deadlock\nprevention, 559\nNonblocking algorithms, 865\nNonblocking comrnit protocol,\n76:3\nNolIVolatile storage, :306\nNormal forms,615\nINF,615\nBC~NP, 616\n2NF,619\n:3NF,617\nSynthesis, 6284NF,6:36\n5NF,6:38\nDKNF,648\nnormalization, 622\nPJNF,648\ntuning, 669\nNormalization, 622,652\nNullvalues,608\nimplementation, 3:32\ninSQL,67, 69,71,162\nNumerical attribute, 905\nObjectdatabases, 12\nObjectexchange model\n(OEj\\iI), 947\nObjectidentifiers, 789\nObjectmanipulation language,\n806\nObject-oriented DBl\\iIS, 773,\n805,809\nObject-relational DBJ.\\!IS, 773,\n809\nODBC, 195,219,737,995\nODL,805\nODMGdatamodel\nattribute, 805\nclass,805\ninverserelationship, 805\nmethod, 806\nobjects, 805\nrelationship, 805\nOEM,947\nOids,789\u00b7790\nreferential integrity, 796\nversusforeignkeys,796\nversusURLs,792\nOLAP,684,848\u00b7..-849,887\ncross-tabulation, 855\ndatab~<;;e design, 85~~\ndimension table,852\nfacttable,850\npivoting, 855\nroll-upanddrill-down, 854\nSQLwindow queries, 8f)9\nOLTP,847\nO?vfL,80G\nOn-the-fly evaluation, 407\nOlle-to-rnany relationship, ~3:3\nOne-to-one relationship, :.34\nOne-way' functions, 710\nOnlineaggregation, 864\nOnlineanalytic processing\n(OLAP),848\nOnlinetransact.ion processing\n(OI:rp), 847\nOODB?vfS vs.ORDBMS. 809\nOpaque types,785\nOpenaniterator, 408\nOpenDatabase Connectivity\n(ODBC), 195,219,7:37,SUBJECT INDEX\n995\nOptimistic concurrency control,\n566\nvalidation, 567\nOptimizers\ncostestimation, 482\nrealsystems, 485\ndecomposing aqueryinto\nblocks,479\nextensibility, 80:3\nforOHDBMSs, 803\nhandling expensive\npredicates, 804\nhistograms, 485\nnestedqueries, 504\noverview, 479\nrealsystems, 485,496,500,\n506\nrelational algebra\nequivalences, 488\nrule-based, 507\nOQL,805,807\nOracle, 27,:322-,,323, :327,:331,\n333,357,359,422,\n446\u00b7\u00b7447, 452--453, 485,\n500,506,573,582,709,\n776,780,790,803,866,\n869,882\nORDBIvIS database design, 793\nORDBMS implementation, 799\nORDBMS vs.OODBIVIS, 809\nORDBMS vs.RDB.lV1S, 809\nOrderofaB+tree,345\nOuterjoins,164\nOverflow inhashjoin,464\nOverlap constraints, 38\nOverloading, 788\nOwnerofaweakentity,:36\nPackages inSQL:1999, 131\nPageabstraction, 274,316\nPagefonnats, 326\nfixed..\u00b7lengthrecords, 327\nvariable-length records, ~328\nPagerephtcement policy,\n:.:~18..319, :~21\nPageLSN, 582\nParadise, 1001\nParaJlel database architecture\nshared-memory VS.\nshared-nothing, 727\nParallel databases, 726\u00b7727\nblocking, 729\nbulkloading, 731\ndatapartitioning, 729\u00b7730\ninterference, 728\njoin,7:32,7:l1\nmergeandsplit,7:31\noptimization, 7:.35\npipelining, 729", "1091": "SlfBJEC}T I1VDE)(\nscan,7:31\nsorting, 732\nspeed-up VS.scale-up, 728\nParameteric query\noptimization, 507\nParity, ~n1\nPartialdependencies, 617\nPartialparticipation, ~34\nParticipation constraints, :34,\n79\nPartition views,882\nPartitional clustering, 912\nPartitioned parallelism, 729\nPartitioning, 739\nhashVS.range, 7~34\nPartitioning data,730\nPartitioning phaseinha...,hjoin,\n463\nPathexpressions, 781,948\nPeer-to-peer replication, 751\nPerlmodules, 252\nPhantom deadlocks, 757\nPhantom problem, 560,986\nPhantoms, 538,559\nSQL,538539\nPhysical dataindependence,\n15,736\nPhysical database design,14,\n28,291,650\nPhysical design\nchoices, 652\nclustered indexes, 293\nco-clustering, 660\nindexselection, 65~3\nindex-only plans,662\nmultiple-attribute indexes,\n297\nnestedqueries, 677\nquerytuning,670,675\nreducing hotspots,679\nroleofexpected workload, 650\ntuningqueries, 670\ntuningthechoiceofindexes,\n667\ntuningtheconceptual\nschema, 669\ntuningwizard, 6fj:3,665\nPhysical schema, 14\nPincount,318\nPinning pages, ~n9\nPipelined \u20ac~valuation, 407,4Hl,\n496\nPipelined parallelisrn, 729\nPivoting, 855\nPlatters ondisks,::W6\nPI\\'li\\lL, 891\nPointdata,969\nl)ointer swizzling, 802\nPolyinstantiation, 708Postings file,935\nPrecedence graph,551\nPrecision, 934\nPrecommit, 76:3\nPredicate locking, 5tH\nPredictor attribute, 904\ncategorical, 905\nnumerical, 905\nPreemptive deadlock\nprevention, 559\nPrefetching\nrealsystems, 323\nPrefetching pages,322\nPrepare messages, 759\nPresumed Abort,762\nPrevLSN,583\nPrimary conjunct ina\nselection, 399\nPrimary copylock\nmanagement, 755\nPrimary index,277\nPRH.,,1ARY KEYconstraint in\nSQL,66\nPrimary keys,29,65\ninSQL,66\nPrimary pageforabucket, 279\nPrimary sitereplication, 751\nPrimary storage, 305\nPrimary vs.overflow pages,371\nPrivilege descriptor, 701\nProbing phaseinhashjoin,46:3\nProcedural Capture, 753\nProcess ofknowledge discovery,\n891\nProject-join normalform,648\nProjections, 744\ndefinition, 10:3\nilnplementation, 447\nProlog,819\nPruning, 907\nPublic-key encryption, 710\nPublish andsubscribe, 751\nPushing selections, 409\nQuantifiers, 118\nQuery,16\nQueryblock,479\nQueryevaluation plan,405\nQuerylanguage, 16,7:3,100\nDatalog, 818..\u00b7819\ndomain relational calculus,\n122\nOQL,807\nrelational algebra, 102\nrelational completeness, 126\nSQL,130\ntuplerelational calculus, 1.17\nXQuery, 948\nQueryrl1odification, 87;.~\nQueryoptirnization, 404,5071061\nit\nbushytrees,415\ndeductive databases, 8:34\ndistributed databases, 749\nenulneration ofalternative\nplans,492\nleft-deep trees,415\novervievv, 405,479\nparalleldatabases, 735\npushing selections, 409\nreduction factors, 483,485\nrelational algebra\nequivalences, 488\nrule-ba..\"ed,507\nSQLqueryblock,479\nstatistics, 395\nQueryoptimizer, 19\nQuerypattern, 838\nQueryprocessing\ndistributed databases, 743\nQuerytuning, 670\nRtrees,982\nbounding box,982\nR+trees,986\nRAID,309--310\nlevels,:310\nmirroring, 313\nparity, ~H1\nredundancy schemes, :311\nreliability groups, 312\nstriping unit,310\nRandomized plangeneration,\n507\nRangepartitioning, 730\nRangequeries, 295,970\nRangeselection, 292\nRange-restriction, 826,828\nRanked queries, 929\nRasterdata,969\nIlDBJvlS vs.ORDBJvlS, 809\nReal-time databases, 994\nRecall,934\nRecordformats, ~3:30\nfixed-length records, ~3:31\nrealsystems, :331, ::3~n\nvariable-length records, :3~31\nRecordid,275,:327\nRecordids\nrealsystems, :327\nRecords, 11,60\nRecoverability, 5:30\nRecoverable schedulcl530.571\nRecovery, 9,22,54:3,580\nAnalysis phase,588\nAIUES, 580\ncheckpointing, 587\ncompensation logrecord,584\ndistributed databa.\"3cs, 755,\n758\nfuzzycheckpoint, 587", "1092": "1062\nlog,18,522\nlosertransactions, 592\nmediafailure,595\nRedopha.se,590\nshadow pages,596\nthreephasesofrestart, 587\nUndophase,592\nupdatelogrecord, 58~~\nRecovery manager, 21,540,580\nRecursive rules,818\nRedophaseofrecovery, 580,\n590\nReduction factor,400\nReduction factors, 483,485\nRedundancy andanomalies,\n607\nRedundancy inRAID,309\nRedundancy schemes, 311\nReference types,795\nReference typesinSQL:1999,\n790\nReferential integrity, 70\ninSQL,70\noids,796\nviolation options, 70\nRefreshing materialized views,\n876\nRegiondata,970\nRegression rules,905\nRegression trees,906\nRelation, 11,59\ncardinality, 61\ndegree,61\ninstance, 60\nlegalinstance, 63\nschema, 59\nRelational algebra, 103\ncomparison withDatalog, 8~30\ndivision, 109\nequivalences, 488\nexpression, 102\nexpressive power,124\njoin,107\nprojection, 10~1\nrenaming, 106\nselection, 10:1\nset-operatioIls, 104,468\nHelationaJ calculus\ndomain, 122\nexpressive power,124\nsafety,125\ntuple,117\nHelational completeness, 126\nRelational datamodel,6\nH..elational database\ninstance, 61\nschema, 61\nRelational model,10,57\nllelationships, 4,1;1,29, :~:~Renaming inrelational algebra,\n106\nRepeating history, 581,596\nReplacement policy, 318~;n9\nReplacement sort,428\nReplication, 739,741\nasynchronous, 741,750-\u00b7751,\n871\nma..stercopy,751\npublishandsubscribe, 751\nsynchronous, 741,750\nResource managers, 99:3\nResponse time,524\nRestart aftercrash,587\nResultsizeestimation, 483\nREVOKE statement\nSQL,699-700\nRevoking privileges inSQL,700\nRid,275,327\nRids\nrealsystems, 327\nROLAP, 852\nRole-based authorization, 697\nRolesintheERmodel,32\nRoll-up, 854\nROLLUP, 857\nRootofanXMLdocument, 231\nRotational delayfordisks,308\nRound-robin partitioning, 730\nRow-level triggers, 170\nRSAencryption, 710\nRule-based queryoptimization,\n507\nRulesinDatalog, 819\nRunning information for\naggregation, 470\nRunsinsorting, 42~~\nR*trees,985\nSABRE, 6\nSafequeries, 125\ninDatalog, 826\nSafety,826\nSampling\nrealsystems, 485\nSavepoints, 5:35\nScalability, 890\nScale-up, 728\nScan,744\nSchedule, 52~3\navoidca..\"icading abort,5:30\nconflict equivalence, 550\nconflict serializahle, 550\nrecoverable, 530,571\nserial,524\nserializable, 525,529\nstrict,552\nviewserializable, 55:3\nSchema, 11,59,Gl\nSchema decomposition, 609SUBJECyr INDEX\nSchema evolution, 669\nSchema refinement, 28,605\ndenormalizatioIl, 672\nSchema tuning,669\nSearchkey,276\nSearchspaceofplans,492\nSearchterm,928\nSecondnormalform,619\nSecondary index,277\nSecondary storage, 305\nSecureElectronic Transaction,\n713\nSecureSockets Layer,712\nSecureSockets Layer(SSL),\n223\nSecurity, 22,694,696\nauthentication, 694\nclasses, 695,706\ndiscretionary accesscontrol,\n695\nencryption, 712\ninference, 715\nmandatory accesscontrol, 695\nmechanisms, 693\npolicy,693\nprivileges, 695\nstatistical databa..\">es, 715\nusingviews,704\nSecurity administrator, 709\nSecurity levels,708\nSecurity ofmethods, 801\nSeektimefordisks,284,:308\nSelection condition\nconjunct, 445\nconjunctive normalform,445\nterm,444\nSelection pushing, 409\nSelections, 744\ndefinition, 10;3\nSelectivity\nofanaccesspath,399\nSemantic datamodel,10,27\nSemantic integration, 995\nSemijoin, 747\nSemijoin reduction, 747\nSerninaive fixpoint evaluation,\n8:36\nSemistructured data,946,1001\nSequence data, 91:~\nSequence ofitemsets, 902\nSequence setinaB+tree,345\nSequential flooding, ~321,472\nSequential patterns, 901\nSerialschedule, 524\nSerializability, 525,529,550,\n55:3,561\nSerializability graph,551\nSerializahle schedule, 529\nServer-side processing, 254", "1093": "SUBJECT INDEX\nServlet, 254\nrequest, 255\nresponse, 255\nServletinterface, 255\nSession key,712\nSessionmanagement, 25~3\nSetcomparisons inSQL,148\nSETDEFAULT inforeignkeys,\n71\nSetoperators\nimplementation, 468\ninrelational algebra, 104\ninSQL,141\nSETprotocol, 713\nSet-difference operation, 105\nSG1/IL, 228\nShadow pagerecovery, 596\nShallow equality, 790\nSharedlocks,531\nShared-disk architecture, 727\nShared-memory architecture,\n727\nShared-nothing architecture,\n727\nSignature files,937\nSingle-tier architecture, 236\nSkew,730,733\nSlotdirectories, 329\nSnapshots, 753,882\nSnowflake queries, 869\nSOAP,222\nSort-merge join,403,458\nSortedfiles,285\nSortedruns,423\nSorting, 732\napplications, 422\nblockedI/O,430\ndoublebuffering, 432\nexternal mergesort\nalgorithm, 424\nreplacement sort,428\nusingB+trees, 4~33\nSoundaxioms, 613\nSpace-filling curves,975\nSparsecolumns, 866\nSpatialdata,969\nboundary, 969\nlocation, 969\nSpatialextent,969\nSpatialjoinqueries, 971\nSpatialrangequeries, 970\nSpecialization, 38\nSpeed-up, 728\nSplitoperator, 731\nSplitselection, 908\nSplitting attributes, 907\nSplitting vector, 7~32\nSQL\nchained transactions, 5:~6accessmode,538\naggregate operations, 164\ndefinition, 151\nimplementation, 469\nALL,148,154\nALTER,696\nALTER TABLE, 91\nANY,148,154\nAS,139\nauthorization ID,697\nAVG,151\nBETWEEN, 657\nCARDINALITY, 781\nCASCADE, 71\ncollations, 140\nCOMMIT, 535\nconformance packages, 131\ncorrelated queries, 147\nCOUNT, 151\nCREATE, 696\nCREATE DO:NIAIN, 166\nCREATE TABLE, 62\ncreating views,86\nCUBE, 857\ncursors, 189\nholdability, 192\nordering rows,193\nsensitivity, 192\nupdatability, 191\nDataDefinition Language\n(DDL),62,131\nDataManipulation\" Language\n(D:NIL), 131\nDATEvalues,140\nDELETE, 69\nDISTINCT, 133,136\nDISTINCT foraggregation,\n151\ndistinct types,167\nDROP, 696\nDROPTABLE, 91\ndynamic, 194\nembedded language\nprogramming, 187\nEXCEPT, 141,149\nEXEC,187\nEXISTS, 141,16:3\nexpressing division, 150\nexpressions, 139,16:3\ngivingnamestoconstraints,\n66\nGRANT, 695,699\nGRANT OPTION, 696\nGROUP BY,154\nHAVING, 154\nIN,141\nindexing, 299\nINSERT, 52,69\ninsertable-into views,891003\nSQL\nintegrity constraints\nassertions, 69,167\nCHECK, 165\ndeferred checking, 72\ndomainconstraints, 166\neffectonmodifications, 69\nPRIMARY KEY,5t)\ntableconstraints, 69,165\nUNIQUE, 66\nINTERSECT, 141,149\nISNULL,163\nisolation level,538\nrvIAX,151\n:tvlIN,151\nmultisets, 135\nSQL\nnestedsubqueries\ndefinition, 145\nimplementation, 504\nNOACTION, 71\nNOT,136\nnullvalues,67, 69,71,162\nORDER BY,193\nouterjoins,164\nphantoms, 538~539\nprivileges, 695\nDELETE, 696\nINSERT, t)96\nREFERENCES, 696\nSELECT, 695\nUPDATE, 696\nqueryblock,479\nREADUNCOMMITTED,\n539\nSQL\nreferential integrity\nenforcement, 70\nREPEATABLE READ, 539\nREVOKE, 699~700\nCASCADE, 700\nROLLBACK, 535\nROLLUP, 857\nsavepoints, 535\nsecurity, 696\nSELECT-FROM- \\VHERE,\n1:3:l\nSERIALIZABLE, 539\nSOrvIE, 148\nSQLCODE, 191\nSQLERROR, 189\nSQLSTA'I'E, 189\nstandardization, 58\nstandards, 180\nstrings, 139\n8l.r1\\1,151\ntransaction support, 535\ntransactions andconstraints,\n72", "1094": "1064\nUNION, 141\nUNI(~UE, 16~1\nupdatable views,88\nUPDATED, 6~1,69\nvie\\-\\'\"updates, 88\nviews,90\nSQLServer\ndatamining, 914\nSQL/I'vHvI\nDataI'vlining, 891\nFramework, 776\nFullText,944\nSpatial, 969\nSQL/PSNI, 212\nSQL/Xl\\iIL, 948\nSQL:1999, 58,180,816,805\narraytypeconstructor, 780\nreference typesandoids,790\nrole-basedauthorization, 697\nrowtypeconstructor, 780\nstructured types,780\nstructured user-defined types,\n779\ntriggers, 168\nSQL:2003, 180\nSQLCODE, 191\nSQLERROR, 189\nSQLJ,206\niterators, 208\nSQLSTATE, 189\nSRQL,887\nSSLprotocol, 712\nStablestorage, 542,582\nStandard Generalized l\\ilarkup\nLanguage (SGML), 228\nStandardization, 58\nStarjoinqueries, 869\nStarschema, 8,53\nStarvation, 554\nStateless communication\nprotocols, 225\nStatement-level triggers, 170\nStatichashing, :371\nStaticindexes, :341\nStatistical databases, 715,855\nStatistics IIHlintainecl by\nDBIVIS, :395\nStealing fnunes, 541\nStopwords,9:.n\nStorage\nnonvolatile, :306\nprirnarJr,secondary, and\ntertiary, :W5\nstable,542\nStoredprocedures, 209\nStoringADTsandstructured\nt:;rpes,799\nStratification, 829cmnparison torelational\nalgebra, 8:30\nStrearning data,916\nStrict2PL,5:30\u00b7\u00b7\u00b75:31, 551,560\nStrictschedule, 552\nStringsinSQL,139\nStriping unit,:310\nStructured types,780\nstorage issues,799\nStructured user-defined types,\n779\nStylesheets,247\nSubcl8..c\"is, :38\nSubstitution principle, 788\nSubtransaction, 755\nSUlvI,151\nSuperclass, :38\nSuperkey, 65,612\nSupport, 89:3\nassociation rule,897\nclassification andregression,\n905\nfrequent itemset, 893\nitemset sequence, 902\nSwizzling, 802\nSybase, 27\nSybaseASE,322--323, 327,3:31,\n333, 357, 359,422,\n446\u00b7\u00b7\u00b7\u00b7447, 452453, 485,\n500, 506, 573,582,709,\n776\nSybaseASIQ,446,452-453\nSybaseIQ,447, 866, 869\nSymrnetric encryption, 710\nSynchronous replication, 741,\n750\nread-any write-all technique,\n751\nvotingtechnique, 750\nSystemcatalog, :394\nSystem catalogs, 12,:3:30,:395,\n480,48:3,741\nSystem R,6\nSystem response time,524\nSystemthroughput, 524\nTable,60\n'I'agsinHTML, 226\nTemporal queries, 999\nTermfrequency, 9:31\n'.['ertiary storage, ~l05\nThinclients, 237\nThirdnormal form,617,625,\nG28\n'T'hmnas \\NriteRule,570\nrrhrashing, 534\nThree-I)hELse Cornmit, 762\nI'hree-tier architecture, 2:.39\nrniddletier,240\npresentation ti(~r I240STJBJECT INI)EX\nThroughput, 524\nTime-out fordeadlock\ndetection, 757\nTimestamp\nconcurrency control, 5G9\u00b7570\nbuffered writes,571\nrecoverability, 571\ndeadlock prevention in2PL,\n558\nTioga,1001\nTotalparticipation, 34\nTPmonitor I993\nTPC-D,506\nTracksindisks,:306\nTrail,582\nTransaction, 520--521\nabort,523\nblindwrite,528\ncommit, 523\nconflicting actions, 526\nconstraints inSQL,72\ncustomer, 892\ndistributed, 736\ninSQL,535\nlocksandperformance, 678\nmanagement inadistributed\nDBl\\iIS, 755\nmultilevel andnested, 994\nproperties, 17,521\nread,523\nsehedule,523\nwrite, 52~3\nTransaction manager, 21,541\nTransa.ction processing\nmonitor,993\nrn'ansaction table,553, 585, 589\nT'ransactions\nnested, 536\nsavepoints, 5:35\nTransactions andJDBC,199\nrI'ransfer timefordisks,308\nTransID, 5g;:~\nTransitive dependencies, 617\nTransparent datadistribution,\n7~36\nTravelocity, 6\nrrree-basedindexing, 280\n11\"ee8\nHtrees,982\nB-+tree 1344\nclassification andregression,\n906\nheight,282\nISAIVI,:341\nnodeforrnatfor13+tree,:.316\n\u00b7RegionQuadtrees,97G\nTriggers,l:32, l(38\nactivation, 168\nrowvs.statement level,170", "1095": "useinreplication, 75~:3\nTrivialFD,61:3\nTSQL,1001\nTuning, 28,650,652,667\n'runing forconcurrency, 678\nTuningwizard, 66~3,665\nTllple,60\n1\\lplerelational calculus, 117\nTuringaward, (-j\nTwo-PIHLSe Commit, 759,761\nPresumed Abort,762\nTwo-phase locking, 552\nTwo-tier architecture, 237\nTypeconstructor, 779\nTypeextents, 789\nTypes\ncomplex vs.reference, 795\nobjectequality, 790\nUDDI,222\nUML,47\nclassdiagrams, 48\ncomponent diagrams, 49\ndatabase diagrams, 48\nUndophaseofrecovery, 580,\n592\nUnicode, 230\nUnified 1v1odeling Language, 47\nUniform resource identifier\n(URI),221\nUnioncompatibility, 104\nUnionoperation, 104,141\nUNIQUE constraint inSQL,66\nUniqueindex,278\nUniversal resource locator\nCURL),223\nUnnesting operation, 783Unpinning pages,319\nUnrepeatable read,528\nUpdatable cursors, 191\nUpdatable views,88\nUpelatelocks,556\nUpdate logrecord, 58~~\nUpdates indistributed\ndatab<:LSes, 750\nUpgrading locks,555\nURI,221\nURL,223\nURLs\nversusoids,792\nUser-defined aggregates, 801\nUser-defined types,784\nValidX1H.Jdocuments, 231\nValidation inoptimisticee,\n567\nVariable-length fields,332\nVariable-length records, 328\nVectordata,970\nVectorspacemodel,930\nVertical fragmentation, 739----740\nVertical partitioning, 653\nViewmaintenance, 876,881\nincremental, 877\nViewmaterialization, 874\nViewserializability, 553\nViewserializable schedule, 553\nViews,14,86,90,653\nforsecurity, 704\nGRANT, 704\nquerymodification, 873\nREVOKE, 704\nupdatable, 88\nupdates on,881065\nVisDB, lOCH\nVisualization. 1000\n\\Vait-die policy,558\nWaits-for graph,556,756\nWAL,18,~320,581,58G\n\\Varehouse, 754,848,870\n\\Veakentities, ~~5,82\n\\Veakentityset,36\nWebcrawler, 9~39\n\\Vebservices, 222\n\\Vell-formed XMLdocument,\n231\nvVindow queries, 859\nWizard\nindextuning, 663\nWorkflow management, 993\nWorkload, 291\nWorkloads anddataba..'3e\ndesign,650\nWound-wait policy,558\nWrite-ahead logging, 18,~320,\n581,586\nWSDL, 222\nXML,228\nentityreferences, 229\nroot,231\nXNILcontent, 232\nXNILDTDs,231\nXMLSchema, 2~34\nXPath, 250\nXQuery, 948\npathexpressions, 948\nXSL,228,250\nXSLT,250\nZ-order curve,975", "1096": "", "1097": ""}}